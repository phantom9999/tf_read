// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/lite/tools/evaluation/proto/evaluation_stages.proto

#include "tensorflow/lite/tools/evaluation/proto/evaluation_stages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccuracyMetrics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImagePreprocessingParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LatencyMetrics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDetectionAveragePrecisionMetrics_AveragePrecision;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDetectionAveragePrecisionParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TfliteInferenceMetrics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TfliteInferenceParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TopkAccuracyEvalMetrics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TopkAccuracyEvalParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDetectionAveragePrecisionMetrics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDetectionResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDetectionResult_ObjectInstance;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ImageClassificationParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_InferenceProfilerMetrics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectDetectionParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ImageClassificationMetrics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ObjectDetectionMetrics;
}  // namespace protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto
namespace tflite {
namespace evaluation {
class ProcessSpecificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessSpecification>
      _instance;
  const ::tflite::evaluation::ImagePreprocessingParams* image_preprocessing_params_;
  const ::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params_;
  const ::tflite::evaluation::TfliteInferenceParams* tflite_inference_params_;
  const ::tflite::evaluation::ImageClassificationParams* image_classification_params_;
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* object_detection_average_precision_params_;
  const ::tflite::evaluation::ObjectDetectionParams* object_detection_params_;
} _ProcessSpecification_default_instance_;
class LatencyMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatencyMetrics>
      _instance;
} _LatencyMetrics_default_instance_;
class AccuracyMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccuracyMetrics>
      _instance;
} _AccuracyMetrics_default_instance_;
class ProcessMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessMetrics>
      _instance;
  const ::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics_;
  const ::tflite::evaluation::TfliteInferenceMetrics* tflite_inference_metrics_;
  const ::tflite::evaluation::ImageClassificationMetrics* image_classification_metrics_;
  const ::tflite::evaluation::InferenceProfilerMetrics* inference_profiler_metrics_;
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* object_detection_average_precision_metrics_;
  const ::tflite::evaluation::ObjectDetectionMetrics* object_detection_metrics_;
} _ProcessMetrics_default_instance_;
class ImagePreprocessingParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImagePreprocessingParams>
      _instance;
} _ImagePreprocessingParams_default_instance_;
class TfliteInferenceParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TfliteInferenceParams>
      _instance;
} _TfliteInferenceParams_default_instance_;
class TfliteInferenceMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TfliteInferenceMetrics>
      _instance;
} _TfliteInferenceMetrics_default_instance_;
class TopkAccuracyEvalParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopkAccuracyEvalParams>
      _instance;
} _TopkAccuracyEvalParams_default_instance_;
class TopkAccuracyEvalMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopkAccuracyEvalMetrics>
      _instance;
} _TopkAccuracyEvalMetrics_default_instance_;
class ImageClassificationParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageClassificationParams>
      _instance;
} _ImageClassificationParams_default_instance_;
class ImageClassificationMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageClassificationMetrics>
      _instance;
} _ImageClassificationMetrics_default_instance_;
class InferenceProfilerMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InferenceProfilerMetrics>
      _instance;
} _InferenceProfilerMetrics_default_instance_;
class ObjectDetectionResult_ObjectInstance_NormalizedBoundingBoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox>
      _instance;
} _ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox_default_instance_;
class ObjectDetectionResult_ObjectInstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionResult_ObjectInstance>
      _instance;
} _ObjectDetectionResult_ObjectInstance_default_instance_;
class ObjectDetectionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionResult>
      _instance;
} _ObjectDetectionResult_default_instance_;
class ObjectDetectionGroundTruthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionGroundTruth>
      _instance;
} _ObjectDetectionGroundTruth_default_instance_;
class ObjectDetectionAveragePrecisionParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionAveragePrecisionParams>
      _instance;
} _ObjectDetectionAveragePrecisionParams_default_instance_;
class ObjectDetectionAveragePrecisionMetrics_AveragePrecisionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionAveragePrecisionMetrics_AveragePrecision>
      _instance;
} _ObjectDetectionAveragePrecisionMetrics_AveragePrecision_default_instance_;
class ObjectDetectionAveragePrecisionMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionAveragePrecisionMetrics>
      _instance;
} _ObjectDetectionAveragePrecisionMetrics_default_instance_;
class ObjectDetectionParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionParams>
      _instance;
} _ObjectDetectionParams_default_instance_;
class ObjectDetectionMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDetectionMetrics>
      _instance;
} _ObjectDetectionMetrics_default_instance_;
}  // namespace evaluation
}  // namespace tflite
namespace protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto {
static void InitDefaultsProcessSpecification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ProcessSpecification_default_instance_;
    new (ptr) ::tflite::evaluation::ProcessSpecification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ProcessSpecification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_ProcessSpecification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsProcessSpecification}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImagePreprocessingParams.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalParams.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceParams.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImageClassificationParams.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionParams.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionParams.base,}};

static void InitDefaultsLatencyMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_LatencyMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::LatencyMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::LatencyMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LatencyMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLatencyMetrics}, {}};

static void InitDefaultsAccuracyMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_AccuracyMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::AccuracyMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::AccuracyMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccuracyMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccuracyMetrics}, {}};

static void InitDefaultsProcessMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ProcessMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::ProcessMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ProcessMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_ProcessMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsProcessMetrics}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_LatencyMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImageClassificationMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_InferenceProfilerMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionMetrics.base,}};

static void InitDefaultsImagePreprocessingParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ImagePreprocessingParams_default_instance_;
    new (ptr) ::tflite::evaluation::ImagePreprocessingParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ImagePreprocessingParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImagePreprocessingParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImagePreprocessingParams}, {}};

static void InitDefaultsTfliteInferenceParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_TfliteInferenceParams_default_instance_;
    new (ptr) ::tflite::evaluation::TfliteInferenceParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::TfliteInferenceParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TfliteInferenceParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTfliteInferenceParams}, {}};

static void InitDefaultsTfliteInferenceMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_TfliteInferenceMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::TfliteInferenceMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::TfliteInferenceMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TfliteInferenceMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTfliteInferenceMetrics}, {}};

static void InitDefaultsTopkAccuracyEvalParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_TopkAccuracyEvalParams_default_instance_;
    new (ptr) ::tflite::evaluation::TopkAccuracyEvalParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::TopkAccuracyEvalParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopkAccuracyEvalParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopkAccuracyEvalParams}, {}};

static void InitDefaultsTopkAccuracyEvalMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_TopkAccuracyEvalMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::TopkAccuracyEvalMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::TopkAccuracyEvalMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopkAccuracyEvalMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopkAccuracyEvalMetrics}, {}};

static void InitDefaultsImageClassificationParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ImageClassificationParams_default_instance_;
    new (ptr) ::tflite::evaluation::ImageClassificationParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ImageClassificationParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ImageClassificationParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsImageClassificationParams}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceParams.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalParams.base,}};

static void InitDefaultsImageClassificationMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ImageClassificationMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::ImageClassificationMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ImageClassificationMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ImageClassificationMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsImageClassificationMetrics}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_LatencyMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalMetrics.base,}};

static void InitDefaultsInferenceProfilerMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_InferenceProfilerMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::InferenceProfilerMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::InferenceProfilerMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InferenceProfilerMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInferenceProfilerMetrics}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_LatencyMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_AccuracyMetrics.base,}};

static void InitDefaultsObjectDetectionResult_ObjectInstance_NormalizedBoundingBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectDetectionResult_ObjectInstance_NormalizedBoundingBox}, {}};

static void InitDefaultsObjectDetectionResult_ObjectInstance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionResult_ObjectInstance_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionResult_ObjectInstance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDetectionResult_ObjectInstance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectDetectionResult_ObjectInstance}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox.base,}};

static void InitDefaultsObjectDetectionResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionResult_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDetectionResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectDetectionResult}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult_ObjectInstance.base,}};

static void InitDefaultsObjectDetectionGroundTruth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionGroundTruth_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionGroundTruth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionGroundTruth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDetectionGroundTruth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectDetectionGroundTruth}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult.base,}};

static void InitDefaultsObjectDetectionAveragePrecisionParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionAveragePrecisionParams_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionAveragePrecisionParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDetectionAveragePrecisionParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectDetectionAveragePrecisionParams}, {}};

static void InitDefaultsObjectDetectionAveragePrecisionMetrics_AveragePrecision() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionAveragePrecisionMetrics_AveragePrecision_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDetectionAveragePrecisionMetrics_AveragePrecision =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectDetectionAveragePrecisionMetrics_AveragePrecision}, {}};

static void InitDefaultsObjectDetectionAveragePrecisionMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionAveragePrecisionMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDetectionAveragePrecisionMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectDetectionAveragePrecisionMetrics}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics_AveragePrecision.base,}};

static void InitDefaultsObjectDetectionParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionParams_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectDetectionParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectDetectionParams}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceParams.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionParams.base,}};

static void InitDefaultsObjectDetectionMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::evaluation::_ObjectDetectionMetrics_default_instance_;
    new (ptr) ::tflite::evaluation::ObjectDetectionMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::evaluation::ObjectDetectionMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ObjectDetectionMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsObjectDetectionMetrics}, {
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_LatencyMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceMetrics.base,
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProcessSpecification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LatencyMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccuracyMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcessMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImagePreprocessingParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TfliteInferenceParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TfliteInferenceMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopkAccuracyEvalParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopkAccuracyEvalMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageClassificationParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageClassificationMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InferenceProfilerMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionResult_ObjectInstance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionGroundTruth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionAveragePrecisionParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionAveragePrecisionMetrics_AveragePrecision.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionAveragePrecisionMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDetectionMetrics.base);
}

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessSpecification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessSpecification, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessSpecification, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::tflite::evaluation::ProcessSpecificationDefaultTypeInternal, image_preprocessing_params_),
  offsetof(::tflite::evaluation::ProcessSpecificationDefaultTypeInternal, topk_accuracy_eval_params_),
  offsetof(::tflite::evaluation::ProcessSpecificationDefaultTypeInternal, tflite_inference_params_),
  offsetof(::tflite::evaluation::ProcessSpecificationDefaultTypeInternal, image_classification_params_),
  offsetof(::tflite::evaluation::ProcessSpecificationDefaultTypeInternal, object_detection_average_precision_params_),
  offsetof(::tflite::evaluation::ProcessSpecificationDefaultTypeInternal, object_detection_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessSpecification, params_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::LatencyMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::LatencyMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::LatencyMetrics, last_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::LatencyMetrics, max_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::LatencyMetrics, min_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::LatencyMetrics, sum_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::LatencyMetrics, avg_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::LatencyMetrics, std_deviation_us_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::AccuracyMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::AccuracyMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::AccuracyMetrics, max_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::AccuracyMetrics, min_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::AccuracyMetrics, avg_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::AccuracyMetrics, std_deviation_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessMetrics, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessMetrics, total_latency_),
  offsetof(::tflite::evaluation::ProcessMetricsDefaultTypeInternal, topk_accuracy_metrics_),
  offsetof(::tflite::evaluation::ProcessMetricsDefaultTypeInternal, tflite_inference_metrics_),
  offsetof(::tflite::evaluation::ProcessMetricsDefaultTypeInternal, image_classification_metrics_),
  offsetof(::tflite::evaluation::ProcessMetricsDefaultTypeInternal, inference_profiler_metrics_),
  offsetof(::tflite::evaluation::ProcessMetricsDefaultTypeInternal, object_detection_average_precision_metrics_),
  offsetof(::tflite::evaluation::ProcessMetricsDefaultTypeInternal, object_detection_metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ProcessMetrics, stage_metrics_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImagePreprocessingParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImagePreprocessingParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImagePreprocessingParams, image_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImagePreprocessingParams, image_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImagePreprocessingParams, output_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImagePreprocessingParams, cropping_fraction_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceParams, model_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceParams, delegate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceParams, num_threads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceParams, invocations_per_run_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TfliteInferenceMetrics, num_inferences_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TopkAccuracyEvalParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TopkAccuracyEvalParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TopkAccuracyEvalParams, k_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TopkAccuracyEvalMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TopkAccuracyEvalMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::TopkAccuracyEvalMetrics, topk_accuracies_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationParams, inference_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationParams, topk_accuracy_eval_params_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationMetrics, pre_processing_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationMetrics, inference_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationMetrics, inference_metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ImageClassificationMetrics, topk_accuracy_metrics_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::InferenceProfilerMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::InferenceProfilerMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::InferenceProfilerMetrics, reference_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::InferenceProfilerMetrics, test_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::InferenceProfilerMetrics, output_errors_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox, normalized_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox, normalized_bottom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox, normalized_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox, normalized_right_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance, class_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult_ObjectInstance, score_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult, objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionResult, image_name_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionGroundTruth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionGroundTruth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionGroundTruth, detection_results_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionParams, num_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionParams, iou_thresholds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionParams, num_recall_points_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision, iou_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision, average_precision_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics, individual_average_precisions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics, overall_mean_average_precision_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionParams, inference_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionParams, class_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionParams, ap_params_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionMetrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionMetrics, pre_processing_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionMetrics, inference_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionMetrics, inference_metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::evaluation::ObjectDetectionMetrics, average_precision_metrics_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::tflite::evaluation::ProcessSpecification)},
  { 18, 29, sizeof(::tflite::evaluation::LatencyMetrics)},
  { 35, 44, sizeof(::tflite::evaluation::AccuracyMetrics)},
  { 48, 61, sizeof(::tflite::evaluation::ProcessMetrics)},
  { 68, 77, sizeof(::tflite::evaluation::ImagePreprocessingParams)},
  { 81, 90, sizeof(::tflite::evaluation::TfliteInferenceParams)},
  { 94, 100, sizeof(::tflite::evaluation::TfliteInferenceMetrics)},
  { 101, 107, sizeof(::tflite::evaluation::TopkAccuracyEvalParams)},
  { 108, 114, sizeof(::tflite::evaluation::TopkAccuracyEvalMetrics)},
  { 115, 122, sizeof(::tflite::evaluation::ImageClassificationParams)},
  { 124, 133, sizeof(::tflite::evaluation::ImageClassificationMetrics)},
  { 137, 145, sizeof(::tflite::evaluation::InferenceProfilerMetrics)},
  { 148, 157, sizeof(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox)},
  { 161, 169, sizeof(::tflite::evaluation::ObjectDetectionResult_ObjectInstance)},
  { 172, 179, sizeof(::tflite::evaluation::ObjectDetectionResult)},
  { 181, 187, sizeof(::tflite::evaluation::ObjectDetectionGroundTruth)},
  { 188, 196, sizeof(::tflite::evaluation::ObjectDetectionAveragePrecisionParams)},
  { 199, 206, sizeof(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision)},
  { 208, 215, sizeof(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics)},
  { 217, 225, sizeof(::tflite::evaluation::ObjectDetectionParams)},
  { 228, 237, sizeof(::tflite::evaluation::ObjectDetectionMetrics)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ProcessSpecification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_LatencyMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_AccuracyMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ProcessMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ImagePreprocessingParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_TfliteInferenceParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_TfliteInferenceMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_TopkAccuracyEvalParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_TopkAccuracyEvalMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ImageClassificationParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ImageClassificationMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_InferenceProfilerMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionResult_ObjectInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionGroundTruth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionAveragePrecisionParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionAveragePrecisionMetrics_AveragePrecision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionAveragePrecisionMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::evaluation::_ObjectDetectionMetrics_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/lite/tools/evaluation/proto/evaluation_stages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n>tensorflow/lite/tools/evaluation/proto"
      "/evaluation_stages.proto\022\021tflite.evaluat"
      "ion\"\241\004\n\024ProcessSpecification\022Q\n\032image_pr"
      "eprocessing_params\030\001 \001(\0132+.tflite.evalua"
      "tion.ImagePreprocessingParamsH\000\022N\n\031topk_"
      "accuracy_eval_params\030\002 \001(\0132).tflite.eval"
      "uation.TopkAccuracyEvalParamsH\000\022K\n\027tflit"
      "e_inference_params\030\003 \001(\0132(.tflite.evalua"
      "tion.TfliteInferenceParamsH\000\022S\n\033image_cl"
      "assification_params\030\004 \001(\0132,.tflite.evalu"
      "ation.ImageClassificationParamsH\000\022m\n)obj"
      "ect_detection_average_precision_params\030\005"
      " \001(\01328.tflite.evaluation.ObjectDetection"
      "AveragePrecisionParamsH\000\022K\n\027object_detec"
      "tion_params\030\006 \001(\0132(.tflite.evaluation.Ob"
      "jectDetectionParamsH\000B\010\n\006params\"{\n\016Laten"
      "cyMetrics\022\017\n\007last_us\030\001 \001(\003\022\016\n\006max_us\030\002 \001"
      "(\003\022\016\n\006min_us\030\003 \001(\003\022\016\n\006sum_us\030\004 \001(\003\022\016\n\006av"
      "g_us\030\005 \001(\001\022\030\n\020std_deviation_us\030\006 \001(\003\"a\n\017"
      "AccuracyMetrics\022\021\n\tmax_value\030\001 \001(\002\022\021\n\tmi"
      "n_value\030\002 \001(\002\022\021\n\tavg_value\030\003 \001(\001\022\025\n\rstd_"
      "deviation\030\004 \001(\002\"\341\004\n\016ProcessMetrics\0228\n\rto"
      "tal_latency\030\001 \001(\0132!.tflite.evaluation.La"
      "tencyMetrics\022K\n\025topk_accuracy_metrics\030\002 "
      "\001(\0132*.tflite.evaluation.TopkAccuracyEval"
      "MetricsH\000\022M\n\030tflite_inference_metrics\030\003 "
      "\001(\0132).tflite.evaluation.TfliteInferenceM"
      "etricsH\000\022U\n\034image_classification_metrics"
      "\030\004 \001(\0132-.tflite.evaluation.ImageClassifi"
      "cationMetricsH\000\022Q\n\032inference_profiler_me"
      "trics\030\005 \001(\0132+.tflite.evaluation.Inferenc"
      "eProfilerMetricsH\000\022o\n*object_detection_a"
      "verage_precision_metrics\030\006 \001(\01329.tflite."
      "evaluation.ObjectDetectionAveragePrecisi"
      "onMetricsH\000\022M\n\030object_detection_metrics\030"
      "\007 \001(\0132).tflite.evaluation.ObjectDetectio"
      "nMetricsH\000B\017\n\rstage_metrics\"|\n\030ImagePrep"
      "rocessingParams\022\024\n\014image_height\030\001 \001(\005\022\023\n"
      "\013image_width\030\002 \001(\005\022\023\n\013output_type\030\003 \001(\005\022"
      " \n\021cropping_fraction\030\004 \001(\002:\0050.875\"\327\001\n\025Tf"
      "liteInferenceParams\022\027\n\017model_file_path\030\001"
      " \001(\t\022C\n\010delegate\030\002 \001(\01621.tflite.evaluati"
      "on.TfliteInferenceParams.Delegate\022\026\n\013num"
      "_threads\030\003 \001(\005:\0011\022\036\n\023invocations_per_run"
      "\030\004 \001(\005:\0011\"(\n\010Delegate\022\010\n\004NONE\020\000\022\t\n\005NNAPI"
      "\020\001\022\007\n\003GPU\020\002\"0\n\026TfliteInferenceMetrics\022\026\n"
      "\016num_inferences\030\001 \001(\005\"#\n\026TopkAccuracyEva"
      "lParams\022\t\n\001k\030\001 \001(\005\"2\n\027TopkAccuracyEvalMe"
      "trics\022\027\n\017topk_accuracies\030\001 \003(\002\"\255\001\n\031Image"
      "ClassificationParams\022B\n\020inference_params"
      "\030\001 \001(\0132(.tflite.evaluation.TfliteInferen"
      "ceParams\022L\n\031topk_accuracy_eval_params\030\002 "
      "\001(\0132).tflite.evaluation.TopkAccuracyEval"
      "Params\"\256\002\n\032ImageClassificationMetrics\022A\n"
      "\026pre_processing_latency\030\001 \001(\0132!.tflite.e"
      "valuation.LatencyMetrics\022<\n\021inference_la"
      "tency\030\002 \001(\0132!.tflite.evaluation.LatencyM"
      "etrics\022D\n\021inference_metrics\030\003 \001(\0132).tfli"
      "te.evaluation.TfliteInferenceMetrics\022I\n\025"
      "topk_accuracy_metrics\030\004 \001(\0132*.tflite.eva"
      "luation.TopkAccuracyEvalMetrics\"\314\001\n\030Infe"
      "renceProfilerMetrics\022<\n\021reference_latenc"
      "y\030\001 \001(\0132!.tflite.evaluation.LatencyMetri"
      "cs\0227\n\014test_latency\030\002 \001(\0132!.tflite.evalua"
      "tion.LatencyMetrics\0229\n\routput_errors\030\003 \003"
      "(\0132\".tflite.evaluation.AccuracyMetrics\"\220"
      "\003\n\025ObjectDetectionResult\022H\n\007objects\030\001 \003("
      "\01327.tflite.evaluation.ObjectDetectionRes"
      "ult.ObjectInstance\022\022\n\nimage_name\030\002 \001(\t\032\230"
      "\002\n\016ObjectInstance\022\020\n\010class_id\030\001 \001(\005\022c\n\014b"
      "ounding_box\030\002 \001(\0132M.tflite.evaluation.Ob"
      "jectDetectionResult.ObjectInstance.Norma"
      "lizedBoundingBox\022\020\n\005score\030\003 \001(\002:\0011\032}\n\025No"
      "rmalizedBoundingBox\022\026\n\016normalized_top\030\001 "
      "\001(\002\022\031\n\021normalized_bottom\030\002 \001(\002\022\027\n\017normal"
      "ized_left\030\003 \001(\002\022\030\n\020normalized_right\030\004 \001("
      "\002\"a\n\032ObjectDetectionGroundTruth\022C\n\021detec"
      "tion_results\030\001 \003(\0132(.tflite.evaluation.O"
      "bjectDetectionResult\"t\n%ObjectDetectionA"
      "veragePrecisionParams\022\023\n\013num_classes\030\001 \001"
      "(\005\022\026\n\016iou_thresholds\030\002 \003(\002\022\036\n\021num_recall"
      "_points\030\003 \001(\005:\003100\"\211\002\n&ObjectDetectionAv"
      "eragePrecisionMetrics\022q\n\035individual_aver"
      "age_precisions\030\001 \003(\0132J.tflite.evaluation"
      ".ObjectDetectionAveragePrecisionMetrics."
      "AveragePrecision\022&\n\036overall_mean_average"
      "_precision\030\002 \001(\002\032D\n\020AveragePrecision\022\025\n\r"
      "iou_threshold\030\001 \001(\002\022\031\n\021average_precision"
      "\030\002 \001(\002\"\301\001\n\025ObjectDetectionParams\022B\n\020infe"
      "rence_params\030\001 \001(\0132(.tflite.evaluation.T"
      "fliteInferenceParams\022\027\n\014class_offset\030\002 \001"
      "(\005:\0011\022K\n\tap_params\030\003 \001(\01328.tflite.evalua"
      "tion.ObjectDetectionAveragePrecisionPara"
      "ms\"\275\002\n\026ObjectDetectionMetrics\022A\n\026pre_pro"
      "cessing_latency\030\001 \001(\0132!.tflite.evaluatio"
      "n.LatencyMetrics\022<\n\021inference_latency\030\002 "
      "\001(\0132!.tflite.evaluation.LatencyMetrics\022D"
      "\n\021inference_metrics\030\003 \001(\0132).tflite.evalu"
      "ation.TfliteInferenceMetrics\022\\\n\031average_"
      "precision_metrics\030\004 \001(\01329.tflite.evaluat"
      "ion.ObjectDetectionAveragePrecisionMetri"
      "csB\030\n\021tflite.evaluationP\001\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4068);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/lite/tools/evaluation/proto/evaluation_stages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto
namespace tflite {
namespace evaluation {
const ::google::protobuf::EnumDescriptor* TfliteInferenceParams_Delegate_descriptor() {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_enum_descriptors[0];
}
bool TfliteInferenceParams_Delegate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TfliteInferenceParams_Delegate TfliteInferenceParams::NONE;
const TfliteInferenceParams_Delegate TfliteInferenceParams::NNAPI;
const TfliteInferenceParams_Delegate TfliteInferenceParams::GPU;
const TfliteInferenceParams_Delegate TfliteInferenceParams::Delegate_MIN;
const TfliteInferenceParams_Delegate TfliteInferenceParams::Delegate_MAX;
const int TfliteInferenceParams::Delegate_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ProcessSpecification::InitAsDefaultInstance() {
  ::tflite::evaluation::_ProcessSpecification_default_instance_.image_preprocessing_params_ = const_cast< ::tflite::evaluation::ImagePreprocessingParams*>(
      ::tflite::evaluation::ImagePreprocessingParams::internal_default_instance());
  ::tflite::evaluation::_ProcessSpecification_default_instance_.topk_accuracy_eval_params_ = const_cast< ::tflite::evaluation::TopkAccuracyEvalParams*>(
      ::tflite::evaluation::TopkAccuracyEvalParams::internal_default_instance());
  ::tflite::evaluation::_ProcessSpecification_default_instance_.tflite_inference_params_ = const_cast< ::tflite::evaluation::TfliteInferenceParams*>(
      ::tflite::evaluation::TfliteInferenceParams::internal_default_instance());
  ::tflite::evaluation::_ProcessSpecification_default_instance_.image_classification_params_ = const_cast< ::tflite::evaluation::ImageClassificationParams*>(
      ::tflite::evaluation::ImageClassificationParams::internal_default_instance());
  ::tflite::evaluation::_ProcessSpecification_default_instance_.object_detection_average_precision_params_ = const_cast< ::tflite::evaluation::ObjectDetectionAveragePrecisionParams*>(
      ::tflite::evaluation::ObjectDetectionAveragePrecisionParams::internal_default_instance());
  ::tflite::evaluation::_ProcessSpecification_default_instance_.object_detection_params_ = const_cast< ::tflite::evaluation::ObjectDetectionParams*>(
      ::tflite::evaluation::ObjectDetectionParams::internal_default_instance());
}
void ProcessSpecification::set_allocated_image_preprocessing_params(::tflite::evaluation::ImagePreprocessingParams* image_preprocessing_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params();
  if (image_preprocessing_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(image_preprocessing_params);
    if (message_arena != submessage_arena) {
      image_preprocessing_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image_preprocessing_params, submessage_arena);
    }
    set_has_image_preprocessing_params();
    params_.image_preprocessing_params_ = image_preprocessing_params;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessSpecification.image_preprocessing_params)
}
void ProcessSpecification::set_allocated_topk_accuracy_eval_params(::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params();
  if (topk_accuracy_eval_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(topk_accuracy_eval_params);
    if (message_arena != submessage_arena) {
      topk_accuracy_eval_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, topk_accuracy_eval_params, submessage_arena);
    }
    set_has_topk_accuracy_eval_params();
    params_.topk_accuracy_eval_params_ = topk_accuracy_eval_params;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessSpecification.topk_accuracy_eval_params)
}
void ProcessSpecification::set_allocated_tflite_inference_params(::tflite::evaluation::TfliteInferenceParams* tflite_inference_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params();
  if (tflite_inference_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(tflite_inference_params);
    if (message_arena != submessage_arena) {
      tflite_inference_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tflite_inference_params, submessage_arena);
    }
    set_has_tflite_inference_params();
    params_.tflite_inference_params_ = tflite_inference_params;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessSpecification.tflite_inference_params)
}
void ProcessSpecification::set_allocated_image_classification_params(::tflite::evaluation::ImageClassificationParams* image_classification_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params();
  if (image_classification_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(image_classification_params);
    if (message_arena != submessage_arena) {
      image_classification_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image_classification_params, submessage_arena);
    }
    set_has_image_classification_params();
    params_.image_classification_params_ = image_classification_params;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessSpecification.image_classification_params)
}
void ProcessSpecification::set_allocated_object_detection_average_precision_params(::tflite::evaluation::ObjectDetectionAveragePrecisionParams* object_detection_average_precision_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params();
  if (object_detection_average_precision_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(object_detection_average_precision_params);
    if (message_arena != submessage_arena) {
      object_detection_average_precision_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object_detection_average_precision_params, submessage_arena);
    }
    set_has_object_detection_average_precision_params();
    params_.object_detection_average_precision_params_ = object_detection_average_precision_params;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessSpecification.object_detection_average_precision_params)
}
void ProcessSpecification::set_allocated_object_detection_params(::tflite::evaluation::ObjectDetectionParams* object_detection_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params();
  if (object_detection_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(object_detection_params);
    if (message_arena != submessage_arena) {
      object_detection_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object_detection_params, submessage_arena);
    }
    set_has_object_detection_params();
    params_.object_detection_params_ = object_detection_params;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessSpecification.object_detection_params)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessSpecification::kImagePreprocessingParamsFieldNumber;
const int ProcessSpecification::kTopkAccuracyEvalParamsFieldNumber;
const int ProcessSpecification::kTfliteInferenceParamsFieldNumber;
const int ProcessSpecification::kImageClassificationParamsFieldNumber;
const int ProcessSpecification::kObjectDetectionAveragePrecisionParamsFieldNumber;
const int ProcessSpecification::kObjectDetectionParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessSpecification::ProcessSpecification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ProcessSpecification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ProcessSpecification)
}
ProcessSpecification::ProcessSpecification(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ProcessSpecification.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ProcessSpecification)
}
ProcessSpecification::ProcessSpecification(const ProcessSpecification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_params();
  switch (from.params_case()) {
    case kImagePreprocessingParams: {
      mutable_image_preprocessing_params()->::tflite::evaluation::ImagePreprocessingParams::MergeFrom(from.image_preprocessing_params());
      break;
    }
    case kTopkAccuracyEvalParams: {
      mutable_topk_accuracy_eval_params()->::tflite::evaluation::TopkAccuracyEvalParams::MergeFrom(from.topk_accuracy_eval_params());
      break;
    }
    case kTfliteInferenceParams: {
      mutable_tflite_inference_params()->::tflite::evaluation::TfliteInferenceParams::MergeFrom(from.tflite_inference_params());
      break;
    }
    case kImageClassificationParams: {
      mutable_image_classification_params()->::tflite::evaluation::ImageClassificationParams::MergeFrom(from.image_classification_params());
      break;
    }
    case kObjectDetectionAveragePrecisionParams: {
      mutable_object_detection_average_precision_params()->::tflite::evaluation::ObjectDetectionAveragePrecisionParams::MergeFrom(from.object_detection_average_precision_params());
      break;
    }
    case kObjectDetectionParams: {
      mutable_object_detection_params()->::tflite::evaluation::ObjectDetectionParams::MergeFrom(from.object_detection_params());
      break;
    }
    case PARAMS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ProcessSpecification)
}

void ProcessSpecification::SharedCtor() {
  clear_has_params();
}

ProcessSpecification::~ProcessSpecification() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ProcessSpecification)
  SharedDtor();
}

void ProcessSpecification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_params()) {
    clear_params();
  }
}

void ProcessSpecification::ArenaDtor(void* object) {
  ProcessSpecification* _this = reinterpret_cast< ProcessSpecification* >(object);
  (void)_this;
}
void ProcessSpecification::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProcessSpecification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcessSpecification::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessSpecification& ProcessSpecification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ProcessSpecification.base);
  return *internal_default_instance();
}


void ProcessSpecification::clear_params() {
// @@protoc_insertion_point(one_of_clear_start:tflite.evaluation.ProcessSpecification)
  switch (params_case()) {
    case kImagePreprocessingParams: {
      if (GetArenaNoVirtual() == NULL) {
        delete params_.image_preprocessing_params_;
      }
      break;
    }
    case kTopkAccuracyEvalParams: {
      if (GetArenaNoVirtual() == NULL) {
        delete params_.topk_accuracy_eval_params_;
      }
      break;
    }
    case kTfliteInferenceParams: {
      if (GetArenaNoVirtual() == NULL) {
        delete params_.tflite_inference_params_;
      }
      break;
    }
    case kImageClassificationParams: {
      if (GetArenaNoVirtual() == NULL) {
        delete params_.image_classification_params_;
      }
      break;
    }
    case kObjectDetectionAveragePrecisionParams: {
      if (GetArenaNoVirtual() == NULL) {
        delete params_.object_detection_average_precision_params_;
      }
      break;
    }
    case kObjectDetectionParams: {
      if (GetArenaNoVirtual() == NULL) {
        delete params_.object_detection_params_;
      }
      break;
    }
    case PARAMS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMS_NOT_SET;
}


void ProcessSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ProcessSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_params();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcessSpecification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ProcessSpecification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.evaluation.ImagePreprocessingParams image_preprocessing_params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image_preprocessing_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topk_accuracy_eval_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TfliteInferenceParams tflite_inference_params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tflite_inference_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ImageClassificationParams image_classification_params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image_classification_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams object_detection_average_precision_params = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_detection_average_precision_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ObjectDetectionParams object_detection_params = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_detection_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ProcessSpecification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ProcessSpecification)
  return false;
#undef DO_
}

void ProcessSpecification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ProcessSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (params_case()) {
    case kImagePreprocessingParams:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_image_preprocessing_params(), output);
      break;
    case kTopkAccuracyEvalParams:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_topk_accuracy_eval_params(), output);
      break;
    case kTfliteInferenceParams:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_tflite_inference_params(), output);
      break;
    case kImageClassificationParams:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_image_classification_params(), output);
      break;
    case kObjectDetectionAveragePrecisionParams:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_object_detection_average_precision_params(), output);
      break;
    case kObjectDetectionParams:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_object_detection_params(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ProcessSpecification)
}

::google::protobuf::uint8* ProcessSpecification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ProcessSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (params_case()) {
    case kImagePreprocessingParams:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_image_preprocessing_params(), deterministic, target);
      break;
    case kTopkAccuracyEvalParams:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_topk_accuracy_eval_params(), deterministic, target);
      break;
    case kTfliteInferenceParams:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_tflite_inference_params(), deterministic, target);
      break;
    case kImageClassificationParams:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_image_classification_params(), deterministic, target);
      break;
    case kObjectDetectionAveragePrecisionParams:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_object_detection_average_precision_params(), deterministic, target);
      break;
    case kObjectDetectionParams:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_object_detection_params(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ProcessSpecification)
  return target;
}

size_t ProcessSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ProcessSpecification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (params_case()) {
    // optional .tflite.evaluation.ImagePreprocessingParams image_preprocessing_params = 1;
    case kImagePreprocessingParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_.image_preprocessing_params_);
      break;
    }
    // optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
    case kTopkAccuracyEvalParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_.topk_accuracy_eval_params_);
      break;
    }
    // optional .tflite.evaluation.TfliteInferenceParams tflite_inference_params = 3;
    case kTfliteInferenceParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_.tflite_inference_params_);
      break;
    }
    // optional .tflite.evaluation.ImageClassificationParams image_classification_params = 4;
    case kImageClassificationParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_.image_classification_params_);
      break;
    }
    // optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams object_detection_average_precision_params = 5;
    case kObjectDetectionAveragePrecisionParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_.object_detection_average_precision_params_);
      break;
    }
    // optional .tflite.evaluation.ObjectDetectionParams object_detection_params = 6;
    case kObjectDetectionParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_.object_detection_params_);
      break;
    }
    case PARAMS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessSpecification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ProcessSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessSpecification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessSpecification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ProcessSpecification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ProcessSpecification)
    MergeFrom(*source);
  }
}

void ProcessSpecification::MergeFrom(const ProcessSpecification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ProcessSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.params_case()) {
    case kImagePreprocessingParams: {
      mutable_image_preprocessing_params()->::tflite::evaluation::ImagePreprocessingParams::MergeFrom(from.image_preprocessing_params());
      break;
    }
    case kTopkAccuracyEvalParams: {
      mutable_topk_accuracy_eval_params()->::tflite::evaluation::TopkAccuracyEvalParams::MergeFrom(from.topk_accuracy_eval_params());
      break;
    }
    case kTfliteInferenceParams: {
      mutable_tflite_inference_params()->::tflite::evaluation::TfliteInferenceParams::MergeFrom(from.tflite_inference_params());
      break;
    }
    case kImageClassificationParams: {
      mutable_image_classification_params()->::tflite::evaluation::ImageClassificationParams::MergeFrom(from.image_classification_params());
      break;
    }
    case kObjectDetectionAveragePrecisionParams: {
      mutable_object_detection_average_precision_params()->::tflite::evaluation::ObjectDetectionAveragePrecisionParams::MergeFrom(from.object_detection_average_precision_params());
      break;
    }
    case kObjectDetectionParams: {
      mutable_object_detection_params()->::tflite::evaluation::ObjectDetectionParams::MergeFrom(from.object_detection_params());
      break;
    }
    case PARAMS_NOT_SET: {
      break;
    }
  }
}

void ProcessSpecification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ProcessSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessSpecification::CopyFrom(const ProcessSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ProcessSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessSpecification::IsInitialized() const {
  return true;
}

void ProcessSpecification::Swap(ProcessSpecification* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProcessSpecification* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProcessSpecification::UnsafeArenaSwap(ProcessSpecification* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProcessSpecification::InternalSwap(ProcessSpecification* other) {
  using std::swap;
  swap(params_, other->params_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcessSpecification::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatencyMetrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatencyMetrics::kLastUsFieldNumber;
const int LatencyMetrics::kMaxUsFieldNumber;
const int LatencyMetrics::kMinUsFieldNumber;
const int LatencyMetrics::kSumUsFieldNumber;
const int LatencyMetrics::kAvgUsFieldNumber;
const int LatencyMetrics::kStdDeviationUsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatencyMetrics::LatencyMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_LatencyMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.LatencyMetrics)
}
LatencyMetrics::LatencyMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_LatencyMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.LatencyMetrics)
}
LatencyMetrics::LatencyMetrics(const LatencyMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_us_, &from.last_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&std_deviation_us_) -
    reinterpret_cast<char*>(&last_us_)) + sizeof(std_deviation_us_));
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.LatencyMetrics)
}

void LatencyMetrics::SharedCtor() {
  ::memset(&last_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&std_deviation_us_) -
      reinterpret_cast<char*>(&last_us_)) + sizeof(std_deviation_us_));
}

LatencyMetrics::~LatencyMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.LatencyMetrics)
  SharedDtor();
}

void LatencyMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void LatencyMetrics::ArenaDtor(void* object) {
  LatencyMetrics* _this = reinterpret_cast< LatencyMetrics* >(object);
  (void)_this;
}
void LatencyMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LatencyMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LatencyMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatencyMetrics& LatencyMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_LatencyMetrics.base);
  return *internal_default_instance();
}


void LatencyMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.LatencyMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&last_us_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&std_deviation_us_) -
        reinterpret_cast<char*>(&last_us_)) + sizeof(std_deviation_us_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LatencyMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.LatencyMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 last_us = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_last_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 max_us = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_max_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 min_us = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_min_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &min_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 sum_us = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sum_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sum_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double avg_us = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_avg_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avg_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 std_deviation_us = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_std_deviation_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &std_deviation_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.LatencyMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.LatencyMetrics)
  return false;
#undef DO_
}

void LatencyMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.LatencyMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 last_us = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->last_us(), output);
  }

  // optional int64 max_us = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->max_us(), output);
  }

  // optional int64 min_us = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->min_us(), output);
  }

  // optional int64 sum_us = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->sum_us(), output);
  }

  // optional double avg_us = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->avg_us(), output);
  }

  // optional int64 std_deviation_us = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->std_deviation_us(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.LatencyMetrics)
}

::google::protobuf::uint8* LatencyMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.LatencyMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 last_us = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->last_us(), target);
  }

  // optional int64 max_us = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->max_us(), target);
  }

  // optional int64 min_us = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->min_us(), target);
  }

  // optional int64 sum_us = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->sum_us(), target);
  }

  // optional double avg_us = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->avg_us(), target);
  }

  // optional int64 std_deviation_us = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->std_deviation_us(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.LatencyMetrics)
  return target;
}

size_t LatencyMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.LatencyMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int64 last_us = 1;
    if (has_last_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_us());
    }

    // optional int64 max_us = 2;
    if (has_max_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->max_us());
    }

    // optional int64 min_us = 3;
    if (has_min_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->min_us());
    }

    // optional int64 sum_us = 4;
    if (has_sum_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sum_us());
    }

    // optional double avg_us = 5;
    if (has_avg_us()) {
      total_size += 1 + 8;
    }

    // optional int64 std_deviation_us = 6;
    if (has_std_deviation_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->std_deviation_us());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LatencyMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.LatencyMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const LatencyMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatencyMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.LatencyMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.LatencyMetrics)
    MergeFrom(*source);
  }
}

void LatencyMetrics::MergeFrom(const LatencyMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.LatencyMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      last_us_ = from.last_us_;
    }
    if (cached_has_bits & 0x00000002u) {
      max_us_ = from.max_us_;
    }
    if (cached_has_bits & 0x00000004u) {
      min_us_ = from.min_us_;
    }
    if (cached_has_bits & 0x00000008u) {
      sum_us_ = from.sum_us_;
    }
    if (cached_has_bits & 0x00000010u) {
      avg_us_ = from.avg_us_;
    }
    if (cached_has_bits & 0x00000020u) {
      std_deviation_us_ = from.std_deviation_us_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LatencyMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.LatencyMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatencyMetrics::CopyFrom(const LatencyMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.LatencyMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatencyMetrics::IsInitialized() const {
  return true;
}

void LatencyMetrics::Swap(LatencyMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LatencyMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LatencyMetrics::UnsafeArenaSwap(LatencyMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LatencyMetrics::InternalSwap(LatencyMetrics* other) {
  using std::swap;
  swap(last_us_, other->last_us_);
  swap(max_us_, other->max_us_);
  swap(min_us_, other->min_us_);
  swap(sum_us_, other->sum_us_);
  swap(avg_us_, other->avg_us_);
  swap(std_deviation_us_, other->std_deviation_us_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LatencyMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccuracyMetrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccuracyMetrics::kMaxValueFieldNumber;
const int AccuracyMetrics::kMinValueFieldNumber;
const int AccuracyMetrics::kAvgValueFieldNumber;
const int AccuracyMetrics::kStdDeviationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccuracyMetrics::AccuracyMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_AccuracyMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.AccuracyMetrics)
}
AccuracyMetrics::AccuracyMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_AccuracyMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.AccuracyMetrics)
}
AccuracyMetrics::AccuracyMetrics(const AccuracyMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_value_, &from.max_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&std_deviation_) -
    reinterpret_cast<char*>(&max_value_)) + sizeof(std_deviation_));
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.AccuracyMetrics)
}

void AccuracyMetrics::SharedCtor() {
  ::memset(&max_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&std_deviation_) -
      reinterpret_cast<char*>(&max_value_)) + sizeof(std_deviation_));
}

AccuracyMetrics::~AccuracyMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.AccuracyMetrics)
  SharedDtor();
}

void AccuracyMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AccuracyMetrics::ArenaDtor(void* object) {
  AccuracyMetrics* _this = reinterpret_cast< AccuracyMetrics* >(object);
  (void)_this;
}
void AccuracyMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AccuracyMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccuracyMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccuracyMetrics& AccuracyMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_AccuracyMetrics.base);
  return *internal_default_instance();
}


void AccuracyMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.AccuracyMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&max_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&std_deviation_) -
        reinterpret_cast<char*>(&max_value_)) + sizeof(std_deviation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccuracyMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.AccuracyMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float max_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_max_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float min_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_min_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double avg_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_avg_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avg_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float std_deviation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_std_deviation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &std_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.AccuracyMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.AccuracyMetrics)
  return false;
#undef DO_
}

void AccuracyMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.AccuracyMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float max_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->max_value(), output);
  }

  // optional float min_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->min_value(), output);
  }

  // optional double avg_value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->avg_value(), output);
  }

  // optional float std_deviation = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->std_deviation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.AccuracyMetrics)
}

::google::protobuf::uint8* AccuracyMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.AccuracyMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float max_value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->max_value(), target);
  }

  // optional float min_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->min_value(), target);
  }

  // optional double avg_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->avg_value(), target);
  }

  // optional float std_deviation = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->std_deviation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.AccuracyMetrics)
  return target;
}

size_t AccuracyMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.AccuracyMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float max_value = 1;
    if (has_max_value()) {
      total_size += 1 + 4;
    }

    // optional float min_value = 2;
    if (has_min_value()) {
      total_size += 1 + 4;
    }

    // optional double avg_value = 3;
    if (has_avg_value()) {
      total_size += 1 + 8;
    }

    // optional float std_deviation = 4;
    if (has_std_deviation()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccuracyMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.AccuracyMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const AccuracyMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccuracyMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.AccuracyMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.AccuracyMetrics)
    MergeFrom(*source);
  }
}

void AccuracyMetrics::MergeFrom(const AccuracyMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.AccuracyMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      max_value_ = from.max_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      min_value_ = from.min_value_;
    }
    if (cached_has_bits & 0x00000004u) {
      avg_value_ = from.avg_value_;
    }
    if (cached_has_bits & 0x00000008u) {
      std_deviation_ = from.std_deviation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccuracyMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.AccuracyMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccuracyMetrics::CopyFrom(const AccuracyMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.AccuracyMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccuracyMetrics::IsInitialized() const {
  return true;
}

void AccuracyMetrics::Swap(AccuracyMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AccuracyMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AccuracyMetrics::UnsafeArenaSwap(AccuracyMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AccuracyMetrics::InternalSwap(AccuracyMetrics* other) {
  using std::swap;
  swap(max_value_, other->max_value_);
  swap(min_value_, other->min_value_);
  swap(avg_value_, other->avg_value_);
  swap(std_deviation_, other->std_deviation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccuracyMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessMetrics::InitAsDefaultInstance() {
  ::tflite::evaluation::_ProcessMetrics_default_instance_._instance.get_mutable()->total_latency_ = const_cast< ::tflite::evaluation::LatencyMetrics*>(
      ::tflite::evaluation::LatencyMetrics::internal_default_instance());
  ::tflite::evaluation::_ProcessMetrics_default_instance_.topk_accuracy_metrics_ = const_cast< ::tflite::evaluation::TopkAccuracyEvalMetrics*>(
      ::tflite::evaluation::TopkAccuracyEvalMetrics::internal_default_instance());
  ::tflite::evaluation::_ProcessMetrics_default_instance_.tflite_inference_metrics_ = const_cast< ::tflite::evaluation::TfliteInferenceMetrics*>(
      ::tflite::evaluation::TfliteInferenceMetrics::internal_default_instance());
  ::tflite::evaluation::_ProcessMetrics_default_instance_.image_classification_metrics_ = const_cast< ::tflite::evaluation::ImageClassificationMetrics*>(
      ::tflite::evaluation::ImageClassificationMetrics::internal_default_instance());
  ::tflite::evaluation::_ProcessMetrics_default_instance_.inference_profiler_metrics_ = const_cast< ::tflite::evaluation::InferenceProfilerMetrics*>(
      ::tflite::evaluation::InferenceProfilerMetrics::internal_default_instance());
  ::tflite::evaluation::_ProcessMetrics_default_instance_.object_detection_average_precision_metrics_ = const_cast< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics*>(
      ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics::internal_default_instance());
  ::tflite::evaluation::_ProcessMetrics_default_instance_.object_detection_metrics_ = const_cast< ::tflite::evaluation::ObjectDetectionMetrics*>(
      ::tflite::evaluation::ObjectDetectionMetrics::internal_default_instance());
}
void ProcessMetrics::unsafe_arena_set_allocated_total_latency(
    ::tflite::evaluation::LatencyMetrics* total_latency) {
  if (GetArenaNoVirtual() == NULL) {
    delete total_latency_;
  }
  total_latency_ = total_latency;
  if (total_latency) {
    set_has_total_latency();
  } else {
    clear_has_total_latency();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessMetrics.total_latency)
}
void ProcessMetrics::set_allocated_topk_accuracy_metrics(::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stage_metrics();
  if (topk_accuracy_metrics) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(topk_accuracy_metrics);
    if (message_arena != submessage_arena) {
      topk_accuracy_metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, topk_accuracy_metrics, submessage_arena);
    }
    set_has_topk_accuracy_metrics();
    stage_metrics_.topk_accuracy_metrics_ = topk_accuracy_metrics;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessMetrics.topk_accuracy_metrics)
}
void ProcessMetrics::set_allocated_tflite_inference_metrics(::tflite::evaluation::TfliteInferenceMetrics* tflite_inference_metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stage_metrics();
  if (tflite_inference_metrics) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(tflite_inference_metrics);
    if (message_arena != submessage_arena) {
      tflite_inference_metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tflite_inference_metrics, submessage_arena);
    }
    set_has_tflite_inference_metrics();
    stage_metrics_.tflite_inference_metrics_ = tflite_inference_metrics;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessMetrics.tflite_inference_metrics)
}
void ProcessMetrics::set_allocated_image_classification_metrics(::tflite::evaluation::ImageClassificationMetrics* image_classification_metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stage_metrics();
  if (image_classification_metrics) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(image_classification_metrics);
    if (message_arena != submessage_arena) {
      image_classification_metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image_classification_metrics, submessage_arena);
    }
    set_has_image_classification_metrics();
    stage_metrics_.image_classification_metrics_ = image_classification_metrics;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessMetrics.image_classification_metrics)
}
void ProcessMetrics::set_allocated_inference_profiler_metrics(::tflite::evaluation::InferenceProfilerMetrics* inference_profiler_metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stage_metrics();
  if (inference_profiler_metrics) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(inference_profiler_metrics);
    if (message_arena != submessage_arena) {
      inference_profiler_metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inference_profiler_metrics, submessage_arena);
    }
    set_has_inference_profiler_metrics();
    stage_metrics_.inference_profiler_metrics_ = inference_profiler_metrics;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessMetrics.inference_profiler_metrics)
}
void ProcessMetrics::set_allocated_object_detection_average_precision_metrics(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* object_detection_average_precision_metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stage_metrics();
  if (object_detection_average_precision_metrics) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(object_detection_average_precision_metrics);
    if (message_arena != submessage_arena) {
      object_detection_average_precision_metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object_detection_average_precision_metrics, submessage_arena);
    }
    set_has_object_detection_average_precision_metrics();
    stage_metrics_.object_detection_average_precision_metrics_ = object_detection_average_precision_metrics;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessMetrics.object_detection_average_precision_metrics)
}
void ProcessMetrics::set_allocated_object_detection_metrics(::tflite::evaluation::ObjectDetectionMetrics* object_detection_metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stage_metrics();
  if (object_detection_metrics) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(object_detection_metrics);
    if (message_arena != submessage_arena) {
      object_detection_metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object_detection_metrics, submessage_arena);
    }
    set_has_object_detection_metrics();
    stage_metrics_.object_detection_metrics_ = object_detection_metrics;
  }
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessMetrics.object_detection_metrics)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessMetrics::kTotalLatencyFieldNumber;
const int ProcessMetrics::kTopkAccuracyMetricsFieldNumber;
const int ProcessMetrics::kTfliteInferenceMetricsFieldNumber;
const int ProcessMetrics::kImageClassificationMetricsFieldNumber;
const int ProcessMetrics::kInferenceProfilerMetricsFieldNumber;
const int ProcessMetrics::kObjectDetectionAveragePrecisionMetricsFieldNumber;
const int ProcessMetrics::kObjectDetectionMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessMetrics::ProcessMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ProcessMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ProcessMetrics)
}
ProcessMetrics::ProcessMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ProcessMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ProcessMetrics)
}
ProcessMetrics::ProcessMetrics(const ProcessMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_total_latency()) {
    total_latency_ = new ::tflite::evaluation::LatencyMetrics(*from.total_latency_);
  } else {
    total_latency_ = NULL;
  }
  clear_has_stage_metrics();
  switch (from.stage_metrics_case()) {
    case kTopkAccuracyMetrics: {
      mutable_topk_accuracy_metrics()->::tflite::evaluation::TopkAccuracyEvalMetrics::MergeFrom(from.topk_accuracy_metrics());
      break;
    }
    case kTfliteInferenceMetrics: {
      mutable_tflite_inference_metrics()->::tflite::evaluation::TfliteInferenceMetrics::MergeFrom(from.tflite_inference_metrics());
      break;
    }
    case kImageClassificationMetrics: {
      mutable_image_classification_metrics()->::tflite::evaluation::ImageClassificationMetrics::MergeFrom(from.image_classification_metrics());
      break;
    }
    case kInferenceProfilerMetrics: {
      mutable_inference_profiler_metrics()->::tflite::evaluation::InferenceProfilerMetrics::MergeFrom(from.inference_profiler_metrics());
      break;
    }
    case kObjectDetectionAveragePrecisionMetrics: {
      mutable_object_detection_average_precision_metrics()->::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics::MergeFrom(from.object_detection_average_precision_metrics());
      break;
    }
    case kObjectDetectionMetrics: {
      mutable_object_detection_metrics()->::tflite::evaluation::ObjectDetectionMetrics::MergeFrom(from.object_detection_metrics());
      break;
    }
    case STAGE_METRICS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ProcessMetrics)
}

void ProcessMetrics::SharedCtor() {
  total_latency_ = NULL;
  clear_has_stage_metrics();
}

ProcessMetrics::~ProcessMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ProcessMetrics)
  SharedDtor();
}

void ProcessMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete total_latency_;
  if (has_stage_metrics()) {
    clear_stage_metrics();
  }
}

void ProcessMetrics::ArenaDtor(void* object) {
  ProcessMetrics* _this = reinterpret_cast< ProcessMetrics* >(object);
  (void)_this;
}
void ProcessMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProcessMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcessMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessMetrics& ProcessMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ProcessMetrics.base);
  return *internal_default_instance();
}


void ProcessMetrics::clear_stage_metrics() {
// @@protoc_insertion_point(one_of_clear_start:tflite.evaluation.ProcessMetrics)
  switch (stage_metrics_case()) {
    case kTopkAccuracyMetrics: {
      if (GetArenaNoVirtual() == NULL) {
        delete stage_metrics_.topk_accuracy_metrics_;
      }
      break;
    }
    case kTfliteInferenceMetrics: {
      if (GetArenaNoVirtual() == NULL) {
        delete stage_metrics_.tflite_inference_metrics_;
      }
      break;
    }
    case kImageClassificationMetrics: {
      if (GetArenaNoVirtual() == NULL) {
        delete stage_metrics_.image_classification_metrics_;
      }
      break;
    }
    case kInferenceProfilerMetrics: {
      if (GetArenaNoVirtual() == NULL) {
        delete stage_metrics_.inference_profiler_metrics_;
      }
      break;
    }
    case kObjectDetectionAveragePrecisionMetrics: {
      if (GetArenaNoVirtual() == NULL) {
        delete stage_metrics_.object_detection_average_precision_metrics_;
      }
      break;
    }
    case kObjectDetectionMetrics: {
      if (GetArenaNoVirtual() == NULL) {
        delete stage_metrics_.object_detection_metrics_;
      }
      break;
    }
    case STAGE_METRICS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STAGE_METRICS_NOT_SET;
}


void ProcessMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ProcessMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(total_latency_ != NULL);
    total_latency_->Clear();
  }
  clear_stage_metrics();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcessMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ProcessMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.evaluation.LatencyMetrics total_latency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topk_accuracy_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TfliteInferenceMetrics tflite_inference_metrics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tflite_inference_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ImageClassificationMetrics image_classification_metrics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image_classification_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.InferenceProfilerMetrics inference_profiler_metrics = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inference_profiler_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics object_detection_average_precision_metrics = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_detection_average_precision_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ObjectDetectionMetrics object_detection_metrics = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_detection_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ProcessMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ProcessMetrics)
  return false;
#undef DO_
}

void ProcessMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ProcessMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.LatencyMetrics total_latency = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_total_latency(), output);
  }

  switch (stage_metrics_case()) {
    case kTopkAccuracyMetrics:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_topk_accuracy_metrics(), output);
      break;
    case kTfliteInferenceMetrics:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_tflite_inference_metrics(), output);
      break;
    case kImageClassificationMetrics:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_image_classification_metrics(), output);
      break;
    case kInferenceProfilerMetrics:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_inference_profiler_metrics(), output);
      break;
    case kObjectDetectionAveragePrecisionMetrics:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_object_detection_average_precision_metrics(), output);
      break;
    case kObjectDetectionMetrics:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_object_detection_metrics(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ProcessMetrics)
}

::google::protobuf::uint8* ProcessMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ProcessMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.LatencyMetrics total_latency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_total_latency(), deterministic, target);
  }

  switch (stage_metrics_case()) {
    case kTopkAccuracyMetrics:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_topk_accuracy_metrics(), deterministic, target);
      break;
    case kTfliteInferenceMetrics:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_tflite_inference_metrics(), deterministic, target);
      break;
    case kImageClassificationMetrics:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_image_classification_metrics(), deterministic, target);
      break;
    case kInferenceProfilerMetrics:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_inference_profiler_metrics(), deterministic, target);
      break;
    case kObjectDetectionAveragePrecisionMetrics:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_object_detection_average_precision_metrics(), deterministic, target);
      break;
    case kObjectDetectionMetrics:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          7, this->_internal_object_detection_metrics(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ProcessMetrics)
  return target;
}

size_t ProcessMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ProcessMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .tflite.evaluation.LatencyMetrics total_latency = 1;
  if (has_total_latency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *total_latency_);
  }

  switch (stage_metrics_case()) {
    // optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 2;
    case kTopkAccuracyMetrics: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stage_metrics_.topk_accuracy_metrics_);
      break;
    }
    // optional .tflite.evaluation.TfliteInferenceMetrics tflite_inference_metrics = 3;
    case kTfliteInferenceMetrics: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stage_metrics_.tflite_inference_metrics_);
      break;
    }
    // optional .tflite.evaluation.ImageClassificationMetrics image_classification_metrics = 4;
    case kImageClassificationMetrics: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stage_metrics_.image_classification_metrics_);
      break;
    }
    // optional .tflite.evaluation.InferenceProfilerMetrics inference_profiler_metrics = 5;
    case kInferenceProfilerMetrics: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stage_metrics_.inference_profiler_metrics_);
      break;
    }
    // optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics object_detection_average_precision_metrics = 6;
    case kObjectDetectionAveragePrecisionMetrics: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stage_metrics_.object_detection_average_precision_metrics_);
      break;
    }
    // optional .tflite.evaluation.ObjectDetectionMetrics object_detection_metrics = 7;
    case kObjectDetectionMetrics: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stage_metrics_.object_detection_metrics_);
      break;
    }
    case STAGE_METRICS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ProcessMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ProcessMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ProcessMetrics)
    MergeFrom(*source);
  }
}

void ProcessMetrics::MergeFrom(const ProcessMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ProcessMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_total_latency()) {
    mutable_total_latency()->::tflite::evaluation::LatencyMetrics::MergeFrom(from.total_latency());
  }
  switch (from.stage_metrics_case()) {
    case kTopkAccuracyMetrics: {
      mutable_topk_accuracy_metrics()->::tflite::evaluation::TopkAccuracyEvalMetrics::MergeFrom(from.topk_accuracy_metrics());
      break;
    }
    case kTfliteInferenceMetrics: {
      mutable_tflite_inference_metrics()->::tflite::evaluation::TfliteInferenceMetrics::MergeFrom(from.tflite_inference_metrics());
      break;
    }
    case kImageClassificationMetrics: {
      mutable_image_classification_metrics()->::tflite::evaluation::ImageClassificationMetrics::MergeFrom(from.image_classification_metrics());
      break;
    }
    case kInferenceProfilerMetrics: {
      mutable_inference_profiler_metrics()->::tflite::evaluation::InferenceProfilerMetrics::MergeFrom(from.inference_profiler_metrics());
      break;
    }
    case kObjectDetectionAveragePrecisionMetrics: {
      mutable_object_detection_average_precision_metrics()->::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics::MergeFrom(from.object_detection_average_precision_metrics());
      break;
    }
    case kObjectDetectionMetrics: {
      mutable_object_detection_metrics()->::tflite::evaluation::ObjectDetectionMetrics::MergeFrom(from.object_detection_metrics());
      break;
    }
    case STAGE_METRICS_NOT_SET: {
      break;
    }
  }
}

void ProcessMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ProcessMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessMetrics::CopyFrom(const ProcessMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ProcessMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessMetrics::IsInitialized() const {
  return true;
}

void ProcessMetrics::Swap(ProcessMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProcessMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProcessMetrics::UnsafeArenaSwap(ProcessMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProcessMetrics::InternalSwap(ProcessMetrics* other) {
  using std::swap;
  swap(total_latency_, other->total_latency_);
  swap(stage_metrics_, other->stage_metrics_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcessMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImagePreprocessingParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImagePreprocessingParams::kImageHeightFieldNumber;
const int ImagePreprocessingParams::kImageWidthFieldNumber;
const int ImagePreprocessingParams::kOutputTypeFieldNumber;
const int ImagePreprocessingParams::kCroppingFractionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImagePreprocessingParams::ImagePreprocessingParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImagePreprocessingParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ImagePreprocessingParams)
}
ImagePreprocessingParams::ImagePreprocessingParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImagePreprocessingParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ImagePreprocessingParams)
}
ImagePreprocessingParams::ImagePreprocessingParams(const ImagePreprocessingParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&image_height_, &from.image_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&cropping_fraction_) -
    reinterpret_cast<char*>(&image_height_)) + sizeof(cropping_fraction_));
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ImagePreprocessingParams)
}

void ImagePreprocessingParams::SharedCtor() {
  ::memset(&image_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_type_) -
      reinterpret_cast<char*>(&image_height_)) + sizeof(output_type_));
  cropping_fraction_ = 0.875f;
}

ImagePreprocessingParams::~ImagePreprocessingParams() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ImagePreprocessingParams)
  SharedDtor();
}

void ImagePreprocessingParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ImagePreprocessingParams::ArenaDtor(void* object) {
  ImagePreprocessingParams* _this = reinterpret_cast< ImagePreprocessingParams* >(object);
  (void)_this;
}
void ImagePreprocessingParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImagePreprocessingParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImagePreprocessingParams::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImagePreprocessingParams& ImagePreprocessingParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImagePreprocessingParams.base);
  return *internal_default_instance();
}


void ImagePreprocessingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ImagePreprocessingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&image_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&output_type_) -
        reinterpret_cast<char*>(&image_height_)) + sizeof(output_type_));
    cropping_fraction_ = 0.875f;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImagePreprocessingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ImagePreprocessingParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 image_height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_image_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 image_width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_image_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 output_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_output_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cropping_fraction = 4 [default = 0.875];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_cropping_fraction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cropping_fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ImagePreprocessingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ImagePreprocessingParams)
  return false;
#undef DO_
}

void ImagePreprocessingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ImagePreprocessingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 image_height = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->image_height(), output);
  }

  // optional int32 image_width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->image_width(), output);
  }

  // optional int32 output_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->output_type(), output);
  }

  // optional float cropping_fraction = 4 [default = 0.875];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->cropping_fraction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ImagePreprocessingParams)
}

::google::protobuf::uint8* ImagePreprocessingParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ImagePreprocessingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 image_height = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->image_height(), target);
  }

  // optional int32 image_width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->image_width(), target);
  }

  // optional int32 output_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->output_type(), target);
  }

  // optional float cropping_fraction = 4 [default = 0.875];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->cropping_fraction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ImagePreprocessingParams)
  return target;
}

size_t ImagePreprocessingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ImagePreprocessingParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 image_height = 1;
    if (has_image_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->image_height());
    }

    // optional int32 image_width = 2;
    if (has_image_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->image_width());
    }

    // optional int32 output_type = 3;
    if (has_output_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->output_type());
    }

    // optional float cropping_fraction = 4 [default = 0.875];
    if (has_cropping_fraction()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImagePreprocessingParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ImagePreprocessingParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ImagePreprocessingParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImagePreprocessingParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ImagePreprocessingParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ImagePreprocessingParams)
    MergeFrom(*source);
  }
}

void ImagePreprocessingParams::MergeFrom(const ImagePreprocessingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ImagePreprocessingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      image_height_ = from.image_height_;
    }
    if (cached_has_bits & 0x00000002u) {
      image_width_ = from.image_width_;
    }
    if (cached_has_bits & 0x00000004u) {
      output_type_ = from.output_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      cropping_fraction_ = from.cropping_fraction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImagePreprocessingParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ImagePreprocessingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImagePreprocessingParams::CopyFrom(const ImagePreprocessingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ImagePreprocessingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImagePreprocessingParams::IsInitialized() const {
  return true;
}

void ImagePreprocessingParams::Swap(ImagePreprocessingParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImagePreprocessingParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImagePreprocessingParams::UnsafeArenaSwap(ImagePreprocessingParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImagePreprocessingParams::InternalSwap(ImagePreprocessingParams* other) {
  using std::swap;
  swap(image_height_, other->image_height_);
  swap(image_width_, other->image_width_);
  swap(output_type_, other->output_type_);
  swap(cropping_fraction_, other->cropping_fraction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImagePreprocessingParams::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TfliteInferenceParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfliteInferenceParams::kModelFilePathFieldNumber;
const int TfliteInferenceParams::kDelegateFieldNumber;
const int TfliteInferenceParams::kNumThreadsFieldNumber;
const int TfliteInferenceParams::kInvocationsPerRunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TfliteInferenceParams::TfliteInferenceParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.TfliteInferenceParams)
}
TfliteInferenceParams::TfliteInferenceParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.TfliteInferenceParams)
}
TfliteInferenceParams::TfliteInferenceParams(const TfliteInferenceParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_file_path()) {
    model_file_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_file_path(),
      GetArenaNoVirtual());
  }
  ::memcpy(&delegate_, &from.delegate_,
    static_cast<size_t>(reinterpret_cast<char*>(&invocations_per_run_) -
    reinterpret_cast<char*>(&delegate_)) + sizeof(invocations_per_run_));
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.TfliteInferenceParams)
}

void TfliteInferenceParams::SharedCtor() {
  model_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delegate_ = 0;
  num_threads_ = 1;
  invocations_per_run_ = 1;
}

TfliteInferenceParams::~TfliteInferenceParams() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.TfliteInferenceParams)
  SharedDtor();
}

void TfliteInferenceParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  model_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TfliteInferenceParams::ArenaDtor(void* object) {
  TfliteInferenceParams* _this = reinterpret_cast< TfliteInferenceParams* >(object);
  (void)_this;
}
void TfliteInferenceParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TfliteInferenceParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TfliteInferenceParams::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TfliteInferenceParams& TfliteInferenceParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceParams.base);
  return *internal_default_instance();
}


void TfliteInferenceParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.TfliteInferenceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    model_file_path_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 14u) {
    delegate_ = 0;
    num_threads_ = 1;
    invocations_per_run_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TfliteInferenceParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.TfliteInferenceParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string model_file_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_file_path().data(), static_cast<int>(this->model_file_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.evaluation.TfliteInferenceParams.model_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TfliteInferenceParams.Delegate delegate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::evaluation::TfliteInferenceParams_Delegate_IsValid(value)) {
            set_delegate(static_cast< ::tflite::evaluation::TfliteInferenceParams_Delegate >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_threads = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_threads();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 invocations_per_run = 4 [default = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_invocations_per_run();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invocations_per_run_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.TfliteInferenceParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.TfliteInferenceParams)
  return false;
#undef DO_
}

void TfliteInferenceParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.TfliteInferenceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string model_file_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_file_path().data(), static_cast<int>(this->model_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.evaluation.TfliteInferenceParams.model_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->model_file_path(), output);
  }

  // optional .tflite.evaluation.TfliteInferenceParams.Delegate delegate = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->delegate(), output);
  }

  // optional int32 num_threads = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_threads(), output);
  }

  // optional int32 invocations_per_run = 4 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->invocations_per_run(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.TfliteInferenceParams)
}

::google::protobuf::uint8* TfliteInferenceParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.TfliteInferenceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string model_file_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_file_path().data(), static_cast<int>(this->model_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.evaluation.TfliteInferenceParams.model_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->model_file_path(), target);
  }

  // optional .tflite.evaluation.TfliteInferenceParams.Delegate delegate = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->delegate(), target);
  }

  // optional int32 num_threads = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_threads(), target);
  }

  // optional int32 invocations_per_run = 4 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->invocations_per_run(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.TfliteInferenceParams)
  return target;
}

size_t TfliteInferenceParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.TfliteInferenceParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string model_file_path = 1;
    if (has_model_file_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_file_path());
    }

    // optional .tflite.evaluation.TfliteInferenceParams.Delegate delegate = 2;
    if (has_delegate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->delegate());
    }

    // optional int32 num_threads = 3 [default = 1];
    if (has_num_threads()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_threads());
    }

    // optional int32 invocations_per_run = 4 [default = 1];
    if (has_invocations_per_run()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invocations_per_run());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfliteInferenceParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.TfliteInferenceParams)
  GOOGLE_DCHECK_NE(&from, this);
  const TfliteInferenceParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TfliteInferenceParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.TfliteInferenceParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.TfliteInferenceParams)
    MergeFrom(*source);
  }
}

void TfliteInferenceParams::MergeFrom(const TfliteInferenceParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.TfliteInferenceParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_model_file_path(from.model_file_path());
    }
    if (cached_has_bits & 0x00000002u) {
      delegate_ = from.delegate_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_threads_ = from.num_threads_;
    }
    if (cached_has_bits & 0x00000008u) {
      invocations_per_run_ = from.invocations_per_run_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TfliteInferenceParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.TfliteInferenceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfliteInferenceParams::CopyFrom(const TfliteInferenceParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.TfliteInferenceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfliteInferenceParams::IsInitialized() const {
  return true;
}

void TfliteInferenceParams::Swap(TfliteInferenceParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TfliteInferenceParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TfliteInferenceParams::UnsafeArenaSwap(TfliteInferenceParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TfliteInferenceParams::InternalSwap(TfliteInferenceParams* other) {
  using std::swap;
  model_file_path_.Swap(&other->model_file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(delegate_, other->delegate_);
  swap(num_threads_, other->num_threads_);
  swap(invocations_per_run_, other->invocations_per_run_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TfliteInferenceParams::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TfliteInferenceMetrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfliteInferenceMetrics::kNumInferencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TfliteInferenceMetrics::TfliteInferenceMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.TfliteInferenceMetrics)
}
TfliteInferenceMetrics::TfliteInferenceMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.TfliteInferenceMetrics)
}
TfliteInferenceMetrics::TfliteInferenceMetrics(const TfliteInferenceMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_inferences_ = from.num_inferences_;
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.TfliteInferenceMetrics)
}

void TfliteInferenceMetrics::SharedCtor() {
  num_inferences_ = 0;
}

TfliteInferenceMetrics::~TfliteInferenceMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.TfliteInferenceMetrics)
  SharedDtor();
}

void TfliteInferenceMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TfliteInferenceMetrics::ArenaDtor(void* object) {
  TfliteInferenceMetrics* _this = reinterpret_cast< TfliteInferenceMetrics* >(object);
  (void)_this;
}
void TfliteInferenceMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TfliteInferenceMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TfliteInferenceMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TfliteInferenceMetrics& TfliteInferenceMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TfliteInferenceMetrics.base);
  return *internal_default_instance();
}


void TfliteInferenceMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.TfliteInferenceMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_inferences_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TfliteInferenceMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.TfliteInferenceMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_inferences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_inferences();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_inferences_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.TfliteInferenceMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.TfliteInferenceMetrics)
  return false;
#undef DO_
}

void TfliteInferenceMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.TfliteInferenceMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_inferences = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_inferences(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.TfliteInferenceMetrics)
}

::google::protobuf::uint8* TfliteInferenceMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.TfliteInferenceMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_inferences = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_inferences(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.TfliteInferenceMetrics)
  return target;
}

size_t TfliteInferenceMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.TfliteInferenceMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 num_inferences = 1;
  if (has_num_inferences()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_inferences());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfliteInferenceMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.TfliteInferenceMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const TfliteInferenceMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TfliteInferenceMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.TfliteInferenceMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.TfliteInferenceMetrics)
    MergeFrom(*source);
  }
}

void TfliteInferenceMetrics::MergeFrom(const TfliteInferenceMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.TfliteInferenceMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_num_inferences()) {
    set_num_inferences(from.num_inferences());
  }
}

void TfliteInferenceMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.TfliteInferenceMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfliteInferenceMetrics::CopyFrom(const TfliteInferenceMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.TfliteInferenceMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfliteInferenceMetrics::IsInitialized() const {
  return true;
}

void TfliteInferenceMetrics::Swap(TfliteInferenceMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TfliteInferenceMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TfliteInferenceMetrics::UnsafeArenaSwap(TfliteInferenceMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TfliteInferenceMetrics::InternalSwap(TfliteInferenceMetrics* other) {
  using std::swap;
  swap(num_inferences_, other->num_inferences_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TfliteInferenceMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopkAccuracyEvalParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopkAccuracyEvalParams::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopkAccuracyEvalParams::TopkAccuracyEvalParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.TopkAccuracyEvalParams)
}
TopkAccuracyEvalParams::TopkAccuracyEvalParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.TopkAccuracyEvalParams)
}
TopkAccuracyEvalParams::TopkAccuracyEvalParams(const TopkAccuracyEvalParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  k_ = from.k_;
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.TopkAccuracyEvalParams)
}

void TopkAccuracyEvalParams::SharedCtor() {
  k_ = 0;
}

TopkAccuracyEvalParams::~TopkAccuracyEvalParams() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.TopkAccuracyEvalParams)
  SharedDtor();
}

void TopkAccuracyEvalParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TopkAccuracyEvalParams::ArenaDtor(void* object) {
  TopkAccuracyEvalParams* _this = reinterpret_cast< TopkAccuracyEvalParams* >(object);
  (void)_this;
}
void TopkAccuracyEvalParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TopkAccuracyEvalParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopkAccuracyEvalParams::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopkAccuracyEvalParams& TopkAccuracyEvalParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalParams.base);
  return *internal_default_instance();
}


void TopkAccuracyEvalParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.TopkAccuracyEvalParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopkAccuracyEvalParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.TopkAccuracyEvalParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.TopkAccuracyEvalParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.TopkAccuracyEvalParams)
  return false;
#undef DO_
}

void TopkAccuracyEvalParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.TopkAccuracyEvalParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 k = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->k(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.TopkAccuracyEvalParams)
}

::google::protobuf::uint8* TopkAccuracyEvalParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.TopkAccuracyEvalParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 k = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->k(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.TopkAccuracyEvalParams)
  return target;
}

size_t TopkAccuracyEvalParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.TopkAccuracyEvalParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 k = 1;
  if (has_k()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->k());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopkAccuracyEvalParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.TopkAccuracyEvalParams)
  GOOGLE_DCHECK_NE(&from, this);
  const TopkAccuracyEvalParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopkAccuracyEvalParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.TopkAccuracyEvalParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.TopkAccuracyEvalParams)
    MergeFrom(*source);
  }
}

void TopkAccuracyEvalParams::MergeFrom(const TopkAccuracyEvalParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.TopkAccuracyEvalParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_k()) {
    set_k(from.k());
  }
}

void TopkAccuracyEvalParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.TopkAccuracyEvalParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopkAccuracyEvalParams::CopyFrom(const TopkAccuracyEvalParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.TopkAccuracyEvalParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopkAccuracyEvalParams::IsInitialized() const {
  return true;
}

void TopkAccuracyEvalParams::Swap(TopkAccuracyEvalParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TopkAccuracyEvalParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TopkAccuracyEvalParams::UnsafeArenaSwap(TopkAccuracyEvalParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TopkAccuracyEvalParams::InternalSwap(TopkAccuracyEvalParams* other) {
  using std::swap;
  swap(k_, other->k_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopkAccuracyEvalParams::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopkAccuracyEvalMetrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopkAccuracyEvalMetrics::kTopkAccuraciesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopkAccuracyEvalMetrics::TopkAccuracyEvalMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.TopkAccuracyEvalMetrics)
}
TopkAccuracyEvalMetrics::TopkAccuracyEvalMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  topk_accuracies_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.TopkAccuracyEvalMetrics)
}
TopkAccuracyEvalMetrics::TopkAccuracyEvalMetrics(const TopkAccuracyEvalMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      topk_accuracies_(from.topk_accuracies_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.TopkAccuracyEvalMetrics)
}

void TopkAccuracyEvalMetrics::SharedCtor() {
}

TopkAccuracyEvalMetrics::~TopkAccuracyEvalMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.TopkAccuracyEvalMetrics)
  SharedDtor();
}

void TopkAccuracyEvalMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TopkAccuracyEvalMetrics::ArenaDtor(void* object) {
  TopkAccuracyEvalMetrics* _this = reinterpret_cast< TopkAccuracyEvalMetrics* >(object);
  (void)_this;
}
void TopkAccuracyEvalMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TopkAccuracyEvalMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopkAccuracyEvalMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopkAccuracyEvalMetrics& TopkAccuracyEvalMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_TopkAccuracyEvalMetrics.base);
  return *internal_default_instance();
}


void TopkAccuracyEvalMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topk_accuracies_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopkAccuracyEvalMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float topk_accuracies = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_topk_accuracies())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_topk_accuracies())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.TopkAccuracyEvalMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.TopkAccuracyEvalMetrics)
  return false;
#undef DO_
}

void TopkAccuracyEvalMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float topk_accuracies = 1;
  for (int i = 0, n = this->topk_accuracies_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->topk_accuracies(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.TopkAccuracyEvalMetrics)
}

::google::protobuf::uint8* TopkAccuracyEvalMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float topk_accuracies = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->topk_accuracies_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.TopkAccuracyEvalMetrics)
  return target;
}

size_t TopkAccuracyEvalMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float topk_accuracies = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->topk_accuracies_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->topk_accuracies_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopkAccuracyEvalMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const TopkAccuracyEvalMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopkAccuracyEvalMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.TopkAccuracyEvalMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.TopkAccuracyEvalMetrics)
    MergeFrom(*source);
  }
}

void TopkAccuracyEvalMetrics::MergeFrom(const TopkAccuracyEvalMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topk_accuracies_.MergeFrom(from.topk_accuracies_);
}

void TopkAccuracyEvalMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopkAccuracyEvalMetrics::CopyFrom(const TopkAccuracyEvalMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.TopkAccuracyEvalMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopkAccuracyEvalMetrics::IsInitialized() const {
  return true;
}

void TopkAccuracyEvalMetrics::Swap(TopkAccuracyEvalMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TopkAccuracyEvalMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TopkAccuracyEvalMetrics::UnsafeArenaSwap(TopkAccuracyEvalMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TopkAccuracyEvalMetrics::InternalSwap(TopkAccuracyEvalMetrics* other) {
  using std::swap;
  topk_accuracies_.InternalSwap(&other->topk_accuracies_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopkAccuracyEvalMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageClassificationParams::InitAsDefaultInstance() {
  ::tflite::evaluation::_ImageClassificationParams_default_instance_._instance.get_mutable()->inference_params_ = const_cast< ::tflite::evaluation::TfliteInferenceParams*>(
      ::tflite::evaluation::TfliteInferenceParams::internal_default_instance());
  ::tflite::evaluation::_ImageClassificationParams_default_instance_._instance.get_mutable()->topk_accuracy_eval_params_ = const_cast< ::tflite::evaluation::TopkAccuracyEvalParams*>(
      ::tflite::evaluation::TopkAccuracyEvalParams::internal_default_instance());
}
void ImageClassificationParams::unsafe_arena_set_allocated_inference_params(
    ::tflite::evaluation::TfliteInferenceParams* inference_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete inference_params_;
  }
  inference_params_ = inference_params;
  if (inference_params) {
    set_has_inference_params();
  } else {
    clear_has_inference_params();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ImageClassificationParams.inference_params)
}
void ImageClassificationParams::unsafe_arena_set_allocated_topk_accuracy_eval_params(
    ::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete topk_accuracy_eval_params_;
  }
  topk_accuracy_eval_params_ = topk_accuracy_eval_params;
  if (topk_accuracy_eval_params) {
    set_has_topk_accuracy_eval_params();
  } else {
    clear_has_topk_accuracy_eval_params();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ImageClassificationParams.topk_accuracy_eval_params)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageClassificationParams::kInferenceParamsFieldNumber;
const int ImageClassificationParams::kTopkAccuracyEvalParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageClassificationParams::ImageClassificationParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImageClassificationParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ImageClassificationParams)
}
ImageClassificationParams::ImageClassificationParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImageClassificationParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ImageClassificationParams)
}
ImageClassificationParams::ImageClassificationParams(const ImageClassificationParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inference_params()) {
    inference_params_ = new ::tflite::evaluation::TfliteInferenceParams(*from.inference_params_);
  } else {
    inference_params_ = NULL;
  }
  if (from.has_topk_accuracy_eval_params()) {
    topk_accuracy_eval_params_ = new ::tflite::evaluation::TopkAccuracyEvalParams(*from.topk_accuracy_eval_params_);
  } else {
    topk_accuracy_eval_params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ImageClassificationParams)
}

void ImageClassificationParams::SharedCtor() {
  ::memset(&inference_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&topk_accuracy_eval_params_) -
      reinterpret_cast<char*>(&inference_params_)) + sizeof(topk_accuracy_eval_params_));
}

ImageClassificationParams::~ImageClassificationParams() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ImageClassificationParams)
  SharedDtor();
}

void ImageClassificationParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete inference_params_;
  if (this != internal_default_instance()) delete topk_accuracy_eval_params_;
}

void ImageClassificationParams::ArenaDtor(void* object) {
  ImageClassificationParams* _this = reinterpret_cast< ImageClassificationParams* >(object);
  (void)_this;
}
void ImageClassificationParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageClassificationParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageClassificationParams::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageClassificationParams& ImageClassificationParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImageClassificationParams.base);
  return *internal_default_instance();
}


void ImageClassificationParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ImageClassificationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(inference_params_ != NULL);
      inference_params_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(topk_accuracy_eval_params_ != NULL);
      topk_accuracy_eval_params_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImageClassificationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ImageClassificationParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inference_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topk_accuracy_eval_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ImageClassificationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ImageClassificationParams)
  return false;
#undef DO_
}

void ImageClassificationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ImageClassificationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_inference_params(), output);
  }

  // optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_topk_accuracy_eval_params(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ImageClassificationParams)
}

::google::protobuf::uint8* ImageClassificationParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ImageClassificationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_inference_params(), deterministic, target);
  }

  // optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_topk_accuracy_eval_params(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ImageClassificationParams)
  return target;
}

size_t ImageClassificationParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ImageClassificationParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
    if (has_inference_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inference_params_);
    }

    // optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
    if (has_topk_accuracy_eval_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *topk_accuracy_eval_params_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageClassificationParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ImageClassificationParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageClassificationParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageClassificationParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ImageClassificationParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ImageClassificationParams)
    MergeFrom(*source);
  }
}

void ImageClassificationParams::MergeFrom(const ImageClassificationParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ImageClassificationParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_inference_params()->::tflite::evaluation::TfliteInferenceParams::MergeFrom(from.inference_params());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_topk_accuracy_eval_params()->::tflite::evaluation::TopkAccuracyEvalParams::MergeFrom(from.topk_accuracy_eval_params());
    }
  }
}

void ImageClassificationParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ImageClassificationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageClassificationParams::CopyFrom(const ImageClassificationParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ImageClassificationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageClassificationParams::IsInitialized() const {
  return true;
}

void ImageClassificationParams::Swap(ImageClassificationParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageClassificationParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageClassificationParams::UnsafeArenaSwap(ImageClassificationParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageClassificationParams::InternalSwap(ImageClassificationParams* other) {
  using std::swap;
  swap(inference_params_, other->inference_params_);
  swap(topk_accuracy_eval_params_, other->topk_accuracy_eval_params_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageClassificationParams::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageClassificationMetrics::InitAsDefaultInstance() {
  ::tflite::evaluation::_ImageClassificationMetrics_default_instance_._instance.get_mutable()->pre_processing_latency_ = const_cast< ::tflite::evaluation::LatencyMetrics*>(
      ::tflite::evaluation::LatencyMetrics::internal_default_instance());
  ::tflite::evaluation::_ImageClassificationMetrics_default_instance_._instance.get_mutable()->inference_latency_ = const_cast< ::tflite::evaluation::LatencyMetrics*>(
      ::tflite::evaluation::LatencyMetrics::internal_default_instance());
  ::tflite::evaluation::_ImageClassificationMetrics_default_instance_._instance.get_mutable()->inference_metrics_ = const_cast< ::tflite::evaluation::TfliteInferenceMetrics*>(
      ::tflite::evaluation::TfliteInferenceMetrics::internal_default_instance());
  ::tflite::evaluation::_ImageClassificationMetrics_default_instance_._instance.get_mutable()->topk_accuracy_metrics_ = const_cast< ::tflite::evaluation::TopkAccuracyEvalMetrics*>(
      ::tflite::evaluation::TopkAccuracyEvalMetrics::internal_default_instance());
}
void ImageClassificationMetrics::unsafe_arena_set_allocated_pre_processing_latency(
    ::tflite::evaluation::LatencyMetrics* pre_processing_latency) {
  if (GetArenaNoVirtual() == NULL) {
    delete pre_processing_latency_;
  }
  pre_processing_latency_ = pre_processing_latency;
  if (pre_processing_latency) {
    set_has_pre_processing_latency();
  } else {
    clear_has_pre_processing_latency();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ImageClassificationMetrics.pre_processing_latency)
}
void ImageClassificationMetrics::unsafe_arena_set_allocated_inference_latency(
    ::tflite::evaluation::LatencyMetrics* inference_latency) {
  if (GetArenaNoVirtual() == NULL) {
    delete inference_latency_;
  }
  inference_latency_ = inference_latency;
  if (inference_latency) {
    set_has_inference_latency();
  } else {
    clear_has_inference_latency();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ImageClassificationMetrics.inference_latency)
}
void ImageClassificationMetrics::unsafe_arena_set_allocated_inference_metrics(
    ::tflite::evaluation::TfliteInferenceMetrics* inference_metrics) {
  if (GetArenaNoVirtual() == NULL) {
    delete inference_metrics_;
  }
  inference_metrics_ = inference_metrics;
  if (inference_metrics) {
    set_has_inference_metrics();
  } else {
    clear_has_inference_metrics();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ImageClassificationMetrics.inference_metrics)
}
void ImageClassificationMetrics::unsafe_arena_set_allocated_topk_accuracy_metrics(
    ::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics) {
  if (GetArenaNoVirtual() == NULL) {
    delete topk_accuracy_metrics_;
  }
  topk_accuracy_metrics_ = topk_accuracy_metrics;
  if (topk_accuracy_metrics) {
    set_has_topk_accuracy_metrics();
  } else {
    clear_has_topk_accuracy_metrics();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ImageClassificationMetrics.topk_accuracy_metrics)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageClassificationMetrics::kPreProcessingLatencyFieldNumber;
const int ImageClassificationMetrics::kInferenceLatencyFieldNumber;
const int ImageClassificationMetrics::kInferenceMetricsFieldNumber;
const int ImageClassificationMetrics::kTopkAccuracyMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageClassificationMetrics::ImageClassificationMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImageClassificationMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ImageClassificationMetrics)
}
ImageClassificationMetrics::ImageClassificationMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImageClassificationMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ImageClassificationMetrics)
}
ImageClassificationMetrics::ImageClassificationMetrics(const ImageClassificationMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pre_processing_latency()) {
    pre_processing_latency_ = new ::tflite::evaluation::LatencyMetrics(*from.pre_processing_latency_);
  } else {
    pre_processing_latency_ = NULL;
  }
  if (from.has_inference_latency()) {
    inference_latency_ = new ::tflite::evaluation::LatencyMetrics(*from.inference_latency_);
  } else {
    inference_latency_ = NULL;
  }
  if (from.has_inference_metrics()) {
    inference_metrics_ = new ::tflite::evaluation::TfliteInferenceMetrics(*from.inference_metrics_);
  } else {
    inference_metrics_ = NULL;
  }
  if (from.has_topk_accuracy_metrics()) {
    topk_accuracy_metrics_ = new ::tflite::evaluation::TopkAccuracyEvalMetrics(*from.topk_accuracy_metrics_);
  } else {
    topk_accuracy_metrics_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ImageClassificationMetrics)
}

void ImageClassificationMetrics::SharedCtor() {
  ::memset(&pre_processing_latency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&topk_accuracy_metrics_) -
      reinterpret_cast<char*>(&pre_processing_latency_)) + sizeof(topk_accuracy_metrics_));
}

ImageClassificationMetrics::~ImageClassificationMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ImageClassificationMetrics)
  SharedDtor();
}

void ImageClassificationMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete pre_processing_latency_;
  if (this != internal_default_instance()) delete inference_latency_;
  if (this != internal_default_instance()) delete inference_metrics_;
  if (this != internal_default_instance()) delete topk_accuracy_metrics_;
}

void ImageClassificationMetrics::ArenaDtor(void* object) {
  ImageClassificationMetrics* _this = reinterpret_cast< ImageClassificationMetrics* >(object);
  (void)_this;
}
void ImageClassificationMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageClassificationMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageClassificationMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageClassificationMetrics& ImageClassificationMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ImageClassificationMetrics.base);
  return *internal_default_instance();
}


void ImageClassificationMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ImageClassificationMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(pre_processing_latency_ != NULL);
      pre_processing_latency_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(inference_latency_ != NULL);
      inference_latency_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(inference_metrics_ != NULL);
      inference_metrics_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(topk_accuracy_metrics_ != NULL);
      topk_accuracy_metrics_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImageClassificationMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ImageClassificationMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pre_processing_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inference_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inference_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topk_accuracy_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ImageClassificationMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ImageClassificationMetrics)
  return false;
#undef DO_
}

void ImageClassificationMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ImageClassificationMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pre_processing_latency(), output);
  }

  // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_inference_latency(), output);
  }

  // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_inference_metrics(), output);
  }

  // optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_topk_accuracy_metrics(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ImageClassificationMetrics)
}

::google::protobuf::uint8* ImageClassificationMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ImageClassificationMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pre_processing_latency(), deterministic, target);
  }

  // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_inference_latency(), deterministic, target);
  }

  // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_inference_metrics(), deterministic, target);
  }

  // optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_topk_accuracy_metrics(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ImageClassificationMetrics)
  return target;
}

size_t ImageClassificationMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ImageClassificationMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
    if (has_pre_processing_latency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pre_processing_latency_);
    }

    // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
    if (has_inference_latency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inference_latency_);
    }

    // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
    if (has_inference_metrics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inference_metrics_);
    }

    // optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 4;
    if (has_topk_accuracy_metrics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *topk_accuracy_metrics_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageClassificationMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ImageClassificationMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageClassificationMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageClassificationMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ImageClassificationMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ImageClassificationMetrics)
    MergeFrom(*source);
  }
}

void ImageClassificationMetrics::MergeFrom(const ImageClassificationMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ImageClassificationMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pre_processing_latency()->::tflite::evaluation::LatencyMetrics::MergeFrom(from.pre_processing_latency());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_inference_latency()->::tflite::evaluation::LatencyMetrics::MergeFrom(from.inference_latency());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_inference_metrics()->::tflite::evaluation::TfliteInferenceMetrics::MergeFrom(from.inference_metrics());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_topk_accuracy_metrics()->::tflite::evaluation::TopkAccuracyEvalMetrics::MergeFrom(from.topk_accuracy_metrics());
    }
  }
}

void ImageClassificationMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ImageClassificationMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageClassificationMetrics::CopyFrom(const ImageClassificationMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ImageClassificationMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageClassificationMetrics::IsInitialized() const {
  return true;
}

void ImageClassificationMetrics::Swap(ImageClassificationMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageClassificationMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageClassificationMetrics::UnsafeArenaSwap(ImageClassificationMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageClassificationMetrics::InternalSwap(ImageClassificationMetrics* other) {
  using std::swap;
  swap(pre_processing_latency_, other->pre_processing_latency_);
  swap(inference_latency_, other->inference_latency_);
  swap(inference_metrics_, other->inference_metrics_);
  swap(topk_accuracy_metrics_, other->topk_accuracy_metrics_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageClassificationMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InferenceProfilerMetrics::InitAsDefaultInstance() {
  ::tflite::evaluation::_InferenceProfilerMetrics_default_instance_._instance.get_mutable()->reference_latency_ = const_cast< ::tflite::evaluation::LatencyMetrics*>(
      ::tflite::evaluation::LatencyMetrics::internal_default_instance());
  ::tflite::evaluation::_InferenceProfilerMetrics_default_instance_._instance.get_mutable()->test_latency_ = const_cast< ::tflite::evaluation::LatencyMetrics*>(
      ::tflite::evaluation::LatencyMetrics::internal_default_instance());
}
void InferenceProfilerMetrics::unsafe_arena_set_allocated_reference_latency(
    ::tflite::evaluation::LatencyMetrics* reference_latency) {
  if (GetArenaNoVirtual() == NULL) {
    delete reference_latency_;
  }
  reference_latency_ = reference_latency;
  if (reference_latency) {
    set_has_reference_latency();
  } else {
    clear_has_reference_latency();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.InferenceProfilerMetrics.reference_latency)
}
void InferenceProfilerMetrics::unsafe_arena_set_allocated_test_latency(
    ::tflite::evaluation::LatencyMetrics* test_latency) {
  if (GetArenaNoVirtual() == NULL) {
    delete test_latency_;
  }
  test_latency_ = test_latency;
  if (test_latency) {
    set_has_test_latency();
  } else {
    clear_has_test_latency();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.InferenceProfilerMetrics.test_latency)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferenceProfilerMetrics::kReferenceLatencyFieldNumber;
const int InferenceProfilerMetrics::kTestLatencyFieldNumber;
const int InferenceProfilerMetrics::kOutputErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferenceProfilerMetrics::InferenceProfilerMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_InferenceProfilerMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.InferenceProfilerMetrics)
}
InferenceProfilerMetrics::InferenceProfilerMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  output_errors_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_InferenceProfilerMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.InferenceProfilerMetrics)
}
InferenceProfilerMetrics::InferenceProfilerMetrics(const InferenceProfilerMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      output_errors_(from.output_errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reference_latency()) {
    reference_latency_ = new ::tflite::evaluation::LatencyMetrics(*from.reference_latency_);
  } else {
    reference_latency_ = NULL;
  }
  if (from.has_test_latency()) {
    test_latency_ = new ::tflite::evaluation::LatencyMetrics(*from.test_latency_);
  } else {
    test_latency_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.InferenceProfilerMetrics)
}

void InferenceProfilerMetrics::SharedCtor() {
  ::memset(&reference_latency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_latency_) -
      reinterpret_cast<char*>(&reference_latency_)) + sizeof(test_latency_));
}

InferenceProfilerMetrics::~InferenceProfilerMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.InferenceProfilerMetrics)
  SharedDtor();
}

void InferenceProfilerMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete reference_latency_;
  if (this != internal_default_instance()) delete test_latency_;
}

void InferenceProfilerMetrics::ArenaDtor(void* object) {
  InferenceProfilerMetrics* _this = reinterpret_cast< InferenceProfilerMetrics* >(object);
  (void)_this;
}
void InferenceProfilerMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void InferenceProfilerMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InferenceProfilerMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferenceProfilerMetrics& InferenceProfilerMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_InferenceProfilerMetrics.base);
  return *internal_default_instance();
}


void InferenceProfilerMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.InferenceProfilerMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_errors_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(reference_latency_ != NULL);
      reference_latency_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(test_latency_ != NULL);
      test_latency_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InferenceProfilerMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.InferenceProfilerMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.evaluation.LatencyMetrics reference_latency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.LatencyMetrics test_latency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tflite.evaluation.AccuracyMetrics output_errors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_output_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.InferenceProfilerMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.InferenceProfilerMetrics)
  return false;
#undef DO_
}

void InferenceProfilerMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.InferenceProfilerMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.LatencyMetrics reference_latency = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_reference_latency(), output);
  }

  // optional .tflite.evaluation.LatencyMetrics test_latency = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_test_latency(), output);
  }

  // repeated .tflite.evaluation.AccuracyMetrics output_errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->output_errors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.InferenceProfilerMetrics)
}

::google::protobuf::uint8* InferenceProfilerMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.InferenceProfilerMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.LatencyMetrics reference_latency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_reference_latency(), deterministic, target);
  }

  // optional .tflite.evaluation.LatencyMetrics test_latency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_test_latency(), deterministic, target);
  }

  // repeated .tflite.evaluation.AccuracyMetrics output_errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->output_errors(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.InferenceProfilerMetrics)
  return target;
}

size_t InferenceProfilerMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.InferenceProfilerMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tflite.evaluation.AccuracyMetrics output_errors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->output_errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_errors(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .tflite.evaluation.LatencyMetrics reference_latency = 1;
    if (has_reference_latency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_latency_);
    }

    // optional .tflite.evaluation.LatencyMetrics test_latency = 2;
    if (has_test_latency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_latency_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferenceProfilerMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.InferenceProfilerMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const InferenceProfilerMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferenceProfilerMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.InferenceProfilerMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.InferenceProfilerMetrics)
    MergeFrom(*source);
  }
}

void InferenceProfilerMetrics::MergeFrom(const InferenceProfilerMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.InferenceProfilerMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_errors_.MergeFrom(from.output_errors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_reference_latency()->::tflite::evaluation::LatencyMetrics::MergeFrom(from.reference_latency());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_test_latency()->::tflite::evaluation::LatencyMetrics::MergeFrom(from.test_latency());
    }
  }
}

void InferenceProfilerMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.InferenceProfilerMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferenceProfilerMetrics::CopyFrom(const InferenceProfilerMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.InferenceProfilerMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferenceProfilerMetrics::IsInitialized() const {
  return true;
}

void InferenceProfilerMetrics::Swap(InferenceProfilerMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    InferenceProfilerMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void InferenceProfilerMetrics::UnsafeArenaSwap(InferenceProfilerMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void InferenceProfilerMetrics::InternalSwap(InferenceProfilerMetrics* other) {
  using std::swap;
  CastToBase(&output_errors_)->InternalSwap(CastToBase(&other->output_errors_));
  swap(reference_latency_, other->reference_latency_);
  swap(test_latency_, other->test_latency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InferenceProfilerMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::kNormalizedTopFieldNumber;
const int ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::kNormalizedBottomFieldNumber;
const int ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::kNormalizedLeftFieldNumber;
const int ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::kNormalizedRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
}
ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
}
ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox(const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&normalized_top_, &from.normalized_top_,
    static_cast<size_t>(reinterpret_cast<char*>(&normalized_right_) -
    reinterpret_cast<char*>(&normalized_top_)) + sizeof(normalized_right_));
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::SharedCtor() {
  ::memset(&normalized_top_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&normalized_right_) -
      reinterpret_cast<char*>(&normalized_top_)) + sizeof(normalized_right_));
}

ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::~ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  SharedDtor();
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::ArenaDtor(void* object) {
  ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* _this = reinterpret_cast< ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* >(object);
  (void)_this;
}
void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox.base);
  return *internal_default_instance();
}


void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&normalized_top_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&normalized_right_) -
        reinterpret_cast<char*>(&normalized_top_)) + sizeof(normalized_right_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float normalized_top = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_normalized_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &normalized_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float normalized_bottom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_normalized_bottom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &normalized_bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float normalized_left = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_normalized_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &normalized_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float normalized_right = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_normalized_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &normalized_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  return false;
#undef DO_
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float normalized_top = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->normalized_top(), output);
  }

  // optional float normalized_bottom = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->normalized_bottom(), output);
  }

  // optional float normalized_left = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->normalized_left(), output);
  }

  // optional float normalized_right = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->normalized_right(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
}

::google::protobuf::uint8* ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float normalized_top = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->normalized_top(), target);
  }

  // optional float normalized_bottom = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->normalized_bottom(), target);
  }

  // optional float normalized_left = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->normalized_left(), target);
  }

  // optional float normalized_right = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->normalized_right(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  return target;
}

size_t ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float normalized_top = 1;
    if (has_normalized_top()) {
      total_size += 1 + 4;
    }

    // optional float normalized_bottom = 2;
    if (has_normalized_bottom()) {
      total_size += 1 + 4;
    }

    // optional float normalized_left = 3;
    if (has_normalized_left()) {
      total_size += 1 + 4;
    }

    // optional float normalized_right = 4;
    if (has_normalized_right()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
    MergeFrom(*source);
  }
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::MergeFrom(const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      normalized_top_ = from.normalized_top_;
    }
    if (cached_has_bits & 0x00000002u) {
      normalized_bottom_ = from.normalized_bottom_;
    }
    if (cached_has_bits & 0x00000004u) {
      normalized_left_ = from.normalized_left_;
    }
    if (cached_has_bits & 0x00000008u) {
      normalized_right_ = from.normalized_right_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::CopyFrom(const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::IsInitialized() const {
  return true;
}

void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::Swap(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::UnsafeArenaSwap(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::InternalSwap(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* other) {
  using std::swap;
  swap(normalized_top_, other->normalized_top_);
  swap(normalized_bottom_, other->normalized_bottom_);
  swap(normalized_left_, other->normalized_left_);
  swap(normalized_right_, other->normalized_right_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionResult_ObjectInstance::InitAsDefaultInstance() {
  ::tflite::evaluation::_ObjectDetectionResult_ObjectInstance_default_instance_._instance.get_mutable()->bounding_box_ = const_cast< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox*>(
      ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::internal_default_instance());
}
void ObjectDetectionResult_ObjectInstance::unsafe_arena_set_allocated_bounding_box(
    ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    set_has_bounding_box();
  } else {
    clear_has_bounding_box();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ObjectDetectionResult.ObjectInstance.bounding_box)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionResult_ObjectInstance::kClassIdFieldNumber;
const int ObjectDetectionResult_ObjectInstance::kBoundingBoxFieldNumber;
const int ObjectDetectionResult_ObjectInstance::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionResult_ObjectInstance::ObjectDetectionResult_ObjectInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult_ObjectInstance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
}
ObjectDetectionResult_ObjectInstance::ObjectDetectionResult_ObjectInstance(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult_ObjectInstance.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
}
ObjectDetectionResult_ObjectInstance::ObjectDetectionResult_ObjectInstance(const ObjectDetectionResult_ObjectInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bounding_box()) {
    bounding_box_ = new ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  ::memcpy(&class_id_, &from.class_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&class_id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
}

void ObjectDetectionResult_ObjectInstance::SharedCtor() {
  ::memset(&bounding_box_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&class_id_) -
      reinterpret_cast<char*>(&bounding_box_)) + sizeof(class_id_));
  score_ = 1;
}

ObjectDetectionResult_ObjectInstance::~ObjectDetectionResult_ObjectInstance() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  SharedDtor();
}

void ObjectDetectionResult_ObjectInstance::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete bounding_box_;
}

void ObjectDetectionResult_ObjectInstance::ArenaDtor(void* object) {
  ObjectDetectionResult_ObjectInstance* _this = reinterpret_cast< ObjectDetectionResult_ObjectInstance* >(object);
  (void)_this;
}
void ObjectDetectionResult_ObjectInstance::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionResult_ObjectInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionResult_ObjectInstance::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionResult_ObjectInstance& ObjectDetectionResult_ObjectInstance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult_ObjectInstance.base);
  return *internal_default_instance();
}


void ObjectDetectionResult_ObjectInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(bounding_box_ != NULL);
    bounding_box_->Clear();
  }
  if (cached_has_bits & 6u) {
    class_id_ = 0;
    score_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionResult_ObjectInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 class_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_class_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  return false;
#undef DO_
}

void ObjectDetectionResult_ObjectInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 class_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->class_id(), output);
  }

  // optional .tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox bounding_box = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bounding_box(), output);
  }

  // optional float score = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
}

::google::protobuf::uint8* ObjectDetectionResult_ObjectInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 class_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->class_id(), target);
  }

  // optional .tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox bounding_box = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bounding_box(), deterministic, target);
  }

  // optional float score = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  return target;
}

size_t ObjectDetectionResult_ObjectInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox bounding_box = 2;
    if (has_bounding_box()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bounding_box_);
    }

    // optional int32 class_id = 1;
    if (has_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_id());
    }

    // optional float score = 3 [default = 1];
    if (has_score()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionResult_ObjectInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionResult_ObjectInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionResult_ObjectInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
    MergeFrom(*source);
  }
}

void ObjectDetectionResult_ObjectInstance::MergeFrom(const ObjectDetectionResult_ObjectInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_bounding_box()->::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::MergeFrom(from.bounding_box());
    }
    if (cached_has_bits & 0x00000002u) {
      class_id_ = from.class_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectDetectionResult_ObjectInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionResult_ObjectInstance::CopyFrom(const ObjectDetectionResult_ObjectInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionResult_ObjectInstance::IsInitialized() const {
  return true;
}

void ObjectDetectionResult_ObjectInstance::Swap(ObjectDetectionResult_ObjectInstance* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionResult_ObjectInstance* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionResult_ObjectInstance::UnsafeArenaSwap(ObjectDetectionResult_ObjectInstance* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionResult_ObjectInstance::InternalSwap(ObjectDetectionResult_ObjectInstance* other) {
  using std::swap;
  swap(bounding_box_, other->bounding_box_);
  swap(class_id_, other->class_id_);
  swap(score_, other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionResult_ObjectInstance::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionResult::kObjectsFieldNumber;
const int ObjectDetectionResult::kImageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionResult::ObjectDetectionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionResult)
}
ObjectDetectionResult::ObjectDetectionResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  objects_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionResult)
}
ObjectDetectionResult::ObjectDetectionResult(const ObjectDetectionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_name()) {
    image_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionResult)
}

void ObjectDetectionResult::SharedCtor() {
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ObjectDetectionResult::~ObjectDetectionResult() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionResult)
  SharedDtor();
}

void ObjectDetectionResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  image_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjectDetectionResult::ArenaDtor(void* object) {
  ObjectDetectionResult* _this = reinterpret_cast< ObjectDetectionResult* >(object);
  (void)_this;
}
void ObjectDetectionResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionResult::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionResult& ObjectDetectionResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionResult.base);
  return *internal_default_instance();
}


void ObjectDetectionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    image_name_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tflite.evaluation.ObjectDetectionResult.ObjectInstance objects = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_objects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string image_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->image_name().data(), static_cast<int>(this->image_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.evaluation.ObjectDetectionResult.image_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionResult)
  return false;
#undef DO_
}

void ObjectDetectionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tflite.evaluation.ObjectDetectionResult.ObjectInstance objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->objects(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string image_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.evaluation.ObjectDetectionResult.image_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->image_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionResult)
}

::google::protobuf::uint8* ObjectDetectionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tflite.evaluation.ObjectDetectionResult.ObjectInstance objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->objects(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string image_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.evaluation.ObjectDetectionResult.image_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->image_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionResult)
  return target;
}

size_t ObjectDetectionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tflite.evaluation.ObjectDetectionResult.ObjectInstance objects = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects(static_cast<int>(i)));
    }
  }

  // optional string image_name = 2;
  if (has_image_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionResult)
    MergeFrom(*source);
  }
}

void ObjectDetectionResult::MergeFrom(const ObjectDetectionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
  if (from.has_image_name()) {
    set_image_name(from.image_name());
  }
}

void ObjectDetectionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionResult::CopyFrom(const ObjectDetectionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionResult::IsInitialized() const {
  return true;
}

void ObjectDetectionResult::Swap(ObjectDetectionResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionResult::UnsafeArenaSwap(ObjectDetectionResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionResult::InternalSwap(ObjectDetectionResult* other) {
  using std::swap;
  CastToBase(&objects_)->InternalSwap(CastToBase(&other->objects_));
  image_name_.Swap(&other->image_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionResult::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionGroundTruth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionGroundTruth::kDetectionResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionGroundTruth::ObjectDetectionGroundTruth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionGroundTruth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionGroundTruth)
}
ObjectDetectionGroundTruth::ObjectDetectionGroundTruth(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  detection_results_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionGroundTruth.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionGroundTruth)
}
ObjectDetectionGroundTruth::ObjectDetectionGroundTruth(const ObjectDetectionGroundTruth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      detection_results_(from.detection_results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionGroundTruth)
}

void ObjectDetectionGroundTruth::SharedCtor() {
}

ObjectDetectionGroundTruth::~ObjectDetectionGroundTruth() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionGroundTruth)
  SharedDtor();
}

void ObjectDetectionGroundTruth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ObjectDetectionGroundTruth::ArenaDtor(void* object) {
  ObjectDetectionGroundTruth* _this = reinterpret_cast< ObjectDetectionGroundTruth* >(object);
  (void)_this;
}
void ObjectDetectionGroundTruth::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionGroundTruth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionGroundTruth::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionGroundTruth& ObjectDetectionGroundTruth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionGroundTruth.base);
  return *internal_default_instance();
}


void ObjectDetectionGroundTruth::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionGroundTruth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  detection_results_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionGroundTruth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionGroundTruth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tflite.evaluation.ObjectDetectionResult detection_results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detection_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionGroundTruth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionGroundTruth)
  return false;
#undef DO_
}

void ObjectDetectionGroundTruth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionGroundTruth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tflite.evaluation.ObjectDetectionResult detection_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detection_results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->detection_results(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionGroundTruth)
}

::google::protobuf::uint8* ObjectDetectionGroundTruth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionGroundTruth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tflite.evaluation.ObjectDetectionResult detection_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detection_results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->detection_results(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionGroundTruth)
  return target;
}

size_t ObjectDetectionGroundTruth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionGroundTruth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tflite.evaluation.ObjectDetectionResult detection_results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->detection_results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detection_results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionGroundTruth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionGroundTruth)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionGroundTruth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionGroundTruth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionGroundTruth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionGroundTruth)
    MergeFrom(*source);
  }
}

void ObjectDetectionGroundTruth::MergeFrom(const ObjectDetectionGroundTruth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionGroundTruth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  detection_results_.MergeFrom(from.detection_results_);
}

void ObjectDetectionGroundTruth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionGroundTruth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionGroundTruth::CopyFrom(const ObjectDetectionGroundTruth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionGroundTruth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionGroundTruth::IsInitialized() const {
  return true;
}

void ObjectDetectionGroundTruth::Swap(ObjectDetectionGroundTruth* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionGroundTruth* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionGroundTruth::UnsafeArenaSwap(ObjectDetectionGroundTruth* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionGroundTruth::InternalSwap(ObjectDetectionGroundTruth* other) {
  using std::swap;
  CastToBase(&detection_results_)->InternalSwap(CastToBase(&other->detection_results_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionGroundTruth::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionAveragePrecisionParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionAveragePrecisionParams::kNumClassesFieldNumber;
const int ObjectDetectionAveragePrecisionParams::kIouThresholdsFieldNumber;
const int ObjectDetectionAveragePrecisionParams::kNumRecallPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionAveragePrecisionParams::ObjectDetectionAveragePrecisionParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
}
ObjectDetectionAveragePrecisionParams::ObjectDetectionAveragePrecisionParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  iou_thresholds_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
}
ObjectDetectionAveragePrecisionParams::ObjectDetectionAveragePrecisionParams(const ObjectDetectionAveragePrecisionParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      iou_thresholds_(from.iou_thresholds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_classes_, &from.num_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_recall_points_) -
    reinterpret_cast<char*>(&num_classes_)) + sizeof(num_recall_points_));
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
}

void ObjectDetectionAveragePrecisionParams::SharedCtor() {
  num_classes_ = 0;
  num_recall_points_ = 100;
}

ObjectDetectionAveragePrecisionParams::~ObjectDetectionAveragePrecisionParams() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  SharedDtor();
}

void ObjectDetectionAveragePrecisionParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ObjectDetectionAveragePrecisionParams::ArenaDtor(void* object) {
  ObjectDetectionAveragePrecisionParams* _this = reinterpret_cast< ObjectDetectionAveragePrecisionParams* >(object);
  (void)_this;
}
void ObjectDetectionAveragePrecisionParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionAveragePrecisionParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionAveragePrecisionParams::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionAveragePrecisionParams& ObjectDetectionAveragePrecisionParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionParams.base);
  return *internal_default_instance();
}


void ObjectDetectionAveragePrecisionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iou_thresholds_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    num_classes_ = 0;
    num_recall_points_ = 100;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionAveragePrecisionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_classes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float iou_thresholds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_iou_thresholds())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_iou_thresholds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_recall_points = 3 [default = 100];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_recall_points();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_recall_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  return false;
#undef DO_
}

void ObjectDetectionAveragePrecisionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_classes(), output);
  }

  // repeated float iou_thresholds = 2;
  for (int i = 0, n = this->iou_thresholds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->iou_thresholds(i), output);
  }

  // optional int32 num_recall_points = 3 [default = 100];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_recall_points(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
}

::google::protobuf::uint8* ObjectDetectionAveragePrecisionParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_classes(), target);
  }

  // repeated float iou_thresholds = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->iou_thresholds_, target);

  // optional int32 num_recall_points = 3 [default = 100];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_recall_points(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  return target;
}

size_t ObjectDetectionAveragePrecisionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float iou_thresholds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->iou_thresholds_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->iou_thresholds_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 num_classes = 1;
    if (has_num_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_classes());
    }

    // optional int32 num_recall_points = 3 [default = 100];
    if (has_num_recall_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_recall_points());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionAveragePrecisionParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionAveragePrecisionParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionAveragePrecisionParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
    MergeFrom(*source);
  }
}

void ObjectDetectionAveragePrecisionParams::MergeFrom(const ObjectDetectionAveragePrecisionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  iou_thresholds_.MergeFrom(from.iou_thresholds_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      num_classes_ = from.num_classes_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_recall_points_ = from.num_recall_points_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectDetectionAveragePrecisionParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionAveragePrecisionParams::CopyFrom(const ObjectDetectionAveragePrecisionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionAveragePrecisionParams::IsInitialized() const {
  return true;
}

void ObjectDetectionAveragePrecisionParams::Swap(ObjectDetectionAveragePrecisionParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionAveragePrecisionParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionAveragePrecisionParams::UnsafeArenaSwap(ObjectDetectionAveragePrecisionParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionAveragePrecisionParams::InternalSwap(ObjectDetectionAveragePrecisionParams* other) {
  using std::swap;
  iou_thresholds_.InternalSwap(&other->iou_thresholds_);
  swap(num_classes_, other->num_classes_);
  swap(num_recall_points_, other->num_recall_points_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionAveragePrecisionParams::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionAveragePrecisionMetrics_AveragePrecision::kIouThresholdFieldNumber;
const int ObjectDetectionAveragePrecisionMetrics_AveragePrecision::kAveragePrecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionAveragePrecisionMetrics_AveragePrecision::ObjectDetectionAveragePrecisionMetrics_AveragePrecision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics_AveragePrecision.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
}
ObjectDetectionAveragePrecisionMetrics_AveragePrecision::ObjectDetectionAveragePrecisionMetrics_AveragePrecision(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics_AveragePrecision.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
}
ObjectDetectionAveragePrecisionMetrics_AveragePrecision::ObjectDetectionAveragePrecisionMetrics_AveragePrecision(const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&iou_threshold_, &from.iou_threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&average_precision_) -
    reinterpret_cast<char*>(&iou_threshold_)) + sizeof(average_precision_));
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::SharedCtor() {
  ::memset(&iou_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&average_precision_) -
      reinterpret_cast<char*>(&iou_threshold_)) + sizeof(average_precision_));
}

ObjectDetectionAveragePrecisionMetrics_AveragePrecision::~ObjectDetectionAveragePrecisionMetrics_AveragePrecision() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  SharedDtor();
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::ArenaDtor(void* object) {
  ObjectDetectionAveragePrecisionMetrics_AveragePrecision* _this = reinterpret_cast< ObjectDetectionAveragePrecisionMetrics_AveragePrecision* >(object);
  (void)_this;
}
void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionAveragePrecisionMetrics_AveragePrecision::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& ObjectDetectionAveragePrecisionMetrics_AveragePrecision::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics_AveragePrecision.base);
  return *internal_default_instance();
}


void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&iou_threshold_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&average_precision_) -
        reinterpret_cast<char*>(&iou_threshold_)) + sizeof(average_precision_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionAveragePrecisionMetrics_AveragePrecision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float iou_threshold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_iou_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &iou_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float average_precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_average_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &average_precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  return false;
#undef DO_
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float iou_threshold = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->iou_threshold(), output);
  }

  // optional float average_precision = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->average_precision(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
}

::google::protobuf::uint8* ObjectDetectionAveragePrecisionMetrics_AveragePrecision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float iou_threshold = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->iou_threshold(), target);
  }

  // optional float average_precision = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->average_precision(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  return target;
}

size_t ObjectDetectionAveragePrecisionMetrics_AveragePrecision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional float iou_threshold = 1;
    if (has_iou_threshold()) {
      total_size += 1 + 4;
    }

    // optional float average_precision = 2;
    if (has_average_precision()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionAveragePrecisionMetrics_AveragePrecision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionAveragePrecisionMetrics_AveragePrecision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
    MergeFrom(*source);
  }
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::MergeFrom(const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      iou_threshold_ = from.iou_threshold_;
    }
    if (cached_has_bits & 0x00000002u) {
      average_precision_ = from.average_precision_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::CopyFrom(const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionAveragePrecisionMetrics_AveragePrecision::IsInitialized() const {
  return true;
}

void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::Swap(ObjectDetectionAveragePrecisionMetrics_AveragePrecision* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionAveragePrecisionMetrics_AveragePrecision* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::UnsafeArenaSwap(ObjectDetectionAveragePrecisionMetrics_AveragePrecision* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::InternalSwap(ObjectDetectionAveragePrecisionMetrics_AveragePrecision* other) {
  using std::swap;
  swap(iou_threshold_, other->iou_threshold_);
  swap(average_precision_, other->average_precision_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionAveragePrecisionMetrics_AveragePrecision::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionAveragePrecisionMetrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionAveragePrecisionMetrics::kIndividualAveragePrecisionsFieldNumber;
const int ObjectDetectionAveragePrecisionMetrics::kOverallMeanAveragePrecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionAveragePrecisionMetrics::ObjectDetectionAveragePrecisionMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
}
ObjectDetectionAveragePrecisionMetrics::ObjectDetectionAveragePrecisionMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  individual_average_precisions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
}
ObjectDetectionAveragePrecisionMetrics::ObjectDetectionAveragePrecisionMetrics(const ObjectDetectionAveragePrecisionMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      individual_average_precisions_(from.individual_average_precisions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  overall_mean_average_precision_ = from.overall_mean_average_precision_;
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
}

void ObjectDetectionAveragePrecisionMetrics::SharedCtor() {
  overall_mean_average_precision_ = 0;
}

ObjectDetectionAveragePrecisionMetrics::~ObjectDetectionAveragePrecisionMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  SharedDtor();
}

void ObjectDetectionAveragePrecisionMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ObjectDetectionAveragePrecisionMetrics::ArenaDtor(void* object) {
  ObjectDetectionAveragePrecisionMetrics* _this = reinterpret_cast< ObjectDetectionAveragePrecisionMetrics* >(object);
  (void)_this;
}
void ObjectDetectionAveragePrecisionMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionAveragePrecisionMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionAveragePrecisionMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionAveragePrecisionMetrics& ObjectDetectionAveragePrecisionMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionAveragePrecisionMetrics.base);
  return *internal_default_instance();
}


void ObjectDetectionAveragePrecisionMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  individual_average_precisions_.Clear();
  overall_mean_average_precision_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionAveragePrecisionMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision individual_average_precisions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_individual_average_precisions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float overall_mean_average_precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_overall_mean_average_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &overall_mean_average_precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  return false;
#undef DO_
}

void ObjectDetectionAveragePrecisionMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision individual_average_precisions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->individual_average_precisions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->individual_average_precisions(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional float overall_mean_average_precision = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->overall_mean_average_precision(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
}

::google::protobuf::uint8* ObjectDetectionAveragePrecisionMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision individual_average_precisions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->individual_average_precisions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->individual_average_precisions(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional float overall_mean_average_precision = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->overall_mean_average_precision(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  return target;
}

size_t ObjectDetectionAveragePrecisionMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision individual_average_precisions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->individual_average_precisions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->individual_average_precisions(static_cast<int>(i)));
    }
  }

  // optional float overall_mean_average_precision = 2;
  if (has_overall_mean_average_precision()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionAveragePrecisionMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionAveragePrecisionMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionAveragePrecisionMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
    MergeFrom(*source);
  }
}

void ObjectDetectionAveragePrecisionMetrics::MergeFrom(const ObjectDetectionAveragePrecisionMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  individual_average_precisions_.MergeFrom(from.individual_average_precisions_);
  if (from.has_overall_mean_average_precision()) {
    set_overall_mean_average_precision(from.overall_mean_average_precision());
  }
}

void ObjectDetectionAveragePrecisionMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionAveragePrecisionMetrics::CopyFrom(const ObjectDetectionAveragePrecisionMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionAveragePrecisionMetrics::IsInitialized() const {
  return true;
}

void ObjectDetectionAveragePrecisionMetrics::Swap(ObjectDetectionAveragePrecisionMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionAveragePrecisionMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionAveragePrecisionMetrics::UnsafeArenaSwap(ObjectDetectionAveragePrecisionMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionAveragePrecisionMetrics::InternalSwap(ObjectDetectionAveragePrecisionMetrics* other) {
  using std::swap;
  CastToBase(&individual_average_precisions_)->InternalSwap(CastToBase(&other->individual_average_precisions_));
  swap(overall_mean_average_precision_, other->overall_mean_average_precision_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionAveragePrecisionMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionParams::InitAsDefaultInstance() {
  ::tflite::evaluation::_ObjectDetectionParams_default_instance_._instance.get_mutable()->inference_params_ = const_cast< ::tflite::evaluation::TfliteInferenceParams*>(
      ::tflite::evaluation::TfliteInferenceParams::internal_default_instance());
  ::tflite::evaluation::_ObjectDetectionParams_default_instance_._instance.get_mutable()->ap_params_ = const_cast< ::tflite::evaluation::ObjectDetectionAveragePrecisionParams*>(
      ::tflite::evaluation::ObjectDetectionAveragePrecisionParams::internal_default_instance());
}
void ObjectDetectionParams::unsafe_arena_set_allocated_inference_params(
    ::tflite::evaluation::TfliteInferenceParams* inference_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete inference_params_;
  }
  inference_params_ = inference_params;
  if (inference_params) {
    set_has_inference_params();
  } else {
    clear_has_inference_params();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ObjectDetectionParams.inference_params)
}
void ObjectDetectionParams::unsafe_arena_set_allocated_ap_params(
    ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ap_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete ap_params_;
  }
  ap_params_ = ap_params;
  if (ap_params) {
    set_has_ap_params();
  } else {
    clear_has_ap_params();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ObjectDetectionParams.ap_params)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionParams::kInferenceParamsFieldNumber;
const int ObjectDetectionParams::kClassOffsetFieldNumber;
const int ObjectDetectionParams::kApParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionParams::ObjectDetectionParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionParams)
}
ObjectDetectionParams::ObjectDetectionParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionParams)
}
ObjectDetectionParams::ObjectDetectionParams(const ObjectDetectionParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inference_params()) {
    inference_params_ = new ::tflite::evaluation::TfliteInferenceParams(*from.inference_params_);
  } else {
    inference_params_ = NULL;
  }
  if (from.has_ap_params()) {
    ap_params_ = new ::tflite::evaluation::ObjectDetectionAveragePrecisionParams(*from.ap_params_);
  } else {
    ap_params_ = NULL;
  }
  class_offset_ = from.class_offset_;
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionParams)
}

void ObjectDetectionParams::SharedCtor() {
  ::memset(&inference_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ap_params_) -
      reinterpret_cast<char*>(&inference_params_)) + sizeof(ap_params_));
  class_offset_ = 1;
}

ObjectDetectionParams::~ObjectDetectionParams() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionParams)
  SharedDtor();
}

void ObjectDetectionParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete inference_params_;
  if (this != internal_default_instance()) delete ap_params_;
}

void ObjectDetectionParams::ArenaDtor(void* object) {
  ObjectDetectionParams* _this = reinterpret_cast< ObjectDetectionParams* >(object);
  (void)_this;
}
void ObjectDetectionParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionParams::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionParams& ObjectDetectionParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionParams.base);
  return *internal_default_instance();
}


void ObjectDetectionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(inference_params_ != NULL);
      inference_params_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ap_params_ != NULL);
      ap_params_->Clear();
    }
    class_offset_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inference_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 class_offset = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_class_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams ap_params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ap_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionParams)
  return false;
#undef DO_
}

void ObjectDetectionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_inference_params(), output);
  }

  // optional int32 class_offset = 2 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->class_offset(), output);
  }

  // optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams ap_params = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ap_params(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionParams)
}

::google::protobuf::uint8* ObjectDetectionParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_inference_params(), deterministic, target);
  }

  // optional int32 class_offset = 2 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->class_offset(), target);
  }

  // optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams ap_params = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ap_params(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionParams)
  return target;
}

size_t ObjectDetectionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
    if (has_inference_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inference_params_);
    }

    // optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams ap_params = 3;
    if (has_ap_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ap_params_);
    }

    // optional int32 class_offset = 2 [default = 1];
    if (has_class_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionParams)
    MergeFrom(*source);
  }
}

void ObjectDetectionParams::MergeFrom(const ObjectDetectionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_inference_params()->::tflite::evaluation::TfliteInferenceParams::MergeFrom(from.inference_params());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_ap_params()->::tflite::evaluation::ObjectDetectionAveragePrecisionParams::MergeFrom(from.ap_params());
    }
    if (cached_has_bits & 0x00000004u) {
      class_offset_ = from.class_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectDetectionParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionParams::CopyFrom(const ObjectDetectionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionParams::IsInitialized() const {
  return true;
}

void ObjectDetectionParams::Swap(ObjectDetectionParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionParams::UnsafeArenaSwap(ObjectDetectionParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionParams::InternalSwap(ObjectDetectionParams* other) {
  using std::swap;
  swap(inference_params_, other->inference_params_);
  swap(ap_params_, other->ap_params_);
  swap(class_offset_, other->class_offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionParams::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDetectionMetrics::InitAsDefaultInstance() {
  ::tflite::evaluation::_ObjectDetectionMetrics_default_instance_._instance.get_mutable()->pre_processing_latency_ = const_cast< ::tflite::evaluation::LatencyMetrics*>(
      ::tflite::evaluation::LatencyMetrics::internal_default_instance());
  ::tflite::evaluation::_ObjectDetectionMetrics_default_instance_._instance.get_mutable()->inference_latency_ = const_cast< ::tflite::evaluation::LatencyMetrics*>(
      ::tflite::evaluation::LatencyMetrics::internal_default_instance());
  ::tflite::evaluation::_ObjectDetectionMetrics_default_instance_._instance.get_mutable()->inference_metrics_ = const_cast< ::tflite::evaluation::TfliteInferenceMetrics*>(
      ::tflite::evaluation::TfliteInferenceMetrics::internal_default_instance());
  ::tflite::evaluation::_ObjectDetectionMetrics_default_instance_._instance.get_mutable()->average_precision_metrics_ = const_cast< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics*>(
      ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics::internal_default_instance());
}
void ObjectDetectionMetrics::unsafe_arena_set_allocated_pre_processing_latency(
    ::tflite::evaluation::LatencyMetrics* pre_processing_latency) {
  if (GetArenaNoVirtual() == NULL) {
    delete pre_processing_latency_;
  }
  pre_processing_latency_ = pre_processing_latency;
  if (pre_processing_latency) {
    set_has_pre_processing_latency();
  } else {
    clear_has_pre_processing_latency();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ObjectDetectionMetrics.pre_processing_latency)
}
void ObjectDetectionMetrics::unsafe_arena_set_allocated_inference_latency(
    ::tflite::evaluation::LatencyMetrics* inference_latency) {
  if (GetArenaNoVirtual() == NULL) {
    delete inference_latency_;
  }
  inference_latency_ = inference_latency;
  if (inference_latency) {
    set_has_inference_latency();
  } else {
    clear_has_inference_latency();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ObjectDetectionMetrics.inference_latency)
}
void ObjectDetectionMetrics::unsafe_arena_set_allocated_inference_metrics(
    ::tflite::evaluation::TfliteInferenceMetrics* inference_metrics) {
  if (GetArenaNoVirtual() == NULL) {
    delete inference_metrics_;
  }
  inference_metrics_ = inference_metrics;
  if (inference_metrics) {
    set_has_inference_metrics();
  } else {
    clear_has_inference_metrics();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ObjectDetectionMetrics.inference_metrics)
}
void ObjectDetectionMetrics::unsafe_arena_set_allocated_average_precision_metrics(
    ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* average_precision_metrics) {
  if (GetArenaNoVirtual() == NULL) {
    delete average_precision_metrics_;
  }
  average_precision_metrics_ = average_precision_metrics;
  if (average_precision_metrics) {
    set_has_average_precision_metrics();
  } else {
    clear_has_average_precision_metrics();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ObjectDetectionMetrics.average_precision_metrics)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDetectionMetrics::kPreProcessingLatencyFieldNumber;
const int ObjectDetectionMetrics::kInferenceLatencyFieldNumber;
const int ObjectDetectionMetrics::kInferenceMetricsFieldNumber;
const int ObjectDetectionMetrics::kAveragePrecisionMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDetectionMetrics::ObjectDetectionMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.evaluation.ObjectDetectionMetrics)
}
ObjectDetectionMetrics::ObjectDetectionMetrics(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionMetrics.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.evaluation.ObjectDetectionMetrics)
}
ObjectDetectionMetrics::ObjectDetectionMetrics(const ObjectDetectionMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pre_processing_latency()) {
    pre_processing_latency_ = new ::tflite::evaluation::LatencyMetrics(*from.pre_processing_latency_);
  } else {
    pre_processing_latency_ = NULL;
  }
  if (from.has_inference_latency()) {
    inference_latency_ = new ::tflite::evaluation::LatencyMetrics(*from.inference_latency_);
  } else {
    inference_latency_ = NULL;
  }
  if (from.has_inference_metrics()) {
    inference_metrics_ = new ::tflite::evaluation::TfliteInferenceMetrics(*from.inference_metrics_);
  } else {
    inference_metrics_ = NULL;
  }
  if (from.has_average_precision_metrics()) {
    average_precision_metrics_ = new ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics(*from.average_precision_metrics_);
  } else {
    average_precision_metrics_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tflite.evaluation.ObjectDetectionMetrics)
}

void ObjectDetectionMetrics::SharedCtor() {
  ::memset(&pre_processing_latency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&average_precision_metrics_) -
      reinterpret_cast<char*>(&pre_processing_latency_)) + sizeof(average_precision_metrics_));
}

ObjectDetectionMetrics::~ObjectDetectionMetrics() {
  // @@protoc_insertion_point(destructor:tflite.evaluation.ObjectDetectionMetrics)
  SharedDtor();
}

void ObjectDetectionMetrics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete pre_processing_latency_;
  if (this != internal_default_instance()) delete inference_latency_;
  if (this != internal_default_instance()) delete inference_metrics_;
  if (this != internal_default_instance()) delete average_precision_metrics_;
}

void ObjectDetectionMetrics::ArenaDtor(void* object) {
  ObjectDetectionMetrics* _this = reinterpret_cast< ObjectDetectionMetrics* >(object);
  (void)_this;
}
void ObjectDetectionMetrics::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectDetectionMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDetectionMetrics::descriptor() {
  ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDetectionMetrics& ObjectDetectionMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::scc_info_ObjectDetectionMetrics.base);
  return *internal_default_instance();
}


void ObjectDetectionMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.evaluation.ObjectDetectionMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(pre_processing_latency_ != NULL);
      pre_processing_latency_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(inference_latency_ != NULL);
      inference_latency_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(inference_metrics_ != NULL);
      inference_metrics_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(average_precision_metrics_ != NULL);
      average_precision_metrics_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDetectionMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.evaluation.ObjectDetectionMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pre_processing_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inference_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inference_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics average_precision_metrics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_average_precision_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.evaluation.ObjectDetectionMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.evaluation.ObjectDetectionMetrics)
  return false;
#undef DO_
}

void ObjectDetectionMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.evaluation.ObjectDetectionMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pre_processing_latency(), output);
  }

  // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_inference_latency(), output);
  }

  // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_inference_metrics(), output);
  }

  // optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics average_precision_metrics = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_average_precision_metrics(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.evaluation.ObjectDetectionMetrics)
}

::google::protobuf::uint8* ObjectDetectionMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.evaluation.ObjectDetectionMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pre_processing_latency(), deterministic, target);
  }

  // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_inference_latency(), deterministic, target);
  }

  // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_inference_metrics(), deterministic, target);
  }

  // optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics average_precision_metrics = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_average_precision_metrics(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.evaluation.ObjectDetectionMetrics)
  return target;
}

size_t ObjectDetectionMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.evaluation.ObjectDetectionMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
    if (has_pre_processing_latency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pre_processing_latency_);
    }

    // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
    if (has_inference_latency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inference_latency_);
    }

    // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
    if (has_inference_metrics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inference_metrics_);
    }

    // optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics average_precision_metrics = 4;
    if (has_average_precision_metrics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *average_precision_metrics_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.evaluation.ObjectDetectionMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDetectionMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.evaluation.ObjectDetectionMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.evaluation.ObjectDetectionMetrics)
    MergeFrom(*source);
  }
}

void ObjectDetectionMetrics::MergeFrom(const ObjectDetectionMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.evaluation.ObjectDetectionMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pre_processing_latency()->::tflite::evaluation::LatencyMetrics::MergeFrom(from.pre_processing_latency());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_inference_latency()->::tflite::evaluation::LatencyMetrics::MergeFrom(from.inference_latency());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_inference_metrics()->::tflite::evaluation::TfliteInferenceMetrics::MergeFrom(from.inference_metrics());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_average_precision_metrics()->::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics::MergeFrom(from.average_precision_metrics());
    }
  }
}

void ObjectDetectionMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.evaluation.ObjectDetectionMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionMetrics::CopyFrom(const ObjectDetectionMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.evaluation.ObjectDetectionMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionMetrics::IsInitialized() const {
  return true;
}

void ObjectDetectionMetrics::Swap(ObjectDetectionMetrics* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectDetectionMetrics* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectDetectionMetrics::UnsafeArenaSwap(ObjectDetectionMetrics* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectDetectionMetrics::InternalSwap(ObjectDetectionMetrics* other) {
  using std::swap;
  swap(pre_processing_latency_, other->pre_processing_latency_);
  swap(inference_latency_, other->inference_latency_);
  swap(inference_metrics_, other->inference_metrics_);
  swap(average_precision_metrics_, other->average_precision_metrics_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDetectionMetrics::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace evaluation
}  // namespace tflite
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ProcessSpecification* Arena::CreateMaybeMessage< ::tflite::evaluation::ProcessSpecification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ProcessSpecification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::LatencyMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::LatencyMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::LatencyMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::AccuracyMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::AccuracyMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::AccuracyMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ProcessMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::ProcessMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ProcessMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ImagePreprocessingParams* Arena::CreateMaybeMessage< ::tflite::evaluation::ImagePreprocessingParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ImagePreprocessingParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::TfliteInferenceParams* Arena::CreateMaybeMessage< ::tflite::evaluation::TfliteInferenceParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::TfliteInferenceParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::TfliteInferenceMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::TfliteInferenceMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::TfliteInferenceMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::TopkAccuracyEvalParams* Arena::CreateMaybeMessage< ::tflite::evaluation::TopkAccuracyEvalParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::TopkAccuracyEvalParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::TopkAccuracyEvalMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::TopkAccuracyEvalMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::TopkAccuracyEvalMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ImageClassificationParams* Arena::CreateMaybeMessage< ::tflite::evaluation::ImageClassificationParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ImageClassificationParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ImageClassificationMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::ImageClassificationMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ImageClassificationMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::InferenceProfilerMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::InferenceProfilerMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::InferenceProfilerMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionResult_ObjectInstance* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionResult* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionGroundTruth* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionGroundTruth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionGroundTruth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionAveragePrecisionParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionAveragePrecisionParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionParams* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::evaluation::ObjectDetectionMetrics* Arena::CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionMetrics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tflite::evaluation::ObjectDetectionMetrics >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
