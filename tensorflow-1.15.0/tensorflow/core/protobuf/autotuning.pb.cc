// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/autotuning.proto

#include "tensorflow/core/protobuf/autotuning.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AutotuneResult_ConvKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AutotuneResult_GemmKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ComputeCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CudnnVersion;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AutotuneResult_FailureResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_AutotuneResult;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto
namespace tensorflow {
class CudnnVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CudnnVersion>
      _instance;
} _CudnnVersion_default_instance_;
class ComputeCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputeCapability>
      _instance;
} _ComputeCapability_default_instance_;
class AutotuneResult_FailureResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutotuneResult_FailureResult>
      _instance;
  const ::tensorflow::AutotuneResult_ConvKey* reference_conv_;
  const ::tensorflow::AutotuneResult_GemmKey* reference_gemm_;
} _AutotuneResult_FailureResult_default_instance_;
class AutotuneResult_ConvKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutotuneResult_ConvKey>
      _instance;
} _AutotuneResult_ConvKey_default_instance_;
class AutotuneResult_GemmKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutotuneResult_GemmKey>
      _instance;
} _AutotuneResult_GemmKey_default_instance_;
class AutotuneResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutotuneResult>
      _instance;
  const ::tensorflow::AutotuneResult_ConvKey* conv_;
  const ::tensorflow::AutotuneResult_GemmKey* gemm_;
} _AutotuneResult_default_instance_;
class AutotuningLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutotuningLog>
      _instance;
} _AutotuningLog_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto {
static void InitDefaultsCudnnVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CudnnVersion_default_instance_;
    new (ptr) ::tensorflow::CudnnVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CudnnVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CudnnVersion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCudnnVersion}, {}};

static void InitDefaultsComputeCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ComputeCapability_default_instance_;
    new (ptr) ::tensorflow::ComputeCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ComputeCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ComputeCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsComputeCapability}, {}};

static void InitDefaultsAutotuneResult_FailureResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_AutotuneResult_FailureResult_default_instance_;
    new (ptr) ::tensorflow::AutotuneResult_FailureResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::AutotuneResult_FailureResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AutotuneResult_FailureResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAutotuneResult_FailureResult}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_ConvKey.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_GemmKey.base,}};

static void InitDefaultsAutotuneResult_ConvKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_AutotuneResult_ConvKey_default_instance_;
    new (ptr) ::tensorflow::AutotuneResult_ConvKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::AutotuneResult_ConvKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AutotuneResult_ConvKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAutotuneResult_ConvKey}, {}};

static void InitDefaultsAutotuneResult_GemmKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_AutotuneResult_GemmKey_default_instance_;
    new (ptr) ::tensorflow::AutotuneResult_GemmKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::AutotuneResult_GemmKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AutotuneResult_GemmKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAutotuneResult_GemmKey}, {}};

static void InitDefaultsAutotuneResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_AutotuneResult_default_instance_;
    new (ptr) ::tensorflow::AutotuneResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::AutotuneResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_AutotuneResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsAutotuneResult}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_FailureResult.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_ConvKey.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_GemmKey.base,}};

static void InitDefaultsAutotuningLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_AutotuningLog_default_instance_;
    new (ptr) ::tensorflow::AutotuningLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::AutotuningLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_AutotuningLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsAutotuningLog}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_CudnnVersion.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_ComputeCapability.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CudnnVersion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComputeCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutotuneResult_FailureResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutotuneResult_ConvKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutotuneResult_GemmKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutotuneResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutotuningLog.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CudnnVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CudnnVersion, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CudnnVersion, minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CudnnVersion, patch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ComputeCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ComputeCapability, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ComputeCapability, minor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_FailureResult, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_FailureResult, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_FailureResult, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_FailureResult, msg_),
  offsetof(::tensorflow::AutotuneResult_FailureResultDefaultTypeInternal, reference_conv_),
  offsetof(::tensorflow::AutotuneResult_FailureResultDefaultTypeInternal, reference_gemm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_FailureResult, buffer_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_FailureResult, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_ConvKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_ConvKey, algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_ConvKey, tensor_ops_enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_GemmKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult_GemmKey, algorithm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult, scratch_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult, run_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult, failure_),
  offsetof(::tensorflow::AutotuneResultDefaultTypeInternal, conv_),
  offsetof(::tensorflow::AutotuneResultDefaultTypeInternal, gemm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneResult, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuningLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuningLog, instr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuningLog, results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuningLog, cudnn_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuningLog, compute_capability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuningLog, device_pci_bus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuningLog, blas_version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::CudnnVersion)},
  { 8, -1, sizeof(::tensorflow::ComputeCapability)},
  { 15, -1, sizeof(::tensorflow::AutotuneResult_FailureResult)},
  { 26, -1, sizeof(::tensorflow::AutotuneResult_ConvKey)},
  { 33, -1, sizeof(::tensorflow::AutotuneResult_GemmKey)},
  { 39, -1, sizeof(::tensorflow::AutotuneResult)},
  { 50, -1, sizeof(::tensorflow::AutotuningLog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CudnnVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ComputeCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_AutotuneResult_FailureResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_AutotuneResult_ConvKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_AutotuneResult_GemmKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_AutotuneResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_AutotuningLog_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/protobuf/autotuning.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)tensorflow/core/protobuf/autotuning.pr"
      "oto\022\ntensorflow\032\031google/protobuf/any.pro"
      "to\032\036google/protobuf/duration.proto\";\n\014Cu"
      "dnnVersion\022\r\n\005major\030\001 \001(\005\022\r\n\005minor\030\002 \001(\005"
      "\022\r\n\005patch\030\003 \001(\005\"1\n\021ComputeCapability\022\r\n\005"
      "major\030\001 \001(\005\022\r\n\005minor\030\002 \001(\005\"\212\005\n\016AutotuneR"
      "esult\022\025\n\rscratch_bytes\030\010 \001(\003\022+\n\010run_time"
      "\030\t \001(\0132\031.google.protobuf.Duration\0229\n\007fai"
      "lure\030\007 \001(\0132(.tensorflow.AutotuneResult.F"
      "ailureResult\0222\n\004conv\030\005 \001(\0132\".tensorflow."
      "AutotuneResult.ConvKeyH\000\0222\n\004gemm\030\006 \001(\0132\""
      ".tensorflow.AutotuneResult.GemmKeyH\000\032\355\001\n"
      "\rFailureResult\0224\n\004kind\030\001 \001(\0162&.tensorflo"
      "w.AutotuneResult.FailureKind\022\013\n\003msg\030\002 \001("
      "\t\022<\n\016reference_conv\030\013 \001(\0132\".tensorflow.A"
      "utotuneResult.ConvKeyH\000\022<\n\016reference_gem"
      "m\030\014 \001(\0132\".tensorflow.AutotuneResult.Gemm"
      "KeyH\000\022\026\n\016buffer_address\030\r \001(\003B\005\n\003key\0328\n\007"
      "ConvKey\022\021\n\talgorithm\030\001 \001(\003\022\032\n\022tensor_ops"
      "_enabled\030\002 \001(\010\032\034\n\007GemmKey\022\021\n\talgorithm\030\001"
      " \001(\003\"B\n\013FailureKind\022\013\n\007UNKNOWN\020\000\022\024\n\020REDZ"
      "ONE_MODIFIED\020\001\022\020\n\014WRONG_RESULT\020\002B\005\n\003key\""
      "\376\001\n\rAutotuningLog\022#\n\005instr\030\001 \001(\0132\024.googl"
      "e.protobuf.Any\022+\n\007results\030\002 \003(\0132\032.tensor"
      "flow.AutotuneResult\022/\n\rcudnn_version\030\003 \001"
      "(\0132\030.tensorflow.CudnnVersion\0229\n\022compute_"
      "capability\030\004 \001(\0132\035.tensorflow.ComputeCap"
      "ability\022\031\n\021device_pci_bus_id\030\005 \001(\t\022\024\n\014bl"
      "as_version\030\006 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1144);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/autotuning.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* AutotuneResult_FailureKind_descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_enum_descriptors[0];
}
bool AutotuneResult_FailureKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AutotuneResult_FailureKind AutotuneResult::UNKNOWN;
const AutotuneResult_FailureKind AutotuneResult::REDZONE_MODIFIED;
const AutotuneResult_FailureKind AutotuneResult::WRONG_RESULT;
const AutotuneResult_FailureKind AutotuneResult::FailureKind_MIN;
const AutotuneResult_FailureKind AutotuneResult::FailureKind_MAX;
const int AutotuneResult::FailureKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CudnnVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CudnnVersion::kMajorFieldNumber;
const int CudnnVersion::kMinorFieldNumber;
const int CudnnVersion::kPatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CudnnVersion::CudnnVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_CudnnVersion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CudnnVersion)
}
CudnnVersion::CudnnVersion(const CudnnVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CudnnVersion)
}

void CudnnVersion::SharedCtor() {
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
}

CudnnVersion::~CudnnVersion() {
  // @@protoc_insertion_point(destructor:tensorflow.CudnnVersion)
  SharedDtor();
}

void CudnnVersion::SharedDtor() {
}

void CudnnVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CudnnVersion::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CudnnVersion& CudnnVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_CudnnVersion.base);
  return *internal_default_instance();
}


void CudnnVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CudnnVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  _internal_metadata_.Clear();
}

bool CudnnVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CudnnVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 patch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CudnnVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CudnnVersion)
  return false;
#undef DO_
}

void CudnnVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CudnnVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->major(), output);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minor(), output);
  }

  // int32 patch = 3;
  if (this->patch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->patch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CudnnVersion)
}

::google::protobuf::uint8* CudnnVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CudnnVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->major(), target);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minor(), target);
  }

  // int32 patch = 3;
  if (this->patch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->patch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CudnnVersion)
  return target;
}

size_t CudnnVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CudnnVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 major = 1;
  if (this->major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->major());
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minor());
  }

  // int32 patch = 3;
  if (this->patch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->patch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudnnVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CudnnVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const CudnnVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CudnnVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CudnnVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CudnnVersion)
    MergeFrom(*source);
  }
}

void CudnnVersion::MergeFrom(const CudnnVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CudnnVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.major() != 0) {
    set_major(from.major());
  }
  if (from.minor() != 0) {
    set_minor(from.minor());
  }
  if (from.patch() != 0) {
    set_patch(from.patch());
  }
}

void CudnnVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CudnnVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudnnVersion::CopyFrom(const CudnnVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CudnnVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudnnVersion::IsInitialized() const {
  return true;
}

void CudnnVersion::Swap(CudnnVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CudnnVersion::InternalSwap(CudnnVersion* other) {
  using std::swap;
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  swap(patch_, other->patch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CudnnVersion::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComputeCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputeCapability::kMajorFieldNumber;
const int ComputeCapability::kMinorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputeCapability::ComputeCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_ComputeCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ComputeCapability)
}
ComputeCapability::ComputeCapability(const ComputeCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&minor_) -
    reinterpret_cast<char*>(&major_)) + sizeof(minor_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ComputeCapability)
}

void ComputeCapability::SharedCtor() {
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_) -
      reinterpret_cast<char*>(&major_)) + sizeof(minor_));
}

ComputeCapability::~ComputeCapability() {
  // @@protoc_insertion_point(destructor:tensorflow.ComputeCapability)
  SharedDtor();
}

void ComputeCapability::SharedDtor() {
}

void ComputeCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComputeCapability::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputeCapability& ComputeCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_ComputeCapability.base);
  return *internal_default_instance();
}


void ComputeCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ComputeCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_) -
      reinterpret_cast<char*>(&major_)) + sizeof(minor_));
  _internal_metadata_.Clear();
}

bool ComputeCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ComputeCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ComputeCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ComputeCapability)
  return false;
#undef DO_
}

void ComputeCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ComputeCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->major(), output);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ComputeCapability)
}

::google::protobuf::uint8* ComputeCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ComputeCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->major(), target);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ComputeCapability)
  return target;
}

size_t ComputeCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ComputeCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 major = 1;
  if (this->major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->major());
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputeCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ComputeCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputeCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputeCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ComputeCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ComputeCapability)
    MergeFrom(*source);
  }
}

void ComputeCapability::MergeFrom(const ComputeCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ComputeCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.major() != 0) {
    set_major(from.major());
  }
  if (from.minor() != 0) {
    set_minor(from.minor());
  }
}

void ComputeCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ComputeCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputeCapability::CopyFrom(const ComputeCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ComputeCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputeCapability::IsInitialized() const {
  return true;
}

void ComputeCapability::Swap(ComputeCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputeCapability::InternalSwap(ComputeCapability* other) {
  using std::swap;
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComputeCapability::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutotuneResult_FailureResult::InitAsDefaultInstance() {
  ::tensorflow::_AutotuneResult_FailureResult_default_instance_.reference_conv_ = const_cast< ::tensorflow::AutotuneResult_ConvKey*>(
      ::tensorflow::AutotuneResult_ConvKey::internal_default_instance());
  ::tensorflow::_AutotuneResult_FailureResult_default_instance_.reference_gemm_ = const_cast< ::tensorflow::AutotuneResult_GemmKey*>(
      ::tensorflow::AutotuneResult_GemmKey::internal_default_instance());
}
void AutotuneResult_FailureResult::set_allocated_reference_conv(::tensorflow::AutotuneResult_ConvKey* reference_conv) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_key();
  if (reference_conv) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference_conv = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference_conv, submessage_arena);
    }
    set_has_reference_conv();
    key_.reference_conv_ = reference_conv;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.AutotuneResult.FailureResult.reference_conv)
}
void AutotuneResult_FailureResult::set_allocated_reference_gemm(::tensorflow::AutotuneResult_GemmKey* reference_gemm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_key();
  if (reference_gemm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference_gemm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference_gemm, submessage_arena);
    }
    set_has_reference_gemm();
    key_.reference_gemm_ = reference_gemm;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.AutotuneResult.FailureResult.reference_gemm)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutotuneResult_FailureResult::kKindFieldNumber;
const int AutotuneResult_FailureResult::kMsgFieldNumber;
const int AutotuneResult_FailureResult::kReferenceConvFieldNumber;
const int AutotuneResult_FailureResult::kReferenceGemmFieldNumber;
const int AutotuneResult_FailureResult::kBufferAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutotuneResult_FailureResult::AutotuneResult_FailureResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_FailureResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.AutotuneResult.FailureResult)
}
AutotuneResult_FailureResult::AutotuneResult_FailureResult(const AutotuneResult_FailureResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&kind_, &from.kind_,
    static_cast<size_t>(reinterpret_cast<char*>(&buffer_address_) -
    reinterpret_cast<char*>(&kind_)) + sizeof(buffer_address_));
  clear_has_key();
  switch (from.key_case()) {
    case kReferenceConv: {
      mutable_reference_conv()->::tensorflow::AutotuneResult_ConvKey::MergeFrom(from.reference_conv());
      break;
    }
    case kReferenceGemm: {
      mutable_reference_gemm()->::tensorflow::AutotuneResult_GemmKey::MergeFrom(from.reference_gemm());
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.AutotuneResult.FailureResult)
}

void AutotuneResult_FailureResult::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_address_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(buffer_address_));
  clear_has_key();
}

AutotuneResult_FailureResult::~AutotuneResult_FailureResult() {
  // @@protoc_insertion_point(destructor:tensorflow.AutotuneResult.FailureResult)
  SharedDtor();
}

void AutotuneResult_FailureResult::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_key()) {
    clear_key();
  }
}

void AutotuneResult_FailureResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutotuneResult_FailureResult::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutotuneResult_FailureResult& AutotuneResult_FailureResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_FailureResult.base);
  return *internal_default_instance();
}


void AutotuneResult_FailureResult::clear_key() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.AutotuneResult.FailureResult)
  switch (key_case()) {
    case kReferenceConv: {
      delete key_.reference_conv_;
      break;
    }
    case kReferenceGemm: {
      delete key_.reference_gemm_;
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KEY_NOT_SET;
}


void AutotuneResult_FailureResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AutotuneResult.FailureResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_address_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(buffer_address_));
  clear_key();
  _internal_metadata_.Clear();
}

bool AutotuneResult_FailureResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.AutotuneResult.FailureResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.AutotuneResult.FailureKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::tensorflow::AutotuneResult_FailureKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.AutotuneResult.FailureResult.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.AutotuneResult.ConvKey reference_conv = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference_conv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.AutotuneResult.GemmKey reference_gemm = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference_gemm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 buffer_address = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buffer_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.AutotuneResult.FailureResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.AutotuneResult.FailureResult)
  return false;
#undef DO_
}

void AutotuneResult_FailureResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.AutotuneResult.FailureResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.AutotuneResult.FailureKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.AutotuneResult.FailureResult.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // .tensorflow.AutotuneResult.ConvKey reference_conv = 11;
  if (has_reference_conv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_reference_conv(), output);
  }

  // .tensorflow.AutotuneResult.GemmKey reference_gemm = 12;
  if (has_reference_gemm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_reference_gemm(), output);
  }

  // int64 buffer_address = 13;
  if (this->buffer_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->buffer_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.AutotuneResult.FailureResult)
}

::google::protobuf::uint8* AutotuneResult_FailureResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AutotuneResult.FailureResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.AutotuneResult.FailureKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.AutotuneResult.FailureResult.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // .tensorflow.AutotuneResult.ConvKey reference_conv = 11;
  if (has_reference_conv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_reference_conv(), deterministic, target);
  }

  // .tensorflow.AutotuneResult.GemmKey reference_gemm = 12;
  if (has_reference_gemm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_reference_gemm(), deterministic, target);
  }

  // int64 buffer_address = 13;
  if (this->buffer_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->buffer_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AutotuneResult.FailureResult)
  return target;
}

size_t AutotuneResult_FailureResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.AutotuneResult.FailureResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .tensorflow.AutotuneResult.FailureKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  // int64 buffer_address = 13;
  if (this->buffer_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->buffer_address());
  }

  switch (key_case()) {
    // .tensorflow.AutotuneResult.ConvKey reference_conv = 11;
    case kReferenceConv: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *key_.reference_conv_);
      break;
    }
    // .tensorflow.AutotuneResult.GemmKey reference_gemm = 12;
    case kReferenceGemm: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *key_.reference_gemm_);
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutotuneResult_FailureResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.AutotuneResult.FailureResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AutotuneResult_FailureResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutotuneResult_FailureResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.AutotuneResult.FailureResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.AutotuneResult.FailureResult)
    MergeFrom(*source);
  }
}

void AutotuneResult_FailureResult::MergeFrom(const AutotuneResult_FailureResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AutotuneResult.FailureResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.buffer_address() != 0) {
    set_buffer_address(from.buffer_address());
  }
  switch (from.key_case()) {
    case kReferenceConv: {
      mutable_reference_conv()->::tensorflow::AutotuneResult_ConvKey::MergeFrom(from.reference_conv());
      break;
    }
    case kReferenceGemm: {
      mutable_reference_gemm()->::tensorflow::AutotuneResult_GemmKey::MergeFrom(from.reference_gemm());
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
}

void AutotuneResult_FailureResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.AutotuneResult.FailureResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutotuneResult_FailureResult::CopyFrom(const AutotuneResult_FailureResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AutotuneResult.FailureResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutotuneResult_FailureResult::IsInitialized() const {
  return true;
}

void AutotuneResult_FailureResult::Swap(AutotuneResult_FailureResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutotuneResult_FailureResult::InternalSwap(AutotuneResult_FailureResult* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(kind_, other->kind_);
  swap(buffer_address_, other->buffer_address_);
  swap(key_, other->key_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutotuneResult_FailureResult::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutotuneResult_ConvKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutotuneResult_ConvKey::kAlgorithmFieldNumber;
const int AutotuneResult_ConvKey::kTensorOpsEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutotuneResult_ConvKey::AutotuneResult_ConvKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_ConvKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.AutotuneResult.ConvKey)
}
AutotuneResult_ConvKey::AutotuneResult_ConvKey(const AutotuneResult_ConvKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&algorithm_, &from.algorithm_,
    static_cast<size_t>(reinterpret_cast<char*>(&tensor_ops_enabled_) -
    reinterpret_cast<char*>(&algorithm_)) + sizeof(tensor_ops_enabled_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.AutotuneResult.ConvKey)
}

void AutotuneResult_ConvKey::SharedCtor() {
  ::memset(&algorithm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tensor_ops_enabled_) -
      reinterpret_cast<char*>(&algorithm_)) + sizeof(tensor_ops_enabled_));
}

AutotuneResult_ConvKey::~AutotuneResult_ConvKey() {
  // @@protoc_insertion_point(destructor:tensorflow.AutotuneResult.ConvKey)
  SharedDtor();
}

void AutotuneResult_ConvKey::SharedDtor() {
}

void AutotuneResult_ConvKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutotuneResult_ConvKey::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutotuneResult_ConvKey& AutotuneResult_ConvKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_ConvKey.base);
  return *internal_default_instance();
}


void AutotuneResult_ConvKey::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AutotuneResult.ConvKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&algorithm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tensor_ops_enabled_) -
      reinterpret_cast<char*>(&algorithm_)) + sizeof(tensor_ops_enabled_));
  _internal_metadata_.Clear();
}

bool AutotuneResult_ConvKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.AutotuneResult.ConvKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 algorithm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &algorithm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tensor_ops_enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tensor_ops_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.AutotuneResult.ConvKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.AutotuneResult.ConvKey)
  return false;
#undef DO_
}

void AutotuneResult_ConvKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.AutotuneResult.ConvKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 algorithm = 1;
  if (this->algorithm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->algorithm(), output);
  }

  // bool tensor_ops_enabled = 2;
  if (this->tensor_ops_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->tensor_ops_enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.AutotuneResult.ConvKey)
}

::google::protobuf::uint8* AutotuneResult_ConvKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AutotuneResult.ConvKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 algorithm = 1;
  if (this->algorithm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->algorithm(), target);
  }

  // bool tensor_ops_enabled = 2;
  if (this->tensor_ops_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->tensor_ops_enabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AutotuneResult.ConvKey)
  return target;
}

size_t AutotuneResult_ConvKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.AutotuneResult.ConvKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 algorithm = 1;
  if (this->algorithm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->algorithm());
  }

  // bool tensor_ops_enabled = 2;
  if (this->tensor_ops_enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutotuneResult_ConvKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.AutotuneResult.ConvKey)
  GOOGLE_DCHECK_NE(&from, this);
  const AutotuneResult_ConvKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutotuneResult_ConvKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.AutotuneResult.ConvKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.AutotuneResult.ConvKey)
    MergeFrom(*source);
  }
}

void AutotuneResult_ConvKey::MergeFrom(const AutotuneResult_ConvKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AutotuneResult.ConvKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.algorithm() != 0) {
    set_algorithm(from.algorithm());
  }
  if (from.tensor_ops_enabled() != 0) {
    set_tensor_ops_enabled(from.tensor_ops_enabled());
  }
}

void AutotuneResult_ConvKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.AutotuneResult.ConvKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutotuneResult_ConvKey::CopyFrom(const AutotuneResult_ConvKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AutotuneResult.ConvKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutotuneResult_ConvKey::IsInitialized() const {
  return true;
}

void AutotuneResult_ConvKey::Swap(AutotuneResult_ConvKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutotuneResult_ConvKey::InternalSwap(AutotuneResult_ConvKey* other) {
  using std::swap;
  swap(algorithm_, other->algorithm_);
  swap(tensor_ops_enabled_, other->tensor_ops_enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutotuneResult_ConvKey::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutotuneResult_GemmKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutotuneResult_GemmKey::kAlgorithmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutotuneResult_GemmKey::AutotuneResult_GemmKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_GemmKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.AutotuneResult.GemmKey)
}
AutotuneResult_GemmKey::AutotuneResult_GemmKey(const AutotuneResult_GemmKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  algorithm_ = from.algorithm_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.AutotuneResult.GemmKey)
}

void AutotuneResult_GemmKey::SharedCtor() {
  algorithm_ = GOOGLE_LONGLONG(0);
}

AutotuneResult_GemmKey::~AutotuneResult_GemmKey() {
  // @@protoc_insertion_point(destructor:tensorflow.AutotuneResult.GemmKey)
  SharedDtor();
}

void AutotuneResult_GemmKey::SharedDtor() {
}

void AutotuneResult_GemmKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutotuneResult_GemmKey::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutotuneResult_GemmKey& AutotuneResult_GemmKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult_GemmKey.base);
  return *internal_default_instance();
}


void AutotuneResult_GemmKey::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AutotuneResult.GemmKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  algorithm_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AutotuneResult_GemmKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.AutotuneResult.GemmKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 algorithm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &algorithm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.AutotuneResult.GemmKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.AutotuneResult.GemmKey)
  return false;
#undef DO_
}

void AutotuneResult_GemmKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.AutotuneResult.GemmKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 algorithm = 1;
  if (this->algorithm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->algorithm(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.AutotuneResult.GemmKey)
}

::google::protobuf::uint8* AutotuneResult_GemmKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AutotuneResult.GemmKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 algorithm = 1;
  if (this->algorithm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->algorithm(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AutotuneResult.GemmKey)
  return target;
}

size_t AutotuneResult_GemmKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.AutotuneResult.GemmKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 algorithm = 1;
  if (this->algorithm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->algorithm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutotuneResult_GemmKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.AutotuneResult.GemmKey)
  GOOGLE_DCHECK_NE(&from, this);
  const AutotuneResult_GemmKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutotuneResult_GemmKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.AutotuneResult.GemmKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.AutotuneResult.GemmKey)
    MergeFrom(*source);
  }
}

void AutotuneResult_GemmKey::MergeFrom(const AutotuneResult_GemmKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AutotuneResult.GemmKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.algorithm() != 0) {
    set_algorithm(from.algorithm());
  }
}

void AutotuneResult_GemmKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.AutotuneResult.GemmKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutotuneResult_GemmKey::CopyFrom(const AutotuneResult_GemmKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AutotuneResult.GemmKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutotuneResult_GemmKey::IsInitialized() const {
  return true;
}

void AutotuneResult_GemmKey::Swap(AutotuneResult_GemmKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutotuneResult_GemmKey::InternalSwap(AutotuneResult_GemmKey* other) {
  using std::swap;
  swap(algorithm_, other->algorithm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutotuneResult_GemmKey::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutotuneResult::InitAsDefaultInstance() {
  ::tensorflow::_AutotuneResult_default_instance_._instance.get_mutable()->run_time_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::tensorflow::_AutotuneResult_default_instance_._instance.get_mutable()->failure_ = const_cast< ::tensorflow::AutotuneResult_FailureResult*>(
      ::tensorflow::AutotuneResult_FailureResult::internal_default_instance());
  ::tensorflow::_AutotuneResult_default_instance_.conv_ = const_cast< ::tensorflow::AutotuneResult_ConvKey*>(
      ::tensorflow::AutotuneResult_ConvKey::internal_default_instance());
  ::tensorflow::_AutotuneResult_default_instance_.gemm_ = const_cast< ::tensorflow::AutotuneResult_GemmKey*>(
      ::tensorflow::AutotuneResult_GemmKey::internal_default_instance());
}
void AutotuneResult::clear_run_time() {
  if (GetArenaNoVirtual() == NULL && run_time_ != NULL) {
    delete run_time_;
  }
  run_time_ = NULL;
}
void AutotuneResult::set_allocated_conv(::tensorflow::AutotuneResult_ConvKey* conv) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_key();
  if (conv) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      conv = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conv, submessage_arena);
    }
    set_has_conv();
    key_.conv_ = conv;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.AutotuneResult.conv)
}
void AutotuneResult::set_allocated_gemm(::tensorflow::AutotuneResult_GemmKey* gemm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_key();
  if (gemm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gemm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gemm, submessage_arena);
    }
    set_has_gemm();
    key_.gemm_ = gemm;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.AutotuneResult.gemm)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutotuneResult::kScratchBytesFieldNumber;
const int AutotuneResult::kRunTimeFieldNumber;
const int AutotuneResult::kFailureFieldNumber;
const int AutotuneResult::kConvFieldNumber;
const int AutotuneResult::kGemmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutotuneResult::AutotuneResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.AutotuneResult)
}
AutotuneResult::AutotuneResult(const AutotuneResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_failure()) {
    failure_ = new ::tensorflow::AutotuneResult_FailureResult(*from.failure_);
  } else {
    failure_ = NULL;
  }
  if (from.has_run_time()) {
    run_time_ = new ::google::protobuf::Duration(*from.run_time_);
  } else {
    run_time_ = NULL;
  }
  scratch_bytes_ = from.scratch_bytes_;
  clear_has_key();
  switch (from.key_case()) {
    case kConv: {
      mutable_conv()->::tensorflow::AutotuneResult_ConvKey::MergeFrom(from.conv());
      break;
    }
    case kGemm: {
      mutable_gemm()->::tensorflow::AutotuneResult_GemmKey::MergeFrom(from.gemm());
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.AutotuneResult)
}

void AutotuneResult::SharedCtor() {
  ::memset(&failure_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scratch_bytes_) -
      reinterpret_cast<char*>(&failure_)) + sizeof(scratch_bytes_));
  clear_has_key();
}

AutotuneResult::~AutotuneResult() {
  // @@protoc_insertion_point(destructor:tensorflow.AutotuneResult)
  SharedDtor();
}

void AutotuneResult::SharedDtor() {
  if (this != internal_default_instance()) delete failure_;
  if (this != internal_default_instance()) delete run_time_;
  if (has_key()) {
    clear_key();
  }
}

void AutotuneResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutotuneResult::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutotuneResult& AutotuneResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuneResult.base);
  return *internal_default_instance();
}


void AutotuneResult::clear_key() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.AutotuneResult)
  switch (key_case()) {
    case kConv: {
      delete key_.conv_;
      break;
    }
    case kGemm: {
      delete key_.gemm_;
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KEY_NOT_SET;
}


void AutotuneResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AutotuneResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && failure_ != NULL) {
    delete failure_;
  }
  failure_ = NULL;
  if (GetArenaNoVirtual() == NULL && run_time_ != NULL) {
    delete run_time_;
  }
  run_time_ = NULL;
  scratch_bytes_ = GOOGLE_LONGLONG(0);
  clear_key();
  _internal_metadata_.Clear();
}

bool AutotuneResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.AutotuneResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.AutotuneResult.ConvKey conv = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.AutotuneResult.GemmKey gemm = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gemm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.AutotuneResult.FailureResult failure = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 scratch_bytes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &scratch_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration run_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.AutotuneResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.AutotuneResult)
  return false;
#undef DO_
}

void AutotuneResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.AutotuneResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.AutotuneResult.ConvKey conv = 5;
  if (has_conv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_conv(), output);
  }

  // .tensorflow.AutotuneResult.GemmKey gemm = 6;
  if (has_gemm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_gemm(), output);
  }

  // .tensorflow.AutotuneResult.FailureResult failure = 7;
  if (this->has_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_failure(), output);
  }

  // int64 scratch_bytes = 8;
  if (this->scratch_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->scratch_bytes(), output);
  }

  // .google.protobuf.Duration run_time = 9;
  if (this->has_run_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_run_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.AutotuneResult)
}

::google::protobuf::uint8* AutotuneResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AutotuneResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.AutotuneResult.ConvKey conv = 5;
  if (has_conv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_conv(), deterministic, target);
  }

  // .tensorflow.AutotuneResult.GemmKey gemm = 6;
  if (has_gemm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_gemm(), deterministic, target);
  }

  // .tensorflow.AutotuneResult.FailureResult failure = 7;
  if (this->has_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_failure(), deterministic, target);
  }

  // int64 scratch_bytes = 8;
  if (this->scratch_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->scratch_bytes(), target);
  }

  // .google.protobuf.Duration run_time = 9;
  if (this->has_run_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_run_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AutotuneResult)
  return target;
}

size_t AutotuneResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.AutotuneResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.AutotuneResult.FailureResult failure = 7;
  if (this->has_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  // .google.protobuf.Duration run_time = 9;
  if (this->has_run_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_time_);
  }

  // int64 scratch_bytes = 8;
  if (this->scratch_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->scratch_bytes());
  }

  switch (key_case()) {
    // .tensorflow.AutotuneResult.ConvKey conv = 5;
    case kConv: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *key_.conv_);
      break;
    }
    // .tensorflow.AutotuneResult.GemmKey gemm = 6;
    case kGemm: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *key_.gemm_);
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutotuneResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.AutotuneResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AutotuneResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutotuneResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.AutotuneResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.AutotuneResult)
    MergeFrom(*source);
  }
}

void AutotuneResult::MergeFrom(const AutotuneResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AutotuneResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_failure()) {
    mutable_failure()->::tensorflow::AutotuneResult_FailureResult::MergeFrom(from.failure());
  }
  if (from.has_run_time()) {
    mutable_run_time()->::google::protobuf::Duration::MergeFrom(from.run_time());
  }
  if (from.scratch_bytes() != 0) {
    set_scratch_bytes(from.scratch_bytes());
  }
  switch (from.key_case()) {
    case kConv: {
      mutable_conv()->::tensorflow::AutotuneResult_ConvKey::MergeFrom(from.conv());
      break;
    }
    case kGemm: {
      mutable_gemm()->::tensorflow::AutotuneResult_GemmKey::MergeFrom(from.gemm());
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
}

void AutotuneResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.AutotuneResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutotuneResult::CopyFrom(const AutotuneResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AutotuneResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutotuneResult::IsInitialized() const {
  return true;
}

void AutotuneResult::Swap(AutotuneResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutotuneResult::InternalSwap(AutotuneResult* other) {
  using std::swap;
  swap(failure_, other->failure_);
  swap(run_time_, other->run_time_);
  swap(scratch_bytes_, other->scratch_bytes_);
  swap(key_, other->key_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutotuneResult::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutotuningLog::InitAsDefaultInstance() {
  ::tensorflow::_AutotuningLog_default_instance_._instance.get_mutable()->instr_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::tensorflow::_AutotuningLog_default_instance_._instance.get_mutable()->cudnn_version_ = const_cast< ::tensorflow::CudnnVersion*>(
      ::tensorflow::CudnnVersion::internal_default_instance());
  ::tensorflow::_AutotuningLog_default_instance_._instance.get_mutable()->compute_capability_ = const_cast< ::tensorflow::ComputeCapability*>(
      ::tensorflow::ComputeCapability::internal_default_instance());
}
void AutotuningLog::clear_instr() {
  if (GetArenaNoVirtual() == NULL && instr_ != NULL) {
    delete instr_;
  }
  instr_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutotuningLog::kInstrFieldNumber;
const int AutotuningLog::kResultsFieldNumber;
const int AutotuningLog::kCudnnVersionFieldNumber;
const int AutotuningLog::kComputeCapabilityFieldNumber;
const int AutotuningLog::kDevicePciBusIdFieldNumber;
const int AutotuningLog::kBlasVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutotuningLog::AutotuningLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuningLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.AutotuningLog)
}
AutotuningLog::AutotuningLog(const AutotuningLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_pci_bus_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_pci_bus_id().size() > 0) {
    device_pci_bus_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_pci_bus_id_);
  }
  blas_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.blas_version().size() > 0) {
    blas_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blas_version_);
  }
  if (from.has_instr()) {
    instr_ = new ::google::protobuf::Any(*from.instr_);
  } else {
    instr_ = NULL;
  }
  if (from.has_cudnn_version()) {
    cudnn_version_ = new ::tensorflow::CudnnVersion(*from.cudnn_version_);
  } else {
    cudnn_version_ = NULL;
  }
  if (from.has_compute_capability()) {
    compute_capability_ = new ::tensorflow::ComputeCapability(*from.compute_capability_);
  } else {
    compute_capability_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.AutotuningLog)
}

void AutotuningLog::SharedCtor() {
  device_pci_bus_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blas_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compute_capability_) -
      reinterpret_cast<char*>(&instr_)) + sizeof(compute_capability_));
}

AutotuningLog::~AutotuningLog() {
  // @@protoc_insertion_point(destructor:tensorflow.AutotuningLog)
  SharedDtor();
}

void AutotuningLog::SharedDtor() {
  device_pci_bus_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blas_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete instr_;
  if (this != internal_default_instance()) delete cudnn_version_;
  if (this != internal_default_instance()) delete compute_capability_;
}

void AutotuningLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutotuningLog::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutotuningLog& AutotuningLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::scc_info_AutotuningLog.base);
  return *internal_default_instance();
}


void AutotuningLog::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AutotuningLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  device_pci_bus_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blas_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && instr_ != NULL) {
    delete instr_;
  }
  instr_ = NULL;
  if (GetArenaNoVirtual() == NULL && cudnn_version_ != NULL) {
    delete cudnn_version_;
  }
  cudnn_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && compute_capability_ != NULL) {
    delete compute_capability_;
  }
  compute_capability_ = NULL;
  _internal_metadata_.Clear();
}

bool AutotuningLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.AutotuningLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any instr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.AutotuneResult results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CudnnVersion cudnn_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cudnn_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ComputeCapability compute_capability = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_compute_capability()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_pci_bus_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_pci_bus_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_pci_bus_id().data(), static_cast<int>(this->device_pci_bus_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.AutotuningLog.device_pci_bus_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string blas_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blas_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->blas_version().data(), static_cast<int>(this->blas_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.AutotuningLog.blas_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.AutotuningLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.AutotuningLog)
  return false;
#undef DO_
}

void AutotuningLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.AutotuningLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any instr = 1;
  if (this->has_instr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_instr(), output);
  }

  // repeated .tensorflow.AutotuneResult results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->results(static_cast<int>(i)),
      output);
  }

  // .tensorflow.CudnnVersion cudnn_version = 3;
  if (this->has_cudnn_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cudnn_version(), output);
  }

  // .tensorflow.ComputeCapability compute_capability = 4;
  if (this->has_compute_capability()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_compute_capability(), output);
  }

  // string device_pci_bus_id = 5;
  if (this->device_pci_bus_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_pci_bus_id().data(), static_cast<int>(this->device_pci_bus_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.AutotuningLog.device_pci_bus_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device_pci_bus_id(), output);
  }

  // string blas_version = 6;
  if (this->blas_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->blas_version().data(), static_cast<int>(this->blas_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.AutotuningLog.blas_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->blas_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.AutotuningLog)
}

::google::protobuf::uint8* AutotuningLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AutotuningLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any instr = 1;
  if (this->has_instr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_instr(), deterministic, target);
  }

  // repeated .tensorflow.AutotuneResult results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->results(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.CudnnVersion cudnn_version = 3;
  if (this->has_cudnn_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cudnn_version(), deterministic, target);
  }

  // .tensorflow.ComputeCapability compute_capability = 4;
  if (this->has_compute_capability()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_compute_capability(), deterministic, target);
  }

  // string device_pci_bus_id = 5;
  if (this->device_pci_bus_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_pci_bus_id().data(), static_cast<int>(this->device_pci_bus_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.AutotuningLog.device_pci_bus_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device_pci_bus_id(), target);
  }

  // string blas_version = 6;
  if (this->blas_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->blas_version().data(), static_cast<int>(this->blas_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.AutotuningLog.blas_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->blas_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AutotuningLog)
  return target;
}

size_t AutotuningLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.AutotuningLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.AutotuneResult results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // string device_pci_bus_id = 5;
  if (this->device_pci_bus_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_pci_bus_id());
  }

  // string blas_version = 6;
  if (this->blas_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->blas_version());
  }

  // .google.protobuf.Any instr = 1;
  if (this->has_instr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *instr_);
  }

  // .tensorflow.CudnnVersion cudnn_version = 3;
  if (this->has_cudnn_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cudnn_version_);
  }

  // .tensorflow.ComputeCapability compute_capability = 4;
  if (this->has_compute_capability()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *compute_capability_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutotuningLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.AutotuningLog)
  GOOGLE_DCHECK_NE(&from, this);
  const AutotuningLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutotuningLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.AutotuningLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.AutotuningLog)
    MergeFrom(*source);
  }
}

void AutotuningLog::MergeFrom(const AutotuningLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AutotuningLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.device_pci_bus_id().size() > 0) {

    device_pci_bus_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_pci_bus_id_);
  }
  if (from.blas_version().size() > 0) {

    blas_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blas_version_);
  }
  if (from.has_instr()) {
    mutable_instr()->::google::protobuf::Any::MergeFrom(from.instr());
  }
  if (from.has_cudnn_version()) {
    mutable_cudnn_version()->::tensorflow::CudnnVersion::MergeFrom(from.cudnn_version());
  }
  if (from.has_compute_capability()) {
    mutable_compute_capability()->::tensorflow::ComputeCapability::MergeFrom(from.compute_capability());
  }
}

void AutotuningLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.AutotuningLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutotuningLog::CopyFrom(const AutotuningLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AutotuningLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutotuningLog::IsInitialized() const {
  return true;
}

void AutotuningLog::Swap(AutotuningLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutotuningLog::InternalSwap(AutotuningLog* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  device_pci_bus_id_.Swap(&other->device_pci_bus_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  blas_version_.Swap(&other->blas_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(instr_, other->instr_);
  swap(cudnn_version_, other->cudnn_version_);
  swap(compute_capability_, other->compute_capability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutotuningLog::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fautotuning_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CudnnVersion* Arena::CreateMaybeMessage< ::tensorflow::CudnnVersion >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::CudnnVersion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ComputeCapability* Arena::CreateMaybeMessage< ::tensorflow::ComputeCapability >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ComputeCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::AutotuneResult_FailureResult* Arena::CreateMaybeMessage< ::tensorflow::AutotuneResult_FailureResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::AutotuneResult_FailureResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::AutotuneResult_ConvKey* Arena::CreateMaybeMessage< ::tensorflow::AutotuneResult_ConvKey >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::AutotuneResult_ConvKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::AutotuneResult_GemmKey* Arena::CreateMaybeMessage< ::tensorflow::AutotuneResult_GemmKey >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::AutotuneResult_GemmKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::AutotuneResult* Arena::CreateMaybeMessage< ::tensorflow::AutotuneResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::AutotuneResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::AutotuningLog* Arena::CreateMaybeMessage< ::tensorflow::AutotuningLog >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::AutotuningLog >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
