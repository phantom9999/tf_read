// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/service/gpu/backend_configs.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fservice_2fgpu_2fbackend_5fconfigs_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fservice_2fgpu_2fbackend_5fconfigs_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/compiler/xla/xla_data.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fgpu_2fbackend_5fconfigs_2eproto 

namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fgpu_2fbackend_5fconfigs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fgpu_2fbackend_5fconfigs_2eproto
namespace xla {
namespace gpu {
class CudnnConvBackendConfig;
class CudnnConvBackendConfigDefaultTypeInternal;
extern CudnnConvBackendConfigDefaultTypeInternal _CudnnConvBackendConfig_default_instance_;
class GemmBackendConfig;
class GemmBackendConfigDefaultTypeInternal;
extern GemmBackendConfigDefaultTypeInternal _GemmBackendConfig_default_instance_;
}  // namespace gpu
}  // namespace xla
namespace google {
namespace protobuf {
template<> ::xla::gpu::CudnnConvBackendConfig* Arena::CreateMaybeMessage<::xla::gpu::CudnnConvBackendConfig>(Arena*);
template<> ::xla::gpu::GemmBackendConfig* Arena::CreateMaybeMessage<::xla::gpu::GemmBackendConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xla {
namespace gpu {

// ===================================================================

class CudnnConvBackendConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.gpu.CudnnConvBackendConfig) */ {
 public:
  CudnnConvBackendConfig();
  virtual ~CudnnConvBackendConfig();

  CudnnConvBackendConfig(const CudnnConvBackendConfig& from);

  inline CudnnConvBackendConfig& operator=(const CudnnConvBackendConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CudnnConvBackendConfig(CudnnConvBackendConfig&& from) noexcept
    : CudnnConvBackendConfig() {
    *this = ::std::move(from);
  }

  inline CudnnConvBackendConfig& operator=(CudnnConvBackendConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CudnnConvBackendConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CudnnConvBackendConfig* internal_default_instance() {
    return reinterpret_cast<const CudnnConvBackendConfig*>(
               &_CudnnConvBackendConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CudnnConvBackendConfig* other);
  friend void swap(CudnnConvBackendConfig& a, CudnnConvBackendConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CudnnConvBackendConfig* New() const final {
    return CreateMaybeMessage<CudnnConvBackendConfig>(NULL);
  }

  CudnnConvBackendConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CudnnConvBackendConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CudnnConvBackendConfig& from);
  void MergeFrom(const CudnnConvBackendConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CudnnConvBackendConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 algorithm = 1;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 1;
  ::google::protobuf::int64 algorithm() const;
  void set_algorithm(::google::protobuf::int64 value);

  // int64 activation_mode = 3;
  void clear_activation_mode();
  static const int kActivationModeFieldNumber = 3;
  ::google::protobuf::int64 activation_mode() const;
  void set_activation_mode(::google::protobuf::int64 value);

  // double conv_result_scale = 4;
  void clear_conv_result_scale();
  static const int kConvResultScaleFieldNumber = 4;
  double conv_result_scale() const;
  void set_conv_result_scale(double value);

  // double side_input_scale = 5;
  void clear_side_input_scale();
  static const int kSideInputScaleFieldNumber = 5;
  double side_input_scale() const;
  void set_side_input_scale(double value);

  // bool tensor_ops_enabled = 2;
  void clear_tensor_ops_enabled();
  static const int kTensorOpsEnabledFieldNumber = 2;
  bool tensor_ops_enabled() const;
  void set_tensor_ops_enabled(bool value);

  // @@protoc_insertion_point(class_scope:xla.gpu.CudnnConvBackendConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 algorithm_;
  ::google::protobuf::int64 activation_mode_;
  double conv_result_scale_;
  double side_input_scale_;
  bool tensor_ops_enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fgpu_2fbackend_5fconfigs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GemmBackendConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.gpu.GemmBackendConfig) */ {
 public:
  GemmBackendConfig();
  virtual ~GemmBackendConfig();

  GemmBackendConfig(const GemmBackendConfig& from);

  inline GemmBackendConfig& operator=(const GemmBackendConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GemmBackendConfig(GemmBackendConfig&& from) noexcept
    : GemmBackendConfig() {
    *this = ::std::move(from);
  }

  inline GemmBackendConfig& operator=(GemmBackendConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GemmBackendConfig& default_instance();

  enum AlgorithmCase {
    kSelectedAlgorithm = 1,
    ALGORITHM_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GemmBackendConfig* internal_default_instance() {
    return reinterpret_cast<const GemmBackendConfig*>(
               &_GemmBackendConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GemmBackendConfig* other);
  friend void swap(GemmBackendConfig& a, GemmBackendConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GemmBackendConfig* New() const final {
    return CreateMaybeMessage<GemmBackendConfig>(NULL);
  }

  GemmBackendConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GemmBackendConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GemmBackendConfig& from);
  void MergeFrom(const GemmBackendConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GemmBackendConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.DotDimensionNumbers dot_dimension_numbers = 7;
  bool has_dot_dimension_numbers() const;
  void clear_dot_dimension_numbers();
  static const int kDotDimensionNumbersFieldNumber = 7;
  private:
  const ::xla::DotDimensionNumbers& _internal_dot_dimension_numbers() const;
  public:
  const ::xla::DotDimensionNumbers& dot_dimension_numbers() const;
  ::xla::DotDimensionNumbers* release_dot_dimension_numbers();
  ::xla::DotDimensionNumbers* mutable_dot_dimension_numbers();
  void set_allocated_dot_dimension_numbers(::xla::DotDimensionNumbers* dot_dimension_numbers);

  // double alpha_real = 2;
  void clear_alpha_real();
  static const int kAlphaRealFieldNumber = 2;
  double alpha_real() const;
  void set_alpha_real(double value);

  // double beta = 3;
  void clear_beta();
  static const int kBetaFieldNumber = 3;
  double beta() const;
  void set_beta(double value);

  // int64 batch_size = 8;
  void clear_batch_size();
  static const int kBatchSizeFieldNumber = 8;
  ::google::protobuf::int64 batch_size() const;
  void set_batch_size(::google::protobuf::int64 value);

  // double alpha_imag = 9;
  void clear_alpha_imag();
  static const int kAlphaImagFieldNumber = 9;
  double alpha_imag() const;
  void set_alpha_imag(double value);

  // int64 selected_algorithm = 1;
  private:
  bool has_selected_algorithm() const;
  public:
  void clear_selected_algorithm();
  static const int kSelectedAlgorithmFieldNumber = 1;
  ::google::protobuf::int64 selected_algorithm() const;
  void set_selected_algorithm(::google::protobuf::int64 value);

  void clear_algorithm();
  AlgorithmCase algorithm_case() const;
  // @@protoc_insertion_point(class_scope:xla.gpu.GemmBackendConfig)
 private:
  void set_has_selected_algorithm();

  inline bool has_algorithm() const;
  inline void clear_has_algorithm();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::DotDimensionNumbers* dot_dimension_numbers_;
  double alpha_real_;
  double beta_;
  ::google::protobuf::int64 batch_size_;
  double alpha_imag_;
  union AlgorithmUnion {
    AlgorithmUnion() {}
    ::google::protobuf::int64 selected_algorithm_;
  } algorithm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fgpu_2fbackend_5fconfigs_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CudnnConvBackendConfig

// int64 algorithm = 1;
inline void CudnnConvBackendConfig::clear_algorithm() {
  algorithm_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CudnnConvBackendConfig::algorithm() const {
  // @@protoc_insertion_point(field_get:xla.gpu.CudnnConvBackendConfig.algorithm)
  return algorithm_;
}
inline void CudnnConvBackendConfig::set_algorithm(::google::protobuf::int64 value) {
  
  algorithm_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.CudnnConvBackendConfig.algorithm)
}

// bool tensor_ops_enabled = 2;
inline void CudnnConvBackendConfig::clear_tensor_ops_enabled() {
  tensor_ops_enabled_ = false;
}
inline bool CudnnConvBackendConfig::tensor_ops_enabled() const {
  // @@protoc_insertion_point(field_get:xla.gpu.CudnnConvBackendConfig.tensor_ops_enabled)
  return tensor_ops_enabled_;
}
inline void CudnnConvBackendConfig::set_tensor_ops_enabled(bool value) {
  
  tensor_ops_enabled_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.CudnnConvBackendConfig.tensor_ops_enabled)
}

// double conv_result_scale = 4;
inline void CudnnConvBackendConfig::clear_conv_result_scale() {
  conv_result_scale_ = 0;
}
inline double CudnnConvBackendConfig::conv_result_scale() const {
  // @@protoc_insertion_point(field_get:xla.gpu.CudnnConvBackendConfig.conv_result_scale)
  return conv_result_scale_;
}
inline void CudnnConvBackendConfig::set_conv_result_scale(double value) {
  
  conv_result_scale_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.CudnnConvBackendConfig.conv_result_scale)
}

// int64 activation_mode = 3;
inline void CudnnConvBackendConfig::clear_activation_mode() {
  activation_mode_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CudnnConvBackendConfig::activation_mode() const {
  // @@protoc_insertion_point(field_get:xla.gpu.CudnnConvBackendConfig.activation_mode)
  return activation_mode_;
}
inline void CudnnConvBackendConfig::set_activation_mode(::google::protobuf::int64 value) {
  
  activation_mode_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.CudnnConvBackendConfig.activation_mode)
}

// double side_input_scale = 5;
inline void CudnnConvBackendConfig::clear_side_input_scale() {
  side_input_scale_ = 0;
}
inline double CudnnConvBackendConfig::side_input_scale() const {
  // @@protoc_insertion_point(field_get:xla.gpu.CudnnConvBackendConfig.side_input_scale)
  return side_input_scale_;
}
inline void CudnnConvBackendConfig::set_side_input_scale(double value) {
  
  side_input_scale_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.CudnnConvBackendConfig.side_input_scale)
}

// -------------------------------------------------------------------

// GemmBackendConfig

// int64 selected_algorithm = 1;
inline bool GemmBackendConfig::has_selected_algorithm() const {
  return algorithm_case() == kSelectedAlgorithm;
}
inline void GemmBackendConfig::set_has_selected_algorithm() {
  _oneof_case_[0] = kSelectedAlgorithm;
}
inline void GemmBackendConfig::clear_selected_algorithm() {
  if (has_selected_algorithm()) {
    algorithm_.selected_algorithm_ = GOOGLE_LONGLONG(0);
    clear_has_algorithm();
  }
}
inline ::google::protobuf::int64 GemmBackendConfig::selected_algorithm() const {
  // @@protoc_insertion_point(field_get:xla.gpu.GemmBackendConfig.selected_algorithm)
  if (has_selected_algorithm()) {
    return algorithm_.selected_algorithm_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void GemmBackendConfig::set_selected_algorithm(::google::protobuf::int64 value) {
  if (!has_selected_algorithm()) {
    clear_algorithm();
    set_has_selected_algorithm();
  }
  algorithm_.selected_algorithm_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.GemmBackendConfig.selected_algorithm)
}

// double alpha_real = 2;
inline void GemmBackendConfig::clear_alpha_real() {
  alpha_real_ = 0;
}
inline double GemmBackendConfig::alpha_real() const {
  // @@protoc_insertion_point(field_get:xla.gpu.GemmBackendConfig.alpha_real)
  return alpha_real_;
}
inline void GemmBackendConfig::set_alpha_real(double value) {
  
  alpha_real_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.GemmBackendConfig.alpha_real)
}

// double alpha_imag = 9;
inline void GemmBackendConfig::clear_alpha_imag() {
  alpha_imag_ = 0;
}
inline double GemmBackendConfig::alpha_imag() const {
  // @@protoc_insertion_point(field_get:xla.gpu.GemmBackendConfig.alpha_imag)
  return alpha_imag_;
}
inline void GemmBackendConfig::set_alpha_imag(double value) {
  
  alpha_imag_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.GemmBackendConfig.alpha_imag)
}

// double beta = 3;
inline void GemmBackendConfig::clear_beta() {
  beta_ = 0;
}
inline double GemmBackendConfig::beta() const {
  // @@protoc_insertion_point(field_get:xla.gpu.GemmBackendConfig.beta)
  return beta_;
}
inline void GemmBackendConfig::set_beta(double value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.GemmBackendConfig.beta)
}

// .xla.DotDimensionNumbers dot_dimension_numbers = 7;
inline bool GemmBackendConfig::has_dot_dimension_numbers() const {
  return this != internal_default_instance() && dot_dimension_numbers_ != NULL;
}
inline const ::xla::DotDimensionNumbers& GemmBackendConfig::_internal_dot_dimension_numbers() const {
  return *dot_dimension_numbers_;
}
inline const ::xla::DotDimensionNumbers& GemmBackendConfig::dot_dimension_numbers() const {
  const ::xla::DotDimensionNumbers* p = dot_dimension_numbers_;
  // @@protoc_insertion_point(field_get:xla.gpu.GemmBackendConfig.dot_dimension_numbers)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::DotDimensionNumbers*>(
      &::xla::_DotDimensionNumbers_default_instance_);
}
inline ::xla::DotDimensionNumbers* GemmBackendConfig::release_dot_dimension_numbers() {
  // @@protoc_insertion_point(field_release:xla.gpu.GemmBackendConfig.dot_dimension_numbers)
  
  ::xla::DotDimensionNumbers* temp = dot_dimension_numbers_;
  dot_dimension_numbers_ = NULL;
  return temp;
}
inline ::xla::DotDimensionNumbers* GemmBackendConfig::mutable_dot_dimension_numbers() {
  
  if (dot_dimension_numbers_ == NULL) {
    auto* p = CreateMaybeMessage<::xla::DotDimensionNumbers>(GetArenaNoVirtual());
    dot_dimension_numbers_ = p;
  }
  // @@protoc_insertion_point(field_mutable:xla.gpu.GemmBackendConfig.dot_dimension_numbers)
  return dot_dimension_numbers_;
}
inline void GemmBackendConfig::set_allocated_dot_dimension_numbers(::xla::DotDimensionNumbers* dot_dimension_numbers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot_dimension_numbers_);
  }
  if (dot_dimension_numbers) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(dot_dimension_numbers)->GetArena();
    if (message_arena != submessage_arena) {
      dot_dimension_numbers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot_dimension_numbers, submessage_arena);
    }
    
  } else {
    
  }
  dot_dimension_numbers_ = dot_dimension_numbers;
  // @@protoc_insertion_point(field_set_allocated:xla.gpu.GemmBackendConfig.dot_dimension_numbers)
}

// int64 batch_size = 8;
inline void GemmBackendConfig::clear_batch_size() {
  batch_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GemmBackendConfig::batch_size() const {
  // @@protoc_insertion_point(field_get:xla.gpu.GemmBackendConfig.batch_size)
  return batch_size_;
}
inline void GemmBackendConfig::set_batch_size(::google::protobuf::int64 value) {
  
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:xla.gpu.GemmBackendConfig.batch_size)
}

inline bool GemmBackendConfig::has_algorithm() const {
  return algorithm_case() != ALGORITHM_NOT_SET;
}
inline void GemmBackendConfig::clear_has_algorithm() {
  _oneof_case_[0] = ALGORITHM_NOT_SET;
}
inline GemmBackendConfig::AlgorithmCase GemmBackendConfig::algorithm_case() const {
  return GemmBackendConfig::AlgorithmCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gpu
}  // namespace xla

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fservice_2fgpu_2fbackend_5fconfigs_2eproto
