// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/jit/xla_activity.proto

#include "tensorflow/compiler/jit/xla_activity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XlaAutoClusteringSummary_OpAndCount;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_XlaAutoClusteringSummary_Cluster;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_XlaAutoClusteringSummary;
}  // namespace protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto
namespace tensorflow {
class XlaAutoClusteringSummary_OpAndCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaAutoClusteringSummary_OpAndCount>
      _instance;
} _XlaAutoClusteringSummary_OpAndCount_default_instance_;
class XlaAutoClusteringSummary_ClusterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaAutoClusteringSummary_Cluster>
      _instance;
} _XlaAutoClusteringSummary_Cluster_default_instance_;
class XlaAutoClusteringSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaAutoClusteringSummary>
      _instance;
} _XlaAutoClusteringSummary_default_instance_;
class XlaAutoClusteringActivityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaAutoClusteringActivity>
      _instance;
} _XlaAutoClusteringActivity_default_instance_;
class XlaJitCompilationActivityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaJitCompilationActivity>
      _instance;
} _XlaJitCompilationActivity_default_instance_;
class XlaOptimizationRemarkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaOptimizationRemark>
      _instance;
} _XlaOptimizationRemark_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto {
static void InitDefaultsXlaAutoClusteringSummary_OpAndCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaAutoClusteringSummary_OpAndCount_default_instance_;
    new (ptr) ::tensorflow::XlaAutoClusteringSummary_OpAndCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaAutoClusteringSummary_OpAndCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XlaAutoClusteringSummary_OpAndCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXlaAutoClusteringSummary_OpAndCount}, {}};

static void InitDefaultsXlaAutoClusteringSummary_Cluster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaAutoClusteringSummary_Cluster_default_instance_;
    new (ptr) ::tensorflow::XlaAutoClusteringSummary_Cluster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaAutoClusteringSummary_Cluster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_XlaAutoClusteringSummary_Cluster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsXlaAutoClusteringSummary_Cluster}, {
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary_OpAndCount.base,}};

static void InitDefaultsXlaAutoClusteringSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaAutoClusteringSummary_default_instance_;
    new (ptr) ::tensorflow::XlaAutoClusteringSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaAutoClusteringSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_XlaAutoClusteringSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsXlaAutoClusteringSummary}, {
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary_Cluster.base,
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary_OpAndCount.base,}};

static void InitDefaultsXlaAutoClusteringActivity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaAutoClusteringActivity_default_instance_;
    new (ptr) ::tensorflow::XlaAutoClusteringActivity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaAutoClusteringActivity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_XlaAutoClusteringActivity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsXlaAutoClusteringActivity}, {
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary.base,}};

static void InitDefaultsXlaJitCompilationActivity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaJitCompilationActivity_default_instance_;
    new (ptr) ::tensorflow::XlaJitCompilationActivity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaJitCompilationActivity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XlaJitCompilationActivity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXlaJitCompilationActivity}, {}};

static void InitDefaultsXlaOptimizationRemark() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaOptimizationRemark_default_instance_;
    new (ptr) ::tensorflow::XlaOptimizationRemark();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaOptimizationRemark::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XlaOptimizationRemark =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXlaOptimizationRemark}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_XlaAutoClusteringSummary_OpAndCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XlaAutoClusteringSummary_Cluster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XlaAutoClusteringSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XlaAutoClusteringActivity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XlaJitCompilationActivity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XlaOptimizationRemark.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary_OpAndCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary_OpAndCount, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary_OpAndCount, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary_Cluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary_Cluster, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary_Cluster, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary_Cluster, op_histogram_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary, unclustered_node_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary, clustered_node_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary, clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringSummary, unclustered_op_histogram_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringActivity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringActivity, global_jit_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringActivity, cpu_global_jit_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaAutoClusteringActivity, summary_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaJitCompilationActivity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaJitCompilationActivity, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaJitCompilationActivity, compile_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaJitCompilationActivity, compile_time_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaJitCompilationActivity, cumulative_compile_time_us_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaOptimizationRemark, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaOptimizationRemark, warning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaOptimizationRemark, debug_information_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::XlaAutoClusteringSummary_OpAndCount)},
  { 7, -1, sizeof(::tensorflow::XlaAutoClusteringSummary_Cluster)},
  { 15, -1, sizeof(::tensorflow::XlaAutoClusteringSummary)},
  { 24, -1, sizeof(::tensorflow::XlaAutoClusteringActivity)},
  { 32, -1, sizeof(::tensorflow::XlaJitCompilationActivity)},
  { 41, -1, sizeof(::tensorflow::XlaOptimizationRemark)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaAutoClusteringSummary_OpAndCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaAutoClusteringSummary_Cluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaAutoClusteringSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaAutoClusteringActivity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaJitCompilationActivity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaOptimizationRemark_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/compiler/jit/xla_activity.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*tensorflow/compiler/jit/xla_activity.p"
      "roto\022\ntensorflow\032%tensorflow/core/protob"
      "uf/config.proto\"\202\003\n\030XlaAutoClusteringSum"
      "mary\022\036\n\026unclustered_node_count\030\001 \001(\005\022\034\n\024"
      "clustered_node_count\030\002 \001(\005\022>\n\010clusters\030\003"
      " \003(\0132,.tensorflow.XlaAutoClusteringSumma"
      "ry.Cluster\022Q\n\030unclustered_op_histogram\030\004"
      " \003(\0132/.tensorflow.XlaAutoClusteringSumma"
      "ry.OpAndCount\032\'\n\nOpAndCount\022\n\n\002op\030\001 \001(\t\022"
      "\r\n\005count\030\002 \001(\005\032l\n\007Cluster\022\014\n\004name\030\001 \001(\t\022"
      "\014\n\004size\030\002 \001(\005\022E\n\014op_histogram\030\003 \003(\0132/.te"
      "nsorflow.XlaAutoClusteringSummary.OpAndC"
      "ount\"\271\001\n\031XlaAutoClusteringActivity\022E\n\020gl"
      "obal_jit_level\030\001 \001(\0162+.tensorflow.Optimi"
      "zerOptions.GlobalJitLevel\022\036\n\026cpu_global_"
      "jit_enabled\030\002 \001(\010\0225\n\007summary\030\003 \001(\0132$.ten"
      "sorflow.XlaAutoClusteringSummary\"\205\001\n\031Xla"
      "JitCompilationActivity\022\024\n\014cluster_name\030\001"
      " \001(\t\022\025\n\rcompile_count\030\002 \001(\005\022\027\n\017compile_t"
      "ime_us\030\003 \001(\003\022\"\n\032cumulative_compile_time_"
      "us\030\004 \001(\003\"\213\002\n\025XlaOptimizationRemark\022:\n\007wa"
      "rning\030\001 \001(\0162).tensorflow.XlaOptimization"
      "Remark.Warning\022\031\n\021debug_information\030\002 \001("
      "\t\"\232\001\n\007Warning\022\010\n\004NONE\020\000\022\030\n\024INACCURATE_OP"
      "ERATION\020\001\022\022\n\016SLOW_OPERATION\020\002\022\033\n\027UNIMPLE"
      "MENTED_OPERATION\020\003\022 \n\034SLOW_IMAGE_RESIZE_"
      "DIMENSIONS\020\004\022\030\n\024MEGAMORPHIC_FUNCTION\020\005b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1086);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/compiler/jit/xla_activity.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* XlaOptimizationRemark_Warning_descriptor() {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_enum_descriptors[0];
}
bool XlaOptimizationRemark_Warning_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const XlaOptimizationRemark_Warning XlaOptimizationRemark::NONE;
const XlaOptimizationRemark_Warning XlaOptimizationRemark::INACCURATE_OPERATION;
const XlaOptimizationRemark_Warning XlaOptimizationRemark::SLOW_OPERATION;
const XlaOptimizationRemark_Warning XlaOptimizationRemark::UNIMPLEMENTED_OPERATION;
const XlaOptimizationRemark_Warning XlaOptimizationRemark::SLOW_IMAGE_RESIZE_DIMENSIONS;
const XlaOptimizationRemark_Warning XlaOptimizationRemark::MEGAMORPHIC_FUNCTION;
const XlaOptimizationRemark_Warning XlaOptimizationRemark::Warning_MIN;
const XlaOptimizationRemark_Warning XlaOptimizationRemark::Warning_MAX;
const int XlaOptimizationRemark::Warning_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void XlaAutoClusteringSummary_OpAndCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaAutoClusteringSummary_OpAndCount::kOpFieldNumber;
const int XlaAutoClusteringSummary_OpAndCount::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaAutoClusteringSummary_OpAndCount::XlaAutoClusteringSummary_OpAndCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary_OpAndCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaAutoClusteringSummary.OpAndCount)
}
XlaAutoClusteringSummary_OpAndCount::XlaAutoClusteringSummary_OpAndCount(const XlaAutoClusteringSummary_OpAndCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op().size() > 0) {
    op_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaAutoClusteringSummary.OpAndCount)
}

void XlaAutoClusteringSummary_OpAndCount::SharedCtor() {
  op_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
}

XlaAutoClusteringSummary_OpAndCount::~XlaAutoClusteringSummary_OpAndCount() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  SharedDtor();
}

void XlaAutoClusteringSummary_OpAndCount::SharedDtor() {
  op_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XlaAutoClusteringSummary_OpAndCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaAutoClusteringSummary_OpAndCount::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaAutoClusteringSummary_OpAndCount& XlaAutoClusteringSummary_OpAndCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary_OpAndCount.base);
  return *internal_default_instance();
}


void XlaAutoClusteringSummary_OpAndCount::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  _internal_metadata_.Clear();
}

bool XlaAutoClusteringSummary_OpAndCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op().data(), static_cast<int>(this->op().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.XlaAutoClusteringSummary.OpAndCount.op"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  return false;
#undef DO_
}

void XlaAutoClusteringSummary_OpAndCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op = 1;
  if (this->op().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op().data(), static_cast<int>(this->op().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaAutoClusteringSummary.OpAndCount.op");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->op(), output);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaAutoClusteringSummary.OpAndCount)
}

::google::protobuf::uint8* XlaAutoClusteringSummary_OpAndCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op = 1;
  if (this->op().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op().data(), static_cast<int>(this->op().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaAutoClusteringSummary.OpAndCount.op");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->op(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  return target;
}

size_t XlaAutoClusteringSummary_OpAndCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string op = 1;
  if (this->op().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaAutoClusteringSummary_OpAndCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaAutoClusteringSummary_OpAndCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaAutoClusteringSummary_OpAndCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaAutoClusteringSummary.OpAndCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaAutoClusteringSummary.OpAndCount)
    MergeFrom(*source);
  }
}

void XlaAutoClusteringSummary_OpAndCount::MergeFrom(const XlaAutoClusteringSummary_OpAndCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op().size() > 0) {

    op_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void XlaAutoClusteringSummary_OpAndCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaAutoClusteringSummary_OpAndCount::CopyFrom(const XlaAutoClusteringSummary_OpAndCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaAutoClusteringSummary.OpAndCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaAutoClusteringSummary_OpAndCount::IsInitialized() const {
  return true;
}

void XlaAutoClusteringSummary_OpAndCount::Swap(XlaAutoClusteringSummary_OpAndCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaAutoClusteringSummary_OpAndCount::InternalSwap(XlaAutoClusteringSummary_OpAndCount* other) {
  using std::swap;
  op_.Swap(&other->op_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaAutoClusteringSummary_OpAndCount::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XlaAutoClusteringSummary_Cluster::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaAutoClusteringSummary_Cluster::kNameFieldNumber;
const int XlaAutoClusteringSummary_Cluster::kSizeFieldNumber;
const int XlaAutoClusteringSummary_Cluster::kOpHistogramFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaAutoClusteringSummary_Cluster::XlaAutoClusteringSummary_Cluster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary_Cluster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaAutoClusteringSummary.Cluster)
}
XlaAutoClusteringSummary_Cluster::XlaAutoClusteringSummary_Cluster(const XlaAutoClusteringSummary_Cluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      op_histogram_(from.op_histogram_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaAutoClusteringSummary.Cluster)
}

void XlaAutoClusteringSummary_Cluster::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

XlaAutoClusteringSummary_Cluster::~XlaAutoClusteringSummary_Cluster() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaAutoClusteringSummary.Cluster)
  SharedDtor();
}

void XlaAutoClusteringSummary_Cluster::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XlaAutoClusteringSummary_Cluster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaAutoClusteringSummary_Cluster::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaAutoClusteringSummary_Cluster& XlaAutoClusteringSummary_Cluster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary_Cluster.base);
  return *internal_default_instance();
}


void XlaAutoClusteringSummary_Cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_histogram_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  _internal_metadata_.Clear();
}

bool XlaAutoClusteringSummary_Cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.XlaAutoClusteringSummary.Cluster.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.XlaAutoClusteringSummary.OpAndCount op_histogram = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_op_histogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaAutoClusteringSummary.Cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaAutoClusteringSummary.Cluster)
  return false;
#undef DO_
}

void XlaAutoClusteringSummary_Cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaAutoClusteringSummary.Cluster.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // repeated .tensorflow.XlaAutoClusteringSummary.OpAndCount op_histogram = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->op_histogram_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->op_histogram(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaAutoClusteringSummary.Cluster)
}

::google::protobuf::uint8* XlaAutoClusteringSummary_Cluster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaAutoClusteringSummary.Cluster.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // repeated .tensorflow.XlaAutoClusteringSummary.OpAndCount op_histogram = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->op_histogram_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->op_histogram(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaAutoClusteringSummary.Cluster)
  return target;
}

size_t XlaAutoClusteringSummary_Cluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.XlaAutoClusteringSummary.OpAndCount op_histogram = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->op_histogram_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->op_histogram(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaAutoClusteringSummary_Cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaAutoClusteringSummary_Cluster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaAutoClusteringSummary_Cluster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaAutoClusteringSummary.Cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaAutoClusteringSummary.Cluster)
    MergeFrom(*source);
  }
}

void XlaAutoClusteringSummary_Cluster::MergeFrom(const XlaAutoClusteringSummary_Cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_histogram_.MergeFrom(from.op_histogram_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void XlaAutoClusteringSummary_Cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaAutoClusteringSummary_Cluster::CopyFrom(const XlaAutoClusteringSummary_Cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaAutoClusteringSummary.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaAutoClusteringSummary_Cluster::IsInitialized() const {
  return true;
}

void XlaAutoClusteringSummary_Cluster::Swap(XlaAutoClusteringSummary_Cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaAutoClusteringSummary_Cluster::InternalSwap(XlaAutoClusteringSummary_Cluster* other) {
  using std::swap;
  CastToBase(&op_histogram_)->InternalSwap(CastToBase(&other->op_histogram_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaAutoClusteringSummary_Cluster::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XlaAutoClusteringSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaAutoClusteringSummary::kUnclusteredNodeCountFieldNumber;
const int XlaAutoClusteringSummary::kClusteredNodeCountFieldNumber;
const int XlaAutoClusteringSummary::kClustersFieldNumber;
const int XlaAutoClusteringSummary::kUnclusteredOpHistogramFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaAutoClusteringSummary::XlaAutoClusteringSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaAutoClusteringSummary)
}
XlaAutoClusteringSummary::XlaAutoClusteringSummary(const XlaAutoClusteringSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_),
      unclustered_op_histogram_(from.unclustered_op_histogram_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&unclustered_node_count_, &from.unclustered_node_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&clustered_node_count_) -
    reinterpret_cast<char*>(&unclustered_node_count_)) + sizeof(clustered_node_count_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaAutoClusteringSummary)
}

void XlaAutoClusteringSummary::SharedCtor() {
  ::memset(&unclustered_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clustered_node_count_) -
      reinterpret_cast<char*>(&unclustered_node_count_)) + sizeof(clustered_node_count_));
}

XlaAutoClusteringSummary::~XlaAutoClusteringSummary() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaAutoClusteringSummary)
  SharedDtor();
}

void XlaAutoClusteringSummary::SharedDtor() {
}

void XlaAutoClusteringSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaAutoClusteringSummary::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaAutoClusteringSummary& XlaAutoClusteringSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringSummary.base);
  return *internal_default_instance();
}


void XlaAutoClusteringSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaAutoClusteringSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  unclustered_op_histogram_.Clear();
  ::memset(&unclustered_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clustered_node_count_) -
      reinterpret_cast<char*>(&unclustered_node_count_)) + sizeof(clustered_node_count_));
  _internal_metadata_.Clear();
}

bool XlaAutoClusteringSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaAutoClusteringSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 unclustered_node_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unclustered_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 clustered_node_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clustered_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.XlaAutoClusteringSummary.Cluster clusters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.XlaAutoClusteringSummary.OpAndCount unclustered_op_histogram = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_unclustered_op_histogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaAutoClusteringSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaAutoClusteringSummary)
  return false;
#undef DO_
}

void XlaAutoClusteringSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaAutoClusteringSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 unclustered_node_count = 1;
  if (this->unclustered_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unclustered_node_count(), output);
  }

  // int32 clustered_node_count = 2;
  if (this->clustered_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clustered_node_count(), output);
  }

  // repeated .tensorflow.XlaAutoClusteringSummary.Cluster clusters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->clusters(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.XlaAutoClusteringSummary.OpAndCount unclustered_op_histogram = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unclustered_op_histogram_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->unclustered_op_histogram(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaAutoClusteringSummary)
}

::google::protobuf::uint8* XlaAutoClusteringSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaAutoClusteringSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 unclustered_node_count = 1;
  if (this->unclustered_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unclustered_node_count(), target);
  }

  // int32 clustered_node_count = 2;
  if (this->clustered_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clustered_node_count(), target);
  }

  // repeated .tensorflow.XlaAutoClusteringSummary.Cluster clusters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->clusters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.XlaAutoClusteringSummary.OpAndCount unclustered_op_histogram = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unclustered_op_histogram_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->unclustered_op_histogram(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaAutoClusteringSummary)
  return target;
}

size_t XlaAutoClusteringSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaAutoClusteringSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.XlaAutoClusteringSummary.Cluster clusters = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->clusters(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.XlaAutoClusteringSummary.OpAndCount unclustered_op_histogram = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->unclustered_op_histogram_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->unclustered_op_histogram(static_cast<int>(i)));
    }
  }

  // int32 unclustered_node_count = 1;
  if (this->unclustered_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unclustered_node_count());
  }

  // int32 clustered_node_count = 2;
  if (this->clustered_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clustered_node_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaAutoClusteringSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaAutoClusteringSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaAutoClusteringSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaAutoClusteringSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaAutoClusteringSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaAutoClusteringSummary)
    MergeFrom(*source);
  }
}

void XlaAutoClusteringSummary::MergeFrom(const XlaAutoClusteringSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaAutoClusteringSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  unclustered_op_histogram_.MergeFrom(from.unclustered_op_histogram_);
  if (from.unclustered_node_count() != 0) {
    set_unclustered_node_count(from.unclustered_node_count());
  }
  if (from.clustered_node_count() != 0) {
    set_clustered_node_count(from.clustered_node_count());
  }
}

void XlaAutoClusteringSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaAutoClusteringSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaAutoClusteringSummary::CopyFrom(const XlaAutoClusteringSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaAutoClusteringSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaAutoClusteringSummary::IsInitialized() const {
  return true;
}

void XlaAutoClusteringSummary::Swap(XlaAutoClusteringSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaAutoClusteringSummary::InternalSwap(XlaAutoClusteringSummary* other) {
  using std::swap;
  CastToBase(&clusters_)->InternalSwap(CastToBase(&other->clusters_));
  CastToBase(&unclustered_op_histogram_)->InternalSwap(CastToBase(&other->unclustered_op_histogram_));
  swap(unclustered_node_count_, other->unclustered_node_count_);
  swap(clustered_node_count_, other->clustered_node_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaAutoClusteringSummary::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XlaAutoClusteringActivity::InitAsDefaultInstance() {
  ::tensorflow::_XlaAutoClusteringActivity_default_instance_._instance.get_mutable()->summary_ = const_cast< ::tensorflow::XlaAutoClusteringSummary*>(
      ::tensorflow::XlaAutoClusteringSummary::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaAutoClusteringActivity::kGlobalJitLevelFieldNumber;
const int XlaAutoClusteringActivity::kCpuGlobalJitEnabledFieldNumber;
const int XlaAutoClusteringActivity::kSummaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaAutoClusteringActivity::XlaAutoClusteringActivity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringActivity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaAutoClusteringActivity)
}
XlaAutoClusteringActivity::XlaAutoClusteringActivity(const XlaAutoClusteringActivity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_summary()) {
    summary_ = new ::tensorflow::XlaAutoClusteringSummary(*from.summary_);
  } else {
    summary_ = NULL;
  }
  ::memcpy(&global_jit_level_, &from.global_jit_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&cpu_global_jit_enabled_) -
    reinterpret_cast<char*>(&global_jit_level_)) + sizeof(cpu_global_jit_enabled_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaAutoClusteringActivity)
}

void XlaAutoClusteringActivity::SharedCtor() {
  ::memset(&summary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cpu_global_jit_enabled_) -
      reinterpret_cast<char*>(&summary_)) + sizeof(cpu_global_jit_enabled_));
}

XlaAutoClusteringActivity::~XlaAutoClusteringActivity() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaAutoClusteringActivity)
  SharedDtor();
}

void XlaAutoClusteringActivity::SharedDtor() {
  if (this != internal_default_instance()) delete summary_;
}

void XlaAutoClusteringActivity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaAutoClusteringActivity::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaAutoClusteringActivity& XlaAutoClusteringActivity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaAutoClusteringActivity.base);
  return *internal_default_instance();
}


void XlaAutoClusteringActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaAutoClusteringActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && summary_ != NULL) {
    delete summary_;
  }
  summary_ = NULL;
  ::memset(&global_jit_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cpu_global_jit_enabled_) -
      reinterpret_cast<char*>(&global_jit_level_)) + sizeof(cpu_global_jit_enabled_));
  _internal_metadata_.Clear();
}

bool XlaAutoClusteringActivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaAutoClusteringActivity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.OptimizerOptions.GlobalJitLevel global_jit_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_global_jit_level(static_cast< ::tensorflow::OptimizerOptions_GlobalJitLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool cpu_global_jit_enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cpu_global_jit_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.XlaAutoClusteringSummary summary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaAutoClusteringActivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaAutoClusteringActivity)
  return false;
#undef DO_
}

void XlaAutoClusteringActivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaAutoClusteringActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.OptimizerOptions.GlobalJitLevel global_jit_level = 1;
  if (this->global_jit_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->global_jit_level(), output);
  }

  // bool cpu_global_jit_enabled = 2;
  if (this->cpu_global_jit_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->cpu_global_jit_enabled(), output);
  }

  // .tensorflow.XlaAutoClusteringSummary summary = 3;
  if (this->has_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_summary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaAutoClusteringActivity)
}

::google::protobuf::uint8* XlaAutoClusteringActivity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaAutoClusteringActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.OptimizerOptions.GlobalJitLevel global_jit_level = 1;
  if (this->global_jit_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->global_jit_level(), target);
  }

  // bool cpu_global_jit_enabled = 2;
  if (this->cpu_global_jit_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->cpu_global_jit_enabled(), target);
  }

  // .tensorflow.XlaAutoClusteringSummary summary = 3;
  if (this->has_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_summary(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaAutoClusteringActivity)
  return target;
}

size_t XlaAutoClusteringActivity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaAutoClusteringActivity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.XlaAutoClusteringSummary summary = 3;
  if (this->has_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *summary_);
  }

  // .tensorflow.OptimizerOptions.GlobalJitLevel global_jit_level = 1;
  if (this->global_jit_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->global_jit_level());
  }

  // bool cpu_global_jit_enabled = 2;
  if (this->cpu_global_jit_enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaAutoClusteringActivity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaAutoClusteringActivity)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaAutoClusteringActivity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaAutoClusteringActivity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaAutoClusteringActivity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaAutoClusteringActivity)
    MergeFrom(*source);
  }
}

void XlaAutoClusteringActivity::MergeFrom(const XlaAutoClusteringActivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaAutoClusteringActivity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_summary()) {
    mutable_summary()->::tensorflow::XlaAutoClusteringSummary::MergeFrom(from.summary());
  }
  if (from.global_jit_level() != 0) {
    set_global_jit_level(from.global_jit_level());
  }
  if (from.cpu_global_jit_enabled() != 0) {
    set_cpu_global_jit_enabled(from.cpu_global_jit_enabled());
  }
}

void XlaAutoClusteringActivity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaAutoClusteringActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaAutoClusteringActivity::CopyFrom(const XlaAutoClusteringActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaAutoClusteringActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaAutoClusteringActivity::IsInitialized() const {
  return true;
}

void XlaAutoClusteringActivity::Swap(XlaAutoClusteringActivity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaAutoClusteringActivity::InternalSwap(XlaAutoClusteringActivity* other) {
  using std::swap;
  swap(summary_, other->summary_);
  swap(global_jit_level_, other->global_jit_level_);
  swap(cpu_global_jit_enabled_, other->cpu_global_jit_enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaAutoClusteringActivity::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XlaJitCompilationActivity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaJitCompilationActivity::kClusterNameFieldNumber;
const int XlaJitCompilationActivity::kCompileCountFieldNumber;
const int XlaJitCompilationActivity::kCompileTimeUsFieldNumber;
const int XlaJitCompilationActivity::kCumulativeCompileTimeUsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaJitCompilationActivity::XlaJitCompilationActivity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaJitCompilationActivity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaJitCompilationActivity)
}
XlaJitCompilationActivity::XlaJitCompilationActivity(const XlaJitCompilationActivity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  ::memcpy(&compile_time_us_, &from.compile_time_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&compile_count_) -
    reinterpret_cast<char*>(&compile_time_us_)) + sizeof(compile_count_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaJitCompilationActivity)
}

void XlaJitCompilationActivity::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&compile_time_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compile_count_) -
      reinterpret_cast<char*>(&compile_time_us_)) + sizeof(compile_count_));
}

XlaJitCompilationActivity::~XlaJitCompilationActivity() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaJitCompilationActivity)
  SharedDtor();
}

void XlaJitCompilationActivity::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XlaJitCompilationActivity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaJitCompilationActivity::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaJitCompilationActivity& XlaJitCompilationActivity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaJitCompilationActivity.base);
  return *internal_default_instance();
}


void XlaJitCompilationActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaJitCompilationActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&compile_time_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compile_count_) -
      reinterpret_cast<char*>(&compile_time_us_)) + sizeof(compile_count_));
  _internal_metadata_.Clear();
}

bool XlaJitCompilationActivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaJitCompilationActivity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.XlaJitCompilationActivity.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 compile_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &compile_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compile_time_us = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compile_time_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 cumulative_compile_time_us = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cumulative_compile_time_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaJitCompilationActivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaJitCompilationActivity)
  return false;
#undef DO_
}

void XlaJitCompilationActivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaJitCompilationActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaJitCompilationActivity.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  // int32 compile_count = 2;
  if (this->compile_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->compile_count(), output);
  }

  // int64 compile_time_us = 3;
  if (this->compile_time_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->compile_time_us(), output);
  }

  // int64 cumulative_compile_time_us = 4;
  if (this->cumulative_compile_time_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->cumulative_compile_time_us(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaJitCompilationActivity)
}

::google::protobuf::uint8* XlaJitCompilationActivity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaJitCompilationActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaJitCompilationActivity.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_name(), target);
  }

  // int32 compile_count = 2;
  if (this->compile_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->compile_count(), target);
  }

  // int64 compile_time_us = 3;
  if (this->compile_time_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->compile_time_us(), target);
  }

  // int64 cumulative_compile_time_us = 4;
  if (this->cumulative_compile_time_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->cumulative_compile_time_us(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaJitCompilationActivity)
  return target;
}

size_t XlaJitCompilationActivity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaJitCompilationActivity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // int64 compile_time_us = 3;
  if (this->compile_time_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compile_time_us());
  }

  // int64 cumulative_compile_time_us = 4;
  if (this->cumulative_compile_time_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cumulative_compile_time_us());
  }

  // int32 compile_count = 2;
  if (this->compile_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->compile_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaJitCompilationActivity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaJitCompilationActivity)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaJitCompilationActivity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaJitCompilationActivity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaJitCompilationActivity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaJitCompilationActivity)
    MergeFrom(*source);
  }
}

void XlaJitCompilationActivity::MergeFrom(const XlaJitCompilationActivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaJitCompilationActivity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.compile_time_us() != 0) {
    set_compile_time_us(from.compile_time_us());
  }
  if (from.cumulative_compile_time_us() != 0) {
    set_cumulative_compile_time_us(from.cumulative_compile_time_us());
  }
  if (from.compile_count() != 0) {
    set_compile_count(from.compile_count());
  }
}

void XlaJitCompilationActivity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaJitCompilationActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaJitCompilationActivity::CopyFrom(const XlaJitCompilationActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaJitCompilationActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaJitCompilationActivity::IsInitialized() const {
  return true;
}

void XlaJitCompilationActivity::Swap(XlaJitCompilationActivity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaJitCompilationActivity::InternalSwap(XlaJitCompilationActivity* other) {
  using std::swap;
  cluster_name_.Swap(&other->cluster_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(compile_time_us_, other->compile_time_us_);
  swap(cumulative_compile_time_us_, other->cumulative_compile_time_us_);
  swap(compile_count_, other->compile_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaJitCompilationActivity::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XlaOptimizationRemark::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaOptimizationRemark::kWarningFieldNumber;
const int XlaOptimizationRemark::kDebugInformationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaOptimizationRemark::XlaOptimizationRemark()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaOptimizationRemark.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaOptimizationRemark)
}
XlaOptimizationRemark::XlaOptimizationRemark(const XlaOptimizationRemark& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  debug_information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.debug_information().size() > 0) {
    debug_information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_information_);
  }
  warning_ = from.warning_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaOptimizationRemark)
}

void XlaOptimizationRemark::SharedCtor() {
  debug_information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warning_ = 0;
}

XlaOptimizationRemark::~XlaOptimizationRemark() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaOptimizationRemark)
  SharedDtor();
}

void XlaOptimizationRemark::SharedDtor() {
  debug_information_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XlaOptimizationRemark::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaOptimizationRemark::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaOptimizationRemark& XlaOptimizationRemark::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::scc_info_XlaOptimizationRemark.base);
  return *internal_default_instance();
}


void XlaOptimizationRemark::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaOptimizationRemark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  debug_information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warning_ = 0;
  _internal_metadata_.Clear();
}

bool XlaOptimizationRemark::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaOptimizationRemark)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.XlaOptimizationRemark.Warning warning = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_warning(static_cast< ::tensorflow::XlaOptimizationRemark_Warning >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string debug_information = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debug_information()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debug_information().data(), static_cast<int>(this->debug_information().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.XlaOptimizationRemark.debug_information"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaOptimizationRemark)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaOptimizationRemark)
  return false;
#undef DO_
}

void XlaOptimizationRemark::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaOptimizationRemark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.XlaOptimizationRemark.Warning warning = 1;
  if (this->warning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->warning(), output);
  }

  // string debug_information = 2;
  if (this->debug_information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debug_information().data(), static_cast<int>(this->debug_information().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaOptimizationRemark.debug_information");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->debug_information(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaOptimizationRemark)
}

::google::protobuf::uint8* XlaOptimizationRemark::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaOptimizationRemark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.XlaOptimizationRemark.Warning warning = 1;
  if (this->warning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->warning(), target);
  }

  // string debug_information = 2;
  if (this->debug_information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debug_information().data(), static_cast<int>(this->debug_information().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaOptimizationRemark.debug_information");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->debug_information(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaOptimizationRemark)
  return target;
}

size_t XlaOptimizationRemark::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaOptimizationRemark)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string debug_information = 2;
  if (this->debug_information().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debug_information());
  }

  // .tensorflow.XlaOptimizationRemark.Warning warning = 1;
  if (this->warning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->warning());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaOptimizationRemark::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaOptimizationRemark)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaOptimizationRemark* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaOptimizationRemark>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaOptimizationRemark)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaOptimizationRemark)
    MergeFrom(*source);
  }
}

void XlaOptimizationRemark::MergeFrom(const XlaOptimizationRemark& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaOptimizationRemark)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.debug_information().size() > 0) {

    debug_information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_information_);
  }
  if (from.warning() != 0) {
    set_warning(from.warning());
  }
}

void XlaOptimizationRemark::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaOptimizationRemark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaOptimizationRemark::CopyFrom(const XlaOptimizationRemark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaOptimizationRemark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaOptimizationRemark::IsInitialized() const {
  return true;
}

void XlaOptimizationRemark::Swap(XlaOptimizationRemark* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaOptimizationRemark::InternalSwap(XlaOptimizationRemark* other) {
  using std::swap;
  debug_information_.Swap(&other->debug_information_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(warning_, other->warning_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaOptimizationRemark::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5factivity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaAutoClusteringSummary_OpAndCount* Arena::CreateMaybeMessage< ::tensorflow::XlaAutoClusteringSummary_OpAndCount >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaAutoClusteringSummary_OpAndCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaAutoClusteringSummary_Cluster* Arena::CreateMaybeMessage< ::tensorflow::XlaAutoClusteringSummary_Cluster >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaAutoClusteringSummary_Cluster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaAutoClusteringSummary* Arena::CreateMaybeMessage< ::tensorflow::XlaAutoClusteringSummary >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaAutoClusteringSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaAutoClusteringActivity* Arena::CreateMaybeMessage< ::tensorflow::XlaAutoClusteringActivity >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaAutoClusteringActivity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaJitCompilationActivity* Arena::CreateMaybeMessage< ::tensorflow::XlaJitCompilationActivity >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaJitCompilationActivity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaOptimizationRemark* Arena::CreateMaybeMessage< ::tensorflow::XlaOptimizationRemark >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaOptimizationRemark >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
