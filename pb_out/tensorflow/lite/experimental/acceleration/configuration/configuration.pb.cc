// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/lite/experimental/acceleration/configuration/configuration.proto

#include "tensorflow/lite/experimental/acceleration/configuration/configuration.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BenchmarkInitializationFailure;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BenchmarkMetric;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BenchmarkStoragePaths;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPUSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CoralSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CoreMLSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EdgeTpuDeviceSpec;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EdgeTpuInactivePowerConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ErrorCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FallbackSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GPUSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HexagonSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModelFile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XNNPackSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BenchmarkError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BenchmarkResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BestAccelerationDecision;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NNAPISettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_EdgeTpuSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_BenchmarkEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MinibenchmarkSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_TFLiteSettings;
}  // namespace protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto
namespace tflite {
namespace proto {
class ComputeSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputeSettings>
      _instance;
} _ComputeSettings_default_instance_;
class NNAPISettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NNAPISettings>
      _instance;
} _NNAPISettings_default_instance_;
class GPUSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GPUSettings>
      _instance;
} _GPUSettings_default_instance_;
class HexagonSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HexagonSettings>
      _instance;
} _HexagonSettings_default_instance_;
class XNNPackSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XNNPackSettings>
      _instance;
} _XNNPackSettings_default_instance_;
class CoreMLSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoreMLSettings>
      _instance;
} _CoreMLSettings_default_instance_;
class EdgeTpuDeviceSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EdgeTpuDeviceSpec>
      _instance;
} _EdgeTpuDeviceSpec_default_instance_;
class EdgeTpuInactivePowerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EdgeTpuInactivePowerConfig>
      _instance;
} _EdgeTpuInactivePowerConfig_default_instance_;
class EdgeTpuSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EdgeTpuSettings>
      _instance;
} _EdgeTpuSettings_default_instance_;
class CoralSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoralSettings>
      _instance;
} _CoralSettings_default_instance_;
class CPUSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPUSettings>
      _instance;
} _CPUSettings_default_instance_;
class TFLiteSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TFLiteSettings>
      _instance;
} _TFLiteSettings_default_instance_;
class FallbackSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FallbackSettings>
      _instance;
} _FallbackSettings_default_instance_;
class BenchmarkMetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BenchmarkMetric>
      _instance;
} _BenchmarkMetric_default_instance_;
class BenchmarkResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BenchmarkResult>
      _instance;
} _BenchmarkResult_default_instance_;
class ErrorCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorCode>
      _instance;
} _ErrorCode_default_instance_;
class BenchmarkErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BenchmarkError>
      _instance;
} _BenchmarkError_default_instance_;
class BenchmarkEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BenchmarkEvent>
      _instance;
} _BenchmarkEvent_default_instance_;
class BestAccelerationDecisionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BestAccelerationDecision>
      _instance;
} _BestAccelerationDecision_default_instance_;
class BenchmarkInitializationFailureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BenchmarkInitializationFailure>
      _instance;
} _BenchmarkInitializationFailure_default_instance_;
class MiniBenchmarkEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MiniBenchmarkEvent>
      _instance;
} _MiniBenchmarkEvent_default_instance_;
class ModelFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelFile>
      _instance;
} _ModelFile_default_instance_;
class BenchmarkStoragePathsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BenchmarkStoragePaths>
      _instance;
} _BenchmarkStoragePaths_default_instance_;
class MinibenchmarkSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MinibenchmarkSettings>
      _instance;
} _MinibenchmarkSettings_default_instance_;
}  // namespace proto
}  // namespace tflite
namespace protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto {
static void InitDefaultsComputeSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_ComputeSettings_default_instance_;
    new (ptr) ::tflite::proto::ComputeSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::ComputeSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ComputeSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsComputeSettings}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_TFLiteSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_MinibenchmarkSettings.base,}};

static void InitDefaultsNNAPISettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_NNAPISettings_default_instance_;
    new (ptr) ::tflite::proto::NNAPISettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::NNAPISettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NNAPISettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNNAPISettings}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_FallbackSettings.base,}};

static void InitDefaultsGPUSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_GPUSettings_default_instance_;
    new (ptr) ::tflite::proto::GPUSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::GPUSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GPUSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGPUSettings}, {}};

static void InitDefaultsHexagonSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_HexagonSettings_default_instance_;
    new (ptr) ::tflite::proto::HexagonSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::HexagonSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HexagonSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHexagonSettings}, {}};

static void InitDefaultsXNNPackSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_XNNPackSettings_default_instance_;
    new (ptr) ::tflite::proto::XNNPackSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::XNNPackSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XNNPackSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXNNPackSettings}, {}};

static void InitDefaultsCoreMLSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_CoreMLSettings_default_instance_;
    new (ptr) ::tflite::proto::CoreMLSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::CoreMLSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CoreMLSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoreMLSettings}, {}};

static void InitDefaultsEdgeTpuDeviceSpec() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_EdgeTpuDeviceSpec_default_instance_;
    new (ptr) ::tflite::proto::EdgeTpuDeviceSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::EdgeTpuDeviceSpec::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EdgeTpuDeviceSpec =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEdgeTpuDeviceSpec}, {}};

static void InitDefaultsEdgeTpuInactivePowerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_EdgeTpuInactivePowerConfig_default_instance_;
    new (ptr) ::tflite::proto::EdgeTpuInactivePowerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::EdgeTpuInactivePowerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EdgeTpuInactivePowerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEdgeTpuInactivePowerConfig}, {}};

static void InitDefaultsEdgeTpuSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_EdgeTpuSettings_default_instance_;
    new (ptr) ::tflite::proto::EdgeTpuSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::EdgeTpuSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EdgeTpuSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEdgeTpuSettings}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuInactivePowerConfig.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuDeviceSpec.base,}};

static void InitDefaultsCoralSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_CoralSettings_default_instance_;
    new (ptr) ::tflite::proto::CoralSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::CoralSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CoralSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoralSettings}, {}};

static void InitDefaultsCPUSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_CPUSettings_default_instance_;
    new (ptr) ::tflite::proto::CPUSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::CPUSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPUSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPUSettings}, {}};

static void InitDefaultsTFLiteSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_TFLiteSettings_default_instance_;
    new (ptr) ::tflite::proto::TFLiteSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::TFLiteSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_TFLiteSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsTFLiteSettings}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_NNAPISettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_GPUSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_HexagonSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_XNNPackSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CoreMLSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CPUSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CoralSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_FallbackSettings.base,}};

static void InitDefaultsFallbackSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_FallbackSettings_default_instance_;
    new (ptr) ::tflite::proto::FallbackSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::FallbackSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FallbackSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFallbackSettings}, {}};

static void InitDefaultsBenchmarkMetric() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_BenchmarkMetric_default_instance_;
    new (ptr) ::tflite::proto::BenchmarkMetric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::BenchmarkMetric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BenchmarkMetric =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBenchmarkMetric}, {}};

static void InitDefaultsBenchmarkResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_BenchmarkResult_default_instance_;
    new (ptr) ::tflite::proto::BenchmarkResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::BenchmarkResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BenchmarkResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBenchmarkResult}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkMetric.base,}};

static void InitDefaultsErrorCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_ErrorCode_default_instance_;
    new (ptr) ::tflite::proto::ErrorCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::ErrorCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorCode}, {}};

static void InitDefaultsBenchmarkError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_BenchmarkError_default_instance_;
    new (ptr) ::tflite::proto::BenchmarkError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::BenchmarkError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BenchmarkError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBenchmarkError}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_ErrorCode.base,}};

static void InitDefaultsBenchmarkEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_BenchmarkEvent_default_instance_;
    new (ptr) ::tflite::proto::BenchmarkEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::BenchmarkEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_BenchmarkEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBenchmarkEvent}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_TFLiteSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkResult.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkError.base,}};

static void InitDefaultsBestAccelerationDecision() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_BestAccelerationDecision_default_instance_;
    new (ptr) ::tflite::proto::BestAccelerationDecision();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::BestAccelerationDecision::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BestAccelerationDecision =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBestAccelerationDecision}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkEvent.base,}};

static void InitDefaultsBenchmarkInitializationFailure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_BenchmarkInitializationFailure_default_instance_;
    new (ptr) ::tflite::proto::BenchmarkInitializationFailure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::BenchmarkInitializationFailure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BenchmarkInitializationFailure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBenchmarkInitializationFailure}, {}};

static void InitDefaultsMiniBenchmarkEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_MiniBenchmarkEvent_default_instance_;
    new (ptr) ::tflite::proto::MiniBenchmarkEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::MiniBenchmarkEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MiniBenchmarkEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMiniBenchmarkEvent}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BestAccelerationDecision.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkInitializationFailure.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkEvent.base,}};

static void InitDefaultsModelFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_ModelFile_default_instance_;
    new (ptr) ::tflite::proto::ModelFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::ModelFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModelFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModelFile}, {}};

static void InitDefaultsBenchmarkStoragePaths() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_BenchmarkStoragePaths_default_instance_;
    new (ptr) ::tflite::proto::BenchmarkStoragePaths();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::BenchmarkStoragePaths::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BenchmarkStoragePaths =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBenchmarkStoragePaths}, {}};

static void InitDefaultsMinibenchmarkSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tflite::proto::_MinibenchmarkSettings_default_instance_;
    new (ptr) ::tflite::proto::MinibenchmarkSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tflite::proto::MinibenchmarkSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MinibenchmarkSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMinibenchmarkSettings}, {
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_TFLiteSettings.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_ModelFile.base,
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkStoragePaths.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ComputeSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NNAPISettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GPUSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HexagonSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XNNPackSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoreMLSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EdgeTpuDeviceSpec.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EdgeTpuInactivePowerConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EdgeTpuSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoralSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPUSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TFLiteSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FallbackSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BenchmarkMetric.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BenchmarkResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BenchmarkError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BenchmarkEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BestAccelerationDecision.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BenchmarkInitializationFailure.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MiniBenchmarkEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BenchmarkStoragePaths.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MinibenchmarkSettings.base);
}

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ComputeSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ComputeSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ComputeSettings, preference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ComputeSettings, tflite_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ComputeSettings, model_namespace_for_statistics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ComputeSettings, model_identifier_for_statistics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ComputeSettings, settings_to_test_locally_),
  4,
  2,
  0,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, accelerator_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, cache_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, model_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, execution_preference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, no_of_nnapi_instances_to_cache_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, fallback_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, allow_nnapi_cpu_on_android_10_plus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, execution_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, allow_dynamic_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, allow_fp16_precision_for_fp32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, use_burst_computation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::NNAPISettings, support_library_handle_),
  0,
  1,
  2,
  4,
  5,
  3,
  7,
  6,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, is_precision_loss_allowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, enable_quantized_inference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, force_backend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, inference_priority1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, inference_priority2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, inference_priority3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, inference_preference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, cache_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::GPUSettings, model_token_),
  2,
  8,
  3,
  4,
  5,
  6,
  7,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::HexagonSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::HexagonSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::HexagonSettings, debug_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::HexagonSettings, powersave_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::HexagonSettings, print_graph_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::HexagonSettings, print_graph_debug_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::XNNPackSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::XNNPackSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::XNNPackSettings, num_threads_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoreMLSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoreMLSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoreMLSettings, enabled_devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoreMLSettings, coreml_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoreMLSettings, max_delegated_partitions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoreMLSettings, min_nodes_per_partition_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuDeviceSpec, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuDeviceSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuDeviceSpec, platform_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuDeviceSpec, num_chips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuDeviceSpec, device_paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuDeviceSpec, chip_family_),
  0,
  1,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuInactivePowerConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuInactivePowerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuInactivePowerConfig, inactive_power_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuInactivePowerConfig, inactive_timeout_us_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, inference_power_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, inactive_power_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, inference_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, edgetpu_device_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, model_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, float_truncation_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::EdgeTpuSettings, qos_class_),
  2,
  ~0u,
  5,
  1,
  0,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoralSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoralSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoralSettings, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoralSettings, performance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoralSettings, usb_always_dfu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CoralSettings, usb_max_bulk_in_queue_length_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CPUSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CPUSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::CPUSettings, num_threads_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, delegate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, nnapi_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, gpu_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, hexagon_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, xnnpack_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, coreml_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, cpu_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, max_delegated_partitions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, edgetpu_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, coral_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::TFLiteSettings, fallback_settings_),
  9,
  0,
  1,
  2,
  3,
  8,
  4,
  10,
  5,
  7,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::FallbackSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::FallbackSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::FallbackSettings, allow_automatic_fallback_on_compilation_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::FallbackSettings, allow_automatic_fallback_on_execution_error_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkMetric, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkMetric, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkMetric, values_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkResult, initialization_time_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkResult, inference_time_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkResult, max_memory_kb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkResult, ok_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkResult, metrics_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ErrorCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ErrorCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ErrorCode, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ErrorCode, tflite_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ErrorCode, underlying_api_error_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkError, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkError, stage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkError, exit_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkError, signal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkError, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkError, mini_benchmark_error_code_),
  0,
  1,
  2,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkEvent, tflite_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkEvent, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkEvent, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkEvent, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkEvent, boottime_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkEvent, wallclock_us_),
  0,
  5,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BestAccelerationDecision, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BestAccelerationDecision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BestAccelerationDecision, number_of_source_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BestAccelerationDecision, min_latency_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BestAccelerationDecision, min_inference_time_us_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkInitializationFailure, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkInitializationFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkInitializationFailure, initialization_status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MiniBenchmarkEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MiniBenchmarkEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MiniBenchmarkEvent, is_log_flushing_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MiniBenchmarkEvent, best_acceleration_decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MiniBenchmarkEvent, initialization_failure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MiniBenchmarkEvent, benchmark_event_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ModelFile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ModelFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ModelFile, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ModelFile, fd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ModelFile, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::ModelFile, length_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkStoragePaths, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkStoragePaths, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkStoragePaths, storage_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::BenchmarkStoragePaths, data_directory_path_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MinibenchmarkSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MinibenchmarkSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MinibenchmarkSettings, settings_to_test_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MinibenchmarkSettings, model_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tflite::proto::MinibenchmarkSettings, storage_paths_),
  ~0u,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::tflite::proto::ComputeSettings)},
  { 15, 32, sizeof(::tflite::proto::NNAPISettings)},
  { 44, 58, sizeof(::tflite::proto::GPUSettings)},
  { 67, 76, sizeof(::tflite::proto::HexagonSettings)},
  { 80, 86, sizeof(::tflite::proto::XNNPackSettings)},
  { 87, 96, sizeof(::tflite::proto::CoreMLSettings)},
  { 100, 109, sizeof(::tflite::proto::EdgeTpuDeviceSpec)},
  { 113, 120, sizeof(::tflite::proto::EdgeTpuInactivePowerConfig)},
  { 122, 134, sizeof(::tflite::proto::EdgeTpuSettings)},
  { 141, 150, sizeof(::tflite::proto::CoralSettings)},
  { 154, 160, sizeof(::tflite::proto::CPUSettings)},
  { 161, 177, sizeof(::tflite::proto::TFLiteSettings)},
  { 188, 195, sizeof(::tflite::proto::FallbackSettings)},
  { 197, 204, sizeof(::tflite::proto::BenchmarkMetric)},
  { 206, 216, sizeof(::tflite::proto::BenchmarkResult)},
  { 221, 229, sizeof(::tflite::proto::ErrorCode)},
  { 232, 242, sizeof(::tflite::proto::BenchmarkError)},
  { 247, 258, sizeof(::tflite::proto::BenchmarkEvent)},
  { 264, 272, sizeof(::tflite::proto::BestAccelerationDecision)},
  { 275, 281, sizeof(::tflite::proto::BenchmarkInitializationFailure)},
  { 282, 291, sizeof(::tflite::proto::MiniBenchmarkEvent)},
  { 295, 304, sizeof(::tflite::proto::ModelFile)},
  { 308, 315, sizeof(::tflite::proto::BenchmarkStoragePaths)},
  { 317, 325, sizeof(::tflite::proto::MinibenchmarkSettings)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_ComputeSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_NNAPISettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_GPUSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_HexagonSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_XNNPackSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_CoreMLSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_EdgeTpuDeviceSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_EdgeTpuInactivePowerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_EdgeTpuSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_CoralSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_CPUSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_TFLiteSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_FallbackSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_BenchmarkMetric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_BenchmarkResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_ErrorCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_BenchmarkError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_BenchmarkEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_BestAccelerationDecision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_BenchmarkInitializationFailure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_MiniBenchmarkEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_ModelFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_BenchmarkStoragePaths_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tflite::proto::_MinibenchmarkSettings_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/lite/experimental/acceleration/configuration/configuration.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nKtensorflow/lite/experimental/accelerat"
      "ion/configuration/configuration.proto\022\014t"
      "flite.proto\"\227\002\n\017ComputeSettings\0225\n\nprefe"
      "rence\030\001 \001(\0162!.tflite.proto.ExecutionPref"
      "erence\0225\n\017tflite_settings\030\002 \001(\0132\034.tflite"
      ".proto.TFLiteSettings\022&\n\036model_namespace"
      "_for_statistics\030\003 \001(\t\022\'\n\037model_identifie"
      "r_for_statistics\030\004 \001(\t\022E\n\030settings_to_te"
      "st_locally\030\005 \001(\0132#.tflite.proto.Minibenc"
      "hmarkSettings\"\372\003\n\rNNAPISettings\022\030\n\020accel"
      "erator_name\030\001 \001(\t\022\027\n\017cache_directory\030\002 \001"
      "(\t\022\023\n\013model_token\030\003 \001(\t\022D\n\024execution_pre"
      "ference\030\004 \001(\0162&.tflite.proto.NNAPIExecut"
      "ionPreference\022&\n\036no_of_nnapi_instances_t"
      "o_cache\030\005 \001(\005\022=\n\021fallback_settings\030\006 \001(\013"
      "2\036.tflite.proto.FallbackSettingsB\002\030\001\022*\n\""
      "allow_nnapi_cpu_on_android_10_plus\030\007 \001(\010"
      "\022@\n\022execution_priority\030\010 \001(\0162$.tflite.pr"
      "oto.NNAPIExecutionPriority\022 \n\030allow_dyna"
      "mic_dimensions\030\t \001(\010\022%\n\035allow_fp16_preci"
      "sion_for_fp32\030\n \001(\010\022\035\n\025use_burst_computa"
      "tion\030\013 \001(\010\022\036\n\026support_library_handle\030\014 \001"
      "(\003\"\364\003\n\013GPUSettings\022!\n\031is_precision_loss_"
      "allowed\030\001 \001(\010\022(\n\032enable_quantized_infere"
      "nce\030\002 \001(\010:\004true\022/\n\rforce_backend\030\003 \001(\0162\030"
      ".tflite.proto.GPUBackend\022R\n\023inference_pr"
      "iority1\030\004 \001(\0162\".tflite.proto.GPUInferenc"
      "ePriority:\021GPU_PRIORITY_AUTO\022R\n\023inferenc"
      "e_priority2\030\005 \001(\0162\".tflite.proto.GPUInfe"
      "rencePriority:\021GPU_PRIORITY_AUTO\022R\n\023infe"
      "rence_priority3\030\006 \001(\0162\".tflite.proto.GPU"
      "InferencePriority:\021GPU_PRIORITY_AUTO\022=\n\024"
      "inference_preference\030\007 \001(\0162\037.tflite.prot"
      "o.GPUInferenceUsage\022\027\n\017cache_directory\030\010"
      " \001(\t\022\023\n\013model_token\030\t \001(\t\"w\n\017HexagonSett"
      "ings\022\023\n\013debug_level\030\001 \001(\005\022\027\n\017powersave_l"
      "evel\030\002 \001(\005\022\033\n\023print_graph_profile\030\003 \001(\010\022"
      "\031\n\021print_graph_debug\030\004 \001(\010\"&\n\017XNNPackSet"
      "tings\022\023\n\013num_threads\030\001 \001(\005\"\372\001\n\016CoreMLSet"
      "tings\022D\n\017enabled_devices\030\001 \001(\0162+.tflite."
      "proto.CoreMLSettings.EnabledDevices\022\026\n\016c"
      "oreml_version\030\002 \001(\005\022#\n\030max_delegated_par"
      "titions\030\003 \001(\005:\0010\022\"\n\027min_nodes_per_partit"
      "ion\030\004 \001(\005:\0012\"A\n\016EnabledDevices\022\017\n\013DEVICE"
      "S_ALL\020\000\022\036\n\032DEVICES_WITH_NEURAL_ENGINE\020\001\""
      "\344\001\n\021EdgeTpuDeviceSpec\022C\n\rplatform_type\030\001"
      " \001(\0162,.tflite.proto.EdgeTpuDeviceSpec.Pl"
      "atformType\022\021\n\tnum_chips\030\002 \001(\005\022\024\n\014device_"
      "paths\030\003 \003(\t\022\023\n\013chip_family\030\004 \001(\005\"L\n\014Plat"
      "formType\022\010\n\004MMIO\020\000\022\r\n\tREFERENCE\020\001\022\r\n\tSIM"
      "ULATOR\020\002\022\024\n\020REMOTE_SIMULATOR\020\003\"x\n\032EdgeTp"
      "uInactivePowerConfig\022=\n\024inactive_power_s"
      "tate\030\001 \001(\0162\037.tflite.proto.EdgeTpuPowerSt"
      "ate\022\033\n\023inactive_timeout_us\030\002 \001(\003\"\273\004\n\017Edg"
      "eTpuSettings\022>\n\025inference_power_state\030\001 "
      "\001(\0162\037.tflite.proto.EdgeTpuPowerState\022H\n\026"
      "inactive_power_configs\030\002 \003(\0132(.tflite.pr"
      "oto.EdgeTpuInactivePowerConfig\022\036\n\022infere"
      "nce_priority\030\003 \001(\005:\002-1\022<\n\023edgetpu_device"
      "_spec\030\004 \001(\0132\037.tflite.proto.EdgeTpuDevice"
      "Spec\022\023\n\013model_token\030\005 \001(\t\022P\n\025float_trunc"
      "ation_type\030\006 \001(\01621.tflite.proto.EdgeTpuS"
      "ettings.FloatTruncationType\022H\n\tqos_class"
      "\030\007 \001(\0162&.tflite.proto.EdgeTpuSettings.Qo"
      "sClass:\rQOS_UNDEFINED\"Q\n\023FloatTruncation"
      "Type\022\017\n\013UNSPECIFIED\020\000\022\021\n\rNO_TRUNCATION\020\001"
      "\022\014\n\010BFLOAT16\020\002\022\010\n\004HALF\020\003\"<\n\010QosClass\022\021\n\r"
      "QOS_UNDEFINED\020\000\022\017\n\013BEST_EFFORT\020\001\022\014\n\010REAL"
      "TIME\020\002\"\356\001\n\rCoralSettings\022\016\n\006device\030\001 \001(\t"
      "\022E\n\013performance\030\002 \001(\0162\'.tflite.proto.Cor"
      "alSettings.Performance:\007MAXIMUM\022\026\n\016usb_a"
      "lways_dfu\030\003 \001(\010\022$\n\034usb_max_bulk_in_queue"
      "_length\030\004 \001(\005\"H\n\013Performance\022\r\n\tUNDEFINE"
      "D\020\000\022\013\n\007MAXIMUM\020\001\022\010\n\004HIGH\020\002\022\n\n\006MEDIUM\020\003\022\007"
      "\n\003LOW\020\004\"&\n\013CPUSettings\022\027\n\013num_threads\030\001 "
      "\001(\005:\002-1\"\305\004\n\016TFLiteSettings\022(\n\010delegate\030\001"
      " \001(\0162\026.tflite.proto.Delegate\0223\n\016nnapi_se"
      "ttings\030\002 \001(\0132\033.tflite.proto.NNAPISetting"
      "s\022/\n\014gpu_settings\030\003 \001(\0132\031.tflite.proto.G"
      "PUSettings\0227\n\020hexagon_settings\030\004 \001(\0132\035.t"
      "flite.proto.HexagonSettings\0227\n\020xnnpack_s"
      "ettings\030\005 \001(\0132\035.tflite.proto.XNNPackSett"
      "ings\0225\n\017coreml_settings\030\013 \001(\0132\034.tflite.p"
      "roto.CoreMLSettings\022/\n\014cpu_settings\030\006 \001("
      "\0132\031.tflite.proto.CPUSettings\022 \n\030max_dele"
      "gated_partitions\030\007 \001(\005\0227\n\020edgetpu_settin"
      "gs\030\010 \001(\0132\035.tflite.proto.EdgeTpuSettings\022"
      "3\n\016coral_settings\030\n \001(\0132\033.tflite.proto.C"
      "oralSettings\0229\n\021fallback_settings\030\t \001(\0132"
      "\036.tflite.proto.FallbackSettings\"~\n\020Fallb"
      "ackSettings\0225\n-allow_automatic_fallback_"
      "on_compilation_error\030\007 \001(\010\0223\n+allow_auto"
      "matic_fallback_on_execution_error\030\010 \001(\010\""
      "3\n\017BenchmarkMetric\022\014\n\004name\030\001 \001(\t\022\022\n\006valu"
      "es\030\002 \003(\002B\002\020\001\"\247\001\n\017BenchmarkResult\022\"\n\026init"
      "ialization_time_us\030\001 \003(\003B\002\020\001\022\035\n\021inferenc"
      "e_time_us\030\002 \003(\003B\002\020\001\022\025\n\rmax_memory_kb\030\003 \001"
      "(\005\022\n\n\002ok\030\004 \001(\010\022.\n\007metrics\030\005 \003(\0132\035.tflite"
      ".proto.BenchmarkMetric\"g\n\tErrorCode\022&\n\006s"
      "ource\030\001 \001(\0162\026.tflite.proto.Delegate\022\024\n\014t"
      "flite_error\030\002 \001(\005\022\034\n\024underlying_api_erro"
      "r\030\003 \001(\003\"\260\001\n\016BenchmarkError\022+\n\005stage\030\001 \001("
      "\0162\034.tflite.proto.BenchmarkStage\022\021\n\texit_"
      "code\030\002 \001(\005\022\016\n\006signal\030\003 \001(\005\022+\n\nerror_code"
      "\030\004 \003(\0132\027.tflite.proto.ErrorCode\022!\n\031mini_"
      "benchmark_error_code\030\005 \001(\005\"\204\002\n\016Benchmark"
      "Event\0225\n\017tflite_settings\030\001 \001(\0132\034.tflite."
      "proto.TFLiteSettings\0224\n\nevent_type\030\002 \001(\016"
      "2 .tflite.proto.BenchmarkEventType\022-\n\006re"
      "sult\030\003 \001(\0132\035.tflite.proto.BenchmarkResul"
      "t\022+\n\005error\030\004 \001(\0132\034.tflite.proto.Benchmar"
      "kError\022\023\n\013boottime_us\030\005 \001(\003\022\024\n\014wallclock"
      "_us\030\006 \001(\003\"\223\001\n\030BestAccelerationDecision\022\037"
      "\n\027number_of_source_events\030\001 \001(\005\0227\n\021min_l"
      "atency_event\030\002 \001(\0132\034.tflite.proto.Benchm"
      "arkEvent\022\035\n\025min_inference_time_us\030\003 \001(\003\""
      "\?\n\036BenchmarkInitializationFailure\022\035\n\025ini"
      "tialization_status\030\001 \001(\005\"\204\002\n\022MiniBenchma"
      "rkEvent\022\035\n\025is_log_flushing_event\030\001 \001(\010\022J"
      "\n\032best_acceleration_decision\030\002 \001(\0132&.tfl"
      "ite.proto.BestAccelerationDecision\022L\n\026in"
      "itialization_failure\030\003 \001(\0132,.tflite.prot"
      "o.BenchmarkInitializationFailure\0225\n\017benc"
      "hmark_event\030\004 \001(\0132\034.tflite.proto.Benchma"
      "rkEvent\"I\n\tModelFile\022\020\n\010filename\030\001 \001(\t\022\n"
      "\n\002fd\030\002 \001(\003\022\016\n\006offset\030\003 \001(\003\022\016\n\006length\030\004 \001"
      "(\003\"O\n\025BenchmarkStoragePaths\022\031\n\021storage_f"
      "ile_path\030\001 \001(\t\022\033\n\023data_directory_path\030\002 "
      "\001(\t\"\270\001\n\025MinibenchmarkSettings\0226\n\020setting"
      "s_to_test\030\001 \003(\0132\034.tflite.proto.TFLiteSet"
      "tings\022+\n\nmodel_file\030\002 \001(\0132\027.tflite.proto"
      ".ModelFile\022:\n\rstorage_paths\030\003 \001(\0132#.tfli"
      "te.proto.BenchmarkStoragePaths*M\n\023Execut"
      "ionPreference\022\007\n\003ANY\020\000\022\017\n\013LOW_LATENCY\020\001\022"
      "\r\n\tLOW_POWER\020\002\022\r\n\tFORCE_CPU\020\003*o\n\010Delegat"
      "e\022\010\n\004NONE\020\000\022\t\n\005NNAPI\020\001\022\007\n\003GPU\020\002\022\013\n\007HEXAG"
      "ON\020\003\022\013\n\007XNNPACK\020\004\022\013\n\007EDGETPU\020\005\022\021\n\rEDGETP"
      "U_CORAL\020\006\022\013\n\007CORE_ML\020\007*w\n\030NNAPIExecution"
      "Preference\022\r\n\tUNDEFINED\020\000\022\023\n\017NNAPI_LOW_P"
      "OWER\020\001\022\034\n\030NNAPI_FAST_SINGLE_ANSWER\020\002\022\031\n\025"
      "NNAPI_SUSTAINED_SPEED\020\003*\202\001\n\026NNAPIExecuti"
      "onPriority\022\034\n\030NNAPI_PRIORITY_UNDEFINED\020\000"
      "\022\026\n\022NNAPI_PRIORITY_LOW\020\001\022\031\n\025NNAPI_PRIORI"
      "TY_MEDIUM\020\002\022\027\n\023NNAPI_PRIORITY_HIGH\020\003*/\n\n"
      "GPUBackend\022\t\n\005UNSET\020\000\022\n\n\006OPENCL\020\001\022\n\n\006OPE"
      "NGL\020\002*\216\001\n\024GPUInferencePriority\022\025\n\021GPU_PR"
      "IORITY_AUTO\020\000\022\036\n\032GPU_PRIORITY_MAX_PRECIS"
      "ION\020\001\022\034\n\030GPU_PRIORITY_MIN_LATENCY\020\002\022!\n\035G"
      "PU_PRIORITY_MIN_MEMORY_USAGE\020\003*r\n\021GPUInf"
      "erenceUsage\022/\n+GPU_INFERENCE_PREFERENCE_"
      "FAST_SINGLE_ANSWER\020\000\022,\n(GPU_INFERENCE_PR"
      "EFERENCE_SUSTAINED_SPEED\020\001*\255\001\n\021EdgeTpuPo"
      "werState\022\030\n\024UNDEFINED_POWERSTATE\020\000\022\020\n\014TP"
      "U_CORE_OFF\020\001\022\t\n\005READY\020\002\022\024\n\020ACTIVE_MIN_PO"
      "WER\020\003\022\031\n\025ACTIVE_VERY_LOW_POWER\020\004\022\024\n\020ACTI"
      "VE_LOW_POWER\020\005\022\n\n\006ACTIVE\020\006\022\016\n\nOVER_DRIVE"
      "\020\007*x\n\022BenchmarkEventType\022\"\n\036UNDEFINED_BE"
      "NCHMARK_EVENT_TYPE\020\000\022\t\n\005START\020\001\022\007\n\003END\020\002"
      "\022\t\n\005ERROR\020\003\022\n\n\006LOGGED\020\004\022\023\n\017RECOVERED_ERR"
      "OR\020\005*@\n\016BenchmarkStage\022\013\n\007UNKNOWN\020\000\022\022\n\016I"
      "NITIALIZATION\020\001\022\r\n\tINFERENCE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6430);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/lite/experimental/acceleration/configuration/configuration.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto
namespace tflite {
namespace proto {
const ::google::protobuf::EnumDescriptor* CoreMLSettings_EnabledDevices_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[0];
}
bool CoreMLSettings_EnabledDevices_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CoreMLSettings_EnabledDevices CoreMLSettings::DEVICES_ALL;
const CoreMLSettings_EnabledDevices CoreMLSettings::DEVICES_WITH_NEURAL_ENGINE;
const CoreMLSettings_EnabledDevices CoreMLSettings::EnabledDevices_MIN;
const CoreMLSettings_EnabledDevices CoreMLSettings::EnabledDevices_MAX;
const int CoreMLSettings::EnabledDevices_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EdgeTpuDeviceSpec_PlatformType_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[1];
}
bool EdgeTpuDeviceSpec_PlatformType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EdgeTpuDeviceSpec_PlatformType EdgeTpuDeviceSpec::MMIO;
const EdgeTpuDeviceSpec_PlatformType EdgeTpuDeviceSpec::REFERENCE;
const EdgeTpuDeviceSpec_PlatformType EdgeTpuDeviceSpec::SIMULATOR;
const EdgeTpuDeviceSpec_PlatformType EdgeTpuDeviceSpec::REMOTE_SIMULATOR;
const EdgeTpuDeviceSpec_PlatformType EdgeTpuDeviceSpec::PlatformType_MIN;
const EdgeTpuDeviceSpec_PlatformType EdgeTpuDeviceSpec::PlatformType_MAX;
const int EdgeTpuDeviceSpec::PlatformType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EdgeTpuSettings_FloatTruncationType_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[2];
}
bool EdgeTpuSettings_FloatTruncationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EdgeTpuSettings_FloatTruncationType EdgeTpuSettings::UNSPECIFIED;
const EdgeTpuSettings_FloatTruncationType EdgeTpuSettings::NO_TRUNCATION;
const EdgeTpuSettings_FloatTruncationType EdgeTpuSettings::BFLOAT16;
const EdgeTpuSettings_FloatTruncationType EdgeTpuSettings::HALF;
const EdgeTpuSettings_FloatTruncationType EdgeTpuSettings::FloatTruncationType_MIN;
const EdgeTpuSettings_FloatTruncationType EdgeTpuSettings::FloatTruncationType_MAX;
const int EdgeTpuSettings::FloatTruncationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EdgeTpuSettings_QosClass_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[3];
}
bool EdgeTpuSettings_QosClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EdgeTpuSettings_QosClass EdgeTpuSettings::QOS_UNDEFINED;
const EdgeTpuSettings_QosClass EdgeTpuSettings::BEST_EFFORT;
const EdgeTpuSettings_QosClass EdgeTpuSettings::REALTIME;
const EdgeTpuSettings_QosClass EdgeTpuSettings::QosClass_MIN;
const EdgeTpuSettings_QosClass EdgeTpuSettings::QosClass_MAX;
const int EdgeTpuSettings::QosClass_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CoralSettings_Performance_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[4];
}
bool CoralSettings_Performance_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CoralSettings_Performance CoralSettings::UNDEFINED;
const CoralSettings_Performance CoralSettings::MAXIMUM;
const CoralSettings_Performance CoralSettings::HIGH;
const CoralSettings_Performance CoralSettings::MEDIUM;
const CoralSettings_Performance CoralSettings::LOW;
const CoralSettings_Performance CoralSettings::Performance_MIN;
const CoralSettings_Performance CoralSettings::Performance_MAX;
const int CoralSettings::Performance_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExecutionPreference_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[5];
}
bool ExecutionPreference_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Delegate_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[6];
}
bool Delegate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* NNAPIExecutionPreference_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[7];
}
bool NNAPIExecutionPreference_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* NNAPIExecutionPriority_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[8];
}
bool NNAPIExecutionPriority_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GPUBackend_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[9];
}
bool GPUBackend_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GPUInferencePriority_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[10];
}
bool GPUInferencePriority_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GPUInferenceUsage_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[11];
}
bool GPUInferenceUsage_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EdgeTpuPowerState_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[12];
}
bool EdgeTpuPowerState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BenchmarkEventType_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[13];
}
bool BenchmarkEventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BenchmarkStage_descriptor() {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_enum_descriptors[14];
}
bool BenchmarkStage_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ComputeSettings::InitAsDefaultInstance() {
  ::tflite::proto::_ComputeSettings_default_instance_._instance.get_mutable()->tflite_settings_ = const_cast< ::tflite::proto::TFLiteSettings*>(
      ::tflite::proto::TFLiteSettings::internal_default_instance());
  ::tflite::proto::_ComputeSettings_default_instance_._instance.get_mutable()->settings_to_test_locally_ = const_cast< ::tflite::proto::MinibenchmarkSettings*>(
      ::tflite::proto::MinibenchmarkSettings::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputeSettings::kPreferenceFieldNumber;
const int ComputeSettings::kTfliteSettingsFieldNumber;
const int ComputeSettings::kModelNamespaceForStatisticsFieldNumber;
const int ComputeSettings::kModelIdentifierForStatisticsFieldNumber;
const int ComputeSettings::kSettingsToTestLocallyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputeSettings::ComputeSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_ComputeSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.ComputeSettings)
}
ComputeSettings::ComputeSettings(const ComputeSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_namespace_for_statistics_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_namespace_for_statistics()) {
    model_namespace_for_statistics_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_namespace_for_statistics_);
  }
  model_identifier_for_statistics_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_identifier_for_statistics()) {
    model_identifier_for_statistics_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_identifier_for_statistics_);
  }
  if (from.has_tflite_settings()) {
    tflite_settings_ = new ::tflite::proto::TFLiteSettings(*from.tflite_settings_);
  } else {
    tflite_settings_ = NULL;
  }
  if (from.has_settings_to_test_locally()) {
    settings_to_test_locally_ = new ::tflite::proto::MinibenchmarkSettings(*from.settings_to_test_locally_);
  } else {
    settings_to_test_locally_ = NULL;
  }
  preference_ = from.preference_;
  // @@protoc_insertion_point(copy_constructor:tflite.proto.ComputeSettings)
}

void ComputeSettings::SharedCtor() {
  model_namespace_for_statistics_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_identifier_for_statistics_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tflite_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preference_) -
      reinterpret_cast<char*>(&tflite_settings_)) + sizeof(preference_));
}

ComputeSettings::~ComputeSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.ComputeSettings)
  SharedDtor();
}

void ComputeSettings::SharedDtor() {
  model_namespace_for_statistics_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_identifier_for_statistics_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tflite_settings_;
  if (this != internal_default_instance()) delete settings_to_test_locally_;
}

void ComputeSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComputeSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputeSettings& ComputeSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_ComputeSettings.base);
  return *internal_default_instance();
}


void ComputeSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.ComputeSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      model_namespace_for_statistics_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      model_identifier_for_statistics_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(tflite_settings_ != NULL);
      tflite_settings_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(settings_to_test_locally_ != NULL);
      settings_to_test_locally_->Clear();
    }
  }
  preference_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ComputeSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.ComputeSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.ExecutionPreference preference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::ExecutionPreference_IsValid(value)) {
            set_preference(static_cast< ::tflite::proto::ExecutionPreference >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.TFLiteSettings tflite_settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tflite_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model_namespace_for_statistics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_namespace_for_statistics()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_namespace_for_statistics().data(), static_cast<int>(this->model_namespace_for_statistics().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.ComputeSettings.model_namespace_for_statistics");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model_identifier_for_statistics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_identifier_for_statistics()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_identifier_for_statistics().data(), static_cast<int>(this->model_identifier_for_statistics().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.ComputeSettings.model_identifier_for_statistics");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.MinibenchmarkSettings settings_to_test_locally = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settings_to_test_locally()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.ComputeSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.ComputeSettings)
  return false;
#undef DO_
}

void ComputeSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.ComputeSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.ExecutionPreference preference = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->preference(), output);
  }

  // optional .tflite.proto.TFLiteSettings tflite_settings = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_tflite_settings(), output);
  }

  // optional string model_namespace_for_statistics = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_namespace_for_statistics().data(), static_cast<int>(this->model_namespace_for_statistics().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.ComputeSettings.model_namespace_for_statistics");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->model_namespace_for_statistics(), output);
  }

  // optional string model_identifier_for_statistics = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_identifier_for_statistics().data(), static_cast<int>(this->model_identifier_for_statistics().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.ComputeSettings.model_identifier_for_statistics");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->model_identifier_for_statistics(), output);
  }

  // optional .tflite.proto.MinibenchmarkSettings settings_to_test_locally = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_settings_to_test_locally(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.ComputeSettings)
}

::google::protobuf::uint8* ComputeSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.ComputeSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.ExecutionPreference preference = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->preference(), target);
  }

  // optional .tflite.proto.TFLiteSettings tflite_settings = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_tflite_settings(), deterministic, target);
  }

  // optional string model_namespace_for_statistics = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_namespace_for_statistics().data(), static_cast<int>(this->model_namespace_for_statistics().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.ComputeSettings.model_namespace_for_statistics");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->model_namespace_for_statistics(), target);
  }

  // optional string model_identifier_for_statistics = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_identifier_for_statistics().data(), static_cast<int>(this->model_identifier_for_statistics().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.ComputeSettings.model_identifier_for_statistics");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->model_identifier_for_statistics(), target);
  }

  // optional .tflite.proto.MinibenchmarkSettings settings_to_test_locally = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_settings_to_test_locally(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.ComputeSettings)
  return target;
}

size_t ComputeSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.ComputeSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string model_namespace_for_statistics = 3;
    if (has_model_namespace_for_statistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_namespace_for_statistics());
    }

    // optional string model_identifier_for_statistics = 4;
    if (has_model_identifier_for_statistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_identifier_for_statistics());
    }

    // optional .tflite.proto.TFLiteSettings tflite_settings = 2;
    if (has_tflite_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tflite_settings_);
    }

    // optional .tflite.proto.MinibenchmarkSettings settings_to_test_locally = 5;
    if (has_settings_to_test_locally()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *settings_to_test_locally_);
    }

    // optional .tflite.proto.ExecutionPreference preference = 1;
    if (has_preference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->preference());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputeSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.ComputeSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputeSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputeSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.ComputeSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.ComputeSettings)
    MergeFrom(*source);
  }
}

void ComputeSettings::MergeFrom(const ComputeSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.ComputeSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_model_namespace_for_statistics();
      model_namespace_for_statistics_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_namespace_for_statistics_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_model_identifier_for_statistics();
      model_identifier_for_statistics_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_identifier_for_statistics_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_tflite_settings()->::tflite::proto::TFLiteSettings::MergeFrom(from.tflite_settings());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_settings_to_test_locally()->::tflite::proto::MinibenchmarkSettings::MergeFrom(from.settings_to_test_locally());
    }
    if (cached_has_bits & 0x00000010u) {
      preference_ = from.preference_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ComputeSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.ComputeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputeSettings::CopyFrom(const ComputeSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.ComputeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputeSettings::IsInitialized() const {
  return true;
}

void ComputeSettings::Swap(ComputeSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputeSettings::InternalSwap(ComputeSettings* other) {
  using std::swap;
  model_namespace_for_statistics_.Swap(&other->model_namespace_for_statistics_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_identifier_for_statistics_.Swap(&other->model_identifier_for_statistics_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tflite_settings_, other->tflite_settings_);
  swap(settings_to_test_locally_, other->settings_to_test_locally_);
  swap(preference_, other->preference_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComputeSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NNAPISettings::InitAsDefaultInstance() {
  ::tflite::proto::_NNAPISettings_default_instance_._instance.get_mutable()->fallback_settings_ = const_cast< ::tflite::proto::FallbackSettings*>(
      ::tflite::proto::FallbackSettings::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NNAPISettings::kAcceleratorNameFieldNumber;
const int NNAPISettings::kCacheDirectoryFieldNumber;
const int NNAPISettings::kModelTokenFieldNumber;
const int NNAPISettings::kExecutionPreferenceFieldNumber;
const int NNAPISettings::kNoOfNnapiInstancesToCacheFieldNumber;
const int NNAPISettings::kFallbackSettingsFieldNumber;
const int NNAPISettings::kAllowNnapiCpuOnAndroid10PlusFieldNumber;
const int NNAPISettings::kExecutionPriorityFieldNumber;
const int NNAPISettings::kAllowDynamicDimensionsFieldNumber;
const int NNAPISettings::kAllowFp16PrecisionForFp32FieldNumber;
const int NNAPISettings::kUseBurstComputationFieldNumber;
const int NNAPISettings::kSupportLibraryHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NNAPISettings::NNAPISettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_NNAPISettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.NNAPISettings)
}
NNAPISettings::NNAPISettings(const NNAPISettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accelerator_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_accelerator_name()) {
    accelerator_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_name_);
  }
  cache_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cache_directory()) {
    cache_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_directory_);
  }
  model_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_token()) {
    model_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_token_);
  }
  if (from.has_fallback_settings()) {
    fallback_settings_ = new ::tflite::proto::FallbackSettings(*from.fallback_settings_);
  } else {
    fallback_settings_ = NULL;
  }
  ::memcpy(&execution_preference_, &from.execution_preference_,
    static_cast<size_t>(reinterpret_cast<char*>(&support_library_handle_) -
    reinterpret_cast<char*>(&execution_preference_)) + sizeof(support_library_handle_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.NNAPISettings)
}

void NNAPISettings::SharedCtor() {
  accelerator_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cache_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fallback_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&support_library_handle_) -
      reinterpret_cast<char*>(&fallback_settings_)) + sizeof(support_library_handle_));
}

NNAPISettings::~NNAPISettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.NNAPISettings)
  SharedDtor();
}

void NNAPISettings::SharedDtor() {
  accelerator_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cache_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fallback_settings_;
}

void NNAPISettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NNAPISettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NNAPISettings& NNAPISettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_NNAPISettings.base);
  return *internal_default_instance();
}


void NNAPISettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.NNAPISettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      accelerator_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      cache_directory_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      model_token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(fallback_settings_ != NULL);
      fallback_settings_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&execution_preference_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allow_nnapi_cpu_on_android_10_plus_) -
        reinterpret_cast<char*>(&execution_preference_)) + sizeof(allow_nnapi_cpu_on_android_10_plus_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&allow_dynamic_dimensions_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&support_library_handle_) -
        reinterpret_cast<char*>(&allow_dynamic_dimensions_)) + sizeof(support_library_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NNAPISettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.NNAPISettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string accelerator_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accelerator_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accelerator_name().data(), static_cast<int>(this->accelerator_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.NNAPISettings.accelerator_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cache_directory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cache_directory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cache_directory().data(), static_cast<int>(this->cache_directory().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.NNAPISettings.cache_directory");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_token().data(), static_cast<int>(this->model_token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.NNAPISettings.model_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.NNAPIExecutionPreference execution_preference = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::NNAPIExecutionPreference_IsValid(value)) {
            set_execution_preference(static_cast< ::tflite::proto::NNAPIExecutionPreference >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 no_of_nnapi_instances_to_cache = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_no_of_nnapi_instances_to_cache();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_of_nnapi_instances_to_cache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.FallbackSettings fallback_settings = 6 [deprecated = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fallback_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_nnapi_cpu_on_android_10_plus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_allow_nnapi_cpu_on_android_10_plus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_nnapi_cpu_on_android_10_plus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.NNAPIExecutionPriority execution_priority = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::NNAPIExecutionPriority_IsValid(value)) {
            set_execution_priority(static_cast< ::tflite::proto::NNAPIExecutionPriority >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_dynamic_dimensions = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_allow_dynamic_dimensions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_dynamic_dimensions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_fp16_precision_for_fp32 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_allow_fp16_precision_for_fp32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_fp16_precision_for_fp32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_burst_computation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_use_burst_computation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_burst_computation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 support_library_handle = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_support_library_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &support_library_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.NNAPISettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.NNAPISettings)
  return false;
#undef DO_
}

void NNAPISettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.NNAPISettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string accelerator_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accelerator_name().data(), static_cast<int>(this->accelerator_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.NNAPISettings.accelerator_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accelerator_name(), output);
  }

  // optional string cache_directory = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cache_directory().data(), static_cast<int>(this->cache_directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.NNAPISettings.cache_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cache_directory(), output);
  }

  // optional string model_token = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_token().data(), static_cast<int>(this->model_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.NNAPISettings.model_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->model_token(), output);
  }

  // optional .tflite.proto.NNAPIExecutionPreference execution_preference = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->execution_preference(), output);
  }

  // optional int32 no_of_nnapi_instances_to_cache = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->no_of_nnapi_instances_to_cache(), output);
  }

  // optional .tflite.proto.FallbackSettings fallback_settings = 6 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_fallback_settings(), output);
  }

  // optional bool allow_nnapi_cpu_on_android_10_plus = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->allow_nnapi_cpu_on_android_10_plus(), output);
  }

  // optional .tflite.proto.NNAPIExecutionPriority execution_priority = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->execution_priority(), output);
  }

  // optional bool allow_dynamic_dimensions = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->allow_dynamic_dimensions(), output);
  }

  // optional bool allow_fp16_precision_for_fp32 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->allow_fp16_precision_for_fp32(), output);
  }

  // optional bool use_burst_computation = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->use_burst_computation(), output);
  }

  // optional int64 support_library_handle = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->support_library_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.NNAPISettings)
}

::google::protobuf::uint8* NNAPISettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.NNAPISettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string accelerator_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accelerator_name().data(), static_cast<int>(this->accelerator_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.NNAPISettings.accelerator_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accelerator_name(), target);
  }

  // optional string cache_directory = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cache_directory().data(), static_cast<int>(this->cache_directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.NNAPISettings.cache_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cache_directory(), target);
  }

  // optional string model_token = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_token().data(), static_cast<int>(this->model_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.NNAPISettings.model_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->model_token(), target);
  }

  // optional .tflite.proto.NNAPIExecutionPreference execution_preference = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->execution_preference(), target);
  }

  // optional int32 no_of_nnapi_instances_to_cache = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->no_of_nnapi_instances_to_cache(), target);
  }

  // optional .tflite.proto.FallbackSettings fallback_settings = 6 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_fallback_settings(), deterministic, target);
  }

  // optional bool allow_nnapi_cpu_on_android_10_plus = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->allow_nnapi_cpu_on_android_10_plus(), target);
  }

  // optional .tflite.proto.NNAPIExecutionPriority execution_priority = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->execution_priority(), target);
  }

  // optional bool allow_dynamic_dimensions = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->allow_dynamic_dimensions(), target);
  }

  // optional bool allow_fp16_precision_for_fp32 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->allow_fp16_precision_for_fp32(), target);
  }

  // optional bool use_burst_computation = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->use_burst_computation(), target);
  }

  // optional int64 support_library_handle = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->support_library_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.NNAPISettings)
  return target;
}

size_t NNAPISettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.NNAPISettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string accelerator_name = 1;
    if (has_accelerator_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accelerator_name());
    }

    // optional string cache_directory = 2;
    if (has_cache_directory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cache_directory());
    }

    // optional string model_token = 3;
    if (has_model_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_token());
    }

    // optional .tflite.proto.FallbackSettings fallback_settings = 6 [deprecated = true];
    if (has_fallback_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fallback_settings_);
    }

    // optional .tflite.proto.NNAPIExecutionPreference execution_preference = 4;
    if (has_execution_preference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->execution_preference());
    }

    // optional int32 no_of_nnapi_instances_to_cache = 5;
    if (has_no_of_nnapi_instances_to_cache()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_of_nnapi_instances_to_cache());
    }

    // optional .tflite.proto.NNAPIExecutionPriority execution_priority = 8;
    if (has_execution_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->execution_priority());
    }

    // optional bool allow_nnapi_cpu_on_android_10_plus = 7;
    if (has_allow_nnapi_cpu_on_android_10_plus()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional bool allow_dynamic_dimensions = 9;
    if (has_allow_dynamic_dimensions()) {
      total_size += 1 + 1;
    }

    // optional bool allow_fp16_precision_for_fp32 = 10;
    if (has_allow_fp16_precision_for_fp32()) {
      total_size += 1 + 1;
    }

    // optional bool use_burst_computation = 11;
    if (has_use_burst_computation()) {
      total_size += 1 + 1;
    }

    // optional int64 support_library_handle = 12;
    if (has_support_library_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->support_library_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NNAPISettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.NNAPISettings)
  GOOGLE_DCHECK_NE(&from, this);
  const NNAPISettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NNAPISettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.NNAPISettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.NNAPISettings)
    MergeFrom(*source);
  }
}

void NNAPISettings::MergeFrom(const NNAPISettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.NNAPISettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_accelerator_name();
      accelerator_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cache_directory();
      cache_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_directory_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_model_token();
      model_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_token_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_fallback_settings()->::tflite::proto::FallbackSettings::MergeFrom(from.fallback_settings());
    }
    if (cached_has_bits & 0x00000010u) {
      execution_preference_ = from.execution_preference_;
    }
    if (cached_has_bits & 0x00000020u) {
      no_of_nnapi_instances_to_cache_ = from.no_of_nnapi_instances_to_cache_;
    }
    if (cached_has_bits & 0x00000040u) {
      execution_priority_ = from.execution_priority_;
    }
    if (cached_has_bits & 0x00000080u) {
      allow_nnapi_cpu_on_android_10_plus_ = from.allow_nnapi_cpu_on_android_10_plus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      allow_dynamic_dimensions_ = from.allow_dynamic_dimensions_;
    }
    if (cached_has_bits & 0x00000200u) {
      allow_fp16_precision_for_fp32_ = from.allow_fp16_precision_for_fp32_;
    }
    if (cached_has_bits & 0x00000400u) {
      use_burst_computation_ = from.use_burst_computation_;
    }
    if (cached_has_bits & 0x00000800u) {
      support_library_handle_ = from.support_library_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NNAPISettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.NNAPISettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NNAPISettings::CopyFrom(const NNAPISettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.NNAPISettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NNAPISettings::IsInitialized() const {
  return true;
}

void NNAPISettings::Swap(NNAPISettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NNAPISettings::InternalSwap(NNAPISettings* other) {
  using std::swap;
  accelerator_name_.Swap(&other->accelerator_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cache_directory_.Swap(&other->cache_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_token_.Swap(&other->model_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fallback_settings_, other->fallback_settings_);
  swap(execution_preference_, other->execution_preference_);
  swap(no_of_nnapi_instances_to_cache_, other->no_of_nnapi_instances_to_cache_);
  swap(execution_priority_, other->execution_priority_);
  swap(allow_nnapi_cpu_on_android_10_plus_, other->allow_nnapi_cpu_on_android_10_plus_);
  swap(allow_dynamic_dimensions_, other->allow_dynamic_dimensions_);
  swap(allow_fp16_precision_for_fp32_, other->allow_fp16_precision_for_fp32_);
  swap(use_burst_computation_, other->use_burst_computation_);
  swap(support_library_handle_, other->support_library_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NNAPISettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GPUSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GPUSettings::kIsPrecisionLossAllowedFieldNumber;
const int GPUSettings::kEnableQuantizedInferenceFieldNumber;
const int GPUSettings::kForceBackendFieldNumber;
const int GPUSettings::kInferencePriority1FieldNumber;
const int GPUSettings::kInferencePriority2FieldNumber;
const int GPUSettings::kInferencePriority3FieldNumber;
const int GPUSettings::kInferencePreferenceFieldNumber;
const int GPUSettings::kCacheDirectoryFieldNumber;
const int GPUSettings::kModelTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GPUSettings::GPUSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_GPUSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.GPUSettings)
}
GPUSettings::GPUSettings(const GPUSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cache_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cache_directory()) {
    cache_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_directory_);
  }
  model_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_token()) {
    model_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_token_);
  }
  ::memcpy(&is_precision_loss_allowed_, &from.is_precision_loss_allowed_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_quantized_inference_) -
    reinterpret_cast<char*>(&is_precision_loss_allowed_)) + sizeof(enable_quantized_inference_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.GPUSettings)
}

void GPUSettings::SharedCtor() {
  cache_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_precision_loss_allowed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inference_preference_) -
      reinterpret_cast<char*>(&is_precision_loss_allowed_)) + sizeof(inference_preference_));
  enable_quantized_inference_ = true;
}

GPUSettings::~GPUSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.GPUSettings)
  SharedDtor();
}

void GPUSettings::SharedDtor() {
  cache_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GPUSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GPUSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GPUSettings& GPUSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_GPUSettings.base);
  return *internal_default_instance();
}


void GPUSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.GPUSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      cache_directory_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      model_token_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&is_precision_loss_allowed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&inference_preference_) -
        reinterpret_cast<char*>(&is_precision_loss_allowed_)) + sizeof(inference_preference_));
  }
  enable_quantized_inference_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GPUSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.GPUSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_precision_loss_allowed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_precision_loss_allowed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_precision_loss_allowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_quantized_inference = 2 [default = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_enable_quantized_inference();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_quantized_inference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.GPUBackend force_backend = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::GPUBackend_IsValid(value)) {
            set_force_backend(static_cast< ::tflite::proto::GPUBackend >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.GPUInferencePriority inference_priority1 = 4 [default = GPU_PRIORITY_AUTO];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::GPUInferencePriority_IsValid(value)) {
            set_inference_priority1(static_cast< ::tflite::proto::GPUInferencePriority >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.GPUInferencePriority inference_priority2 = 5 [default = GPU_PRIORITY_AUTO];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::GPUInferencePriority_IsValid(value)) {
            set_inference_priority2(static_cast< ::tflite::proto::GPUInferencePriority >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.GPUInferencePriority inference_priority3 = 6 [default = GPU_PRIORITY_AUTO];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::GPUInferencePriority_IsValid(value)) {
            set_inference_priority3(static_cast< ::tflite::proto::GPUInferencePriority >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.GPUInferenceUsage inference_preference = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::GPUInferenceUsage_IsValid(value)) {
            set_inference_preference(static_cast< ::tflite::proto::GPUInferenceUsage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cache_directory = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cache_directory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cache_directory().data(), static_cast<int>(this->cache_directory().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.GPUSettings.cache_directory");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model_token = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_token().data(), static_cast<int>(this->model_token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.GPUSettings.model_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.GPUSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.GPUSettings)
  return false;
#undef DO_
}

void GPUSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.GPUSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_precision_loss_allowed = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_precision_loss_allowed(), output);
  }

  // optional bool enable_quantized_inference = 2 [default = true];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable_quantized_inference(), output);
  }

  // optional .tflite.proto.GPUBackend force_backend = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->force_backend(), output);
  }

  // optional .tflite.proto.GPUInferencePriority inference_priority1 = 4 [default = GPU_PRIORITY_AUTO];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->inference_priority1(), output);
  }

  // optional .tflite.proto.GPUInferencePriority inference_priority2 = 5 [default = GPU_PRIORITY_AUTO];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->inference_priority2(), output);
  }

  // optional .tflite.proto.GPUInferencePriority inference_priority3 = 6 [default = GPU_PRIORITY_AUTO];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->inference_priority3(), output);
  }

  // optional .tflite.proto.GPUInferenceUsage inference_preference = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->inference_preference(), output);
  }

  // optional string cache_directory = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cache_directory().data(), static_cast<int>(this->cache_directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.GPUSettings.cache_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->cache_directory(), output);
  }

  // optional string model_token = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_token().data(), static_cast<int>(this->model_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.GPUSettings.model_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->model_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.GPUSettings)
}

::google::protobuf::uint8* GPUSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.GPUSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_precision_loss_allowed = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_precision_loss_allowed(), target);
  }

  // optional bool enable_quantized_inference = 2 [default = true];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable_quantized_inference(), target);
  }

  // optional .tflite.proto.GPUBackend force_backend = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->force_backend(), target);
  }

  // optional .tflite.proto.GPUInferencePriority inference_priority1 = 4 [default = GPU_PRIORITY_AUTO];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->inference_priority1(), target);
  }

  // optional .tflite.proto.GPUInferencePriority inference_priority2 = 5 [default = GPU_PRIORITY_AUTO];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->inference_priority2(), target);
  }

  // optional .tflite.proto.GPUInferencePriority inference_priority3 = 6 [default = GPU_PRIORITY_AUTO];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->inference_priority3(), target);
  }

  // optional .tflite.proto.GPUInferenceUsage inference_preference = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->inference_preference(), target);
  }

  // optional string cache_directory = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cache_directory().data(), static_cast<int>(this->cache_directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.GPUSettings.cache_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->cache_directory(), target);
  }

  // optional string model_token = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_token().data(), static_cast<int>(this->model_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.GPUSettings.model_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->model_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.GPUSettings)
  return target;
}

size_t GPUSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.GPUSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string cache_directory = 8;
    if (has_cache_directory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cache_directory());
    }

    // optional string model_token = 9;
    if (has_model_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_token());
    }

    // optional bool is_precision_loss_allowed = 1;
    if (has_is_precision_loss_allowed()) {
      total_size += 1 + 1;
    }

    // optional .tflite.proto.GPUBackend force_backend = 3;
    if (has_force_backend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->force_backend());
    }

    // optional .tflite.proto.GPUInferencePriority inference_priority1 = 4 [default = GPU_PRIORITY_AUTO];
    if (has_inference_priority1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->inference_priority1());
    }

    // optional .tflite.proto.GPUInferencePriority inference_priority2 = 5 [default = GPU_PRIORITY_AUTO];
    if (has_inference_priority2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->inference_priority2());
    }

    // optional .tflite.proto.GPUInferencePriority inference_priority3 = 6 [default = GPU_PRIORITY_AUTO];
    if (has_inference_priority3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->inference_priority3());
    }

    // optional .tflite.proto.GPUInferenceUsage inference_preference = 7;
    if (has_inference_preference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->inference_preference());
    }

  }
  // optional bool enable_quantized_inference = 2 [default = true];
  if (has_enable_quantized_inference()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GPUSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.GPUSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const GPUSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GPUSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.GPUSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.GPUSettings)
    MergeFrom(*source);
  }
}

void GPUSettings::MergeFrom(const GPUSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.GPUSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cache_directory();
      cache_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_directory_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_model_token();
      model_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_token_);
    }
    if (cached_has_bits & 0x00000004u) {
      is_precision_loss_allowed_ = from.is_precision_loss_allowed_;
    }
    if (cached_has_bits & 0x00000008u) {
      force_backend_ = from.force_backend_;
    }
    if (cached_has_bits & 0x00000010u) {
      inference_priority1_ = from.inference_priority1_;
    }
    if (cached_has_bits & 0x00000020u) {
      inference_priority2_ = from.inference_priority2_;
    }
    if (cached_has_bits & 0x00000040u) {
      inference_priority3_ = from.inference_priority3_;
    }
    if (cached_has_bits & 0x00000080u) {
      inference_preference_ = from.inference_preference_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_enable_quantized_inference(from.enable_quantized_inference());
  }
}

void GPUSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.GPUSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GPUSettings::CopyFrom(const GPUSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.GPUSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GPUSettings::IsInitialized() const {
  return true;
}

void GPUSettings::Swap(GPUSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GPUSettings::InternalSwap(GPUSettings* other) {
  using std::swap;
  cache_directory_.Swap(&other->cache_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_token_.Swap(&other->model_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_precision_loss_allowed_, other->is_precision_loss_allowed_);
  swap(force_backend_, other->force_backend_);
  swap(inference_priority1_, other->inference_priority1_);
  swap(inference_priority2_, other->inference_priority2_);
  swap(inference_priority3_, other->inference_priority3_);
  swap(inference_preference_, other->inference_preference_);
  swap(enable_quantized_inference_, other->enable_quantized_inference_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GPUSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HexagonSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HexagonSettings::kDebugLevelFieldNumber;
const int HexagonSettings::kPowersaveLevelFieldNumber;
const int HexagonSettings::kPrintGraphProfileFieldNumber;
const int HexagonSettings::kPrintGraphDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HexagonSettings::HexagonSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_HexagonSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.HexagonSettings)
}
HexagonSettings::HexagonSettings(const HexagonSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&debug_level_, &from.debug_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&print_graph_debug_) -
    reinterpret_cast<char*>(&debug_level_)) + sizeof(print_graph_debug_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.HexagonSettings)
}

void HexagonSettings::SharedCtor() {
  ::memset(&debug_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&print_graph_debug_) -
      reinterpret_cast<char*>(&debug_level_)) + sizeof(print_graph_debug_));
}

HexagonSettings::~HexagonSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.HexagonSettings)
  SharedDtor();
}

void HexagonSettings::SharedDtor() {
}

void HexagonSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HexagonSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HexagonSettings& HexagonSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_HexagonSettings.base);
  return *internal_default_instance();
}


void HexagonSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.HexagonSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&debug_level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&print_graph_debug_) -
        reinterpret_cast<char*>(&debug_level_)) + sizeof(print_graph_debug_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HexagonSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.HexagonSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 debug_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_debug_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &debug_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 powersave_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_powersave_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &powersave_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool print_graph_profile = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_print_graph_profile();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &print_graph_profile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool print_graph_debug = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_print_graph_debug();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &print_graph_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.HexagonSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.HexagonSettings)
  return false;
#undef DO_
}

void HexagonSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.HexagonSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 debug_level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->debug_level(), output);
  }

  // optional int32 powersave_level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->powersave_level(), output);
  }

  // optional bool print_graph_profile = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->print_graph_profile(), output);
  }

  // optional bool print_graph_debug = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->print_graph_debug(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.HexagonSettings)
}

::google::protobuf::uint8* HexagonSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.HexagonSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 debug_level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->debug_level(), target);
  }

  // optional int32 powersave_level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->powersave_level(), target);
  }

  // optional bool print_graph_profile = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->print_graph_profile(), target);
  }

  // optional bool print_graph_debug = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->print_graph_debug(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.HexagonSettings)
  return target;
}

size_t HexagonSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.HexagonSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 debug_level = 1;
    if (has_debug_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->debug_level());
    }

    // optional int32 powersave_level = 2;
    if (has_powersave_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->powersave_level());
    }

    // optional bool print_graph_profile = 3;
    if (has_print_graph_profile()) {
      total_size += 1 + 1;
    }

    // optional bool print_graph_debug = 4;
    if (has_print_graph_debug()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HexagonSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.HexagonSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const HexagonSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HexagonSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.HexagonSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.HexagonSettings)
    MergeFrom(*source);
  }
}

void HexagonSettings::MergeFrom(const HexagonSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.HexagonSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      debug_level_ = from.debug_level_;
    }
    if (cached_has_bits & 0x00000002u) {
      powersave_level_ = from.powersave_level_;
    }
    if (cached_has_bits & 0x00000004u) {
      print_graph_profile_ = from.print_graph_profile_;
    }
    if (cached_has_bits & 0x00000008u) {
      print_graph_debug_ = from.print_graph_debug_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HexagonSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.HexagonSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HexagonSettings::CopyFrom(const HexagonSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.HexagonSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HexagonSettings::IsInitialized() const {
  return true;
}

void HexagonSettings::Swap(HexagonSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HexagonSettings::InternalSwap(HexagonSettings* other) {
  using std::swap;
  swap(debug_level_, other->debug_level_);
  swap(powersave_level_, other->powersave_level_);
  swap(print_graph_profile_, other->print_graph_profile_);
  swap(print_graph_debug_, other->print_graph_debug_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HexagonSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XNNPackSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XNNPackSettings::kNumThreadsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XNNPackSettings::XNNPackSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_XNNPackSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.XNNPackSettings)
}
XNNPackSettings::XNNPackSettings(const XNNPackSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_threads_ = from.num_threads_;
  // @@protoc_insertion_point(copy_constructor:tflite.proto.XNNPackSettings)
}

void XNNPackSettings::SharedCtor() {
  num_threads_ = 0;
}

XNNPackSettings::~XNNPackSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.XNNPackSettings)
  SharedDtor();
}

void XNNPackSettings::SharedDtor() {
}

void XNNPackSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XNNPackSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XNNPackSettings& XNNPackSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_XNNPackSettings.base);
  return *internal_default_instance();
}


void XNNPackSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.XNNPackSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_threads_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XNNPackSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.XNNPackSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_threads = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_threads();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.XNNPackSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.XNNPackSettings)
  return false;
#undef DO_
}

void XNNPackSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.XNNPackSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_threads = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_threads(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.XNNPackSettings)
}

::google::protobuf::uint8* XNNPackSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.XNNPackSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_threads = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_threads(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.XNNPackSettings)
  return target;
}

size_t XNNPackSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.XNNPackSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 num_threads = 1;
  if (has_num_threads()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_threads());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XNNPackSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.XNNPackSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const XNNPackSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XNNPackSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.XNNPackSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.XNNPackSettings)
    MergeFrom(*source);
  }
}

void XNNPackSettings::MergeFrom(const XNNPackSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.XNNPackSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_num_threads()) {
    set_num_threads(from.num_threads());
  }
}

void XNNPackSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.XNNPackSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XNNPackSettings::CopyFrom(const XNNPackSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.XNNPackSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XNNPackSettings::IsInitialized() const {
  return true;
}

void XNNPackSettings::Swap(XNNPackSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XNNPackSettings::InternalSwap(XNNPackSettings* other) {
  using std::swap;
  swap(num_threads_, other->num_threads_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XNNPackSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoreMLSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoreMLSettings::kEnabledDevicesFieldNumber;
const int CoreMLSettings::kCoremlVersionFieldNumber;
const int CoreMLSettings::kMaxDelegatedPartitionsFieldNumber;
const int CoreMLSettings::kMinNodesPerPartitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoreMLSettings::CoreMLSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CoreMLSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.CoreMLSettings)
}
CoreMLSettings::CoreMLSettings(const CoreMLSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enabled_devices_, &from.enabled_devices_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_nodes_per_partition_) -
    reinterpret_cast<char*>(&enabled_devices_)) + sizeof(min_nodes_per_partition_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.CoreMLSettings)
}

void CoreMLSettings::SharedCtor() {
  ::memset(&enabled_devices_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_delegated_partitions_) -
      reinterpret_cast<char*>(&enabled_devices_)) + sizeof(max_delegated_partitions_));
  min_nodes_per_partition_ = 2;
}

CoreMLSettings::~CoreMLSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.CoreMLSettings)
  SharedDtor();
}

void CoreMLSettings::SharedDtor() {
}

void CoreMLSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoreMLSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoreMLSettings& CoreMLSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CoreMLSettings.base);
  return *internal_default_instance();
}


void CoreMLSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.CoreMLSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&enabled_devices_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_delegated_partitions_) -
        reinterpret_cast<char*>(&enabled_devices_)) + sizeof(max_delegated_partitions_));
    min_nodes_per_partition_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CoreMLSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.CoreMLSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.CoreMLSettings.EnabledDevices enabled_devices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::CoreMLSettings_EnabledDevices_IsValid(value)) {
            set_enabled_devices(static_cast< ::tflite::proto::CoreMLSettings_EnabledDevices >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 coreml_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_coreml_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coreml_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_delegated_partitions = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_max_delegated_partitions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_delegated_partitions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 min_nodes_per_partition = 4 [default = 2];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_min_nodes_per_partition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_nodes_per_partition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.CoreMLSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.CoreMLSettings)
  return false;
#undef DO_
}

void CoreMLSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.CoreMLSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.CoreMLSettings.EnabledDevices enabled_devices = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->enabled_devices(), output);
  }

  // optional int32 coreml_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->coreml_version(), output);
  }

  // optional int32 max_delegated_partitions = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_delegated_partitions(), output);
  }

  // optional int32 min_nodes_per_partition = 4 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->min_nodes_per_partition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.CoreMLSettings)
}

::google::protobuf::uint8* CoreMLSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.CoreMLSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.CoreMLSettings.EnabledDevices enabled_devices = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->enabled_devices(), target);
  }

  // optional int32 coreml_version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->coreml_version(), target);
  }

  // optional int32 max_delegated_partitions = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_delegated_partitions(), target);
  }

  // optional int32 min_nodes_per_partition = 4 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->min_nodes_per_partition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.CoreMLSettings)
  return target;
}

size_t CoreMLSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.CoreMLSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .tflite.proto.CoreMLSettings.EnabledDevices enabled_devices = 1;
    if (has_enabled_devices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enabled_devices());
    }

    // optional int32 coreml_version = 2;
    if (has_coreml_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coreml_version());
    }

    // optional int32 max_delegated_partitions = 3 [default = 0];
    if (has_max_delegated_partitions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_delegated_partitions());
    }

    // optional int32 min_nodes_per_partition = 4 [default = 2];
    if (has_min_nodes_per_partition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_nodes_per_partition());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoreMLSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.CoreMLSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const CoreMLSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoreMLSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.CoreMLSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.CoreMLSettings)
    MergeFrom(*source);
  }
}

void CoreMLSettings::MergeFrom(const CoreMLSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.CoreMLSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      enabled_devices_ = from.enabled_devices_;
    }
    if (cached_has_bits & 0x00000002u) {
      coreml_version_ = from.coreml_version_;
    }
    if (cached_has_bits & 0x00000004u) {
      max_delegated_partitions_ = from.max_delegated_partitions_;
    }
    if (cached_has_bits & 0x00000008u) {
      min_nodes_per_partition_ = from.min_nodes_per_partition_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CoreMLSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.CoreMLSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoreMLSettings::CopyFrom(const CoreMLSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.CoreMLSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoreMLSettings::IsInitialized() const {
  return true;
}

void CoreMLSettings::Swap(CoreMLSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoreMLSettings::InternalSwap(CoreMLSettings* other) {
  using std::swap;
  swap(enabled_devices_, other->enabled_devices_);
  swap(coreml_version_, other->coreml_version_);
  swap(max_delegated_partitions_, other->max_delegated_partitions_);
  swap(min_nodes_per_partition_, other->min_nodes_per_partition_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoreMLSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EdgeTpuDeviceSpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeTpuDeviceSpec::kPlatformTypeFieldNumber;
const int EdgeTpuDeviceSpec::kNumChipsFieldNumber;
const int EdgeTpuDeviceSpec::kDevicePathsFieldNumber;
const int EdgeTpuDeviceSpec::kChipFamilyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeTpuDeviceSpec::EdgeTpuDeviceSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuDeviceSpec.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.EdgeTpuDeviceSpec)
}
EdgeTpuDeviceSpec::EdgeTpuDeviceSpec(const EdgeTpuDeviceSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      device_paths_(from.device_paths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&platform_type_, &from.platform_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&chip_family_) -
    reinterpret_cast<char*>(&platform_type_)) + sizeof(chip_family_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.EdgeTpuDeviceSpec)
}

void EdgeTpuDeviceSpec::SharedCtor() {
  ::memset(&platform_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chip_family_) -
      reinterpret_cast<char*>(&platform_type_)) + sizeof(chip_family_));
}

EdgeTpuDeviceSpec::~EdgeTpuDeviceSpec() {
  // @@protoc_insertion_point(destructor:tflite.proto.EdgeTpuDeviceSpec)
  SharedDtor();
}

void EdgeTpuDeviceSpec::SharedDtor() {
}

void EdgeTpuDeviceSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EdgeTpuDeviceSpec::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeTpuDeviceSpec& EdgeTpuDeviceSpec::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuDeviceSpec.base);
  return *internal_default_instance();
}


void EdgeTpuDeviceSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.EdgeTpuDeviceSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_paths_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&platform_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chip_family_) -
        reinterpret_cast<char*>(&platform_type_)) + sizeof(chip_family_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EdgeTpuDeviceSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.EdgeTpuDeviceSpec)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.EdgeTpuDeviceSpec.PlatformType platform_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::EdgeTpuDeviceSpec_PlatformType_IsValid(value)) {
            set_platform_type(static_cast< ::tflite::proto::EdgeTpuDeviceSpec_PlatformType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_chips = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_chips();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_chips_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string device_paths = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_device_paths()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_paths(this->device_paths_size() - 1).data(),
            static_cast<int>(this->device_paths(this->device_paths_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.EdgeTpuDeviceSpec.device_paths");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chip_family = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_chip_family();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chip_family_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.EdgeTpuDeviceSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.EdgeTpuDeviceSpec)
  return false;
#undef DO_
}

void EdgeTpuDeviceSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.EdgeTpuDeviceSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.EdgeTpuDeviceSpec.PlatformType platform_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->platform_type(), output);
  }

  // optional int32 num_chips = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_chips(), output);
  }

  // repeated string device_paths = 3;
  for (int i = 0, n = this->device_paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_paths(i).data(), static_cast<int>(this->device_paths(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.EdgeTpuDeviceSpec.device_paths");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->device_paths(i), output);
  }

  // optional int32 chip_family = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->chip_family(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.EdgeTpuDeviceSpec)
}

::google::protobuf::uint8* EdgeTpuDeviceSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.EdgeTpuDeviceSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.EdgeTpuDeviceSpec.PlatformType platform_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->platform_type(), target);
  }

  // optional int32 num_chips = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_chips(), target);
  }

  // repeated string device_paths = 3;
  for (int i = 0, n = this->device_paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_paths(i).data(), static_cast<int>(this->device_paths(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.EdgeTpuDeviceSpec.device_paths");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->device_paths(i), target);
  }

  // optional int32 chip_family = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->chip_family(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.EdgeTpuDeviceSpec)
  return target;
}

size_t EdgeTpuDeviceSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.EdgeTpuDeviceSpec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string device_paths = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->device_paths_size());
  for (int i = 0, n = this->device_paths_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->device_paths(i));
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .tflite.proto.EdgeTpuDeviceSpec.PlatformType platform_type = 1;
    if (has_platform_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform_type());
    }

    // optional int32 num_chips = 2;
    if (has_num_chips()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_chips());
    }

    // optional int32 chip_family = 4;
    if (has_chip_family()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chip_family());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeTpuDeviceSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.EdgeTpuDeviceSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeTpuDeviceSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeTpuDeviceSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.EdgeTpuDeviceSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.EdgeTpuDeviceSpec)
    MergeFrom(*source);
  }
}

void EdgeTpuDeviceSpec::MergeFrom(const EdgeTpuDeviceSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.EdgeTpuDeviceSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_paths_.MergeFrom(from.device_paths_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      platform_type_ = from.platform_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_chips_ = from.num_chips_;
    }
    if (cached_has_bits & 0x00000004u) {
      chip_family_ = from.chip_family_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EdgeTpuDeviceSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.EdgeTpuDeviceSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeTpuDeviceSpec::CopyFrom(const EdgeTpuDeviceSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.EdgeTpuDeviceSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeTpuDeviceSpec::IsInitialized() const {
  return true;
}

void EdgeTpuDeviceSpec::Swap(EdgeTpuDeviceSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeTpuDeviceSpec::InternalSwap(EdgeTpuDeviceSpec* other) {
  using std::swap;
  device_paths_.InternalSwap(CastToBase(&other->device_paths_));
  swap(platform_type_, other->platform_type_);
  swap(num_chips_, other->num_chips_);
  swap(chip_family_, other->chip_family_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EdgeTpuDeviceSpec::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EdgeTpuInactivePowerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeTpuInactivePowerConfig::kInactivePowerStateFieldNumber;
const int EdgeTpuInactivePowerConfig::kInactiveTimeoutUsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeTpuInactivePowerConfig::EdgeTpuInactivePowerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuInactivePowerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.EdgeTpuInactivePowerConfig)
}
EdgeTpuInactivePowerConfig::EdgeTpuInactivePowerConfig(const EdgeTpuInactivePowerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&inactive_timeout_us_, &from.inactive_timeout_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&inactive_power_state_) -
    reinterpret_cast<char*>(&inactive_timeout_us_)) + sizeof(inactive_power_state_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.EdgeTpuInactivePowerConfig)
}

void EdgeTpuInactivePowerConfig::SharedCtor() {
  ::memset(&inactive_timeout_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inactive_power_state_) -
      reinterpret_cast<char*>(&inactive_timeout_us_)) + sizeof(inactive_power_state_));
}

EdgeTpuInactivePowerConfig::~EdgeTpuInactivePowerConfig() {
  // @@protoc_insertion_point(destructor:tflite.proto.EdgeTpuInactivePowerConfig)
  SharedDtor();
}

void EdgeTpuInactivePowerConfig::SharedDtor() {
}

void EdgeTpuInactivePowerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EdgeTpuInactivePowerConfig::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeTpuInactivePowerConfig& EdgeTpuInactivePowerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuInactivePowerConfig.base);
  return *internal_default_instance();
}


void EdgeTpuInactivePowerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.EdgeTpuInactivePowerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&inactive_timeout_us_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&inactive_power_state_) -
        reinterpret_cast<char*>(&inactive_timeout_us_)) + sizeof(inactive_power_state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EdgeTpuInactivePowerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.EdgeTpuInactivePowerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.EdgeTpuPowerState inactive_power_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::EdgeTpuPowerState_IsValid(value)) {
            set_inactive_power_state(static_cast< ::tflite::proto::EdgeTpuPowerState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 inactive_timeout_us = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_inactive_timeout_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &inactive_timeout_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.EdgeTpuInactivePowerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.EdgeTpuInactivePowerConfig)
  return false;
#undef DO_
}

void EdgeTpuInactivePowerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.EdgeTpuInactivePowerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.EdgeTpuPowerState inactive_power_state = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->inactive_power_state(), output);
  }

  // optional int64 inactive_timeout_us = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->inactive_timeout_us(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.EdgeTpuInactivePowerConfig)
}

::google::protobuf::uint8* EdgeTpuInactivePowerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.EdgeTpuInactivePowerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.EdgeTpuPowerState inactive_power_state = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->inactive_power_state(), target);
  }

  // optional int64 inactive_timeout_us = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->inactive_timeout_us(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.EdgeTpuInactivePowerConfig)
  return target;
}

size_t EdgeTpuInactivePowerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.EdgeTpuInactivePowerConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 inactive_timeout_us = 2;
    if (has_inactive_timeout_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->inactive_timeout_us());
    }

    // optional .tflite.proto.EdgeTpuPowerState inactive_power_state = 1;
    if (has_inactive_power_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->inactive_power_state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeTpuInactivePowerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.EdgeTpuInactivePowerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeTpuInactivePowerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeTpuInactivePowerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.EdgeTpuInactivePowerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.EdgeTpuInactivePowerConfig)
    MergeFrom(*source);
  }
}

void EdgeTpuInactivePowerConfig::MergeFrom(const EdgeTpuInactivePowerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.EdgeTpuInactivePowerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      inactive_timeout_us_ = from.inactive_timeout_us_;
    }
    if (cached_has_bits & 0x00000002u) {
      inactive_power_state_ = from.inactive_power_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EdgeTpuInactivePowerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.EdgeTpuInactivePowerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeTpuInactivePowerConfig::CopyFrom(const EdgeTpuInactivePowerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.EdgeTpuInactivePowerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeTpuInactivePowerConfig::IsInitialized() const {
  return true;
}

void EdgeTpuInactivePowerConfig::Swap(EdgeTpuInactivePowerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeTpuInactivePowerConfig::InternalSwap(EdgeTpuInactivePowerConfig* other) {
  using std::swap;
  swap(inactive_timeout_us_, other->inactive_timeout_us_);
  swap(inactive_power_state_, other->inactive_power_state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EdgeTpuInactivePowerConfig::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EdgeTpuSettings::InitAsDefaultInstance() {
  ::tflite::proto::_EdgeTpuSettings_default_instance_._instance.get_mutable()->edgetpu_device_spec_ = const_cast< ::tflite::proto::EdgeTpuDeviceSpec*>(
      ::tflite::proto::EdgeTpuDeviceSpec::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeTpuSettings::kInferencePowerStateFieldNumber;
const int EdgeTpuSettings::kInactivePowerConfigsFieldNumber;
const int EdgeTpuSettings::kInferencePriorityFieldNumber;
const int EdgeTpuSettings::kEdgetpuDeviceSpecFieldNumber;
const int EdgeTpuSettings::kModelTokenFieldNumber;
const int EdgeTpuSettings::kFloatTruncationTypeFieldNumber;
const int EdgeTpuSettings::kQosClassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeTpuSettings::EdgeTpuSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.EdgeTpuSettings)
}
EdgeTpuSettings::EdgeTpuSettings(const EdgeTpuSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      inactive_power_configs_(from.inactive_power_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_token()) {
    model_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_token_);
  }
  if (from.has_edgetpu_device_spec()) {
    edgetpu_device_spec_ = new ::tflite::proto::EdgeTpuDeviceSpec(*from.edgetpu_device_spec_);
  } else {
    edgetpu_device_spec_ = NULL;
  }
  ::memcpy(&inference_power_state_, &from.inference_power_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&inference_priority_) -
    reinterpret_cast<char*>(&inference_power_state_)) + sizeof(inference_priority_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.EdgeTpuSettings)
}

void EdgeTpuSettings::SharedCtor() {
  model_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&edgetpu_device_spec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qos_class_) -
      reinterpret_cast<char*>(&edgetpu_device_spec_)) + sizeof(qos_class_));
  inference_priority_ = -1;
}

EdgeTpuSettings::~EdgeTpuSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.EdgeTpuSettings)
  SharedDtor();
}

void EdgeTpuSettings::SharedDtor() {
  model_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete edgetpu_device_spec_;
}

void EdgeTpuSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EdgeTpuSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeTpuSettings& EdgeTpuSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_EdgeTpuSettings.base);
  return *internal_default_instance();
}


void EdgeTpuSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.EdgeTpuSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inactive_power_configs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      model_token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(edgetpu_device_spec_ != NULL);
      edgetpu_device_spec_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&inference_power_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&qos_class_) -
        reinterpret_cast<char*>(&inference_power_state_)) + sizeof(qos_class_));
    inference_priority_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EdgeTpuSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.EdgeTpuSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.EdgeTpuPowerState inference_power_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::EdgeTpuPowerState_IsValid(value)) {
            set_inference_power_state(static_cast< ::tflite::proto::EdgeTpuPowerState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tflite.proto.EdgeTpuInactivePowerConfig inactive_power_configs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inactive_power_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 inference_priority = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_inference_priority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inference_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.EdgeTpuDeviceSpec edgetpu_device_spec = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_edgetpu_device_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model_token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_token().data(), static_cast<int>(this->model_token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.EdgeTpuSettings.model_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.EdgeTpuSettings.FloatTruncationType float_truncation_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::EdgeTpuSettings_FloatTruncationType_IsValid(value)) {
            set_float_truncation_type(static_cast< ::tflite::proto::EdgeTpuSettings_FloatTruncationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.EdgeTpuSettings.QosClass qos_class = 7 [default = QOS_UNDEFINED];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::EdgeTpuSettings_QosClass_IsValid(value)) {
            set_qos_class(static_cast< ::tflite::proto::EdgeTpuSettings_QosClass >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.EdgeTpuSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.EdgeTpuSettings)
  return false;
#undef DO_
}

void EdgeTpuSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.EdgeTpuSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.EdgeTpuPowerState inference_power_state = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->inference_power_state(), output);
  }

  // repeated .tflite.proto.EdgeTpuInactivePowerConfig inactive_power_configs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inactive_power_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->inactive_power_configs(static_cast<int>(i)),
      output);
  }

  // optional int32 inference_priority = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->inference_priority(), output);
  }

  // optional .tflite.proto.EdgeTpuDeviceSpec edgetpu_device_spec = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_edgetpu_device_spec(), output);
  }

  // optional string model_token = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_token().data(), static_cast<int>(this->model_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.EdgeTpuSettings.model_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->model_token(), output);
  }

  // optional .tflite.proto.EdgeTpuSettings.FloatTruncationType float_truncation_type = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->float_truncation_type(), output);
  }

  // optional .tflite.proto.EdgeTpuSettings.QosClass qos_class = 7 [default = QOS_UNDEFINED];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->qos_class(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.EdgeTpuSettings)
}

::google::protobuf::uint8* EdgeTpuSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.EdgeTpuSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.EdgeTpuPowerState inference_power_state = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->inference_power_state(), target);
  }

  // repeated .tflite.proto.EdgeTpuInactivePowerConfig inactive_power_configs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inactive_power_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->inactive_power_configs(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 inference_priority = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->inference_priority(), target);
  }

  // optional .tflite.proto.EdgeTpuDeviceSpec edgetpu_device_spec = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_edgetpu_device_spec(), deterministic, target);
  }

  // optional string model_token = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_token().data(), static_cast<int>(this->model_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.EdgeTpuSettings.model_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->model_token(), target);
  }

  // optional .tflite.proto.EdgeTpuSettings.FloatTruncationType float_truncation_type = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->float_truncation_type(), target);
  }

  // optional .tflite.proto.EdgeTpuSettings.QosClass qos_class = 7 [default = QOS_UNDEFINED];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->qos_class(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.EdgeTpuSettings)
  return target;
}

size_t EdgeTpuSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.EdgeTpuSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tflite.proto.EdgeTpuInactivePowerConfig inactive_power_configs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->inactive_power_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inactive_power_configs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string model_token = 5;
    if (has_model_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_token());
    }

    // optional .tflite.proto.EdgeTpuDeviceSpec edgetpu_device_spec = 4;
    if (has_edgetpu_device_spec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *edgetpu_device_spec_);
    }

    // optional .tflite.proto.EdgeTpuPowerState inference_power_state = 1;
    if (has_inference_power_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->inference_power_state());
    }

    // optional .tflite.proto.EdgeTpuSettings.FloatTruncationType float_truncation_type = 6;
    if (has_float_truncation_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->float_truncation_type());
    }

    // optional .tflite.proto.EdgeTpuSettings.QosClass qos_class = 7 [default = QOS_UNDEFINED];
    if (has_qos_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->qos_class());
    }

    // optional int32 inference_priority = 3 [default = -1];
    if (has_inference_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inference_priority());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeTpuSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.EdgeTpuSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeTpuSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeTpuSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.EdgeTpuSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.EdgeTpuSettings)
    MergeFrom(*source);
  }
}

void EdgeTpuSettings::MergeFrom(const EdgeTpuSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.EdgeTpuSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inactive_power_configs_.MergeFrom(from.inactive_power_configs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_model_token();
      model_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_token_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_edgetpu_device_spec()->::tflite::proto::EdgeTpuDeviceSpec::MergeFrom(from.edgetpu_device_spec());
    }
    if (cached_has_bits & 0x00000004u) {
      inference_power_state_ = from.inference_power_state_;
    }
    if (cached_has_bits & 0x00000008u) {
      float_truncation_type_ = from.float_truncation_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      qos_class_ = from.qos_class_;
    }
    if (cached_has_bits & 0x00000020u) {
      inference_priority_ = from.inference_priority_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EdgeTpuSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.EdgeTpuSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeTpuSettings::CopyFrom(const EdgeTpuSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.EdgeTpuSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeTpuSettings::IsInitialized() const {
  return true;
}

void EdgeTpuSettings::Swap(EdgeTpuSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeTpuSettings::InternalSwap(EdgeTpuSettings* other) {
  using std::swap;
  CastToBase(&inactive_power_configs_)->InternalSwap(CastToBase(&other->inactive_power_configs_));
  model_token_.Swap(&other->model_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(edgetpu_device_spec_, other->edgetpu_device_spec_);
  swap(inference_power_state_, other->inference_power_state_);
  swap(float_truncation_type_, other->float_truncation_type_);
  swap(qos_class_, other->qos_class_);
  swap(inference_priority_, other->inference_priority_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EdgeTpuSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoralSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoralSettings::kDeviceFieldNumber;
const int CoralSettings::kPerformanceFieldNumber;
const int CoralSettings::kUsbAlwaysDfuFieldNumber;
const int CoralSettings::kUsbMaxBulkInQueueLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoralSettings::CoralSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CoralSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.CoralSettings)
}
CoralSettings::CoralSettings(const CoralSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device()) {
    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  ::memcpy(&usb_always_dfu_, &from.usb_always_dfu_,
    static_cast<size_t>(reinterpret_cast<char*>(&performance_) -
    reinterpret_cast<char*>(&usb_always_dfu_)) + sizeof(performance_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.CoralSettings)
}

void CoralSettings::SharedCtor() {
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&usb_always_dfu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usb_max_bulk_in_queue_length_) -
      reinterpret_cast<char*>(&usb_always_dfu_)) + sizeof(usb_max_bulk_in_queue_length_));
  performance_ = 1;
}

CoralSettings::~CoralSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.CoralSettings)
  SharedDtor();
}

void CoralSettings::SharedDtor() {
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CoralSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoralSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoralSettings& CoralSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CoralSettings.base);
  return *internal_default_instance();
}


void CoralSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.CoralSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    device_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&usb_always_dfu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&usb_max_bulk_in_queue_length_) -
        reinterpret_cast<char*>(&usb_always_dfu_)) + sizeof(usb_max_bulk_in_queue_length_));
    performance_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CoralSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.CoralSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string device = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device().data(), static_cast<int>(this->device().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.CoralSettings.device");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.CoralSettings.Performance performance = 2 [default = MAXIMUM];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::CoralSettings_Performance_IsValid(value)) {
            set_performance(static_cast< ::tflite::proto::CoralSettings_Performance >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool usb_always_dfu = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_usb_always_dfu();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usb_always_dfu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usb_max_bulk_in_queue_length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_usb_max_bulk_in_queue_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usb_max_bulk_in_queue_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.CoralSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.CoralSettings)
  return false;
#undef DO_
}

void CoralSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.CoralSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string device = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.CoralSettings.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device(), output);
  }

  // optional .tflite.proto.CoralSettings.Performance performance = 2 [default = MAXIMUM];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->performance(), output);
  }

  // optional bool usb_always_dfu = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->usb_always_dfu(), output);
  }

  // optional int32 usb_max_bulk_in_queue_length = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->usb_max_bulk_in_queue_length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.CoralSettings)
}

::google::protobuf::uint8* CoralSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.CoralSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string device = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.CoralSettings.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device(), target);
  }

  // optional .tflite.proto.CoralSettings.Performance performance = 2 [default = MAXIMUM];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->performance(), target);
  }

  // optional bool usb_always_dfu = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->usb_always_dfu(), target);
  }

  // optional int32 usb_max_bulk_in_queue_length = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->usb_max_bulk_in_queue_length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.CoralSettings)
  return target;
}

size_t CoralSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.CoralSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string device = 1;
    if (has_device()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device());
    }

    // optional bool usb_always_dfu = 3;
    if (has_usb_always_dfu()) {
      total_size += 1 + 1;
    }

    // optional int32 usb_max_bulk_in_queue_length = 4;
    if (has_usb_max_bulk_in_queue_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usb_max_bulk_in_queue_length());
    }

    // optional .tflite.proto.CoralSettings.Performance performance = 2 [default = MAXIMUM];
    if (has_performance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->performance());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoralSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.CoralSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const CoralSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoralSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.CoralSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.CoralSettings)
    MergeFrom(*source);
  }
}

void CoralSettings::MergeFrom(const CoralSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.CoralSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device();
      device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
    }
    if (cached_has_bits & 0x00000002u) {
      usb_always_dfu_ = from.usb_always_dfu_;
    }
    if (cached_has_bits & 0x00000004u) {
      usb_max_bulk_in_queue_length_ = from.usb_max_bulk_in_queue_length_;
    }
    if (cached_has_bits & 0x00000008u) {
      performance_ = from.performance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CoralSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.CoralSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoralSettings::CopyFrom(const CoralSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.CoralSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoralSettings::IsInitialized() const {
  return true;
}

void CoralSettings::Swap(CoralSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoralSettings::InternalSwap(CoralSettings* other) {
  using std::swap;
  device_.Swap(&other->device_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(usb_always_dfu_, other->usb_always_dfu_);
  swap(usb_max_bulk_in_queue_length_, other->usb_max_bulk_in_queue_length_);
  swap(performance_, other->performance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoralSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPUSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPUSettings::kNumThreadsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPUSettings::CPUSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CPUSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.CPUSettings)
}
CPUSettings::CPUSettings(const CPUSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_threads_ = from.num_threads_;
  // @@protoc_insertion_point(copy_constructor:tflite.proto.CPUSettings)
}

void CPUSettings::SharedCtor() {
  num_threads_ = -1;
}

CPUSettings::~CPUSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.CPUSettings)
  SharedDtor();
}

void CPUSettings::SharedDtor() {
}

void CPUSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPUSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPUSettings& CPUSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_CPUSettings.base);
  return *internal_default_instance();
}


void CPUSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.CPUSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_threads_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPUSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.CPUSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_threads = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_threads();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.CPUSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.CPUSettings)
  return false;
#undef DO_
}

void CPUSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.CPUSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_threads = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_threads(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.CPUSettings)
}

::google::protobuf::uint8* CPUSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.CPUSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_threads = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_threads(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.CPUSettings)
  return target;
}

size_t CPUSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.CPUSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 num_threads = 1 [default = -1];
  if (has_num_threads()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_threads());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPUSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.CPUSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const CPUSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPUSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.CPUSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.CPUSettings)
    MergeFrom(*source);
  }
}

void CPUSettings::MergeFrom(const CPUSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.CPUSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_num_threads()) {
    set_num_threads(from.num_threads());
  }
}

void CPUSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.CPUSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPUSettings::CopyFrom(const CPUSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.CPUSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPUSettings::IsInitialized() const {
  return true;
}

void CPUSettings::Swap(CPUSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPUSettings::InternalSwap(CPUSettings* other) {
  using std::swap;
  swap(num_threads_, other->num_threads_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPUSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TFLiteSettings::InitAsDefaultInstance() {
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->nnapi_settings_ = const_cast< ::tflite::proto::NNAPISettings*>(
      ::tflite::proto::NNAPISettings::internal_default_instance());
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->gpu_settings_ = const_cast< ::tflite::proto::GPUSettings*>(
      ::tflite::proto::GPUSettings::internal_default_instance());
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->hexagon_settings_ = const_cast< ::tflite::proto::HexagonSettings*>(
      ::tflite::proto::HexagonSettings::internal_default_instance());
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->xnnpack_settings_ = const_cast< ::tflite::proto::XNNPackSettings*>(
      ::tflite::proto::XNNPackSettings::internal_default_instance());
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->coreml_settings_ = const_cast< ::tflite::proto::CoreMLSettings*>(
      ::tflite::proto::CoreMLSettings::internal_default_instance());
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->cpu_settings_ = const_cast< ::tflite::proto::CPUSettings*>(
      ::tflite::proto::CPUSettings::internal_default_instance());
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->edgetpu_settings_ = const_cast< ::tflite::proto::EdgeTpuSettings*>(
      ::tflite::proto::EdgeTpuSettings::internal_default_instance());
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->coral_settings_ = const_cast< ::tflite::proto::CoralSettings*>(
      ::tflite::proto::CoralSettings::internal_default_instance());
  ::tflite::proto::_TFLiteSettings_default_instance_._instance.get_mutable()->fallback_settings_ = const_cast< ::tflite::proto::FallbackSettings*>(
      ::tflite::proto::FallbackSettings::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFLiteSettings::kDelegateFieldNumber;
const int TFLiteSettings::kNnapiSettingsFieldNumber;
const int TFLiteSettings::kGpuSettingsFieldNumber;
const int TFLiteSettings::kHexagonSettingsFieldNumber;
const int TFLiteSettings::kXnnpackSettingsFieldNumber;
const int TFLiteSettings::kCoremlSettingsFieldNumber;
const int TFLiteSettings::kCpuSettingsFieldNumber;
const int TFLiteSettings::kMaxDelegatedPartitionsFieldNumber;
const int TFLiteSettings::kEdgetpuSettingsFieldNumber;
const int TFLiteSettings::kCoralSettingsFieldNumber;
const int TFLiteSettings::kFallbackSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFLiteSettings::TFLiteSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_TFLiteSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.TFLiteSettings)
}
TFLiteSettings::TFLiteSettings(const TFLiteSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nnapi_settings()) {
    nnapi_settings_ = new ::tflite::proto::NNAPISettings(*from.nnapi_settings_);
  } else {
    nnapi_settings_ = NULL;
  }
  if (from.has_gpu_settings()) {
    gpu_settings_ = new ::tflite::proto::GPUSettings(*from.gpu_settings_);
  } else {
    gpu_settings_ = NULL;
  }
  if (from.has_hexagon_settings()) {
    hexagon_settings_ = new ::tflite::proto::HexagonSettings(*from.hexagon_settings_);
  } else {
    hexagon_settings_ = NULL;
  }
  if (from.has_xnnpack_settings()) {
    xnnpack_settings_ = new ::tflite::proto::XNNPackSettings(*from.xnnpack_settings_);
  } else {
    xnnpack_settings_ = NULL;
  }
  if (from.has_cpu_settings()) {
    cpu_settings_ = new ::tflite::proto::CPUSettings(*from.cpu_settings_);
  } else {
    cpu_settings_ = NULL;
  }
  if (from.has_edgetpu_settings()) {
    edgetpu_settings_ = new ::tflite::proto::EdgeTpuSettings(*from.edgetpu_settings_);
  } else {
    edgetpu_settings_ = NULL;
  }
  if (from.has_fallback_settings()) {
    fallback_settings_ = new ::tflite::proto::FallbackSettings(*from.fallback_settings_);
  } else {
    fallback_settings_ = NULL;
  }
  if (from.has_coral_settings()) {
    coral_settings_ = new ::tflite::proto::CoralSettings(*from.coral_settings_);
  } else {
    coral_settings_ = NULL;
  }
  if (from.has_coreml_settings()) {
    coreml_settings_ = new ::tflite::proto::CoreMLSettings(*from.coreml_settings_);
  } else {
    coreml_settings_ = NULL;
  }
  ::memcpy(&delegate_, &from.delegate_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_delegated_partitions_) -
    reinterpret_cast<char*>(&delegate_)) + sizeof(max_delegated_partitions_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.TFLiteSettings)
}

void TFLiteSettings::SharedCtor() {
  ::memset(&nnapi_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_delegated_partitions_) -
      reinterpret_cast<char*>(&nnapi_settings_)) + sizeof(max_delegated_partitions_));
}

TFLiteSettings::~TFLiteSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.TFLiteSettings)
  SharedDtor();
}

void TFLiteSettings::SharedDtor() {
  if (this != internal_default_instance()) delete nnapi_settings_;
  if (this != internal_default_instance()) delete gpu_settings_;
  if (this != internal_default_instance()) delete hexagon_settings_;
  if (this != internal_default_instance()) delete xnnpack_settings_;
  if (this != internal_default_instance()) delete cpu_settings_;
  if (this != internal_default_instance()) delete edgetpu_settings_;
  if (this != internal_default_instance()) delete fallback_settings_;
  if (this != internal_default_instance()) delete coral_settings_;
  if (this != internal_default_instance()) delete coreml_settings_;
}

void TFLiteSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TFLiteSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TFLiteSettings& TFLiteSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_TFLiteSettings.base);
  return *internal_default_instance();
}


void TFLiteSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.TFLiteSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(nnapi_settings_ != NULL);
      nnapi_settings_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(gpu_settings_ != NULL);
      gpu_settings_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(hexagon_settings_ != NULL);
      hexagon_settings_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(xnnpack_settings_ != NULL);
      xnnpack_settings_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(cpu_settings_ != NULL);
      cpu_settings_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(edgetpu_settings_ != NULL);
      edgetpu_settings_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(fallback_settings_ != NULL);
      fallback_settings_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(coral_settings_ != NULL);
      coral_settings_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(coreml_settings_ != NULL);
    coreml_settings_->Clear();
  }
  if (cached_has_bits & 1536u) {
    ::memset(&delegate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_delegated_partitions_) -
        reinterpret_cast<char*>(&delegate_)) + sizeof(max_delegated_partitions_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFLiteSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.TFLiteSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.Delegate delegate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::Delegate_IsValid(value)) {
            set_delegate(static_cast< ::tflite::proto::Delegate >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.NNAPISettings nnapi_settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nnapi_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.GPUSettings gpu_settings = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gpu_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.HexagonSettings hexagon_settings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hexagon_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.XNNPackSettings xnnpack_settings = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xnnpack_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.CPUSettings cpu_settings = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpu_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_delegated_partitions = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_max_delegated_partitions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_delegated_partitions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.EdgeTpuSettings edgetpu_settings = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_edgetpu_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.FallbackSettings fallback_settings = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fallback_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.CoralSettings coral_settings = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coral_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.CoreMLSettings coreml_settings = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coreml_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.TFLiteSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.TFLiteSettings)
  return false;
#undef DO_
}

void TFLiteSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.TFLiteSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.Delegate delegate = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->delegate(), output);
  }

  // optional .tflite.proto.NNAPISettings nnapi_settings = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_nnapi_settings(), output);
  }

  // optional .tflite.proto.GPUSettings gpu_settings = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_gpu_settings(), output);
  }

  // optional .tflite.proto.HexagonSettings hexagon_settings = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_hexagon_settings(), output);
  }

  // optional .tflite.proto.XNNPackSettings xnnpack_settings = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_xnnpack_settings(), output);
  }

  // optional .tflite.proto.CPUSettings cpu_settings = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_cpu_settings(), output);
  }

  // optional int32 max_delegated_partitions = 7;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->max_delegated_partitions(), output);
  }

  // optional .tflite.proto.EdgeTpuSettings edgetpu_settings = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_edgetpu_settings(), output);
  }

  // optional .tflite.proto.FallbackSettings fallback_settings = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_fallback_settings(), output);
  }

  // optional .tflite.proto.CoralSettings coral_settings = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_coral_settings(), output);
  }

  // optional .tflite.proto.CoreMLSettings coreml_settings = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_coreml_settings(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.TFLiteSettings)
}

::google::protobuf::uint8* TFLiteSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.TFLiteSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.Delegate delegate = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->delegate(), target);
  }

  // optional .tflite.proto.NNAPISettings nnapi_settings = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_nnapi_settings(), deterministic, target);
  }

  // optional .tflite.proto.GPUSettings gpu_settings = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_gpu_settings(), deterministic, target);
  }

  // optional .tflite.proto.HexagonSettings hexagon_settings = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_hexagon_settings(), deterministic, target);
  }

  // optional .tflite.proto.XNNPackSettings xnnpack_settings = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_xnnpack_settings(), deterministic, target);
  }

  // optional .tflite.proto.CPUSettings cpu_settings = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_cpu_settings(), deterministic, target);
  }

  // optional int32 max_delegated_partitions = 7;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->max_delegated_partitions(), target);
  }

  // optional .tflite.proto.EdgeTpuSettings edgetpu_settings = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_edgetpu_settings(), deterministic, target);
  }

  // optional .tflite.proto.FallbackSettings fallback_settings = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_fallback_settings(), deterministic, target);
  }

  // optional .tflite.proto.CoralSettings coral_settings = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_coral_settings(), deterministic, target);
  }

  // optional .tflite.proto.CoreMLSettings coreml_settings = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_coreml_settings(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.TFLiteSettings)
  return target;
}

size_t TFLiteSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.TFLiteSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .tflite.proto.NNAPISettings nnapi_settings = 2;
    if (has_nnapi_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *nnapi_settings_);
    }

    // optional .tflite.proto.GPUSettings gpu_settings = 3;
    if (has_gpu_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *gpu_settings_);
    }

    // optional .tflite.proto.HexagonSettings hexagon_settings = 4;
    if (has_hexagon_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *hexagon_settings_);
    }

    // optional .tflite.proto.XNNPackSettings xnnpack_settings = 5;
    if (has_xnnpack_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *xnnpack_settings_);
    }

    // optional .tflite.proto.CPUSettings cpu_settings = 6;
    if (has_cpu_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *cpu_settings_);
    }

    // optional .tflite.proto.EdgeTpuSettings edgetpu_settings = 8;
    if (has_edgetpu_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *edgetpu_settings_);
    }

    // optional .tflite.proto.FallbackSettings fallback_settings = 9;
    if (has_fallback_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fallback_settings_);
    }

    // optional .tflite.proto.CoralSettings coral_settings = 10;
    if (has_coral_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *coral_settings_);
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional .tflite.proto.CoreMLSettings coreml_settings = 11;
    if (has_coreml_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *coreml_settings_);
    }

    // optional .tflite.proto.Delegate delegate = 1;
    if (has_delegate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->delegate());
    }

    // optional int32 max_delegated_partitions = 7;
    if (has_max_delegated_partitions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_delegated_partitions());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TFLiteSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.TFLiteSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const TFLiteSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFLiteSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.TFLiteSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.TFLiteSettings)
    MergeFrom(*source);
  }
}

void TFLiteSettings::MergeFrom(const TFLiteSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.TFLiteSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_nnapi_settings()->::tflite::proto::NNAPISettings::MergeFrom(from.nnapi_settings());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_gpu_settings()->::tflite::proto::GPUSettings::MergeFrom(from.gpu_settings());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_hexagon_settings()->::tflite::proto::HexagonSettings::MergeFrom(from.hexagon_settings());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_xnnpack_settings()->::tflite::proto::XNNPackSettings::MergeFrom(from.xnnpack_settings());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_cpu_settings()->::tflite::proto::CPUSettings::MergeFrom(from.cpu_settings());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_edgetpu_settings()->::tflite::proto::EdgeTpuSettings::MergeFrom(from.edgetpu_settings());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_fallback_settings()->::tflite::proto::FallbackSettings::MergeFrom(from.fallback_settings());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_coral_settings()->::tflite::proto::CoralSettings::MergeFrom(from.coral_settings());
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_coreml_settings()->::tflite::proto::CoreMLSettings::MergeFrom(from.coreml_settings());
    }
    if (cached_has_bits & 0x00000200u) {
      delegate_ = from.delegate_;
    }
    if (cached_has_bits & 0x00000400u) {
      max_delegated_partitions_ = from.max_delegated_partitions_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TFLiteSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.TFLiteSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFLiteSettings::CopyFrom(const TFLiteSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.TFLiteSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFLiteSettings::IsInitialized() const {
  return true;
}

void TFLiteSettings::Swap(TFLiteSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFLiteSettings::InternalSwap(TFLiteSettings* other) {
  using std::swap;
  swap(nnapi_settings_, other->nnapi_settings_);
  swap(gpu_settings_, other->gpu_settings_);
  swap(hexagon_settings_, other->hexagon_settings_);
  swap(xnnpack_settings_, other->xnnpack_settings_);
  swap(cpu_settings_, other->cpu_settings_);
  swap(edgetpu_settings_, other->edgetpu_settings_);
  swap(fallback_settings_, other->fallback_settings_);
  swap(coral_settings_, other->coral_settings_);
  swap(coreml_settings_, other->coreml_settings_);
  swap(delegate_, other->delegate_);
  swap(max_delegated_partitions_, other->max_delegated_partitions_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TFLiteSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FallbackSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FallbackSettings::kAllowAutomaticFallbackOnCompilationErrorFieldNumber;
const int FallbackSettings::kAllowAutomaticFallbackOnExecutionErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FallbackSettings::FallbackSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_FallbackSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.FallbackSettings)
}
FallbackSettings::FallbackSettings(const FallbackSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&allow_automatic_fallback_on_compilation_error_, &from.allow_automatic_fallback_on_compilation_error_,
    static_cast<size_t>(reinterpret_cast<char*>(&allow_automatic_fallback_on_execution_error_) -
    reinterpret_cast<char*>(&allow_automatic_fallback_on_compilation_error_)) + sizeof(allow_automatic_fallback_on_execution_error_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.FallbackSettings)
}

void FallbackSettings::SharedCtor() {
  ::memset(&allow_automatic_fallback_on_compilation_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_automatic_fallback_on_execution_error_) -
      reinterpret_cast<char*>(&allow_automatic_fallback_on_compilation_error_)) + sizeof(allow_automatic_fallback_on_execution_error_));
}

FallbackSettings::~FallbackSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.FallbackSettings)
  SharedDtor();
}

void FallbackSettings::SharedDtor() {
}

void FallbackSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FallbackSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FallbackSettings& FallbackSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_FallbackSettings.base);
  return *internal_default_instance();
}


void FallbackSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.FallbackSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&allow_automatic_fallback_on_compilation_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_automatic_fallback_on_execution_error_) -
      reinterpret_cast<char*>(&allow_automatic_fallback_on_compilation_error_)) + sizeof(allow_automatic_fallback_on_execution_error_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FallbackSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.FallbackSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool allow_automatic_fallback_on_compilation_error = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_allow_automatic_fallback_on_compilation_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_automatic_fallback_on_compilation_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_automatic_fallback_on_execution_error = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_allow_automatic_fallback_on_execution_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_automatic_fallback_on_execution_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.FallbackSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.FallbackSettings)
  return false;
#undef DO_
}

void FallbackSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.FallbackSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool allow_automatic_fallback_on_compilation_error = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->allow_automatic_fallback_on_compilation_error(), output);
  }

  // optional bool allow_automatic_fallback_on_execution_error = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->allow_automatic_fallback_on_execution_error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.FallbackSettings)
}

::google::protobuf::uint8* FallbackSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.FallbackSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool allow_automatic_fallback_on_compilation_error = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->allow_automatic_fallback_on_compilation_error(), target);
  }

  // optional bool allow_automatic_fallback_on_execution_error = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->allow_automatic_fallback_on_execution_error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.FallbackSettings)
  return target;
}

size_t FallbackSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.FallbackSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool allow_automatic_fallback_on_compilation_error = 7;
    if (has_allow_automatic_fallback_on_compilation_error()) {
      total_size += 1 + 1;
    }

    // optional bool allow_automatic_fallback_on_execution_error = 8;
    if (has_allow_automatic_fallback_on_execution_error()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FallbackSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.FallbackSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const FallbackSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FallbackSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.FallbackSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.FallbackSettings)
    MergeFrom(*source);
  }
}

void FallbackSettings::MergeFrom(const FallbackSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.FallbackSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      allow_automatic_fallback_on_compilation_error_ = from.allow_automatic_fallback_on_compilation_error_;
    }
    if (cached_has_bits & 0x00000002u) {
      allow_automatic_fallback_on_execution_error_ = from.allow_automatic_fallback_on_execution_error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FallbackSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.FallbackSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FallbackSettings::CopyFrom(const FallbackSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.FallbackSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FallbackSettings::IsInitialized() const {
  return true;
}

void FallbackSettings::Swap(FallbackSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FallbackSettings::InternalSwap(FallbackSettings* other) {
  using std::swap;
  swap(allow_automatic_fallback_on_compilation_error_, other->allow_automatic_fallback_on_compilation_error_);
  swap(allow_automatic_fallback_on_execution_error_, other->allow_automatic_fallback_on_execution_error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FallbackSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BenchmarkMetric::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BenchmarkMetric::kNameFieldNumber;
const int BenchmarkMetric::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BenchmarkMetric::BenchmarkMetric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkMetric.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.BenchmarkMetric)
}
BenchmarkMetric::BenchmarkMetric(const BenchmarkMetric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:tflite.proto.BenchmarkMetric)
}

void BenchmarkMetric::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BenchmarkMetric::~BenchmarkMetric() {
  // @@protoc_insertion_point(destructor:tflite.proto.BenchmarkMetric)
  SharedDtor();
}

void BenchmarkMetric::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BenchmarkMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BenchmarkMetric::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BenchmarkMetric& BenchmarkMetric::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkMetric.base);
  return *internal_default_instance();
}


void BenchmarkMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.BenchmarkMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BenchmarkMetric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.BenchmarkMetric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.BenchmarkMetric.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float values = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.BenchmarkMetric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.BenchmarkMetric)
  return false;
#undef DO_
}

void BenchmarkMetric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.BenchmarkMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.BenchmarkMetric.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated float values = 2 [packed = true];
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->values().data(), this->values_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.BenchmarkMetric)
}

::google::protobuf::uint8* BenchmarkMetric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.BenchmarkMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.BenchmarkMetric.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated float values = 2 [packed = true];
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->values_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.BenchmarkMetric)
  return target;
}

size_t BenchmarkMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.BenchmarkMetric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float values = 2 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BenchmarkMetric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.BenchmarkMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const BenchmarkMetric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BenchmarkMetric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.BenchmarkMetric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.BenchmarkMetric)
    MergeFrom(*source);
  }
}

void BenchmarkMetric::MergeFrom(const BenchmarkMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.BenchmarkMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void BenchmarkMetric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.BenchmarkMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BenchmarkMetric::CopyFrom(const BenchmarkMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.BenchmarkMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BenchmarkMetric::IsInitialized() const {
  return true;
}

void BenchmarkMetric::Swap(BenchmarkMetric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BenchmarkMetric::InternalSwap(BenchmarkMetric* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BenchmarkMetric::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BenchmarkResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BenchmarkResult::kInitializationTimeUsFieldNumber;
const int BenchmarkResult::kInferenceTimeUsFieldNumber;
const int BenchmarkResult::kMaxMemoryKbFieldNumber;
const int BenchmarkResult::kOkFieldNumber;
const int BenchmarkResult::kMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BenchmarkResult::BenchmarkResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.BenchmarkResult)
}
BenchmarkResult::BenchmarkResult(const BenchmarkResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      initialization_time_us_(from.initialization_time_us_),
      inference_time_us_(from.inference_time_us_),
      metrics_(from.metrics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_memory_kb_, &from.max_memory_kb_,
    static_cast<size_t>(reinterpret_cast<char*>(&ok_) -
    reinterpret_cast<char*>(&max_memory_kb_)) + sizeof(ok_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.BenchmarkResult)
}

void BenchmarkResult::SharedCtor() {
  ::memset(&max_memory_kb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ok_) -
      reinterpret_cast<char*>(&max_memory_kb_)) + sizeof(ok_));
}

BenchmarkResult::~BenchmarkResult() {
  // @@protoc_insertion_point(destructor:tflite.proto.BenchmarkResult)
  SharedDtor();
}

void BenchmarkResult::SharedDtor() {
}

void BenchmarkResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BenchmarkResult::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BenchmarkResult& BenchmarkResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkResult.base);
  return *internal_default_instance();
}


void BenchmarkResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.BenchmarkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initialization_time_us_.Clear();
  inference_time_us_.Clear();
  metrics_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&max_memory_kb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ok_) -
        reinterpret_cast<char*>(&max_memory_kb_)) + sizeof(ok_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BenchmarkResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.BenchmarkResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 initialization_time_us = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_initialization_time_us())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_initialization_time_us())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 inference_time_us = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_inference_time_us())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_inference_time_us())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_memory_kb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_max_memory_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_memory_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ok = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ok();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tflite.proto.BenchmarkMetric metrics = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.BenchmarkResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.BenchmarkResult)
  return false;
#undef DO_
}

void BenchmarkResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.BenchmarkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 initialization_time_us = 1 [packed = true];
  if (this->initialization_time_us_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _initialization_time_us_cached_byte_size_));
  }
  for (int i = 0, n = this->initialization_time_us_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->initialization_time_us(i), output);
  }

  // repeated int64 inference_time_us = 2 [packed = true];
  if (this->inference_time_us_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _inference_time_us_cached_byte_size_));
  }
  for (int i = 0, n = this->inference_time_us_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->inference_time_us(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 max_memory_kb = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_memory_kb(), output);
  }

  // optional bool ok = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->ok(), output);
  }

  // repeated .tflite.proto.BenchmarkMetric metrics = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->metrics(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.BenchmarkResult)
}

::google::protobuf::uint8* BenchmarkResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.BenchmarkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 initialization_time_us = 1 [packed = true];
  if (this->initialization_time_us_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _initialization_time_us_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->initialization_time_us_, target);
  }

  // repeated int64 inference_time_us = 2 [packed = true];
  if (this->inference_time_us_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _inference_time_us_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->inference_time_us_, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 max_memory_kb = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_memory_kb(), target);
  }

  // optional bool ok = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->ok(), target);
  }

  // repeated .tflite.proto.BenchmarkMetric metrics = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->metrics(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.BenchmarkResult)
  return target;
}

size_t BenchmarkResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.BenchmarkResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int64 initialization_time_us = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->initialization_time_us_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _initialization_time_us_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 inference_time_us = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->inference_time_us_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _inference_time_us_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .tflite.proto.BenchmarkMetric metrics = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metrics(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 max_memory_kb = 3;
    if (has_max_memory_kb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_memory_kb());
    }

    // optional bool ok = 4;
    if (has_ok()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BenchmarkResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.BenchmarkResult)
  GOOGLE_DCHECK_NE(&from, this);
  const BenchmarkResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BenchmarkResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.BenchmarkResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.BenchmarkResult)
    MergeFrom(*source);
  }
}

void BenchmarkResult::MergeFrom(const BenchmarkResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.BenchmarkResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initialization_time_us_.MergeFrom(from.initialization_time_us_);
  inference_time_us_.MergeFrom(from.inference_time_us_);
  metrics_.MergeFrom(from.metrics_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      max_memory_kb_ = from.max_memory_kb_;
    }
    if (cached_has_bits & 0x00000002u) {
      ok_ = from.ok_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BenchmarkResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.BenchmarkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BenchmarkResult::CopyFrom(const BenchmarkResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.BenchmarkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BenchmarkResult::IsInitialized() const {
  return true;
}

void BenchmarkResult::Swap(BenchmarkResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BenchmarkResult::InternalSwap(BenchmarkResult* other) {
  using std::swap;
  initialization_time_us_.InternalSwap(&other->initialization_time_us_);
  inference_time_us_.InternalSwap(&other->inference_time_us_);
  CastToBase(&metrics_)->InternalSwap(CastToBase(&other->metrics_));
  swap(max_memory_kb_, other->max_memory_kb_);
  swap(ok_, other->ok_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BenchmarkResult::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorCode::kSourceFieldNumber;
const int ErrorCode::kTfliteErrorFieldNumber;
const int ErrorCode::kUnderlyingApiErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorCode::ErrorCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_ErrorCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.ErrorCode)
}
ErrorCode::ErrorCode(const ErrorCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&underlying_api_error_) -
    reinterpret_cast<char*>(&source_)) + sizeof(underlying_api_error_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.ErrorCode)
}

void ErrorCode::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&underlying_api_error_) -
      reinterpret_cast<char*>(&source_)) + sizeof(underlying_api_error_));
}

ErrorCode::~ErrorCode() {
  // @@protoc_insertion_point(destructor:tflite.proto.ErrorCode)
  SharedDtor();
}

void ErrorCode::SharedDtor() {
}

void ErrorCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorCode::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorCode& ErrorCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_ErrorCode.base);
  return *internal_default_instance();
}


void ErrorCode::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.ErrorCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&source_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&underlying_api_error_) -
        reinterpret_cast<char*>(&source_)) + sizeof(underlying_api_error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ErrorCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.ErrorCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.Delegate source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::Delegate_IsValid(value)) {
            set_source(static_cast< ::tflite::proto::Delegate >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tflite_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tflite_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tflite_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 underlying_api_error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_underlying_api_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &underlying_api_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.ErrorCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.ErrorCode)
  return false;
#undef DO_
}

void ErrorCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.ErrorCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.Delegate source = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->source(), output);
  }

  // optional int32 tflite_error = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tflite_error(), output);
  }

  // optional int64 underlying_api_error = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->underlying_api_error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.ErrorCode)
}

::google::protobuf::uint8* ErrorCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.ErrorCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.Delegate source = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->source(), target);
  }

  // optional int32 tflite_error = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tflite_error(), target);
  }

  // optional int64 underlying_api_error = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->underlying_api_error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.ErrorCode)
  return target;
}

size_t ErrorCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.ErrorCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .tflite.proto.Delegate source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source());
    }

    // optional int32 tflite_error = 2;
    if (has_tflite_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tflite_error());
    }

    // optional int64 underlying_api_error = 3;
    if (has_underlying_api_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->underlying_api_error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.ErrorCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.ErrorCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.ErrorCode)
    MergeFrom(*source);
  }
}

void ErrorCode::MergeFrom(const ErrorCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.ErrorCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      source_ = from.source_;
    }
    if (cached_has_bits & 0x00000002u) {
      tflite_error_ = from.tflite_error_;
    }
    if (cached_has_bits & 0x00000004u) {
      underlying_api_error_ = from.underlying_api_error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ErrorCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.ErrorCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorCode::CopyFrom(const ErrorCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.ErrorCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorCode::IsInitialized() const {
  return true;
}

void ErrorCode::Swap(ErrorCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorCode::InternalSwap(ErrorCode* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(tflite_error_, other->tflite_error_);
  swap(underlying_api_error_, other->underlying_api_error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorCode::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BenchmarkError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BenchmarkError::kStageFieldNumber;
const int BenchmarkError::kExitCodeFieldNumber;
const int BenchmarkError::kSignalFieldNumber;
const int BenchmarkError::kErrorCodeFieldNumber;
const int BenchmarkError::kMiniBenchmarkErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BenchmarkError::BenchmarkError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.BenchmarkError)
}
BenchmarkError::BenchmarkError(const BenchmarkError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      error_code_(from.error_code_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stage_, &from.stage_,
    static_cast<size_t>(reinterpret_cast<char*>(&mini_benchmark_error_code_) -
    reinterpret_cast<char*>(&stage_)) + sizeof(mini_benchmark_error_code_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.BenchmarkError)
}

void BenchmarkError::SharedCtor() {
  ::memset(&stage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mini_benchmark_error_code_) -
      reinterpret_cast<char*>(&stage_)) + sizeof(mini_benchmark_error_code_));
}

BenchmarkError::~BenchmarkError() {
  // @@protoc_insertion_point(destructor:tflite.proto.BenchmarkError)
  SharedDtor();
}

void BenchmarkError::SharedDtor() {
}

void BenchmarkError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BenchmarkError::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BenchmarkError& BenchmarkError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkError.base);
  return *internal_default_instance();
}


void BenchmarkError::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.BenchmarkError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_code_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&stage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mini_benchmark_error_code_) -
        reinterpret_cast<char*>(&stage_)) + sizeof(mini_benchmark_error_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BenchmarkError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.BenchmarkError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.BenchmarkStage stage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::BenchmarkStage_IsValid(value)) {
            set_stage(static_cast< ::tflite::proto::BenchmarkStage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exit_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_exit_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exit_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 signal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_signal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &signal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tflite.proto.ErrorCode error_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_error_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mini_benchmark_error_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_mini_benchmark_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mini_benchmark_error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.BenchmarkError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.BenchmarkError)
  return false;
#undef DO_
}

void BenchmarkError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.BenchmarkError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.BenchmarkStage stage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stage(), output);
  }

  // optional int32 exit_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exit_code(), output);
  }

  // optional int32 signal = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->signal(), output);
  }

  // repeated .tflite.proto.ErrorCode error_code = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->error_code(static_cast<int>(i)),
      output);
  }

  // optional int32 mini_benchmark_error_code = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mini_benchmark_error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.BenchmarkError)
}

::google::protobuf::uint8* BenchmarkError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.BenchmarkError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.BenchmarkStage stage = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stage(), target);
  }

  // optional int32 exit_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exit_code(), target);
  }

  // optional int32 signal = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->signal(), target);
  }

  // repeated .tflite.proto.ErrorCode error_code = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->error_code(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 mini_benchmark_error_code = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mini_benchmark_error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.BenchmarkError)
  return target;
}

size_t BenchmarkError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.BenchmarkError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tflite.proto.ErrorCode error_code = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->error_code_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error_code(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .tflite.proto.BenchmarkStage stage = 1;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stage());
    }

    // optional int32 exit_code = 2;
    if (has_exit_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exit_code());
    }

    // optional int32 signal = 3;
    if (has_signal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->signal());
    }

    // optional int32 mini_benchmark_error_code = 5;
    if (has_mini_benchmark_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mini_benchmark_error_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BenchmarkError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.BenchmarkError)
  GOOGLE_DCHECK_NE(&from, this);
  const BenchmarkError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BenchmarkError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.BenchmarkError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.BenchmarkError)
    MergeFrom(*source);
  }
}

void BenchmarkError::MergeFrom(const BenchmarkError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.BenchmarkError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_code_.MergeFrom(from.error_code_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      stage_ = from.stage_;
    }
    if (cached_has_bits & 0x00000002u) {
      exit_code_ = from.exit_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      signal_ = from.signal_;
    }
    if (cached_has_bits & 0x00000008u) {
      mini_benchmark_error_code_ = from.mini_benchmark_error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BenchmarkError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.BenchmarkError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BenchmarkError::CopyFrom(const BenchmarkError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.BenchmarkError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BenchmarkError::IsInitialized() const {
  return true;
}

void BenchmarkError::Swap(BenchmarkError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BenchmarkError::InternalSwap(BenchmarkError* other) {
  using std::swap;
  CastToBase(&error_code_)->InternalSwap(CastToBase(&other->error_code_));
  swap(stage_, other->stage_);
  swap(exit_code_, other->exit_code_);
  swap(signal_, other->signal_);
  swap(mini_benchmark_error_code_, other->mini_benchmark_error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BenchmarkError::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BenchmarkEvent::InitAsDefaultInstance() {
  ::tflite::proto::_BenchmarkEvent_default_instance_._instance.get_mutable()->tflite_settings_ = const_cast< ::tflite::proto::TFLiteSettings*>(
      ::tflite::proto::TFLiteSettings::internal_default_instance());
  ::tflite::proto::_BenchmarkEvent_default_instance_._instance.get_mutable()->result_ = const_cast< ::tflite::proto::BenchmarkResult*>(
      ::tflite::proto::BenchmarkResult::internal_default_instance());
  ::tflite::proto::_BenchmarkEvent_default_instance_._instance.get_mutable()->error_ = const_cast< ::tflite::proto::BenchmarkError*>(
      ::tflite::proto::BenchmarkError::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BenchmarkEvent::kTfliteSettingsFieldNumber;
const int BenchmarkEvent::kEventTypeFieldNumber;
const int BenchmarkEvent::kResultFieldNumber;
const int BenchmarkEvent::kErrorFieldNumber;
const int BenchmarkEvent::kBoottimeUsFieldNumber;
const int BenchmarkEvent::kWallclockUsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BenchmarkEvent::BenchmarkEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.BenchmarkEvent)
}
BenchmarkEvent::BenchmarkEvent(const BenchmarkEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tflite_settings()) {
    tflite_settings_ = new ::tflite::proto::TFLiteSettings(*from.tflite_settings_);
  } else {
    tflite_settings_ = NULL;
  }
  if (from.has_result()) {
    result_ = new ::tflite::proto::BenchmarkResult(*from.result_);
  } else {
    result_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::tflite::proto::BenchmarkError(*from.error_);
  } else {
    error_ = NULL;
  }
  ::memcpy(&boottime_us_, &from.boottime_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_type_) -
    reinterpret_cast<char*>(&boottime_us_)) + sizeof(event_type_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.BenchmarkEvent)
}

void BenchmarkEvent::SharedCtor() {
  ::memset(&tflite_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_type_) -
      reinterpret_cast<char*>(&tflite_settings_)) + sizeof(event_type_));
}

BenchmarkEvent::~BenchmarkEvent() {
  // @@protoc_insertion_point(destructor:tflite.proto.BenchmarkEvent)
  SharedDtor();
}

void BenchmarkEvent::SharedDtor() {
  if (this != internal_default_instance()) delete tflite_settings_;
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete error_;
}

void BenchmarkEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BenchmarkEvent::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BenchmarkEvent& BenchmarkEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkEvent.base);
  return *internal_default_instance();
}


void BenchmarkEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.BenchmarkEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(tflite_settings_ != NULL);
      tflite_settings_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(result_ != NULL);
      result_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(error_ != NULL);
      error_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&boottime_us_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&event_type_) -
        reinterpret_cast<char*>(&boottime_us_)) + sizeof(event_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BenchmarkEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.BenchmarkEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tflite.proto.TFLiteSettings tflite_settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tflite_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.BenchmarkEventType event_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tflite::proto::BenchmarkEventType_IsValid(value)) {
            set_event_type(static_cast< ::tflite::proto::BenchmarkEventType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.BenchmarkResult result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.BenchmarkError error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 boottime_us = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_boottime_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boottime_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 wallclock_us = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_wallclock_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wallclock_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.BenchmarkEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.BenchmarkEvent)
  return false;
#undef DO_
}

void BenchmarkEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.BenchmarkEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.TFLiteSettings tflite_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_tflite_settings(), output);
  }

  // optional .tflite.proto.BenchmarkEventType event_type = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->event_type(), output);
  }

  // optional .tflite.proto.BenchmarkResult result = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_result(), output);
  }

  // optional .tflite.proto.BenchmarkError error = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_error(), output);
  }

  // optional int64 boottime_us = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->boottime_us(), output);
  }

  // optional int64 wallclock_us = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->wallclock_us(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.BenchmarkEvent)
}

::google::protobuf::uint8* BenchmarkEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.BenchmarkEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.TFLiteSettings tflite_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_tflite_settings(), deterministic, target);
  }

  // optional .tflite.proto.BenchmarkEventType event_type = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->event_type(), target);
  }

  // optional .tflite.proto.BenchmarkResult result = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_result(), deterministic, target);
  }

  // optional .tflite.proto.BenchmarkError error = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_error(), deterministic, target);
  }

  // optional int64 boottime_us = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->boottime_us(), target);
  }

  // optional int64 wallclock_us = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->wallclock_us(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.BenchmarkEvent)
  return target;
}

size_t BenchmarkEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.BenchmarkEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .tflite.proto.TFLiteSettings tflite_settings = 1;
    if (has_tflite_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tflite_settings_);
    }

    // optional .tflite.proto.BenchmarkResult result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *result_);
    }

    // optional .tflite.proto.BenchmarkError error = 4;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *error_);
    }

    // optional int64 boottime_us = 5;
    if (has_boottime_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boottime_us());
    }

    // optional int64 wallclock_us = 6;
    if (has_wallclock_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wallclock_us());
    }

    // optional .tflite.proto.BenchmarkEventType event_type = 2;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BenchmarkEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.BenchmarkEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const BenchmarkEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BenchmarkEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.BenchmarkEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.BenchmarkEvent)
    MergeFrom(*source);
  }
}

void BenchmarkEvent::MergeFrom(const BenchmarkEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.BenchmarkEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_tflite_settings()->::tflite::proto::TFLiteSettings::MergeFrom(from.tflite_settings());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_result()->::tflite::proto::BenchmarkResult::MergeFrom(from.result());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_error()->::tflite::proto::BenchmarkError::MergeFrom(from.error());
    }
    if (cached_has_bits & 0x00000008u) {
      boottime_us_ = from.boottime_us_;
    }
    if (cached_has_bits & 0x00000010u) {
      wallclock_us_ = from.wallclock_us_;
    }
    if (cached_has_bits & 0x00000020u) {
      event_type_ = from.event_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BenchmarkEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.BenchmarkEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BenchmarkEvent::CopyFrom(const BenchmarkEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.BenchmarkEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BenchmarkEvent::IsInitialized() const {
  return true;
}

void BenchmarkEvent::Swap(BenchmarkEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BenchmarkEvent::InternalSwap(BenchmarkEvent* other) {
  using std::swap;
  swap(tflite_settings_, other->tflite_settings_);
  swap(result_, other->result_);
  swap(error_, other->error_);
  swap(boottime_us_, other->boottime_us_);
  swap(wallclock_us_, other->wallclock_us_);
  swap(event_type_, other->event_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BenchmarkEvent::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BestAccelerationDecision::InitAsDefaultInstance() {
  ::tflite::proto::_BestAccelerationDecision_default_instance_._instance.get_mutable()->min_latency_event_ = const_cast< ::tflite::proto::BenchmarkEvent*>(
      ::tflite::proto::BenchmarkEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BestAccelerationDecision::kNumberOfSourceEventsFieldNumber;
const int BestAccelerationDecision::kMinLatencyEventFieldNumber;
const int BestAccelerationDecision::kMinInferenceTimeUsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BestAccelerationDecision::BestAccelerationDecision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BestAccelerationDecision.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.BestAccelerationDecision)
}
BestAccelerationDecision::BestAccelerationDecision(const BestAccelerationDecision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min_latency_event()) {
    min_latency_event_ = new ::tflite::proto::BenchmarkEvent(*from.min_latency_event_);
  } else {
    min_latency_event_ = NULL;
  }
  ::memcpy(&min_inference_time_us_, &from.min_inference_time_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_of_source_events_) -
    reinterpret_cast<char*>(&min_inference_time_us_)) + sizeof(number_of_source_events_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.BestAccelerationDecision)
}

void BestAccelerationDecision::SharedCtor() {
  ::memset(&min_latency_event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_of_source_events_) -
      reinterpret_cast<char*>(&min_latency_event_)) + sizeof(number_of_source_events_));
}

BestAccelerationDecision::~BestAccelerationDecision() {
  // @@protoc_insertion_point(destructor:tflite.proto.BestAccelerationDecision)
  SharedDtor();
}

void BestAccelerationDecision::SharedDtor() {
  if (this != internal_default_instance()) delete min_latency_event_;
}

void BestAccelerationDecision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BestAccelerationDecision::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BestAccelerationDecision& BestAccelerationDecision::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BestAccelerationDecision.base);
  return *internal_default_instance();
}


void BestAccelerationDecision::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.BestAccelerationDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(min_latency_event_ != NULL);
    min_latency_event_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&min_inference_time_us_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&number_of_source_events_) -
        reinterpret_cast<char*>(&min_inference_time_us_)) + sizeof(number_of_source_events_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BestAccelerationDecision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.BestAccelerationDecision)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 number_of_source_events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_number_of_source_events();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_of_source_events_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.BenchmarkEvent min_latency_event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_latency_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 min_inference_time_us = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_min_inference_time_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &min_inference_time_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.BestAccelerationDecision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.BestAccelerationDecision)
  return false;
#undef DO_
}

void BestAccelerationDecision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.BestAccelerationDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 number_of_source_events = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number_of_source_events(), output);
  }

  // optional .tflite.proto.BenchmarkEvent min_latency_event = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_min_latency_event(), output);
  }

  // optional int64 min_inference_time_us = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->min_inference_time_us(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.BestAccelerationDecision)
}

::google::protobuf::uint8* BestAccelerationDecision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.BestAccelerationDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 number_of_source_events = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number_of_source_events(), target);
  }

  // optional .tflite.proto.BenchmarkEvent min_latency_event = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_min_latency_event(), deterministic, target);
  }

  // optional int64 min_inference_time_us = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->min_inference_time_us(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.BestAccelerationDecision)
  return target;
}

size_t BestAccelerationDecision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.BestAccelerationDecision)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .tflite.proto.BenchmarkEvent min_latency_event = 2;
    if (has_min_latency_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_latency_event_);
    }

    // optional int64 min_inference_time_us = 3;
    if (has_min_inference_time_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->min_inference_time_us());
    }

    // optional int32 number_of_source_events = 1;
    if (has_number_of_source_events()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number_of_source_events());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BestAccelerationDecision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.BestAccelerationDecision)
  GOOGLE_DCHECK_NE(&from, this);
  const BestAccelerationDecision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BestAccelerationDecision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.BestAccelerationDecision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.BestAccelerationDecision)
    MergeFrom(*source);
  }
}

void BestAccelerationDecision::MergeFrom(const BestAccelerationDecision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.BestAccelerationDecision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_min_latency_event()->::tflite::proto::BenchmarkEvent::MergeFrom(from.min_latency_event());
    }
    if (cached_has_bits & 0x00000002u) {
      min_inference_time_us_ = from.min_inference_time_us_;
    }
    if (cached_has_bits & 0x00000004u) {
      number_of_source_events_ = from.number_of_source_events_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BestAccelerationDecision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.BestAccelerationDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BestAccelerationDecision::CopyFrom(const BestAccelerationDecision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.BestAccelerationDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BestAccelerationDecision::IsInitialized() const {
  return true;
}

void BestAccelerationDecision::Swap(BestAccelerationDecision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BestAccelerationDecision::InternalSwap(BestAccelerationDecision* other) {
  using std::swap;
  swap(min_latency_event_, other->min_latency_event_);
  swap(min_inference_time_us_, other->min_inference_time_us_);
  swap(number_of_source_events_, other->number_of_source_events_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BestAccelerationDecision::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BenchmarkInitializationFailure::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BenchmarkInitializationFailure::kInitializationStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BenchmarkInitializationFailure::BenchmarkInitializationFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkInitializationFailure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.BenchmarkInitializationFailure)
}
BenchmarkInitializationFailure::BenchmarkInitializationFailure(const BenchmarkInitializationFailure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initialization_status_ = from.initialization_status_;
  // @@protoc_insertion_point(copy_constructor:tflite.proto.BenchmarkInitializationFailure)
}

void BenchmarkInitializationFailure::SharedCtor() {
  initialization_status_ = 0;
}

BenchmarkInitializationFailure::~BenchmarkInitializationFailure() {
  // @@protoc_insertion_point(destructor:tflite.proto.BenchmarkInitializationFailure)
  SharedDtor();
}

void BenchmarkInitializationFailure::SharedDtor() {
}

void BenchmarkInitializationFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BenchmarkInitializationFailure::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BenchmarkInitializationFailure& BenchmarkInitializationFailure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkInitializationFailure.base);
  return *internal_default_instance();
}


void BenchmarkInitializationFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.BenchmarkInitializationFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initialization_status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BenchmarkInitializationFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.BenchmarkInitializationFailure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 initialization_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_initialization_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initialization_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.BenchmarkInitializationFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.BenchmarkInitializationFailure)
  return false;
#undef DO_
}

void BenchmarkInitializationFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.BenchmarkInitializationFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 initialization_status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->initialization_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.BenchmarkInitializationFailure)
}

::google::protobuf::uint8* BenchmarkInitializationFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.BenchmarkInitializationFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 initialization_status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->initialization_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.BenchmarkInitializationFailure)
  return target;
}

size_t BenchmarkInitializationFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.BenchmarkInitializationFailure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 initialization_status = 1;
  if (has_initialization_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->initialization_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BenchmarkInitializationFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.BenchmarkInitializationFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const BenchmarkInitializationFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BenchmarkInitializationFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.BenchmarkInitializationFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.BenchmarkInitializationFailure)
    MergeFrom(*source);
  }
}

void BenchmarkInitializationFailure::MergeFrom(const BenchmarkInitializationFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.BenchmarkInitializationFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_initialization_status()) {
    set_initialization_status(from.initialization_status());
  }
}

void BenchmarkInitializationFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.BenchmarkInitializationFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BenchmarkInitializationFailure::CopyFrom(const BenchmarkInitializationFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.BenchmarkInitializationFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BenchmarkInitializationFailure::IsInitialized() const {
  return true;
}

void BenchmarkInitializationFailure::Swap(BenchmarkInitializationFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BenchmarkInitializationFailure::InternalSwap(BenchmarkInitializationFailure* other) {
  using std::swap;
  swap(initialization_status_, other->initialization_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BenchmarkInitializationFailure::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MiniBenchmarkEvent::InitAsDefaultInstance() {
  ::tflite::proto::_MiniBenchmarkEvent_default_instance_._instance.get_mutable()->best_acceleration_decision_ = const_cast< ::tflite::proto::BestAccelerationDecision*>(
      ::tflite::proto::BestAccelerationDecision::internal_default_instance());
  ::tflite::proto::_MiniBenchmarkEvent_default_instance_._instance.get_mutable()->initialization_failure_ = const_cast< ::tflite::proto::BenchmarkInitializationFailure*>(
      ::tflite::proto::BenchmarkInitializationFailure::internal_default_instance());
  ::tflite::proto::_MiniBenchmarkEvent_default_instance_._instance.get_mutable()->benchmark_event_ = const_cast< ::tflite::proto::BenchmarkEvent*>(
      ::tflite::proto::BenchmarkEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiniBenchmarkEvent::kIsLogFlushingEventFieldNumber;
const int MiniBenchmarkEvent::kBestAccelerationDecisionFieldNumber;
const int MiniBenchmarkEvent::kInitializationFailureFieldNumber;
const int MiniBenchmarkEvent::kBenchmarkEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiniBenchmarkEvent::MiniBenchmarkEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_MiniBenchmarkEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.MiniBenchmarkEvent)
}
MiniBenchmarkEvent::MiniBenchmarkEvent(const MiniBenchmarkEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_best_acceleration_decision()) {
    best_acceleration_decision_ = new ::tflite::proto::BestAccelerationDecision(*from.best_acceleration_decision_);
  } else {
    best_acceleration_decision_ = NULL;
  }
  if (from.has_initialization_failure()) {
    initialization_failure_ = new ::tflite::proto::BenchmarkInitializationFailure(*from.initialization_failure_);
  } else {
    initialization_failure_ = NULL;
  }
  if (from.has_benchmark_event()) {
    benchmark_event_ = new ::tflite::proto::BenchmarkEvent(*from.benchmark_event_);
  } else {
    benchmark_event_ = NULL;
  }
  is_log_flushing_event_ = from.is_log_flushing_event_;
  // @@protoc_insertion_point(copy_constructor:tflite.proto.MiniBenchmarkEvent)
}

void MiniBenchmarkEvent::SharedCtor() {
  ::memset(&best_acceleration_decision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_log_flushing_event_) -
      reinterpret_cast<char*>(&best_acceleration_decision_)) + sizeof(is_log_flushing_event_));
}

MiniBenchmarkEvent::~MiniBenchmarkEvent() {
  // @@protoc_insertion_point(destructor:tflite.proto.MiniBenchmarkEvent)
  SharedDtor();
}

void MiniBenchmarkEvent::SharedDtor() {
  if (this != internal_default_instance()) delete best_acceleration_decision_;
  if (this != internal_default_instance()) delete initialization_failure_;
  if (this != internal_default_instance()) delete benchmark_event_;
}

void MiniBenchmarkEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MiniBenchmarkEvent::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiniBenchmarkEvent& MiniBenchmarkEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_MiniBenchmarkEvent.base);
  return *internal_default_instance();
}


void MiniBenchmarkEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.MiniBenchmarkEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(best_acceleration_decision_ != NULL);
      best_acceleration_decision_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(initialization_failure_ != NULL);
      initialization_failure_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(benchmark_event_ != NULL);
      benchmark_event_->Clear();
    }
  }
  is_log_flushing_event_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MiniBenchmarkEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.MiniBenchmarkEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_log_flushing_event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_log_flushing_event();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_log_flushing_event_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.BestAccelerationDecision best_acceleration_decision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_best_acceleration_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.BenchmarkInitializationFailure initialization_failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_initialization_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.BenchmarkEvent benchmark_event = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_benchmark_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.MiniBenchmarkEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.MiniBenchmarkEvent)
  return false;
#undef DO_
}

void MiniBenchmarkEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.MiniBenchmarkEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_log_flushing_event = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_log_flushing_event(), output);
  }

  // optional .tflite.proto.BestAccelerationDecision best_acceleration_decision = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_best_acceleration_decision(), output);
  }

  // optional .tflite.proto.BenchmarkInitializationFailure initialization_failure = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_initialization_failure(), output);
  }

  // optional .tflite.proto.BenchmarkEvent benchmark_event = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_benchmark_event(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.MiniBenchmarkEvent)
}

::google::protobuf::uint8* MiniBenchmarkEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.MiniBenchmarkEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_log_flushing_event = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_log_flushing_event(), target);
  }

  // optional .tflite.proto.BestAccelerationDecision best_acceleration_decision = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_best_acceleration_decision(), deterministic, target);
  }

  // optional .tflite.proto.BenchmarkInitializationFailure initialization_failure = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_initialization_failure(), deterministic, target);
  }

  // optional .tflite.proto.BenchmarkEvent benchmark_event = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_benchmark_event(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.MiniBenchmarkEvent)
  return target;
}

size_t MiniBenchmarkEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.MiniBenchmarkEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .tflite.proto.BestAccelerationDecision best_acceleration_decision = 2;
    if (has_best_acceleration_decision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *best_acceleration_decision_);
    }

    // optional .tflite.proto.BenchmarkInitializationFailure initialization_failure = 3;
    if (has_initialization_failure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *initialization_failure_);
    }

    // optional .tflite.proto.BenchmarkEvent benchmark_event = 4;
    if (has_benchmark_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *benchmark_event_);
    }

    // optional bool is_log_flushing_event = 1;
    if (has_is_log_flushing_event()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MiniBenchmarkEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.MiniBenchmarkEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const MiniBenchmarkEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiniBenchmarkEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.MiniBenchmarkEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.MiniBenchmarkEvent)
    MergeFrom(*source);
  }
}

void MiniBenchmarkEvent::MergeFrom(const MiniBenchmarkEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.MiniBenchmarkEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_best_acceleration_decision()->::tflite::proto::BestAccelerationDecision::MergeFrom(from.best_acceleration_decision());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_initialization_failure()->::tflite::proto::BenchmarkInitializationFailure::MergeFrom(from.initialization_failure());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_benchmark_event()->::tflite::proto::BenchmarkEvent::MergeFrom(from.benchmark_event());
    }
    if (cached_has_bits & 0x00000008u) {
      is_log_flushing_event_ = from.is_log_flushing_event_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MiniBenchmarkEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.MiniBenchmarkEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiniBenchmarkEvent::CopyFrom(const MiniBenchmarkEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.MiniBenchmarkEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiniBenchmarkEvent::IsInitialized() const {
  return true;
}

void MiniBenchmarkEvent::Swap(MiniBenchmarkEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiniBenchmarkEvent::InternalSwap(MiniBenchmarkEvent* other) {
  using std::swap;
  swap(best_acceleration_decision_, other->best_acceleration_decision_);
  swap(initialization_failure_, other->initialization_failure_);
  swap(benchmark_event_, other->benchmark_event_);
  swap(is_log_flushing_event_, other->is_log_flushing_event_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MiniBenchmarkEvent::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelFile::kFilenameFieldNumber;
const int ModelFile::kFdFieldNumber;
const int ModelFile::kOffsetFieldNumber;
const int ModelFile::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelFile::ModelFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_ModelFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.ModelFile)
}
ModelFile::ModelFile(const ModelFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&fd_, &from.fd_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&fd_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:tflite.proto.ModelFile)
}

void ModelFile::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&fd_)) + sizeof(length_));
}

ModelFile::~ModelFile() {
  // @@protoc_insertion_point(destructor:tflite.proto.ModelFile)
  SharedDtor();
}

void ModelFile::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModelFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelFile::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelFile& ModelFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_ModelFile.base);
  return *internal_default_instance();
}


void ModelFile::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.ModelFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&fd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&length_) -
        reinterpret_cast<char*>(&fd_)) + sizeof(length_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.ModelFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.ModelFile.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 fd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.ModelFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.ModelFile)
  return false;
#undef DO_
}

void ModelFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.ModelFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.ModelFile.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional int64 fd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->fd(), output);
  }

  // optional int64 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->offset(), output);
  }

  // optional int64 length = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.ModelFile)
}

::google::protobuf::uint8* ModelFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.ModelFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.ModelFile.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional int64 fd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->fd(), target);
  }

  // optional int64 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->offset(), target);
  }

  // optional int64 length = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.ModelFile)
  return target;
}

size_t ModelFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.ModelFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional int64 fd = 2;
    if (has_fd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fd());
    }

    // optional int64 offset = 3;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->offset());
    }

    // optional int64 length = 4;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->length());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.ModelFile)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.ModelFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.ModelFile)
    MergeFrom(*source);
  }
}

void ModelFile::MergeFrom(const ModelFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.ModelFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      fd_ = from.fd_;
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      length_ = from.length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ModelFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.ModelFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelFile::CopyFrom(const ModelFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.ModelFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelFile::IsInitialized() const {
  return true;
}

void ModelFile::Swap(ModelFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelFile::InternalSwap(ModelFile* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fd_, other->fd_);
  swap(offset_, other->offset_);
  swap(length_, other->length_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelFile::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BenchmarkStoragePaths::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BenchmarkStoragePaths::kStorageFilePathFieldNumber;
const int BenchmarkStoragePaths::kDataDirectoryPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BenchmarkStoragePaths::BenchmarkStoragePaths()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkStoragePaths.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.BenchmarkStoragePaths)
}
BenchmarkStoragePaths::BenchmarkStoragePaths(const BenchmarkStoragePaths& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  storage_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_storage_file_path()) {
    storage_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storage_file_path_);
  }
  data_directory_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_directory_path()) {
    data_directory_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_directory_path_);
  }
  // @@protoc_insertion_point(copy_constructor:tflite.proto.BenchmarkStoragePaths)
}

void BenchmarkStoragePaths::SharedCtor() {
  storage_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_directory_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BenchmarkStoragePaths::~BenchmarkStoragePaths() {
  // @@protoc_insertion_point(destructor:tflite.proto.BenchmarkStoragePaths)
  SharedDtor();
}

void BenchmarkStoragePaths::SharedDtor() {
  storage_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_directory_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BenchmarkStoragePaths::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BenchmarkStoragePaths::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BenchmarkStoragePaths& BenchmarkStoragePaths::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_BenchmarkStoragePaths.base);
  return *internal_default_instance();
}


void BenchmarkStoragePaths::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.BenchmarkStoragePaths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      storage_file_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data_directory_path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BenchmarkStoragePaths::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.BenchmarkStoragePaths)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string storage_file_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storage_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->storage_file_path().data(), static_cast<int>(this->storage_file_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.BenchmarkStoragePaths.storage_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data_directory_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_directory_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_directory_path().data(), static_cast<int>(this->data_directory_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tflite.proto.BenchmarkStoragePaths.data_directory_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.BenchmarkStoragePaths)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.BenchmarkStoragePaths)
  return false;
#undef DO_
}

void BenchmarkStoragePaths::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.BenchmarkStoragePaths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string storage_file_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->storage_file_path().data(), static_cast<int>(this->storage_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.BenchmarkStoragePaths.storage_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->storage_file_path(), output);
  }

  // optional string data_directory_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_directory_path().data(), static_cast<int>(this->data_directory_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.BenchmarkStoragePaths.data_directory_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data_directory_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.BenchmarkStoragePaths)
}

::google::protobuf::uint8* BenchmarkStoragePaths::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.BenchmarkStoragePaths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string storage_file_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->storage_file_path().data(), static_cast<int>(this->storage_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.BenchmarkStoragePaths.storage_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->storage_file_path(), target);
  }

  // optional string data_directory_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_directory_path().data(), static_cast<int>(this->data_directory_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tflite.proto.BenchmarkStoragePaths.data_directory_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data_directory_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.BenchmarkStoragePaths)
  return target;
}

size_t BenchmarkStoragePaths::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.BenchmarkStoragePaths)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string storage_file_path = 1;
    if (has_storage_file_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->storage_file_path());
    }

    // optional string data_directory_path = 2;
    if (has_data_directory_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data_directory_path());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BenchmarkStoragePaths::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.BenchmarkStoragePaths)
  GOOGLE_DCHECK_NE(&from, this);
  const BenchmarkStoragePaths* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BenchmarkStoragePaths>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.BenchmarkStoragePaths)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.BenchmarkStoragePaths)
    MergeFrom(*source);
  }
}

void BenchmarkStoragePaths::MergeFrom(const BenchmarkStoragePaths& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.BenchmarkStoragePaths)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_storage_file_path();
      storage_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storage_file_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_data_directory_path();
      data_directory_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_directory_path_);
    }
  }
}

void BenchmarkStoragePaths::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.BenchmarkStoragePaths)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BenchmarkStoragePaths::CopyFrom(const BenchmarkStoragePaths& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.BenchmarkStoragePaths)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BenchmarkStoragePaths::IsInitialized() const {
  return true;
}

void BenchmarkStoragePaths::Swap(BenchmarkStoragePaths* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BenchmarkStoragePaths::InternalSwap(BenchmarkStoragePaths* other) {
  using std::swap;
  storage_file_path_.Swap(&other->storage_file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_directory_path_.Swap(&other->data_directory_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BenchmarkStoragePaths::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MinibenchmarkSettings::InitAsDefaultInstance() {
  ::tflite::proto::_MinibenchmarkSettings_default_instance_._instance.get_mutable()->model_file_ = const_cast< ::tflite::proto::ModelFile*>(
      ::tflite::proto::ModelFile::internal_default_instance());
  ::tflite::proto::_MinibenchmarkSettings_default_instance_._instance.get_mutable()->storage_paths_ = const_cast< ::tflite::proto::BenchmarkStoragePaths*>(
      ::tflite::proto::BenchmarkStoragePaths::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MinibenchmarkSettings::kSettingsToTestFieldNumber;
const int MinibenchmarkSettings::kModelFileFieldNumber;
const int MinibenchmarkSettings::kStoragePathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MinibenchmarkSettings::MinibenchmarkSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_MinibenchmarkSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tflite.proto.MinibenchmarkSettings)
}
MinibenchmarkSettings::MinibenchmarkSettings(const MinibenchmarkSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      settings_to_test_(from.settings_to_test_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_model_file()) {
    model_file_ = new ::tflite::proto::ModelFile(*from.model_file_);
  } else {
    model_file_ = NULL;
  }
  if (from.has_storage_paths()) {
    storage_paths_ = new ::tflite::proto::BenchmarkStoragePaths(*from.storage_paths_);
  } else {
    storage_paths_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tflite.proto.MinibenchmarkSettings)
}

void MinibenchmarkSettings::SharedCtor() {
  ::memset(&model_file_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&storage_paths_) -
      reinterpret_cast<char*>(&model_file_)) + sizeof(storage_paths_));
}

MinibenchmarkSettings::~MinibenchmarkSettings() {
  // @@protoc_insertion_point(destructor:tflite.proto.MinibenchmarkSettings)
  SharedDtor();
}

void MinibenchmarkSettings::SharedDtor() {
  if (this != internal_default_instance()) delete model_file_;
  if (this != internal_default_instance()) delete storage_paths_;
}

void MinibenchmarkSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MinibenchmarkSettings::descriptor() {
  ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MinibenchmarkSettings& MinibenchmarkSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::scc_info_MinibenchmarkSettings.base);
  return *internal_default_instance();
}


void MinibenchmarkSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.proto.MinibenchmarkSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_to_test_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(model_file_ != NULL);
      model_file_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(storage_paths_ != NULL);
      storage_paths_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MinibenchmarkSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tflite.proto.MinibenchmarkSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tflite.proto.TFLiteSettings settings_to_test = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_settings_to_test()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.ModelFile model_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tflite.proto.BenchmarkStoragePaths storage_paths = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storage_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tflite.proto.MinibenchmarkSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tflite.proto.MinibenchmarkSettings)
  return false;
#undef DO_
}

void MinibenchmarkSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tflite.proto.MinibenchmarkSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tflite.proto.TFLiteSettings settings_to_test = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_to_test_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->settings_to_test(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.ModelFile model_file = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_model_file(), output);
  }

  // optional .tflite.proto.BenchmarkStoragePaths storage_paths = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_storage_paths(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tflite.proto.MinibenchmarkSettings)
}

::google::protobuf::uint8* MinibenchmarkSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tflite.proto.MinibenchmarkSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tflite.proto.TFLiteSettings settings_to_test = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_to_test_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->settings_to_test(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .tflite.proto.ModelFile model_file = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_model_file(), deterministic, target);
  }

  // optional .tflite.proto.BenchmarkStoragePaths storage_paths = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_storage_paths(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.proto.MinibenchmarkSettings)
  return target;
}

size_t MinibenchmarkSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.proto.MinibenchmarkSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tflite.proto.TFLiteSettings settings_to_test = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->settings_to_test_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->settings_to_test(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .tflite.proto.ModelFile model_file = 2;
    if (has_model_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *model_file_);
    }

    // optional .tflite.proto.BenchmarkStoragePaths storage_paths = 3;
    if (has_storage_paths()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *storage_paths_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MinibenchmarkSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tflite.proto.MinibenchmarkSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const MinibenchmarkSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MinibenchmarkSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tflite.proto.MinibenchmarkSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tflite.proto.MinibenchmarkSettings)
    MergeFrom(*source);
  }
}

void MinibenchmarkSettings::MergeFrom(const MinibenchmarkSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tflite.proto.MinibenchmarkSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  settings_to_test_.MergeFrom(from.settings_to_test_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_model_file()->::tflite::proto::ModelFile::MergeFrom(from.model_file());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_storage_paths()->::tflite::proto::BenchmarkStoragePaths::MergeFrom(from.storage_paths());
    }
  }
}

void MinibenchmarkSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tflite.proto.MinibenchmarkSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MinibenchmarkSettings::CopyFrom(const MinibenchmarkSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.proto.MinibenchmarkSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MinibenchmarkSettings::IsInitialized() const {
  return true;
}

void MinibenchmarkSettings::Swap(MinibenchmarkSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MinibenchmarkSettings::InternalSwap(MinibenchmarkSettings* other) {
  using std::swap;
  CastToBase(&settings_to_test_)->InternalSwap(CastToBase(&other->settings_to_test_));
  swap(model_file_, other->model_file_);
  swap(storage_paths_, other->storage_paths_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MinibenchmarkSettings::GetMetadata() const {
  protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace tflite
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::ComputeSettings* Arena::CreateMaybeMessage< ::tflite::proto::ComputeSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::ComputeSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::NNAPISettings* Arena::CreateMaybeMessage< ::tflite::proto::NNAPISettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::NNAPISettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::GPUSettings* Arena::CreateMaybeMessage< ::tflite::proto::GPUSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::GPUSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::HexagonSettings* Arena::CreateMaybeMessage< ::tflite::proto::HexagonSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::HexagonSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::XNNPackSettings* Arena::CreateMaybeMessage< ::tflite::proto::XNNPackSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::XNNPackSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::CoreMLSettings* Arena::CreateMaybeMessage< ::tflite::proto::CoreMLSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::CoreMLSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::EdgeTpuDeviceSpec* Arena::CreateMaybeMessage< ::tflite::proto::EdgeTpuDeviceSpec >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::EdgeTpuDeviceSpec >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::EdgeTpuInactivePowerConfig* Arena::CreateMaybeMessage< ::tflite::proto::EdgeTpuInactivePowerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::EdgeTpuInactivePowerConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::EdgeTpuSettings* Arena::CreateMaybeMessage< ::tflite::proto::EdgeTpuSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::EdgeTpuSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::CoralSettings* Arena::CreateMaybeMessage< ::tflite::proto::CoralSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::CoralSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::CPUSettings* Arena::CreateMaybeMessage< ::tflite::proto::CPUSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::CPUSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::TFLiteSettings* Arena::CreateMaybeMessage< ::tflite::proto::TFLiteSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::TFLiteSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::FallbackSettings* Arena::CreateMaybeMessage< ::tflite::proto::FallbackSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::FallbackSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::BenchmarkMetric* Arena::CreateMaybeMessage< ::tflite::proto::BenchmarkMetric >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::BenchmarkMetric >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::BenchmarkResult* Arena::CreateMaybeMessage< ::tflite::proto::BenchmarkResult >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::BenchmarkResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::ErrorCode* Arena::CreateMaybeMessage< ::tflite::proto::ErrorCode >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::ErrorCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::BenchmarkError* Arena::CreateMaybeMessage< ::tflite::proto::BenchmarkError >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::BenchmarkError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::BenchmarkEvent* Arena::CreateMaybeMessage< ::tflite::proto::BenchmarkEvent >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::BenchmarkEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::BestAccelerationDecision* Arena::CreateMaybeMessage< ::tflite::proto::BestAccelerationDecision >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::BestAccelerationDecision >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::BenchmarkInitializationFailure* Arena::CreateMaybeMessage< ::tflite::proto::BenchmarkInitializationFailure >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::BenchmarkInitializationFailure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::MiniBenchmarkEvent* Arena::CreateMaybeMessage< ::tflite::proto::MiniBenchmarkEvent >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::MiniBenchmarkEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::ModelFile* Arena::CreateMaybeMessage< ::tflite::proto::ModelFile >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::ModelFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::BenchmarkStoragePaths* Arena::CreateMaybeMessage< ::tflite::proto::BenchmarkStoragePaths >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::BenchmarkStoragePaths >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tflite::proto::MinibenchmarkSettings* Arena::CreateMaybeMessage< ::tflite::proto::MinibenchmarkSettings >(Arena* arena) {
  return Arena::CreateInternal< ::tflite::proto::MinibenchmarkSettings >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
