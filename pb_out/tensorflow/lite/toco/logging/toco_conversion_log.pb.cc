// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/lite/toco/logging/toco_conversion_log.proto

#include "tensorflow/lite/toco/logging/toco_conversion_log.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TocoConversionLog_BuiltInOpsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TocoConversionLog_CustomOpsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TocoConversionLog_SelectOpsEntry_DoNotUse;
}  // namespace protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto
namespace toco {
class TocoConversionLog_BuiltInOpsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TocoConversionLog_BuiltInOpsEntry_DoNotUse>
      _instance;
} _TocoConversionLog_BuiltInOpsEntry_DoNotUse_default_instance_;
class TocoConversionLog_CustomOpsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TocoConversionLog_CustomOpsEntry_DoNotUse>
      _instance;
} _TocoConversionLog_CustomOpsEntry_DoNotUse_default_instance_;
class TocoConversionLog_SelectOpsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TocoConversionLog_SelectOpsEntry_DoNotUse>
      _instance;
} _TocoConversionLog_SelectOpsEntry_DoNotUse_default_instance_;
class TocoConversionLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TocoConversionLog>
      _instance;
} _TocoConversionLog_default_instance_;
}  // namespace toco
namespace protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto {
static void InitDefaultsTocoConversionLog_BuiltInOpsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_TocoConversionLog_BuiltInOpsEntry_DoNotUse_default_instance_;
    new (ptr) ::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse();
  }
  ::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TocoConversionLog_BuiltInOpsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTocoConversionLog_BuiltInOpsEntry_DoNotUse}, {}};

static void InitDefaultsTocoConversionLog_CustomOpsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_TocoConversionLog_CustomOpsEntry_DoNotUse_default_instance_;
    new (ptr) ::toco::TocoConversionLog_CustomOpsEntry_DoNotUse();
  }
  ::toco::TocoConversionLog_CustomOpsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TocoConversionLog_CustomOpsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTocoConversionLog_CustomOpsEntry_DoNotUse}, {}};

static void InitDefaultsTocoConversionLog_SelectOpsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_TocoConversionLog_SelectOpsEntry_DoNotUse_default_instance_;
    new (ptr) ::toco::TocoConversionLog_SelectOpsEntry_DoNotUse();
  }
  ::toco::TocoConversionLog_SelectOpsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TocoConversionLog_SelectOpsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTocoConversionLog_SelectOpsEntry_DoNotUse}, {}};

static void InitDefaultsTocoConversionLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_TocoConversionLog_default_instance_;
    new (ptr) ::toco::TocoConversionLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toco::TocoConversionLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TocoConversionLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTocoConversionLog}, {
      &protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::scc_info_TocoConversionLog_BuiltInOpsEntry_DoNotUse.base,
      &protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::scc_info_TocoConversionLog_CustomOpsEntry_DoNotUse.base,
      &protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::scc_info_TocoConversionLog_SelectOpsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TocoConversionLog_BuiltInOpsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TocoConversionLog_CustomOpsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TocoConversionLog_SelectOpsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TocoConversionLog.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_CustomOpsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_CustomOpsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_CustomOpsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_CustomOpsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_SelectOpsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_SelectOpsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_SelectOpsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog_SelectOpsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, op_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, built_in_ops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, custom_ops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, select_ops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, op_signatures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, input_tensor_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, output_tensor_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, log_generation_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, model_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, tf_lite_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, os_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, model_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::TocoConversionLog, toco_err_logs_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  4,
  5,
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse)},
  { 9, 16, sizeof(::toco::TocoConversionLog_CustomOpsEntry_DoNotUse)},
  { 18, 25, sizeof(::toco::TocoConversionLog_SelectOpsEntry_DoNotUse)},
  { 27, 45, sizeof(::toco::TocoConversionLog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_TocoConversionLog_BuiltInOpsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_TocoConversionLog_CustomOpsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_TocoConversionLog_SelectOpsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_TocoConversionLog_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/lite/toco/logging/toco_conversion_log.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n6tensorflow/lite/toco/logging/toco_conv"
      "ersion_log.proto\022\004toco\"\311\004\n\021TocoConversio"
      "nLog\022\017\n\007op_list\030\001 \003(\t\022=\n\014built_in_ops\030\002 "
      "\003(\0132\'.toco.TocoConversionLog.BuiltInOpsE"
      "ntry\022:\n\ncustom_ops\030\003 \003(\0132&.toco.TocoConv"
      "ersionLog.CustomOpsEntry\022:\n\nselect_ops\030\004"
      " \003(\0132&.toco.TocoConversionLog.SelectOpsE"
      "ntry\022\025\n\rop_signatures\030\005 \003(\t\022\032\n\022input_ten"
      "sor_types\030\006 \003(\t\022\033\n\023output_tensor_types\030\007"
      " \003(\t\022\031\n\021log_generation_ts\030\010 \001(\003\022\022\n\nmodel"
      "_size\030\t \001(\005\022\027\n\017tf_lite_version\030\n \001(\t\022\022\n\n"
      "os_version\030\013 \001(\t\022\022\n\nmodel_hash\030\014 \001(\t\022\025\n\r"
      "toco_err_logs\030\r \001(\t\0321\n\017BuiltInOpsEntry\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\0320\n\016Custom"
      "OpsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001"
      "\0320\n\016SelectOpsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\005:\0028\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 650);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/lite/toco/logging/toco_conversion_log.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto
namespace toco {

// ===================================================================

TocoConversionLog_BuiltInOpsEntry_DoNotUse::TocoConversionLog_BuiltInOpsEntry_DoNotUse() {}
TocoConversionLog_BuiltInOpsEntry_DoNotUse::TocoConversionLog_BuiltInOpsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TocoConversionLog_BuiltInOpsEntry_DoNotUse::MergeFrom(const TocoConversionLog_BuiltInOpsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TocoConversionLog_BuiltInOpsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::file_level_metadata[0];
}
void TocoConversionLog_BuiltInOpsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TocoConversionLog_CustomOpsEntry_DoNotUse::TocoConversionLog_CustomOpsEntry_DoNotUse() {}
TocoConversionLog_CustomOpsEntry_DoNotUse::TocoConversionLog_CustomOpsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TocoConversionLog_CustomOpsEntry_DoNotUse::MergeFrom(const TocoConversionLog_CustomOpsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TocoConversionLog_CustomOpsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::file_level_metadata[1];
}
void TocoConversionLog_CustomOpsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TocoConversionLog_SelectOpsEntry_DoNotUse::TocoConversionLog_SelectOpsEntry_DoNotUse() {}
TocoConversionLog_SelectOpsEntry_DoNotUse::TocoConversionLog_SelectOpsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TocoConversionLog_SelectOpsEntry_DoNotUse::MergeFrom(const TocoConversionLog_SelectOpsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TocoConversionLog_SelectOpsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::file_level_metadata[2];
}
void TocoConversionLog_SelectOpsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TocoConversionLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TocoConversionLog::kOpListFieldNumber;
const int TocoConversionLog::kBuiltInOpsFieldNumber;
const int TocoConversionLog::kCustomOpsFieldNumber;
const int TocoConversionLog::kSelectOpsFieldNumber;
const int TocoConversionLog::kOpSignaturesFieldNumber;
const int TocoConversionLog::kInputTensorTypesFieldNumber;
const int TocoConversionLog::kOutputTensorTypesFieldNumber;
const int TocoConversionLog::kLogGenerationTsFieldNumber;
const int TocoConversionLog::kModelSizeFieldNumber;
const int TocoConversionLog::kTfLiteVersionFieldNumber;
const int TocoConversionLog::kOsVersionFieldNumber;
const int TocoConversionLog::kModelHashFieldNumber;
const int TocoConversionLog::kTocoErrLogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TocoConversionLog::TocoConversionLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::scc_info_TocoConversionLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:toco.TocoConversionLog)
}
TocoConversionLog::TocoConversionLog(const TocoConversionLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      op_list_(from.op_list_),
      op_signatures_(from.op_signatures_),
      input_tensor_types_(from.input_tensor_types_),
      output_tensor_types_(from.output_tensor_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  built_in_ops_.MergeFrom(from.built_in_ops_);
  custom_ops_.MergeFrom(from.custom_ops_);
  select_ops_.MergeFrom(from.select_ops_);
  tf_lite_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tf_lite_version()) {
    tf_lite_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tf_lite_version_);
  }
  os_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os_version()) {
    os_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_);
  }
  model_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_hash()) {
    model_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_hash_);
  }
  toco_err_logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_toco_err_logs()) {
    toco_err_logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toco_err_logs_);
  }
  ::memcpy(&log_generation_ts_, &from.log_generation_ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&model_size_) -
    reinterpret_cast<char*>(&log_generation_ts_)) + sizeof(model_size_));
  // @@protoc_insertion_point(copy_constructor:toco.TocoConversionLog)
}

void TocoConversionLog::SharedCtor() {
  tf_lite_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toco_err_logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&log_generation_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&model_size_) -
      reinterpret_cast<char*>(&log_generation_ts_)) + sizeof(model_size_));
}

TocoConversionLog::~TocoConversionLog() {
  // @@protoc_insertion_point(destructor:toco.TocoConversionLog)
  SharedDtor();
}

void TocoConversionLog::SharedDtor() {
  tf_lite_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toco_err_logs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TocoConversionLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TocoConversionLog::descriptor() {
  ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TocoConversionLog& TocoConversionLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::scc_info_TocoConversionLog.base);
  return *internal_default_instance();
}


void TocoConversionLog::Clear() {
// @@protoc_insertion_point(message_clear_start:toco.TocoConversionLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_list_.Clear();
  built_in_ops_.Clear();
  custom_ops_.Clear();
  select_ops_.Clear();
  op_signatures_.Clear();
  input_tensor_types_.Clear();
  output_tensor_types_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      tf_lite_version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      os_version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      model_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      toco_err_logs_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&log_generation_ts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&model_size_) -
        reinterpret_cast<char*>(&log_generation_ts_)) + sizeof(model_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TocoConversionLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:toco.TocoConversionLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string op_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_op_list()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_list(this->op_list_size() - 1).data(),
            static_cast<int>(this->op_list(this->op_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.op_list");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int32> built_in_ops = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          TocoConversionLog_BuiltInOpsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TocoConversionLog_BuiltInOpsEntry_DoNotUse,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&built_in_ops_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.BuiltInOpsEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int32> custom_ops = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          TocoConversionLog_CustomOpsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TocoConversionLog_CustomOpsEntry_DoNotUse,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&custom_ops_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.CustomOpsEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int32> select_ops = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          TocoConversionLog_SelectOpsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TocoConversionLog_SelectOpsEntry_DoNotUse,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&select_ops_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.SelectOpsEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string op_signatures = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_op_signatures()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_signatures(this->op_signatures_size() - 1).data(),
            static_cast<int>(this->op_signatures(this->op_signatures_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.op_signatures");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string input_tensor_types = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input_tensor_types()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input_tensor_types(this->input_tensor_types_size() - 1).data(),
            static_cast<int>(this->input_tensor_types(this->input_tensor_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.input_tensor_types");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string output_tensor_types = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_output_tensor_types()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_tensor_types(this->output_tensor_types_size() - 1).data(),
            static_cast<int>(this->output_tensor_types(this->output_tensor_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.output_tensor_types");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 log_generation_ts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_log_generation_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &log_generation_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 model_size = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_model_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tf_lite_version = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tf_lite_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tf_lite_version().data(), static_cast<int>(this->tf_lite_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.tf_lite_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string os_version = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->os_version().data(), static_cast<int>(this->os_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.os_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model_hash = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_hash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_hash().data(), static_cast<int>(this->model_hash().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.model_hash");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string toco_err_logs = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_toco_err_logs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->toco_err_logs().data(), static_cast<int>(this->toco_err_logs().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.TocoConversionLog.toco_err_logs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:toco.TocoConversionLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:toco.TocoConversionLog)
  return false;
#undef DO_
}

void TocoConversionLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:toco.TocoConversionLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string op_list = 1;
  for (int i = 0, n = this->op_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_list(i).data(), static_cast<int>(this->op_list(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.op_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->op_list(i), output);
  }

  // map<string, int32> built_in_ops = 2;
  if (!this->built_in_ops().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "toco.TocoConversionLog.BuiltInOpsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->built_in_ops().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->built_in_ops().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->built_in_ops().begin();
          it != this->built_in_ops().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TocoConversionLog_BuiltInOpsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(built_in_ops_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TocoConversionLog_BuiltInOpsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->built_in_ops().begin();
          it != this->built_in_ops().end(); ++it) {
        entry.reset(built_in_ops_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int32> custom_ops = 3;
  if (!this->custom_ops().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "toco.TocoConversionLog.CustomOpsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->custom_ops().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->custom_ops().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->custom_ops().begin();
          it != this->custom_ops().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TocoConversionLog_CustomOpsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(custom_ops_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TocoConversionLog_CustomOpsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->custom_ops().begin();
          it != this->custom_ops().end(); ++it) {
        entry.reset(custom_ops_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int32> select_ops = 4;
  if (!this->select_ops().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "toco.TocoConversionLog.SelectOpsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->select_ops().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->select_ops().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->select_ops().begin();
          it != this->select_ops().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TocoConversionLog_SelectOpsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(select_ops_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TocoConversionLog_SelectOpsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->select_ops().begin();
          it != this->select_ops().end(); ++it) {
        entry.reset(select_ops_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string op_signatures = 5;
  for (int i = 0, n = this->op_signatures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_signatures(i).data(), static_cast<int>(this->op_signatures(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.op_signatures");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->op_signatures(i), output);
  }

  // repeated string input_tensor_types = 6;
  for (int i = 0, n = this->input_tensor_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_tensor_types(i).data(), static_cast<int>(this->input_tensor_types(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.input_tensor_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->input_tensor_types(i), output);
  }

  // repeated string output_tensor_types = 7;
  for (int i = 0, n = this->output_tensor_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_tensor_types(i).data(), static_cast<int>(this->output_tensor_types(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.output_tensor_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->output_tensor_types(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 log_generation_ts = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->log_generation_ts(), output);
  }

  // optional int32 model_size = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->model_size(), output);
  }

  // optional string tf_lite_version = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tf_lite_version().data(), static_cast<int>(this->tf_lite_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.tf_lite_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->tf_lite_version(), output);
  }

  // optional string os_version = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os_version().data(), static_cast<int>(this->os_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.os_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->os_version(), output);
  }

  // optional string model_hash = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_hash().data(), static_cast<int>(this->model_hash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.model_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->model_hash(), output);
  }

  // optional string toco_err_logs = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toco_err_logs().data(), static_cast<int>(this->toco_err_logs().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.toco_err_logs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->toco_err_logs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:toco.TocoConversionLog)
}

::google::protobuf::uint8* TocoConversionLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:toco.TocoConversionLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string op_list = 1;
  for (int i = 0, n = this->op_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_list(i).data(), static_cast<int>(this->op_list(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.op_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->op_list(i), target);
  }

  // map<string, int32> built_in_ops = 2;
  if (!this->built_in_ops().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "toco.TocoConversionLog.BuiltInOpsEntry.key");
      }
    };

    if (deterministic &&
        this->built_in_ops().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->built_in_ops().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->built_in_ops().begin();
          it != this->built_in_ops().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TocoConversionLog_BuiltInOpsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(built_in_ops_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TocoConversionLog_BuiltInOpsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->built_in_ops().begin();
          it != this->built_in_ops().end(); ++it) {
        entry.reset(built_in_ops_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int32> custom_ops = 3;
  if (!this->custom_ops().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "toco.TocoConversionLog.CustomOpsEntry.key");
      }
    };

    if (deterministic &&
        this->custom_ops().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->custom_ops().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->custom_ops().begin();
          it != this->custom_ops().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TocoConversionLog_CustomOpsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(custom_ops_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TocoConversionLog_CustomOpsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->custom_ops().begin();
          it != this->custom_ops().end(); ++it) {
        entry.reset(custom_ops_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int32> select_ops = 4;
  if (!this->select_ops().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "toco.TocoConversionLog.SelectOpsEntry.key");
      }
    };

    if (deterministic &&
        this->select_ops().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->select_ops().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->select_ops().begin();
          it != this->select_ops().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TocoConversionLog_SelectOpsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(select_ops_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TocoConversionLog_SelectOpsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->select_ops().begin();
          it != this->select_ops().end(); ++it) {
        entry.reset(select_ops_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string op_signatures = 5;
  for (int i = 0, n = this->op_signatures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_signatures(i).data(), static_cast<int>(this->op_signatures(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.op_signatures");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->op_signatures(i), target);
  }

  // repeated string input_tensor_types = 6;
  for (int i = 0, n = this->input_tensor_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_tensor_types(i).data(), static_cast<int>(this->input_tensor_types(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.input_tensor_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->input_tensor_types(i), target);
  }

  // repeated string output_tensor_types = 7;
  for (int i = 0, n = this->output_tensor_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_tensor_types(i).data(), static_cast<int>(this->output_tensor_types(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.output_tensor_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->output_tensor_types(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 log_generation_ts = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->log_generation_ts(), target);
  }

  // optional int32 model_size = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->model_size(), target);
  }

  // optional string tf_lite_version = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tf_lite_version().data(), static_cast<int>(this->tf_lite_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.tf_lite_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->tf_lite_version(), target);
  }

  // optional string os_version = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os_version().data(), static_cast<int>(this->os_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.os_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->os_version(), target);
  }

  // optional string model_hash = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_hash().data(), static_cast<int>(this->model_hash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.model_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->model_hash(), target);
  }

  // optional string toco_err_logs = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toco_err_logs().data(), static_cast<int>(this->toco_err_logs().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.TocoConversionLog.toco_err_logs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->toco_err_logs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toco.TocoConversionLog)
  return target;
}

size_t TocoConversionLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toco.TocoConversionLog)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string op_list = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->op_list_size());
  for (int i = 0, n = this->op_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->op_list(i));
  }

  // map<string, int32> built_in_ops = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->built_in_ops_size());
  {
    ::std::unique_ptr<TocoConversionLog_BuiltInOpsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->built_in_ops().begin();
        it != this->built_in_ops().end(); ++it) {
      entry.reset(built_in_ops_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, int32> custom_ops = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->custom_ops_size());
  {
    ::std::unique_ptr<TocoConversionLog_CustomOpsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->custom_ops().begin();
        it != this->custom_ops().end(); ++it) {
      entry.reset(custom_ops_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, int32> select_ops = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->select_ops_size());
  {
    ::std::unique_ptr<TocoConversionLog_SelectOpsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->select_ops().begin();
        it != this->select_ops().end(); ++it) {
      entry.reset(select_ops_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string op_signatures = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->op_signatures_size());
  for (int i = 0, n = this->op_signatures_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->op_signatures(i));
  }

  // repeated string input_tensor_types = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_tensor_types_size());
  for (int i = 0, n = this->input_tensor_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input_tensor_types(i));
  }

  // repeated string output_tensor_types = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->output_tensor_types_size());
  for (int i = 0, n = this->output_tensor_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->output_tensor_types(i));
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string tf_lite_version = 10;
    if (has_tf_lite_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tf_lite_version());
    }

    // optional string os_version = 11;
    if (has_os_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->os_version());
    }

    // optional string model_hash = 12;
    if (has_model_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_hash());
    }

    // optional string toco_err_logs = 13;
    if (has_toco_err_logs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->toco_err_logs());
    }

    // optional int64 log_generation_ts = 8;
    if (has_log_generation_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->log_generation_ts());
    }

    // optional int32 model_size = 9;
    if (has_model_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->model_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TocoConversionLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toco.TocoConversionLog)
  GOOGLE_DCHECK_NE(&from, this);
  const TocoConversionLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TocoConversionLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toco.TocoConversionLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toco.TocoConversionLog)
    MergeFrom(*source);
  }
}

void TocoConversionLog::MergeFrom(const TocoConversionLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toco.TocoConversionLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_list_.MergeFrom(from.op_list_);
  built_in_ops_.MergeFrom(from.built_in_ops_);
  custom_ops_.MergeFrom(from.custom_ops_);
  select_ops_.MergeFrom(from.select_ops_);
  op_signatures_.MergeFrom(from.op_signatures_);
  input_tensor_types_.MergeFrom(from.input_tensor_types_);
  output_tensor_types_.MergeFrom(from.output_tensor_types_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tf_lite_version();
      tf_lite_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tf_lite_version_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_os_version();
      os_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_model_hash();
      model_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_hash_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_toco_err_logs();
      toco_err_logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toco_err_logs_);
    }
    if (cached_has_bits & 0x00000010u) {
      log_generation_ts_ = from.log_generation_ts_;
    }
    if (cached_has_bits & 0x00000020u) {
      model_size_ = from.model_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TocoConversionLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toco.TocoConversionLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TocoConversionLog::CopyFrom(const TocoConversionLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toco.TocoConversionLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TocoConversionLog::IsInitialized() const {
  return true;
}

void TocoConversionLog::Swap(TocoConversionLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TocoConversionLog::InternalSwap(TocoConversionLog* other) {
  using std::swap;
  op_list_.InternalSwap(CastToBase(&other->op_list_));
  built_in_ops_.Swap(&other->built_in_ops_);
  custom_ops_.Swap(&other->custom_ops_);
  select_ops_.Swap(&other->select_ops_);
  op_signatures_.InternalSwap(CastToBase(&other->op_signatures_));
  input_tensor_types_.InternalSwap(CastToBase(&other->input_tensor_types_));
  output_tensor_types_.InternalSwap(CastToBase(&other->output_tensor_types_));
  tf_lite_version_.Swap(&other->tf_lite_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_version_.Swap(&other->os_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_hash_.Swap(&other->model_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  toco_err_logs_.Swap(&other->toco_err_logs_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(log_generation_ts_, other->log_generation_ts_);
  swap(model_size_, other->model_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TocoConversionLog::GetMetadata() const {
  protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2flite_2ftoco_2flogging_2ftoco_5fconversion_5flog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace toco
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse* Arena::CreateMaybeMessage< ::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::toco::TocoConversionLog_BuiltInOpsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::TocoConversionLog_CustomOpsEntry_DoNotUse* Arena::CreateMaybeMessage< ::toco::TocoConversionLog_CustomOpsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::toco::TocoConversionLog_CustomOpsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::TocoConversionLog_SelectOpsEntry_DoNotUse* Arena::CreateMaybeMessage< ::toco::TocoConversionLog_SelectOpsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::toco::TocoConversionLog_SelectOpsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::TocoConversionLog* Arena::CreateMaybeMessage< ::toco::TocoConversionLog >(Arena* arena) {
  return Arena::CreateInternal< ::toco::TocoConversionLog >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
