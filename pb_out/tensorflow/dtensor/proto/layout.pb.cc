// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/dtensor/proto/layout.proto

#include "tensorflow/dtensor/proto/layout.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MeshDimensionProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShardingSpec;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MeshProto;
}  // namespace protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto
namespace tensorflow {
namespace dtensor {
class ShardingSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShardingSpec>
      _instance;
} _ShardingSpec_default_instance_;
class MeshDimensionProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeshDimensionProto>
      _instance;
} _MeshDimensionProto_default_instance_;
class LayoutProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LayoutProto>
      _instance;
} _LayoutProto_default_instance_;
class MeshProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeshProto>
      _instance;
} _MeshProto_default_instance_;
}  // namespace dtensor
}  // namespace tensorflow
namespace protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto {
static void InitDefaultsShardingSpec() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::dtensor::_ShardingSpec_default_instance_;
    new (ptr) ::tensorflow::dtensor::ShardingSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::dtensor::ShardingSpec::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShardingSpec =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShardingSpec}, {}};

static void InitDefaultsMeshDimensionProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::dtensor::_MeshDimensionProto_default_instance_;
    new (ptr) ::tensorflow::dtensor::MeshDimensionProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::dtensor::MeshDimensionProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MeshDimensionProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMeshDimensionProto}, {}};

static void InitDefaultsLayoutProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::dtensor::_LayoutProto_default_instance_;
    new (ptr) ::tensorflow::dtensor::LayoutProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::dtensor::LayoutProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LayoutProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLayoutProto}, {
      &protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_ShardingSpec.base,
      &protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_MeshProto.base,}};

static void InitDefaultsMeshProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::dtensor::_MeshProto_default_instance_;
    new (ptr) ::tensorflow::dtensor::MeshProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::dtensor::MeshProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MeshProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMeshProto}, {
      &protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_MeshDimensionProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ShardingSpec.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MeshDimensionProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LayoutProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MeshProto.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::ShardingSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::ShardingSpec, sharding_spec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshDimensionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshDimensionProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshDimensionProto, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::LayoutProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::LayoutProto, sharding_specs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::LayoutProto, mesh_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshProto, mesh_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshProto, global_device_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshProto, local_device_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshProto, local_devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshProto, global_devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::dtensor::MeshProto, name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::dtensor::ShardingSpec)},
  { 6, -1, sizeof(::tensorflow::dtensor::MeshDimensionProto)},
  { 13, -1, sizeof(::tensorflow::dtensor::LayoutProto)},
  { 20, -1, sizeof(::tensorflow::dtensor::MeshProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::dtensor::_ShardingSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::dtensor::_MeshDimensionProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::dtensor::_LayoutProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::dtensor::_MeshProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/dtensor/proto/layout.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%tensorflow/dtensor/proto/layout.proto\022"
      "\022tensorflow.dtensor\"+\n\014ShardingSpec\022\025\n\rs"
      "harding_spec\030\002 \001(\tJ\004\010\001\020\002\"0\n\022MeshDimensio"
      "nProto\022\014\n\004name\030\001 \001(\t\022\014\n\004size\030\002 \001(\003\"{\n\013La"
      "youtProto\0228\n\016sharding_specs\030\001 \003(\0132 .tens"
      "orflow.dtensor.ShardingSpec\0222\n\013mesh_conf"
      "ig\030\002 \001(\0132\035.tensorflow.dtensor.MeshProto\""
      "\276\001\n\tMeshProto\022\?\n\017mesh_dimensions\030\001 \003(\0132&"
      ".tensorflow.dtensor.MeshDimensionProto\022\031"
      "\n\021global_device_ids\030\002 \003(\003\022\030\n\020local_devic"
      "e_ids\030\004 \003(\003\022\025\n\rlocal_devices\030\005 \003(\t\022\026\n\016gl"
      "obal_devices\030\006 \003(\t\022\014\n\004name\030\003 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 480);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/dtensor/proto/layout.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto
namespace tensorflow {
namespace dtensor {

// ===================================================================

void ShardingSpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShardingSpec::kShardingSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShardingSpec::ShardingSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_ShardingSpec.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.dtensor.ShardingSpec)
}
ShardingSpec::ShardingSpec(const ShardingSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sharding_spec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sharding_spec().size() > 0) {
    sharding_spec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sharding_spec_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.dtensor.ShardingSpec)
}

void ShardingSpec::SharedCtor() {
  sharding_spec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ShardingSpec::~ShardingSpec() {
  // @@protoc_insertion_point(destructor:tensorflow.dtensor.ShardingSpec)
  SharedDtor();
}

void ShardingSpec::SharedDtor() {
  sharding_spec_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShardingSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShardingSpec::descriptor() {
  ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShardingSpec& ShardingSpec::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_ShardingSpec.base);
  return *internal_default_instance();
}


void ShardingSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.dtensor.ShardingSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sharding_spec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ShardingSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.dtensor.ShardingSpec)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sharding_spec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sharding_spec()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sharding_spec().data(), static_cast<int>(this->sharding_spec().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.dtensor.ShardingSpec.sharding_spec"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.dtensor.ShardingSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.dtensor.ShardingSpec)
  return false;
#undef DO_
}

void ShardingSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.dtensor.ShardingSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sharding_spec = 2;
  if (this->sharding_spec().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sharding_spec().data(), static_cast<int>(this->sharding_spec().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.ShardingSpec.sharding_spec");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sharding_spec(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.dtensor.ShardingSpec)
}

::google::protobuf::uint8* ShardingSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.dtensor.ShardingSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sharding_spec = 2;
  if (this->sharding_spec().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sharding_spec().data(), static_cast<int>(this->sharding_spec().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.ShardingSpec.sharding_spec");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sharding_spec(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.dtensor.ShardingSpec)
  return target;
}

size_t ShardingSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.dtensor.ShardingSpec)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sharding_spec = 2;
  if (this->sharding_spec().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sharding_spec());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShardingSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.dtensor.ShardingSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ShardingSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShardingSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.dtensor.ShardingSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.dtensor.ShardingSpec)
    MergeFrom(*source);
  }
}

void ShardingSpec::MergeFrom(const ShardingSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.dtensor.ShardingSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sharding_spec().size() > 0) {

    sharding_spec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sharding_spec_);
  }
}

void ShardingSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.dtensor.ShardingSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShardingSpec::CopyFrom(const ShardingSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.dtensor.ShardingSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShardingSpec::IsInitialized() const {
  return true;
}

void ShardingSpec::Swap(ShardingSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShardingSpec::InternalSwap(ShardingSpec* other) {
  using std::swap;
  sharding_spec_.Swap(&other->sharding_spec_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShardingSpec::GetMetadata() const {
  protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeshDimensionProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeshDimensionProto::kNameFieldNumber;
const int MeshDimensionProto::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeshDimensionProto::MeshDimensionProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_MeshDimensionProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.dtensor.MeshDimensionProto)
}
MeshDimensionProto::MeshDimensionProto(const MeshDimensionProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.dtensor.MeshDimensionProto)
}

void MeshDimensionProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_LONGLONG(0);
}

MeshDimensionProto::~MeshDimensionProto() {
  // @@protoc_insertion_point(destructor:tensorflow.dtensor.MeshDimensionProto)
  SharedDtor();
}

void MeshDimensionProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MeshDimensionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MeshDimensionProto::descriptor() {
  ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeshDimensionProto& MeshDimensionProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_MeshDimensionProto.base);
  return *internal_default_instance();
}


void MeshDimensionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.dtensor.MeshDimensionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MeshDimensionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.dtensor.MeshDimensionProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.dtensor.MeshDimensionProto.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.dtensor.MeshDimensionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.dtensor.MeshDimensionProto)
  return false;
#undef DO_
}

void MeshDimensionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.dtensor.MeshDimensionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.MeshDimensionProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.dtensor.MeshDimensionProto)
}

::google::protobuf::uint8* MeshDimensionProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.dtensor.MeshDimensionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.MeshDimensionProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.dtensor.MeshDimensionProto)
  return target;
}

size_t MeshDimensionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.dtensor.MeshDimensionProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MeshDimensionProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.dtensor.MeshDimensionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MeshDimensionProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeshDimensionProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.dtensor.MeshDimensionProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.dtensor.MeshDimensionProto)
    MergeFrom(*source);
  }
}

void MeshDimensionProto::MergeFrom(const MeshDimensionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.dtensor.MeshDimensionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void MeshDimensionProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.dtensor.MeshDimensionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeshDimensionProto::CopyFrom(const MeshDimensionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.dtensor.MeshDimensionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeshDimensionProto::IsInitialized() const {
  return true;
}

void MeshDimensionProto::Swap(MeshDimensionProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeshDimensionProto::InternalSwap(MeshDimensionProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MeshDimensionProto::GetMetadata() const {
  protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LayoutProto::InitAsDefaultInstance() {
  ::tensorflow::dtensor::_LayoutProto_default_instance_._instance.get_mutable()->mesh_config_ = const_cast< ::tensorflow::dtensor::MeshProto*>(
      ::tensorflow::dtensor::MeshProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayoutProto::kShardingSpecsFieldNumber;
const int LayoutProto::kMeshConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayoutProto::LayoutProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_LayoutProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.dtensor.LayoutProto)
}
LayoutProto::LayoutProto(const LayoutProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sharding_specs_(from.sharding_specs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mesh_config()) {
    mesh_config_ = new ::tensorflow::dtensor::MeshProto(*from.mesh_config_);
  } else {
    mesh_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.dtensor.LayoutProto)
}

void LayoutProto::SharedCtor() {
  mesh_config_ = NULL;
}

LayoutProto::~LayoutProto() {
  // @@protoc_insertion_point(destructor:tensorflow.dtensor.LayoutProto)
  SharedDtor();
}

void LayoutProto::SharedDtor() {
  if (this != internal_default_instance()) delete mesh_config_;
}

void LayoutProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LayoutProto::descriptor() {
  ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayoutProto& LayoutProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_LayoutProto.base);
  return *internal_default_instance();
}


void LayoutProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.dtensor.LayoutProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sharding_specs_.Clear();
  if (GetArenaNoVirtual() == NULL && mesh_config_ != NULL) {
    delete mesh_config_;
  }
  mesh_config_ = NULL;
  _internal_metadata_.Clear();
}

bool LayoutProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.dtensor.LayoutProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.dtensor.ShardingSpec sharding_specs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sharding_specs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.dtensor.MeshProto mesh_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mesh_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.dtensor.LayoutProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.dtensor.LayoutProto)
  return false;
#undef DO_
}

void LayoutProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.dtensor.LayoutProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.dtensor.ShardingSpec sharding_specs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sharding_specs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sharding_specs(static_cast<int>(i)),
      output);
  }

  // .tensorflow.dtensor.MeshProto mesh_config = 2;
  if (this->has_mesh_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_mesh_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.dtensor.LayoutProto)
}

::google::protobuf::uint8* LayoutProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.dtensor.LayoutProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.dtensor.ShardingSpec sharding_specs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sharding_specs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sharding_specs(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.dtensor.MeshProto mesh_config = 2;
  if (this->has_mesh_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_mesh_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.dtensor.LayoutProto)
  return target;
}

size_t LayoutProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.dtensor.LayoutProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.dtensor.ShardingSpec sharding_specs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sharding_specs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sharding_specs(static_cast<int>(i)));
    }
  }

  // .tensorflow.dtensor.MeshProto mesh_config = 2;
  if (this->has_mesh_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mesh_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LayoutProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.dtensor.LayoutProto)
  GOOGLE_DCHECK_NE(&from, this);
  const LayoutProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayoutProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.dtensor.LayoutProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.dtensor.LayoutProto)
    MergeFrom(*source);
  }
}

void LayoutProto::MergeFrom(const LayoutProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.dtensor.LayoutProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sharding_specs_.MergeFrom(from.sharding_specs_);
  if (from.has_mesh_config()) {
    mutable_mesh_config()->::tensorflow::dtensor::MeshProto::MergeFrom(from.mesh_config());
  }
}

void LayoutProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.dtensor.LayoutProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayoutProto::CopyFrom(const LayoutProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.dtensor.LayoutProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayoutProto::IsInitialized() const {
  return true;
}

void LayoutProto::Swap(LayoutProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayoutProto::InternalSwap(LayoutProto* other) {
  using std::swap;
  CastToBase(&sharding_specs_)->InternalSwap(CastToBase(&other->sharding_specs_));
  swap(mesh_config_, other->mesh_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LayoutProto::GetMetadata() const {
  protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeshProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeshProto::kMeshDimensionsFieldNumber;
const int MeshProto::kGlobalDeviceIdsFieldNumber;
const int MeshProto::kLocalDeviceIdsFieldNumber;
const int MeshProto::kLocalDevicesFieldNumber;
const int MeshProto::kGlobalDevicesFieldNumber;
const int MeshProto::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeshProto::MeshProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_MeshProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.dtensor.MeshProto)
}
MeshProto::MeshProto(const MeshProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mesh_dimensions_(from.mesh_dimensions_),
      global_device_ids_(from.global_device_ids_),
      local_device_ids_(from.local_device_ids_),
      local_devices_(from.local_devices_),
      global_devices_(from.global_devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.dtensor.MeshProto)
}

void MeshProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MeshProto::~MeshProto() {
  // @@protoc_insertion_point(destructor:tensorflow.dtensor.MeshProto)
  SharedDtor();
}

void MeshProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MeshProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MeshProto::descriptor() {
  ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeshProto& MeshProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::scc_info_MeshProto.base);
  return *internal_default_instance();
}


void MeshProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.dtensor.MeshProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mesh_dimensions_.Clear();
  global_device_ids_.Clear();
  local_device_ids_.Clear();
  local_devices_.Clear();
  global_devices_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MeshProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.dtensor.MeshProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.dtensor.MeshDimensionProto mesh_dimensions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mesh_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 global_device_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_global_device_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_global_device_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.dtensor.MeshProto.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 local_device_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_local_device_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_local_device_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string local_devices = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_local_devices()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_devices(this->local_devices_size() - 1).data(),
            static_cast<int>(this->local_devices(this->local_devices_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.dtensor.MeshProto.local_devices"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string global_devices = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_global_devices()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->global_devices(this->global_devices_size() - 1).data(),
            static_cast<int>(this->global_devices(this->global_devices_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.dtensor.MeshProto.global_devices"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.dtensor.MeshProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.dtensor.MeshProto)
  return false;
#undef DO_
}

void MeshProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.dtensor.MeshProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.dtensor.MeshDimensionProto mesh_dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mesh_dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->mesh_dimensions(static_cast<int>(i)),
      output);
  }

  // repeated int64 global_device_ids = 2;
  if (this->global_device_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _global_device_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->global_device_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->global_device_ids(i), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.MeshProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated int64 local_device_ids = 4;
  if (this->local_device_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _local_device_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->local_device_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->local_device_ids(i), output);
  }

  // repeated string local_devices = 5;
  for (int i = 0, n = this->local_devices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_devices(i).data(), static_cast<int>(this->local_devices(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.MeshProto.local_devices");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->local_devices(i), output);
  }

  // repeated string global_devices = 6;
  for (int i = 0, n = this->global_devices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->global_devices(i).data(), static_cast<int>(this->global_devices(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.MeshProto.global_devices");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->global_devices(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.dtensor.MeshProto)
}

::google::protobuf::uint8* MeshProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.dtensor.MeshProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.dtensor.MeshDimensionProto mesh_dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mesh_dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->mesh_dimensions(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 global_device_ids = 2;
  if (this->global_device_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _global_device_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->global_device_ids_, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.MeshProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated int64 local_device_ids = 4;
  if (this->local_device_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _local_device_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->local_device_ids_, target);
  }

  // repeated string local_devices = 5;
  for (int i = 0, n = this->local_devices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_devices(i).data(), static_cast<int>(this->local_devices(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.MeshProto.local_devices");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->local_devices(i), target);
  }

  // repeated string global_devices = 6;
  for (int i = 0, n = this->global_devices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->global_devices(i).data(), static_cast<int>(this->global_devices(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.dtensor.MeshProto.global_devices");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->global_devices(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.dtensor.MeshProto)
  return target;
}

size_t MeshProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.dtensor.MeshProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.dtensor.MeshDimensionProto mesh_dimensions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mesh_dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mesh_dimensions(static_cast<int>(i)));
    }
  }

  // repeated int64 global_device_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->global_device_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _global_device_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 local_device_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->local_device_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _local_device_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string local_devices = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->local_devices_size());
  for (int i = 0, n = this->local_devices_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->local_devices(i));
  }

  // repeated string global_devices = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->global_devices_size());
  for (int i = 0, n = this->global_devices_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->global_devices(i));
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MeshProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.dtensor.MeshProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MeshProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeshProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.dtensor.MeshProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.dtensor.MeshProto)
    MergeFrom(*source);
  }
}

void MeshProto::MergeFrom(const MeshProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.dtensor.MeshProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mesh_dimensions_.MergeFrom(from.mesh_dimensions_);
  global_device_ids_.MergeFrom(from.global_device_ids_);
  local_device_ids_.MergeFrom(from.local_device_ids_);
  local_devices_.MergeFrom(from.local_devices_);
  global_devices_.MergeFrom(from.global_devices_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void MeshProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.dtensor.MeshProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeshProto::CopyFrom(const MeshProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.dtensor.MeshProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeshProto::IsInitialized() const {
  return true;
}

void MeshProto::Swap(MeshProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeshProto::InternalSwap(MeshProto* other) {
  using std::swap;
  CastToBase(&mesh_dimensions_)->InternalSwap(CastToBase(&other->mesh_dimensions_));
  global_device_ids_.InternalSwap(&other->global_device_ids_);
  local_device_ids_.InternalSwap(&other->local_device_ids_);
  local_devices_.InternalSwap(CastToBase(&other->local_devices_));
  global_devices_.InternalSwap(CastToBase(&other->global_devices_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MeshProto::GetMetadata() const {
  protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdtensor_2fproto_2flayout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dtensor
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::dtensor::ShardingSpec* Arena::CreateMaybeMessage< ::tensorflow::dtensor::ShardingSpec >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::dtensor::ShardingSpec >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::dtensor::MeshDimensionProto* Arena::CreateMaybeMessage< ::tensorflow::dtensor::MeshDimensionProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::dtensor::MeshDimensionProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::dtensor::LayoutProto* Arena::CreateMaybeMessage< ::tensorflow::dtensor::LayoutProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::dtensor::LayoutProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::dtensor::MeshProto* Arena::CreateMaybeMessage< ::tensorflow::dtensor::MeshProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::dtensor::MeshProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
