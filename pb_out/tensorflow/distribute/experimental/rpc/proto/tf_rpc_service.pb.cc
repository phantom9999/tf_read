// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/distribute/experimental/rpc/proto/tf_rpc_service.proto

#include "tensorflow/distribute/experimental/rpc/proto/tf_rpc_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TensorProto;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_DictValue;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto
namespace protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RegisteredMethod;
}  // namespace protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto
namespace tensorflow {
namespace rpc {
class CallRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallRequest>
      _instance;
} _CallRequest_default_instance_;
class CallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallResponse>
      _instance;
} _CallResponse_default_instance_;
class ListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRequest>
      _instance;
} _ListRequest_default_instance_;
class RegisteredMethodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisteredMethod>
      _instance;
} _RegisteredMethod_default_instance_;
class ListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListResponse>
      _instance;
} _ListResponse_default_instance_;
}  // namespace rpc
}  // namespace tensorflow
namespace protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto {
static void InitDefaultsCallRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::rpc::_CallRequest_default_instance_;
    new (ptr) ::tensorflow::rpc::CallRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::rpc::CallRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CallRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCallRequest}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::scc_info_TensorProto.base,}};

static void InitDefaultsCallResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::rpc::_CallResponse_default_instance_;
    new (ptr) ::tensorflow::rpc::CallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::rpc::CallResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CallResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCallResponse}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::scc_info_TensorProto.base,}};

static void InitDefaultsListRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::rpc::_ListRequest_default_instance_;
    new (ptr) ::tensorflow::rpc::ListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::rpc::ListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListRequest}, {}};

static void InitDefaultsRegisteredMethod() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::rpc::_RegisteredMethod_default_instance_;
    new (ptr) ::tensorflow::rpc::RegisteredMethod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::rpc::RegisteredMethod::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegisteredMethod =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegisteredMethod}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto::scc_info_DictValue.base,}};

static void InitDefaultsListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::rpc::_ListResponse_default_instance_;
    new (ptr) ::tensorflow::rpc::ListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::rpc::ListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListResponse}, {
      &protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_RegisteredMethod.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CallRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CallResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisteredMethod.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListResponse.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::CallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::CallRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::CallRequest, input_tensors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::CallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::CallResponse, output_tensors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::ListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::RegisteredMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::RegisteredMethod, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::RegisteredMethod, input_specs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::RegisteredMethod, output_specs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::ListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::rpc::ListResponse, registered_methods_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::rpc::CallRequest)},
  { 7, -1, sizeof(::tensorflow::rpc::CallResponse)},
  { 13, -1, sizeof(::tensorflow::rpc::ListRequest)},
  { 18, -1, sizeof(::tensorflow::rpc::RegisteredMethod)},
  { 26, -1, sizeof(::tensorflow::rpc::ListResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::rpc::_CallRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::rpc::_CallResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::rpc::_ListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::rpc::_RegisteredMethod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::rpc::_ListResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/distribute/experimental/rpc/proto/tf_rpc_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nAtensorflow/distribute/experimental/rpc"
      "/proto/tf_rpc_service.proto\022\016tensorflow."
      "rpc\032&tensorflow/core/framework/tensor.pr"
      "oto\032%tensorflow/core/protobuf/struct.pro"
      "to\"M\n\013CallRequest\022\016\n\006method\030\001 \001(\t\022.\n\rinp"
      "ut_tensors\030\002 \003(\0132\027.tensorflow.TensorProt"
      "o\"\?\n\014CallResponse\022/\n\016output_tensors\030\001 \003("
      "\0132\027.tensorflow.TensorProto\"\r\n\013ListReques"
      "t\"\207\001\n\020RegisteredMethod\022\016\n\006method\030\001 \001(\t\0220"
      "\n\013input_specs\030\002 \001(\0132\033.tensorflow.Structu"
      "redValue\0221\n\014output_specs\030\003 \001(\0132\033.tensorf"
      "low.StructuredValue\"L\n\014ListResponse\022<\n\022r"
      "egistered_methods\030\001 \003(\0132 .tensorflow.rpc"
      ".RegisteredMethod2\226\001\n\nRpcService\022C\n\004Call"
      "\022\033.tensorflow.rpc.CallRequest\032\034.tensorfl"
      "ow.rpc.CallResponse\"\000\022C\n\004List\022\033.tensorfl"
      "ow.rpc.ListRequest\032\034.tensorflow.rpc.List"
      "Response\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 698);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/distribute/experimental/rpc/proto/tf_rpc_service.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto
namespace tensorflow {
namespace rpc {

// ===================================================================

void CallRequest::InitAsDefaultInstance() {
}
void CallRequest::clear_input_tensors() {
  input_tensors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallRequest::kMethodFieldNumber;
const int CallRequest::kInputTensorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallRequest::CallRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_CallRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.rpc.CallRequest)
}
CallRequest::CallRequest(const CallRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_tensors_(from.input_tensors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.rpc.CallRequest)
}

void CallRequest::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CallRequest::~CallRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.rpc.CallRequest)
  SharedDtor();
}

void CallRequest::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CallRequest::descriptor() {
  ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallRequest& CallRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_CallRequest.base);
  return *internal_default_instance();
}


void CallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.rpc.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_tensors_.Clear();
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.rpc.CallRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.rpc.CallRequest.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.TensorProto input_tensors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input_tensors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.rpc.CallRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.rpc.CallRequest)
  return false;
#undef DO_
}

void CallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.rpc.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.rpc.CallRequest.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // repeated .tensorflow.TensorProto input_tensors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_tensors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->input_tensors(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.rpc.CallRequest)
}

::google::protobuf::uint8* CallRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.rpc.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.rpc.CallRequest.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // repeated .tensorflow.TensorProto input_tensors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_tensors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->input_tensors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.rpc.CallRequest)
  return target;
}

size_t CallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.rpc.CallRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.TensorProto input_tensors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->input_tensors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_tensors(static_cast<int>(i)));
    }
  }

  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.rpc.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CallRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.rpc.CallRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.rpc.CallRequest)
    MergeFrom(*source);
  }
}

void CallRequest::MergeFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.rpc.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_tensors_.MergeFrom(from.input_tensors_);
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
}

void CallRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.rpc.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallRequest::CopyFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.rpc.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRequest::IsInitialized() const {
  return true;
}

void CallRequest::Swap(CallRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallRequest::InternalSwap(CallRequest* other) {
  using std::swap;
  CastToBase(&input_tensors_)->InternalSwap(CastToBase(&other->input_tensors_));
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CallRequest::GetMetadata() const {
  protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallResponse::InitAsDefaultInstance() {
}
void CallResponse::clear_output_tensors() {
  output_tensors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallResponse::kOutputTensorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallResponse::CallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_CallResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.rpc.CallResponse)
}
CallResponse::CallResponse(const CallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      output_tensors_(from.output_tensors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.rpc.CallResponse)
}

void CallResponse::SharedCtor() {
}

CallResponse::~CallResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.rpc.CallResponse)
  SharedDtor();
}

void CallResponse::SharedDtor() {
}

void CallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CallResponse::descriptor() {
  ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallResponse& CallResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_CallResponse.base);
  return *internal_default_instance();
}


void CallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.rpc.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_tensors_.Clear();
  _internal_metadata_.Clear();
}

bool CallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.rpc.CallResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.TensorProto output_tensors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_output_tensors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.rpc.CallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.rpc.CallResponse)
  return false;
#undef DO_
}

void CallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.rpc.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TensorProto output_tensors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_tensors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->output_tensors(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.rpc.CallResponse)
}

::google::protobuf::uint8* CallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.rpc.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TensorProto output_tensors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_tensors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->output_tensors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.rpc.CallResponse)
  return target;
}

size_t CallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.rpc.CallResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.TensorProto output_tensors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->output_tensors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_tensors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.rpc.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.rpc.CallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.rpc.CallResponse)
    MergeFrom(*source);
  }
}

void CallResponse::MergeFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.rpc.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_tensors_.MergeFrom(from.output_tensors_);
}

void CallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.rpc.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallResponse::CopyFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.rpc.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResponse::IsInitialized() const {
  return true;
}

void CallResponse::Swap(CallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallResponse::InternalSwap(CallResponse* other) {
  using std::swap;
  CastToBase(&output_tensors_)->InternalSwap(CastToBase(&other->output_tensors_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CallResponse::GetMetadata() const {
  protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRequest::ListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_ListRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.rpc.ListRequest)
}
ListRequest::ListRequest(const ListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.rpc.ListRequest)
}

void ListRequest::SharedCtor() {
}

ListRequest::~ListRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.rpc.ListRequest)
  SharedDtor();
}

void ListRequest::SharedDtor() {
}

void ListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListRequest::descriptor() {
  ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRequest& ListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_ListRequest.base);
  return *internal_default_instance();
}


void ListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.rpc.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.rpc.ListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.rpc.ListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.rpc.ListRequest)
  return false;
#undef DO_
}

void ListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.rpc.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.rpc.ListRequest)
}

::google::protobuf::uint8* ListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.rpc.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.rpc.ListRequest)
  return target;
}

size_t ListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.rpc.ListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.rpc.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.rpc.ListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.rpc.ListRequest)
    MergeFrom(*source);
  }
}

void ListRequest::MergeFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.rpc.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.rpc.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRequest::CopyFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.rpc.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRequest::IsInitialized() const {
  return true;
}

void ListRequest::Swap(ListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRequest::InternalSwap(ListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListRequest::GetMetadata() const {
  protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisteredMethod::InitAsDefaultInstance() {
  ::tensorflow::rpc::_RegisteredMethod_default_instance_._instance.get_mutable()->input_specs_ = const_cast< ::tensorflow::StructuredValue*>(
      ::tensorflow::StructuredValue::internal_default_instance());
  ::tensorflow::rpc::_RegisteredMethod_default_instance_._instance.get_mutable()->output_specs_ = const_cast< ::tensorflow::StructuredValue*>(
      ::tensorflow::StructuredValue::internal_default_instance());
}
void RegisteredMethod::clear_input_specs() {
  if (GetArenaNoVirtual() == NULL && input_specs_ != NULL) {
    delete input_specs_;
  }
  input_specs_ = NULL;
}
void RegisteredMethod::clear_output_specs() {
  if (GetArenaNoVirtual() == NULL && output_specs_ != NULL) {
    delete output_specs_;
  }
  output_specs_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisteredMethod::kMethodFieldNumber;
const int RegisteredMethod::kInputSpecsFieldNumber;
const int RegisteredMethod::kOutputSpecsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisteredMethod::RegisteredMethod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_RegisteredMethod.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.rpc.RegisteredMethod)
}
RegisteredMethod::RegisteredMethod(const RegisteredMethod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_input_specs()) {
    input_specs_ = new ::tensorflow::StructuredValue(*from.input_specs_);
  } else {
    input_specs_ = NULL;
  }
  if (from.has_output_specs()) {
    output_specs_ = new ::tensorflow::StructuredValue(*from.output_specs_);
  } else {
    output_specs_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.rpc.RegisteredMethod)
}

void RegisteredMethod::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_specs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_specs_) -
      reinterpret_cast<char*>(&input_specs_)) + sizeof(output_specs_));
}

RegisteredMethod::~RegisteredMethod() {
  // @@protoc_insertion_point(destructor:tensorflow.rpc.RegisteredMethod)
  SharedDtor();
}

void RegisteredMethod::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete input_specs_;
  if (this != internal_default_instance()) delete output_specs_;
}

void RegisteredMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisteredMethod::descriptor() {
  ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisteredMethod& RegisteredMethod::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_RegisteredMethod.base);
  return *internal_default_instance();
}


void RegisteredMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.rpc.RegisteredMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && input_specs_ != NULL) {
    delete input_specs_;
  }
  input_specs_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_specs_ != NULL) {
    delete output_specs_;
  }
  output_specs_ = NULL;
  _internal_metadata_.Clear();
}

bool RegisteredMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.rpc.RegisteredMethod)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.rpc.RegisteredMethod.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.StructuredValue input_specs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_specs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.StructuredValue output_specs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_specs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.rpc.RegisteredMethod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.rpc.RegisteredMethod)
  return false;
#undef DO_
}

void RegisteredMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.rpc.RegisteredMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.rpc.RegisteredMethod.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // .tensorflow.StructuredValue input_specs = 2;
  if (this->has_input_specs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input_specs(), output);
  }

  // .tensorflow.StructuredValue output_specs = 3;
  if (this->has_output_specs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_output_specs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.rpc.RegisteredMethod)
}

::google::protobuf::uint8* RegisteredMethod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.rpc.RegisteredMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.rpc.RegisteredMethod.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // .tensorflow.StructuredValue input_specs = 2;
  if (this->has_input_specs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input_specs(), deterministic, target);
  }

  // .tensorflow.StructuredValue output_specs = 3;
  if (this->has_output_specs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_output_specs(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.rpc.RegisteredMethod)
  return target;
}

size_t RegisteredMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.rpc.RegisteredMethod)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // .tensorflow.StructuredValue input_specs = 2;
  if (this->has_input_specs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_specs_);
  }

  // .tensorflow.StructuredValue output_specs = 3;
  if (this->has_output_specs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_specs_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisteredMethod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.rpc.RegisteredMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisteredMethod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisteredMethod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.rpc.RegisteredMethod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.rpc.RegisteredMethod)
    MergeFrom(*source);
  }
}

void RegisteredMethod::MergeFrom(const RegisteredMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.rpc.RegisteredMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_input_specs()) {
    mutable_input_specs()->::tensorflow::StructuredValue::MergeFrom(from.input_specs());
  }
  if (from.has_output_specs()) {
    mutable_output_specs()->::tensorflow::StructuredValue::MergeFrom(from.output_specs());
  }
}

void RegisteredMethod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.rpc.RegisteredMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisteredMethod::CopyFrom(const RegisteredMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.rpc.RegisteredMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisteredMethod::IsInitialized() const {
  return true;
}

void RegisteredMethod::Swap(RegisteredMethod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisteredMethod::InternalSwap(RegisteredMethod* other) {
  using std::swap;
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_specs_, other->input_specs_);
  swap(output_specs_, other->output_specs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisteredMethod::GetMetadata() const {
  protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListResponse::kRegisteredMethodsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListResponse::ListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_ListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.rpc.ListResponse)
}
ListResponse::ListResponse(const ListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      registered_methods_(from.registered_methods_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.rpc.ListResponse)
}

void ListResponse::SharedCtor() {
}

ListResponse::~ListResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.rpc.ListResponse)
  SharedDtor();
}

void ListResponse::SharedDtor() {
}

void ListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListResponse::descriptor() {
  ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListResponse& ListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::scc_info_ListResponse.base);
  return *internal_default_instance();
}


void ListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.rpc.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  registered_methods_.Clear();
  _internal_metadata_.Clear();
}

bool ListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.rpc.ListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.rpc.RegisteredMethod registered_methods = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_registered_methods()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.rpc.ListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.rpc.ListResponse)
  return false;
#undef DO_
}

void ListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.rpc.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.rpc.RegisteredMethod registered_methods = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->registered_methods_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->registered_methods(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.rpc.ListResponse)
}

::google::protobuf::uint8* ListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.rpc.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.rpc.RegisteredMethod registered_methods = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->registered_methods_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->registered_methods(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.rpc.ListResponse)
  return target;
}

size_t ListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.rpc.ListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.rpc.RegisteredMethod registered_methods = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->registered_methods_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->registered_methods(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.rpc.ListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.rpc.ListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.rpc.ListResponse)
    MergeFrom(*source);
  }
}

void ListResponse::MergeFrom(const ListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.rpc.ListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  registered_methods_.MergeFrom(from.registered_methods_);
}

void ListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.rpc.ListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListResponse::CopyFrom(const ListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.rpc.ListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListResponse::IsInitialized() const {
  return true;
}

void ListResponse::Swap(ListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListResponse::InternalSwap(ListResponse* other) {
  using std::swap;
  CastToBase(&registered_methods_)->InternalSwap(CastToBase(&other->registered_methods_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListResponse::GetMetadata() const {
  protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fdistribute_2fexperimental_2frpc_2fproto_2ftf_5frpc_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::rpc::CallRequest* Arena::CreateMaybeMessage< ::tensorflow::rpc::CallRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::rpc::CallRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::rpc::CallResponse* Arena::CreateMaybeMessage< ::tensorflow::rpc::CallResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::rpc::CallResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::rpc::ListRequest* Arena::CreateMaybeMessage< ::tensorflow::rpc::ListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::rpc::ListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::rpc::RegisteredMethod* Arena::CreateMaybeMessage< ::tensorflow::rpc::RegisteredMethod >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::rpc::RegisteredMethod >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::rpc::ListResponse* Arena::CreateMaybeMessage< ::tensorflow::rpc::ListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::rpc::ListResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
