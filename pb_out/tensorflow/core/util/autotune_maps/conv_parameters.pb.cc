// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/util/autotune_maps/conv_parameters.proto

#include "tensorflow/core/util/autotune_maps/conv_parameters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConvParametersProto_Fusion;
}  // namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto
namespace tensorflow {
class ConvParametersProto_FusionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvParametersProto_Fusion>
      _instance;
} _ConvParametersProto_Fusion_default_instance_;
class ConvParametersProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvParametersProto>
      _instance;
} _ConvParametersProto_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto {
static void InitDefaultsConvParametersProto_Fusion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ConvParametersProto_Fusion_default_instance_;
    new (ptr) ::tensorflow::ConvParametersProto_Fusion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ConvParametersProto_Fusion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConvParametersProto_Fusion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConvParametersProto_Fusion}, {}};

static void InitDefaultsConvParametersProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ConvParametersProto_default_instance_;
    new (ptr) ::tensorflow::ConvParametersProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ConvParametersProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConvParametersProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConvParametersProto}, {
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::scc_info_ConvParametersProto_Fusion.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ConvParametersProto_Fusion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConvParametersProto.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto_Fusion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto_Fusion, is_contrib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto_Fusion, activation_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto_Fusion, conv_scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto_Fusion, side_input_scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, in_depths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, out_depths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, data_format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, dilation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, padding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, group_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, device_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, fusion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvParametersProto, version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::ConvParametersProto_Fusion)},
  { 9, -1, sizeof(::tensorflow::ConvParametersProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ConvParametersProto_Fusion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ConvParametersProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/util/autotune_maps/conv_parameters.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n8tensorflow/core/util/autotune_maps/con"
      "v_parameters.proto\022\ntensorflow\032%tensorfl"
      "ow/core/framework/types.proto\032$tensorflo"
      "w/stream_executor/dnn.proto\"\330\003\n\023ConvPara"
      "metersProto\022\r\n\005batch\030\001 \001(\003\022\021\n\tin_depths\030"
      "\002 \001(\003\022\022\n\nout_depths\030\003 \001(\003\022\n\n\002in\030\004 \003(\003\022\023\n"
      "\013data_format\030\005 \001(\005\022\016\n\006filter\030\006 \003(\003\022\020\n\010di"
      "lation\030\007 \003(\003\022\016\n\006stride\030\010 \003(\003\022\017\n\007padding\030"
      "\t \003(\003\022#\n\005dtype\030\n \001(\0162\024.tensorflow.DataTy"
      "pe\022\023\n\013group_count\030\013 \001(\005\022\031\n\021device_identi"
      "fier\030\014 \001(\t\0226\n\006fusion\030\r \001(\0132&.tensorflow."
      "ConvParametersProto.Fusion\022\017\n\007version\030\016 "
      "\001(\005\032\210\001\n\006Fusion\022\022\n\nis_contrib\030\001 \001(\010\022<\n\017ac"
      "tivation_mode\030\002 \001(\0162#.stream_executor.dn"
      "n.ActivationMode\022\022\n\nconv_scale\030\003 \001(\001\022\030\n\020"
      "side_input_scale\030\004 \001(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 630);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/util/autotune_maps/conv_parameters.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fstream_5fexecutor_2fdnn_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto
namespace tensorflow {

// ===================================================================

void ConvParametersProto_Fusion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvParametersProto_Fusion::kIsContribFieldNumber;
const int ConvParametersProto_Fusion::kActivationModeFieldNumber;
const int ConvParametersProto_Fusion::kConvScaleFieldNumber;
const int ConvParametersProto_Fusion::kSideInputScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvParametersProto_Fusion::ConvParametersProto_Fusion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::scc_info_ConvParametersProto_Fusion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ConvParametersProto.Fusion)
}
ConvParametersProto_Fusion::ConvParametersProto_Fusion(const ConvParametersProto_Fusion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_contrib_, &from.is_contrib_,
    static_cast<size_t>(reinterpret_cast<char*>(&side_input_scale_) -
    reinterpret_cast<char*>(&is_contrib_)) + sizeof(side_input_scale_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ConvParametersProto.Fusion)
}

void ConvParametersProto_Fusion::SharedCtor() {
  ::memset(&is_contrib_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_input_scale_) -
      reinterpret_cast<char*>(&is_contrib_)) + sizeof(side_input_scale_));
}

ConvParametersProto_Fusion::~ConvParametersProto_Fusion() {
  // @@protoc_insertion_point(destructor:tensorflow.ConvParametersProto.Fusion)
  SharedDtor();
}

void ConvParametersProto_Fusion::SharedDtor() {
}

void ConvParametersProto_Fusion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConvParametersProto_Fusion::descriptor() {
  ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvParametersProto_Fusion& ConvParametersProto_Fusion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::scc_info_ConvParametersProto_Fusion.base);
  return *internal_default_instance();
}


void ConvParametersProto_Fusion::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ConvParametersProto.Fusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_contrib_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_input_scale_) -
      reinterpret_cast<char*>(&is_contrib_)) + sizeof(side_input_scale_));
  _internal_metadata_.Clear();
}

bool ConvParametersProto_Fusion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ConvParametersProto.Fusion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_contrib = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_contrib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .stream_executor.dnn.ActivationMode activation_mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_activation_mode(static_cast< ::stream_executor::dnn::ActivationMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double conv_scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &conv_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double side_input_scale = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &side_input_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ConvParametersProto.Fusion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ConvParametersProto.Fusion)
  return false;
#undef DO_
}

void ConvParametersProto_Fusion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ConvParametersProto.Fusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_contrib = 1;
  if (this->is_contrib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_contrib(), output);
  }

  // .stream_executor.dnn.ActivationMode activation_mode = 2;
  if (this->activation_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->activation_mode(), output);
  }

  // double conv_scale = 3;
  if (this->conv_scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->conv_scale(), output);
  }

  // double side_input_scale = 4;
  if (this->side_input_scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->side_input_scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ConvParametersProto.Fusion)
}

::google::protobuf::uint8* ConvParametersProto_Fusion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ConvParametersProto.Fusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_contrib = 1;
  if (this->is_contrib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_contrib(), target);
  }

  // .stream_executor.dnn.ActivationMode activation_mode = 2;
  if (this->activation_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->activation_mode(), target);
  }

  // double conv_scale = 3;
  if (this->conv_scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->conv_scale(), target);
  }

  // double side_input_scale = 4;
  if (this->side_input_scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->side_input_scale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ConvParametersProto.Fusion)
  return target;
}

size_t ConvParametersProto_Fusion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ConvParametersProto.Fusion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_contrib = 1;
  if (this->is_contrib() != 0) {
    total_size += 1 + 1;
  }

  // .stream_executor.dnn.ActivationMode activation_mode = 2;
  if (this->activation_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->activation_mode());
  }

  // double conv_scale = 3;
  if (this->conv_scale() != 0) {
    total_size += 1 + 8;
  }

  // double side_input_scale = 4;
  if (this->side_input_scale() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvParametersProto_Fusion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ConvParametersProto.Fusion)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvParametersProto_Fusion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvParametersProto_Fusion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ConvParametersProto.Fusion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ConvParametersProto.Fusion)
    MergeFrom(*source);
  }
}

void ConvParametersProto_Fusion::MergeFrom(const ConvParametersProto_Fusion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ConvParametersProto.Fusion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_contrib() != 0) {
    set_is_contrib(from.is_contrib());
  }
  if (from.activation_mode() != 0) {
    set_activation_mode(from.activation_mode());
  }
  if (from.conv_scale() != 0) {
    set_conv_scale(from.conv_scale());
  }
  if (from.side_input_scale() != 0) {
    set_side_input_scale(from.side_input_scale());
  }
}

void ConvParametersProto_Fusion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ConvParametersProto.Fusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvParametersProto_Fusion::CopyFrom(const ConvParametersProto_Fusion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ConvParametersProto.Fusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvParametersProto_Fusion::IsInitialized() const {
  return true;
}

void ConvParametersProto_Fusion::Swap(ConvParametersProto_Fusion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvParametersProto_Fusion::InternalSwap(ConvParametersProto_Fusion* other) {
  using std::swap;
  swap(is_contrib_, other->is_contrib_);
  swap(activation_mode_, other->activation_mode_);
  swap(conv_scale_, other->conv_scale_);
  swap(side_input_scale_, other->side_input_scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConvParametersProto_Fusion::GetMetadata() const {
  protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConvParametersProto::InitAsDefaultInstance() {
  ::tensorflow::_ConvParametersProto_default_instance_._instance.get_mutable()->fusion_ = const_cast< ::tensorflow::ConvParametersProto_Fusion*>(
      ::tensorflow::ConvParametersProto_Fusion::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvParametersProto::kBatchFieldNumber;
const int ConvParametersProto::kInDepthsFieldNumber;
const int ConvParametersProto::kOutDepthsFieldNumber;
const int ConvParametersProto::kInFieldNumber;
const int ConvParametersProto::kDataFormatFieldNumber;
const int ConvParametersProto::kFilterFieldNumber;
const int ConvParametersProto::kDilationFieldNumber;
const int ConvParametersProto::kStrideFieldNumber;
const int ConvParametersProto::kPaddingFieldNumber;
const int ConvParametersProto::kDtypeFieldNumber;
const int ConvParametersProto::kGroupCountFieldNumber;
const int ConvParametersProto::kDeviceIdentifierFieldNumber;
const int ConvParametersProto::kFusionFieldNumber;
const int ConvParametersProto::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvParametersProto::ConvParametersProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::scc_info_ConvParametersProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ConvParametersProto)
}
ConvParametersProto::ConvParametersProto(const ConvParametersProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      in_(from.in_),
      filter_(from.filter_),
      dilation_(from.dilation_),
      stride_(from.stride_),
      padding_(from.padding_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_identifier().size() > 0) {
    device_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_identifier_);
  }
  if (from.has_fusion()) {
    fusion_ = new ::tensorflow::ConvParametersProto_Fusion(*from.fusion_);
  } else {
    fusion_ = NULL;
  }
  ::memcpy(&batch_, &from.batch_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&batch_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ConvParametersProto)
}

void ConvParametersProto::SharedCtor() {
  device_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fusion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&fusion_)) + sizeof(version_));
}

ConvParametersProto::~ConvParametersProto() {
  // @@protoc_insertion_point(destructor:tensorflow.ConvParametersProto)
  SharedDtor();
}

void ConvParametersProto::SharedDtor() {
  device_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fusion_;
}

void ConvParametersProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConvParametersProto::descriptor() {
  ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvParametersProto& ConvParametersProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::scc_info_ConvParametersProto.base);
  return *internal_default_instance();
}


void ConvParametersProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ConvParametersProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  in_.Clear();
  filter_.Clear();
  dilation_.Clear();
  stride_.Clear();
  padding_.Clear();
  device_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fusion_ != NULL) {
    delete fusion_;
  }
  fusion_ = NULL;
  ::memset(&batch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&batch_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool ConvParametersProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ConvParametersProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 batch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 in_depths = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &in_depths_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 out_depths = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &out_depths_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 in = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_in())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_in())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 data_format = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 filter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_filter())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 50u, input, this->mutable_filter())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 dilation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dilation())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 58u, input, this->mutable_dilation())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 stride = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_stride())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 66u, input, this->mutable_stride())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 padding = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_padding())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 74u, input, this->mutable_padding())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DataType dtype = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::tensorflow::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 group_count = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_identifier = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_identifier().data(), static_cast<int>(this->device_identifier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ConvParametersProto.device_identifier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ConvParametersProto.Fusion fusion = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fusion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ConvParametersProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ConvParametersProto)
  return false;
#undef DO_
}

void ConvParametersProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ConvParametersProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 batch = 1;
  if (this->batch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->batch(), output);
  }

  // int64 in_depths = 2;
  if (this->in_depths() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->in_depths(), output);
  }

  // int64 out_depths = 3;
  if (this->out_depths() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->out_depths(), output);
  }

  // repeated int64 in = 4;
  if (this->in_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _in_cached_byte_size_));
  }
  for (int i = 0, n = this->in_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->in(i), output);
  }

  // int32 data_format = 5;
  if (this->data_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->data_format(), output);
  }

  // repeated int64 filter = 6;
  if (this->filter_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _filter_cached_byte_size_));
  }
  for (int i = 0, n = this->filter_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->filter(i), output);
  }

  // repeated int64 dilation = 7;
  if (this->dilation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dilation_cached_byte_size_));
  }
  for (int i = 0, n = this->dilation_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->dilation(i), output);
  }

  // repeated int64 stride = 8;
  if (this->stride_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _stride_cached_byte_size_));
  }
  for (int i = 0, n = this->stride_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->stride(i), output);
  }

  // repeated int64 padding = 9;
  if (this->padding_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _padding_cached_byte_size_));
  }
  for (int i = 0, n = this->padding_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->padding(i), output);
  }

  // .tensorflow.DataType dtype = 10;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->dtype(), output);
  }

  // int32 group_count = 11;
  if (this->group_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->group_count(), output);
  }

  // string device_identifier = 12;
  if (this->device_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_identifier().data(), static_cast<int>(this->device_identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ConvParametersProto.device_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->device_identifier(), output);
  }

  // .tensorflow.ConvParametersProto.Fusion fusion = 13;
  if (this->has_fusion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_fusion(), output);
  }

  // int32 version = 14;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ConvParametersProto)
}

::google::protobuf::uint8* ConvParametersProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ConvParametersProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 batch = 1;
  if (this->batch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->batch(), target);
  }

  // int64 in_depths = 2;
  if (this->in_depths() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->in_depths(), target);
  }

  // int64 out_depths = 3;
  if (this->out_depths() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->out_depths(), target);
  }

  // repeated int64 in = 4;
  if (this->in_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _in_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->in_, target);
  }

  // int32 data_format = 5;
  if (this->data_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->data_format(), target);
  }

  // repeated int64 filter = 6;
  if (this->filter_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _filter_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->filter_, target);
  }

  // repeated int64 dilation = 7;
  if (this->dilation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dilation_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->dilation_, target);
  }

  // repeated int64 stride = 8;
  if (this->stride_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _stride_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->stride_, target);
  }

  // repeated int64 padding = 9;
  if (this->padding_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _padding_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->padding_, target);
  }

  // .tensorflow.DataType dtype = 10;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->dtype(), target);
  }

  // int32 group_count = 11;
  if (this->group_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->group_count(), target);
  }

  // string device_identifier = 12;
  if (this->device_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_identifier().data(), static_cast<int>(this->device_identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ConvParametersProto.device_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->device_identifier(), target);
  }

  // .tensorflow.ConvParametersProto.Fusion fusion = 13;
  if (this->has_fusion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_fusion(), deterministic, target);
  }

  // int32 version = 14;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ConvParametersProto)
  return target;
}

size_t ConvParametersProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ConvParametersProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 in = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->in_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _in_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 filter = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->filter_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _filter_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 dilation = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->dilation_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dilation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 stride = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->stride_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _stride_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 padding = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->padding_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _padding_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string device_identifier = 12;
  if (this->device_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_identifier());
  }

  // .tensorflow.ConvParametersProto.Fusion fusion = 13;
  if (this->has_fusion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fusion_);
  }

  // int64 batch = 1;
  if (this->batch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->batch());
  }

  // int64 in_depths = 2;
  if (this->in_depths() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->in_depths());
  }

  // int64 out_depths = 3;
  if (this->out_depths() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->out_depths());
  }

  // int32 data_format = 5;
  if (this->data_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_format());
  }

  // .tensorflow.DataType dtype = 10;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
  }

  // int32 group_count = 11;
  if (this->group_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_count());
  }

  // int32 version = 14;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvParametersProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ConvParametersProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvParametersProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvParametersProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ConvParametersProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ConvParametersProto)
    MergeFrom(*source);
  }
}

void ConvParametersProto::MergeFrom(const ConvParametersProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ConvParametersProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  in_.MergeFrom(from.in_);
  filter_.MergeFrom(from.filter_);
  dilation_.MergeFrom(from.dilation_);
  stride_.MergeFrom(from.stride_);
  padding_.MergeFrom(from.padding_);
  if (from.device_identifier().size() > 0) {

    device_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_identifier_);
  }
  if (from.has_fusion()) {
    mutable_fusion()->::tensorflow::ConvParametersProto_Fusion::MergeFrom(from.fusion());
  }
  if (from.batch() != 0) {
    set_batch(from.batch());
  }
  if (from.in_depths() != 0) {
    set_in_depths(from.in_depths());
  }
  if (from.out_depths() != 0) {
    set_out_depths(from.out_depths());
  }
  if (from.data_format() != 0) {
    set_data_format(from.data_format());
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
  if (from.group_count() != 0) {
    set_group_count(from.group_count());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void ConvParametersProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ConvParametersProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvParametersProto::CopyFrom(const ConvParametersProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ConvParametersProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvParametersProto::IsInitialized() const {
  return true;
}

void ConvParametersProto::Swap(ConvParametersProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvParametersProto::InternalSwap(ConvParametersProto* other) {
  using std::swap;
  in_.InternalSwap(&other->in_);
  filter_.InternalSwap(&other->filter_);
  dilation_.InternalSwap(&other->dilation_);
  stride_.InternalSwap(&other->stride_);
  padding_.InternalSwap(&other->padding_);
  device_identifier_.Swap(&other->device_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fusion_, other->fusion_);
  swap(batch_, other->batch_);
  swap(in_depths_, other->in_depths_);
  swap(out_depths_, other->out_depths_);
  swap(data_format_, other->data_format_);
  swap(dtype_, other->dtype_);
  swap(group_count_, other->group_count_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConvParametersProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ConvParametersProto_Fusion* Arena::CreateMaybeMessage< ::tensorflow::ConvParametersProto_Fusion >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ConvParametersProto_Fusion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ConvParametersProto* Arena::CreateMaybeMessage< ::tensorflow::ConvParametersProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ConvParametersProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
