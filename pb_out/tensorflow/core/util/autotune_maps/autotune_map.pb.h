// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/util/autotune_maps/autotune_map.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/core/util/autotune_maps/conv_parameters.pb.h"
#include "tensorflow/stream_executor/dnn.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto 

namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto
namespace tensorflow {
class AutotuneMapsProto;
class AutotuneMapsProtoDefaultTypeInternal;
extern AutotuneMapsProtoDefaultTypeInternal _AutotuneMapsProto_default_instance_;
class ConvMapProto;
class ConvMapProtoDefaultTypeInternal;
extern ConvMapProtoDefaultTypeInternal _ConvMapProto_default_instance_;
class ConvMapProto_Entry;
class ConvMapProto_EntryDefaultTypeInternal;
extern ConvMapProto_EntryDefaultTypeInternal _ConvMapProto_Entry_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::AutotuneMapsProto* Arena::CreateMaybeMessage<::tensorflow::AutotuneMapsProto>(Arena*);
template<> ::tensorflow::ConvMapProto* Arena::CreateMaybeMessage<::tensorflow::ConvMapProto>(Arena*);
template<> ::tensorflow::ConvMapProto_Entry* Arena::CreateMaybeMessage<::tensorflow::ConvMapProto_Entry>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {

// ===================================================================

class ConvMapProto_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.ConvMapProto.Entry) */ {
 public:
  ConvMapProto_Entry();
  virtual ~ConvMapProto_Entry();

  ConvMapProto_Entry(const ConvMapProto_Entry& from);

  inline ConvMapProto_Entry& operator=(const ConvMapProto_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConvMapProto_Entry(ConvMapProto_Entry&& from) noexcept
    : ConvMapProto_Entry() {
    *this = ::std::move(from);
  }

  inline ConvMapProto_Entry& operator=(ConvMapProto_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConvMapProto_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvMapProto_Entry* internal_default_instance() {
    return reinterpret_cast<const ConvMapProto_Entry*>(
               &_ConvMapProto_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ConvMapProto_Entry* other);
  friend void swap(ConvMapProto_Entry& a, ConvMapProto_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConvMapProto_Entry* New() const final {
    return CreateMaybeMessage<ConvMapProto_Entry>(NULL);
  }

  ConvMapProto_Entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConvMapProto_Entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConvMapProto_Entry& from);
  void MergeFrom(const ConvMapProto_Entry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConvMapProto_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.ConvParametersProto key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  private:
  const ::tensorflow::ConvParametersProto& _internal_key() const;
  public:
  const ::tensorflow::ConvParametersProto& key() const;
  ::tensorflow::ConvParametersProto* release_key();
  ::tensorflow::ConvParametersProto* mutable_key();
  void set_allocated_key(::tensorflow::ConvParametersProto* key);

  // .stream_executor.dnn.AlgorithmConfigProto value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  private:
  const ::stream_executor::dnn::AlgorithmConfigProto& _internal_value() const;
  public:
  const ::stream_executor::dnn::AlgorithmConfigProto& value() const;
  ::stream_executor::dnn::AlgorithmConfigProto* release_value();
  ::stream_executor::dnn::AlgorithmConfigProto* mutable_value();
  void set_allocated_value(::stream_executor::dnn::AlgorithmConfigProto* value);

  // @@protoc_insertion_point(class_scope:tensorflow.ConvMapProto.Entry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tensorflow::ConvParametersProto* key_;
  ::stream_executor::dnn::AlgorithmConfigProto* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConvMapProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.ConvMapProto) */ {
 public:
  ConvMapProto();
  virtual ~ConvMapProto();

  ConvMapProto(const ConvMapProto& from);

  inline ConvMapProto& operator=(const ConvMapProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConvMapProto(ConvMapProto&& from) noexcept
    : ConvMapProto() {
    *this = ::std::move(from);
  }

  inline ConvMapProto& operator=(ConvMapProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConvMapProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvMapProto* internal_default_instance() {
    return reinterpret_cast<const ConvMapProto*>(
               &_ConvMapProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ConvMapProto* other);
  friend void swap(ConvMapProto& a, ConvMapProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConvMapProto* New() const final {
    return CreateMaybeMessage<ConvMapProto>(NULL);
  }

  ConvMapProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConvMapProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConvMapProto& from);
  void MergeFrom(const ConvMapProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConvMapProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConvMapProto_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .tensorflow.ConvMapProto.Entry kv_pairs = 1;
  int kv_pairs_size() const;
  void clear_kv_pairs();
  static const int kKvPairsFieldNumber = 1;
  ::tensorflow::ConvMapProto_Entry* mutable_kv_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::ConvMapProto_Entry >*
      mutable_kv_pairs();
  const ::tensorflow::ConvMapProto_Entry& kv_pairs(int index) const;
  ::tensorflow::ConvMapProto_Entry* add_kv_pairs();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::ConvMapProto_Entry >&
      kv_pairs() const;

  // @@protoc_insertion_point(class_scope:tensorflow.ConvMapProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::ConvMapProto_Entry > kv_pairs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutotuneMapsProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.AutotuneMapsProto) */ {
 public:
  AutotuneMapsProto();
  virtual ~AutotuneMapsProto();

  AutotuneMapsProto(const AutotuneMapsProto& from);

  inline AutotuneMapsProto& operator=(const AutotuneMapsProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AutotuneMapsProto(AutotuneMapsProto&& from) noexcept
    : AutotuneMapsProto() {
    *this = ::std::move(from);
  }

  inline AutotuneMapsProto& operator=(AutotuneMapsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutotuneMapsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutotuneMapsProto* internal_default_instance() {
    return reinterpret_cast<const AutotuneMapsProto*>(
               &_AutotuneMapsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AutotuneMapsProto* other);
  friend void swap(AutotuneMapsProto& a, AutotuneMapsProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AutotuneMapsProto* New() const final {
    return CreateMaybeMessage<AutotuneMapsProto>(NULL);
  }

  AutotuneMapsProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AutotuneMapsProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AutotuneMapsProto& from);
  void MergeFrom(const AutotuneMapsProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutotuneMapsProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.ConvMapProto conv_map = 2;
  bool has_conv_map() const;
  void clear_conv_map();
  static const int kConvMapFieldNumber = 2;
  private:
  const ::tensorflow::ConvMapProto& _internal_conv_map() const;
  public:
  const ::tensorflow::ConvMapProto& conv_map() const;
  ::tensorflow::ConvMapProto* release_conv_map();
  ::tensorflow::ConvMapProto* mutable_conv_map();
  void set_allocated_conv_map(::tensorflow::ConvMapProto* conv_map);

  // .tensorflow.ConvMapProto fused_conv_map = 3;
  bool has_fused_conv_map() const;
  void clear_fused_conv_map();
  static const int kFusedConvMapFieldNumber = 3;
  private:
  const ::tensorflow::ConvMapProto& _internal_fused_conv_map() const;
  public:
  const ::tensorflow::ConvMapProto& fused_conv_map() const;
  ::tensorflow::ConvMapProto* release_fused_conv_map();
  ::tensorflow::ConvMapProto* mutable_fused_conv_map();
  void set_allocated_fused_conv_map(::tensorflow::ConvMapProto* fused_conv_map);

  // @@protoc_insertion_point(class_scope:tensorflow.AutotuneMapsProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tensorflow::ConvMapProto* conv_map_;
  ::tensorflow::ConvMapProto* fused_conv_map_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConvMapProto_Entry

// .tensorflow.ConvParametersProto key = 1;
inline bool ConvMapProto_Entry::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline const ::tensorflow::ConvParametersProto& ConvMapProto_Entry::_internal_key() const {
  return *key_;
}
inline const ::tensorflow::ConvParametersProto& ConvMapProto_Entry::key() const {
  const ::tensorflow::ConvParametersProto* p = key_;
  // @@protoc_insertion_point(field_get:tensorflow.ConvMapProto.Entry.key)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::ConvParametersProto*>(
      &::tensorflow::_ConvParametersProto_default_instance_);
}
inline ::tensorflow::ConvParametersProto* ConvMapProto_Entry::release_key() {
  // @@protoc_insertion_point(field_release:tensorflow.ConvMapProto.Entry.key)
  
  ::tensorflow::ConvParametersProto* temp = key_;
  key_ = NULL;
  return temp;
}
inline ::tensorflow::ConvParametersProto* ConvMapProto_Entry::mutable_key() {
  
  if (key_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::ConvParametersProto>(GetArenaNoVirtual());
    key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvMapProto.Entry.key)
  return key_;
}
inline void ConvMapProto_Entry::set_allocated_key(::tensorflow::ConvParametersProto* key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_);
  }
  if (key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    
  } else {
    
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ConvMapProto.Entry.key)
}

// .stream_executor.dnn.AlgorithmConfigProto value = 2;
inline bool ConvMapProto_Entry::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::stream_executor::dnn::AlgorithmConfigProto& ConvMapProto_Entry::_internal_value() const {
  return *value_;
}
inline const ::stream_executor::dnn::AlgorithmConfigProto& ConvMapProto_Entry::value() const {
  const ::stream_executor::dnn::AlgorithmConfigProto* p = value_;
  // @@protoc_insertion_point(field_get:tensorflow.ConvMapProto.Entry.value)
  return p != NULL ? *p : *reinterpret_cast<const ::stream_executor::dnn::AlgorithmConfigProto*>(
      &::stream_executor::dnn::_AlgorithmConfigProto_default_instance_);
}
inline ::stream_executor::dnn::AlgorithmConfigProto* ConvMapProto_Entry::release_value() {
  // @@protoc_insertion_point(field_release:tensorflow.ConvMapProto.Entry.value)
  
  ::stream_executor::dnn::AlgorithmConfigProto* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::stream_executor::dnn::AlgorithmConfigProto* ConvMapProto_Entry::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::stream_executor::dnn::AlgorithmConfigProto>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvMapProto.Entry.value)
  return value_;
}
inline void ConvMapProto_Entry::set_allocated_value(::stream_executor::dnn::AlgorithmConfigProto* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ConvMapProto.Entry.value)
}

// -------------------------------------------------------------------

// ConvMapProto

// repeated .tensorflow.ConvMapProto.Entry kv_pairs = 1;
inline int ConvMapProto::kv_pairs_size() const {
  return kv_pairs_.size();
}
inline void ConvMapProto::clear_kv_pairs() {
  kv_pairs_.Clear();
}
inline ::tensorflow::ConvMapProto_Entry* ConvMapProto::mutable_kv_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvMapProto.kv_pairs)
  return kv_pairs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::ConvMapProto_Entry >*
ConvMapProto::mutable_kv_pairs() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ConvMapProto.kv_pairs)
  return &kv_pairs_;
}
inline const ::tensorflow::ConvMapProto_Entry& ConvMapProto::kv_pairs(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvMapProto.kv_pairs)
  return kv_pairs_.Get(index);
}
inline ::tensorflow::ConvMapProto_Entry* ConvMapProto::add_kv_pairs() {
  // @@protoc_insertion_point(field_add:tensorflow.ConvMapProto.kv_pairs)
  return kv_pairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::ConvMapProto_Entry >&
ConvMapProto::kv_pairs() const {
  // @@protoc_insertion_point(field_list:tensorflow.ConvMapProto.kv_pairs)
  return kv_pairs_;
}

// -------------------------------------------------------------------

// AutotuneMapsProto

// .tensorflow.ConvMapProto conv_map = 2;
inline bool AutotuneMapsProto::has_conv_map() const {
  return this != internal_default_instance() && conv_map_ != NULL;
}
inline void AutotuneMapsProto::clear_conv_map() {
  if (GetArenaNoVirtual() == NULL && conv_map_ != NULL) {
    delete conv_map_;
  }
  conv_map_ = NULL;
}
inline const ::tensorflow::ConvMapProto& AutotuneMapsProto::_internal_conv_map() const {
  return *conv_map_;
}
inline const ::tensorflow::ConvMapProto& AutotuneMapsProto::conv_map() const {
  const ::tensorflow::ConvMapProto* p = conv_map_;
  // @@protoc_insertion_point(field_get:tensorflow.AutotuneMapsProto.conv_map)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::ConvMapProto*>(
      &::tensorflow::_ConvMapProto_default_instance_);
}
inline ::tensorflow::ConvMapProto* AutotuneMapsProto::release_conv_map() {
  // @@protoc_insertion_point(field_release:tensorflow.AutotuneMapsProto.conv_map)
  
  ::tensorflow::ConvMapProto* temp = conv_map_;
  conv_map_ = NULL;
  return temp;
}
inline ::tensorflow::ConvMapProto* AutotuneMapsProto::mutable_conv_map() {
  
  if (conv_map_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::ConvMapProto>(GetArenaNoVirtual());
    conv_map_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.AutotuneMapsProto.conv_map)
  return conv_map_;
}
inline void AutotuneMapsProto::set_allocated_conv_map(::tensorflow::ConvMapProto* conv_map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete conv_map_;
  }
  if (conv_map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      conv_map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conv_map, submessage_arena);
    }
    
  } else {
    
  }
  conv_map_ = conv_map;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.AutotuneMapsProto.conv_map)
}

// .tensorflow.ConvMapProto fused_conv_map = 3;
inline bool AutotuneMapsProto::has_fused_conv_map() const {
  return this != internal_default_instance() && fused_conv_map_ != NULL;
}
inline void AutotuneMapsProto::clear_fused_conv_map() {
  if (GetArenaNoVirtual() == NULL && fused_conv_map_ != NULL) {
    delete fused_conv_map_;
  }
  fused_conv_map_ = NULL;
}
inline const ::tensorflow::ConvMapProto& AutotuneMapsProto::_internal_fused_conv_map() const {
  return *fused_conv_map_;
}
inline const ::tensorflow::ConvMapProto& AutotuneMapsProto::fused_conv_map() const {
  const ::tensorflow::ConvMapProto* p = fused_conv_map_;
  // @@protoc_insertion_point(field_get:tensorflow.AutotuneMapsProto.fused_conv_map)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::ConvMapProto*>(
      &::tensorflow::_ConvMapProto_default_instance_);
}
inline ::tensorflow::ConvMapProto* AutotuneMapsProto::release_fused_conv_map() {
  // @@protoc_insertion_point(field_release:tensorflow.AutotuneMapsProto.fused_conv_map)
  
  ::tensorflow::ConvMapProto* temp = fused_conv_map_;
  fused_conv_map_ = NULL;
  return temp;
}
inline ::tensorflow::ConvMapProto* AutotuneMapsProto::mutable_fused_conv_map() {
  
  if (fused_conv_map_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::ConvMapProto>(GetArenaNoVirtual());
    fused_conv_map_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.AutotuneMapsProto.fused_conv_map)
  return fused_conv_map_;
}
inline void AutotuneMapsProto::set_allocated_fused_conv_map(::tensorflow::ConvMapProto* fused_conv_map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fused_conv_map_;
  }
  if (fused_conv_map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fused_conv_map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fused_conv_map, submessage_arena);
    }
    
  } else {
    
  }
  fused_conv_map_ = fused_conv_map;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.AutotuneMapsProto.fused_conv_map)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto
