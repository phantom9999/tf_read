// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/util/autotune_maps/autotune_map.proto

#include "tensorflow/core/util/autotune_maps/autotune_map.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConvMapProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConvMapProto_Entry;
}  // namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto
namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConvParametersProto;
}  // namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto
namespace protobuf_tensorflow_2fstream_5fexecutor_2fdnn_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fstream_5fexecutor_2fdnn_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AlgorithmConfigProto;
}  // namespace protobuf_tensorflow_2fstream_5fexecutor_2fdnn_2eproto
namespace tensorflow {
class ConvMapProto_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvMapProto_Entry>
      _instance;
} _ConvMapProto_Entry_default_instance_;
class ConvMapProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvMapProto>
      _instance;
} _ConvMapProto_default_instance_;
class AutotuneMapsProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutotuneMapsProto>
      _instance;
} _AutotuneMapsProto_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto {
static void InitDefaultsConvMapProto_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ConvMapProto_Entry_default_instance_;
    new (ptr) ::tensorflow::ConvMapProto_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ConvMapProto_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ConvMapProto_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsConvMapProto_Entry}, {
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::scc_info_ConvParametersProto.base,
      &protobuf_tensorflow_2fstream_5fexecutor_2fdnn_2eproto::scc_info_AlgorithmConfigProto.base,}};

static void InitDefaultsConvMapProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ConvMapProto_default_instance_;
    new (ptr) ::tensorflow::ConvMapProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ConvMapProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConvMapProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConvMapProto}, {
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::scc_info_ConvMapProto_Entry.base,}};

static void InitDefaultsAutotuneMapsProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_AutotuneMapsProto_default_instance_;
    new (ptr) ::tensorflow::AutotuneMapsProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::AutotuneMapsProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AutotuneMapsProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAutotuneMapsProto}, {
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::scc_info_ConvMapProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ConvMapProto_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConvMapProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutotuneMapsProto.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvMapProto_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvMapProto_Entry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvMapProto_Entry, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvMapProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ConvMapProto, kv_pairs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneMapsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneMapsProto, conv_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::AutotuneMapsProto, fused_conv_map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::ConvMapProto_Entry)},
  { 7, -1, sizeof(::tensorflow::ConvMapProto)},
  { 13, -1, sizeof(::tensorflow::AutotuneMapsProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ConvMapProto_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ConvMapProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_AutotuneMapsProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/util/autotune_maps/autotune_map.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5tensorflow/core/util/autotune_maps/aut"
      "otune_map.proto\022\ntensorflow\0328tensorflow/"
      "core/util/autotune_maps/conv_parameters."
      "proto\032$tensorflow/stream_executor/dnn.pr"
      "oto\"\261\001\n\014ConvMapProto\0220\n\010kv_pairs\030\001 \003(\0132\036"
      ".tensorflow.ConvMapProto.Entry\032o\n\005Entry\022"
      ",\n\003key\030\001 \001(\0132\037.tensorflow.ConvParameters"
      "Proto\0228\n\005value\030\002 \001(\0132).stream_executor.d"
      "nn.AlgorithmConfigProto\"q\n\021AutotuneMapsP"
      "roto\022*\n\010conv_map\030\002 \001(\0132\030.tensorflow.Conv"
      "MapProto\0220\n\016fused_conv_map\030\003 \001(\0132\030.tenso"
      "rflow.ConvMapProtob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 466);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/util/autotune_maps/autotune_map.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fstream_5fexecutor_2fdnn_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto
namespace tensorflow {

// ===================================================================

void ConvMapProto_Entry::InitAsDefaultInstance() {
  ::tensorflow::_ConvMapProto_Entry_default_instance_._instance.get_mutable()->key_ = const_cast< ::tensorflow::ConvParametersProto*>(
      ::tensorflow::ConvParametersProto::internal_default_instance());
  ::tensorflow::_ConvMapProto_Entry_default_instance_._instance.get_mutable()->value_ = const_cast< ::stream_executor::dnn::AlgorithmConfigProto*>(
      ::stream_executor::dnn::AlgorithmConfigProto::internal_default_instance());
}
void ConvMapProto_Entry::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
void ConvMapProto_Entry::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvMapProto_Entry::kKeyFieldNumber;
const int ConvMapProto_Entry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvMapProto_Entry::ConvMapProto_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::scc_info_ConvMapProto_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ConvMapProto.Entry)
}
ConvMapProto_Entry::ConvMapProto_Entry(const ConvMapProto_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::tensorflow::ConvParametersProto(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::stream_executor::dnn::AlgorithmConfigProto(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.ConvMapProto.Entry)
}

void ConvMapProto_Entry::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

ConvMapProto_Entry::~ConvMapProto_Entry() {
  // @@protoc_insertion_point(destructor:tensorflow.ConvMapProto.Entry)
  SharedDtor();
}

void ConvMapProto_Entry::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete value_;
}

void ConvMapProto_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConvMapProto_Entry::descriptor() {
  ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvMapProto_Entry& ConvMapProto_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::scc_info_ConvMapProto_Entry.base);
  return *internal_default_instance();
}


void ConvMapProto_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ConvMapProto.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool ConvMapProto_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ConvMapProto.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.ConvParametersProto key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .stream_executor.dnn.AlgorithmConfigProto value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ConvMapProto.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ConvMapProto.Entry)
  return false;
#undef DO_
}

void ConvMapProto_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ConvMapProto.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.ConvParametersProto key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .stream_executor.dnn.AlgorithmConfigProto value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ConvMapProto.Entry)
}

::google::protobuf::uint8* ConvMapProto_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ConvMapProto.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.ConvParametersProto key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .stream_executor.dnn.AlgorithmConfigProto value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ConvMapProto.Entry)
  return target;
}

size_t ConvMapProto_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ConvMapProto.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.ConvParametersProto key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .stream_executor.dnn.AlgorithmConfigProto value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvMapProto_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ConvMapProto.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvMapProto_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvMapProto_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ConvMapProto.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ConvMapProto.Entry)
    MergeFrom(*source);
  }
}

void ConvMapProto_Entry::MergeFrom(const ConvMapProto_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ConvMapProto.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::tensorflow::ConvParametersProto::MergeFrom(from.key());
  }
  if (from.has_value()) {
    mutable_value()->::stream_executor::dnn::AlgorithmConfigProto::MergeFrom(from.value());
  }
}

void ConvMapProto_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ConvMapProto.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvMapProto_Entry::CopyFrom(const ConvMapProto_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ConvMapProto.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvMapProto_Entry::IsInitialized() const {
  return true;
}

void ConvMapProto_Entry::Swap(ConvMapProto_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvMapProto_Entry::InternalSwap(ConvMapProto_Entry* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConvMapProto_Entry::GetMetadata() const {
  protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConvMapProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvMapProto::kKvPairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvMapProto::ConvMapProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::scc_info_ConvMapProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ConvMapProto)
}
ConvMapProto::ConvMapProto(const ConvMapProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kv_pairs_(from.kv_pairs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ConvMapProto)
}

void ConvMapProto::SharedCtor() {
}

ConvMapProto::~ConvMapProto() {
  // @@protoc_insertion_point(destructor:tensorflow.ConvMapProto)
  SharedDtor();
}

void ConvMapProto::SharedDtor() {
}

void ConvMapProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConvMapProto::descriptor() {
  ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvMapProto& ConvMapProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::scc_info_ConvMapProto.base);
  return *internal_default_instance();
}


void ConvMapProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ConvMapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kv_pairs_.Clear();
  _internal_metadata_.Clear();
}

bool ConvMapProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ConvMapProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.ConvMapProto.Entry kv_pairs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kv_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ConvMapProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ConvMapProto)
  return false;
#undef DO_
}

void ConvMapProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ConvMapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.ConvMapProto.Entry kv_pairs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kv_pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->kv_pairs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ConvMapProto)
}

::google::protobuf::uint8* ConvMapProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ConvMapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.ConvMapProto.Entry kv_pairs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kv_pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->kv_pairs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ConvMapProto)
  return target;
}

size_t ConvMapProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ConvMapProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.ConvMapProto.Entry kv_pairs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->kv_pairs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kv_pairs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvMapProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ConvMapProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvMapProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvMapProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ConvMapProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ConvMapProto)
    MergeFrom(*source);
  }
}

void ConvMapProto::MergeFrom(const ConvMapProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ConvMapProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kv_pairs_.MergeFrom(from.kv_pairs_);
}

void ConvMapProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ConvMapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvMapProto::CopyFrom(const ConvMapProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ConvMapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvMapProto::IsInitialized() const {
  return true;
}

void ConvMapProto::Swap(ConvMapProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvMapProto::InternalSwap(ConvMapProto* other) {
  using std::swap;
  CastToBase(&kv_pairs_)->InternalSwap(CastToBase(&other->kv_pairs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConvMapProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutotuneMapsProto::InitAsDefaultInstance() {
  ::tensorflow::_AutotuneMapsProto_default_instance_._instance.get_mutable()->conv_map_ = const_cast< ::tensorflow::ConvMapProto*>(
      ::tensorflow::ConvMapProto::internal_default_instance());
  ::tensorflow::_AutotuneMapsProto_default_instance_._instance.get_mutable()->fused_conv_map_ = const_cast< ::tensorflow::ConvMapProto*>(
      ::tensorflow::ConvMapProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutotuneMapsProto::kConvMapFieldNumber;
const int AutotuneMapsProto::kFusedConvMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutotuneMapsProto::AutotuneMapsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::scc_info_AutotuneMapsProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.AutotuneMapsProto)
}
AutotuneMapsProto::AutotuneMapsProto(const AutotuneMapsProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conv_map()) {
    conv_map_ = new ::tensorflow::ConvMapProto(*from.conv_map_);
  } else {
    conv_map_ = NULL;
  }
  if (from.has_fused_conv_map()) {
    fused_conv_map_ = new ::tensorflow::ConvMapProto(*from.fused_conv_map_);
  } else {
    fused_conv_map_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.AutotuneMapsProto)
}

void AutotuneMapsProto::SharedCtor() {
  ::memset(&conv_map_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fused_conv_map_) -
      reinterpret_cast<char*>(&conv_map_)) + sizeof(fused_conv_map_));
}

AutotuneMapsProto::~AutotuneMapsProto() {
  // @@protoc_insertion_point(destructor:tensorflow.AutotuneMapsProto)
  SharedDtor();
}

void AutotuneMapsProto::SharedDtor() {
  if (this != internal_default_instance()) delete conv_map_;
  if (this != internal_default_instance()) delete fused_conv_map_;
}

void AutotuneMapsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutotuneMapsProto::descriptor() {
  ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutotuneMapsProto& AutotuneMapsProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::scc_info_AutotuneMapsProto.base);
  return *internal_default_instance();
}


void AutotuneMapsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AutotuneMapsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && conv_map_ != NULL) {
    delete conv_map_;
  }
  conv_map_ = NULL;
  if (GetArenaNoVirtual() == NULL && fused_conv_map_ != NULL) {
    delete fused_conv_map_;
  }
  fused_conv_map_ = NULL;
  _internal_metadata_.Clear();
}

bool AutotuneMapsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.AutotuneMapsProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.ConvMapProto conv_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conv_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ConvMapProto fused_conv_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fused_conv_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.AutotuneMapsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.AutotuneMapsProto)
  return false;
#undef DO_
}

void AutotuneMapsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.AutotuneMapsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.ConvMapProto conv_map = 2;
  if (this->has_conv_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_conv_map(), output);
  }

  // .tensorflow.ConvMapProto fused_conv_map = 3;
  if (this->has_fused_conv_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fused_conv_map(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.AutotuneMapsProto)
}

::google::protobuf::uint8* AutotuneMapsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AutotuneMapsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.ConvMapProto conv_map = 2;
  if (this->has_conv_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_conv_map(), deterministic, target);
  }

  // .tensorflow.ConvMapProto fused_conv_map = 3;
  if (this->has_fused_conv_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fused_conv_map(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AutotuneMapsProto)
  return target;
}

size_t AutotuneMapsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.AutotuneMapsProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.ConvMapProto conv_map = 2;
  if (this->has_conv_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conv_map_);
  }

  // .tensorflow.ConvMapProto fused_conv_map = 3;
  if (this->has_fused_conv_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fused_conv_map_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutotuneMapsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.AutotuneMapsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AutotuneMapsProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutotuneMapsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.AutotuneMapsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.AutotuneMapsProto)
    MergeFrom(*source);
  }
}

void AutotuneMapsProto::MergeFrom(const AutotuneMapsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AutotuneMapsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conv_map()) {
    mutable_conv_map()->::tensorflow::ConvMapProto::MergeFrom(from.conv_map());
  }
  if (from.has_fused_conv_map()) {
    mutable_fused_conv_map()->::tensorflow::ConvMapProto::MergeFrom(from.fused_conv_map());
  }
}

void AutotuneMapsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.AutotuneMapsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutotuneMapsProto::CopyFrom(const AutotuneMapsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AutotuneMapsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutotuneMapsProto::IsInitialized() const {
  return true;
}

void AutotuneMapsProto::Swap(AutotuneMapsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutotuneMapsProto::InternalSwap(AutotuneMapsProto* other) {
  using std::swap;
  swap(conv_map_, other->conv_map_);
  swap(fused_conv_map_, other->fused_conv_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutotuneMapsProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fautotune_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ConvMapProto_Entry* Arena::CreateMaybeMessage< ::tensorflow::ConvMapProto_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ConvMapProto_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ConvMapProto* Arena::CreateMaybeMessage< ::tensorflow::ConvMapProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ConvMapProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::AutotuneMapsProto* Arena::CreateMaybeMessage< ::tensorflow::AutotuneMapsProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::AutotuneMapsProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
