// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/data/service/dispatcher.proto

#include "tensorflow/core/data/service/dispatcher.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JobKeyDef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DatasetDef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TaskDef;
}  // namespace protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto
namespace protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskProgress;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WorkerInfo;
}  // namespace protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TensorProto;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DataServiceConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DataServiceMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcessingModeDef;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto
namespace tensorflow {
namespace data {
class TaskProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskProgress>
      _instance;
} _TaskProgress_default_instance_;
class WorkerHeartbeatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkerHeartbeatRequest>
      _instance;
} _WorkerHeartbeatRequest_default_instance_;
class WorkerHeartbeatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkerHeartbeatResponse>
      _instance;
} _WorkerHeartbeatResponse_default_instance_;
class WorkerUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkerUpdateRequest>
      _instance;
} _WorkerUpdateRequest_default_instance_;
class WorkerUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkerUpdateResponse>
      _instance;
} _WorkerUpdateResponse_default_instance_;
class GetDatasetDefRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDatasetDefRequest>
      _instance;
} _GetDatasetDefRequest_default_instance_;
class GetDatasetDefResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDatasetDefResponse>
      _instance;
} _GetDatasetDefResponse_default_instance_;
class GetSplitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSplitRequest>
      _instance;
} _GetSplitRequest_default_instance_;
class GetSplitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSplitResponse>
      _instance;
} _GetSplitResponse_default_instance_;
class GetVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVersionRequest>
      _instance;
} _GetVersionRequest_default_instance_;
class GetVersionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVersionResponse>
      _instance;
} _GetVersionResponse_default_instance_;
class GetOrRegisterDatasetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOrRegisterDatasetRequest>
      _instance;
} _GetOrRegisterDatasetRequest_default_instance_;
class GetOrRegisterDatasetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOrRegisterDatasetResponse>
      _instance;
} _GetOrRegisterDatasetResponse_default_instance_;
class GetDataServiceMetadataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDataServiceMetadataRequest>
      _instance;
} _GetDataServiceMetadataRequest_default_instance_;
class GetDataServiceMetadataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDataServiceMetadataResponse>
      _instance;
} _GetDataServiceMetadataResponse_default_instance_;
class GetDataServiceConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDataServiceConfigRequest>
      _instance;
} _GetDataServiceConfigRequest_default_instance_;
class GetDataServiceConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDataServiceConfigResponse>
      _instance;
} _GetDataServiceConfigResponse_default_instance_;
class GetOrCreateJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOrCreateJobRequest>
      _instance;
  ::google::protobuf::int64 num_consumers_;
} _GetOrCreateJobRequest_default_instance_;
class GetOrCreateJobResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOrCreateJobResponse>
      _instance;
} _GetOrCreateJobResponse_default_instance_;
class MaybeRemoveTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaybeRemoveTaskRequest>
      _instance;
} _MaybeRemoveTaskRequest_default_instance_;
class MaybeRemoveTaskResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaybeRemoveTaskResponse>
      _instance;
} _MaybeRemoveTaskResponse_default_instance_;
class ReleaseJobClientRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReleaseJobClientRequest>
      _instance;
} _ReleaseJobClientRequest_default_instance_;
class ReleaseJobClientResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReleaseJobClientResponse>
      _instance;
} _ReleaseJobClientResponse_default_instance_;
class ClientHeartbeatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientHeartbeatRequest>
      _instance;
  ::google::protobuf::int64 current_round_;
  ::google::protobuf::int64 blocked_round_;
} _ClientHeartbeatRequest_default_instance_;
class ClientHeartbeatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientHeartbeatResponse>
      _instance;
  ::google::protobuf::int64 block_round_;
} _ClientHeartbeatResponse_default_instance_;
class WorkerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkerInfo>
      _instance;
} _WorkerInfo_default_instance_;
class GetWorkersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetWorkersRequest>
      _instance;
} _GetWorkersRequest_default_instance_;
class GetWorkersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetWorkersResponse>
      _instance;
} _GetWorkersResponse_default_instance_;
}  // namespace data
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto {
static void InitDefaultsTaskProgress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_TaskProgress_default_instance_;
    new (ptr) ::tensorflow::data::TaskProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::TaskProgress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskProgress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskProgress}, {}};

static void InitDefaultsWorkerHeartbeatRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_WorkerHeartbeatRequest_default_instance_;
    new (ptr) ::tensorflow::data::WorkerHeartbeatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::WorkerHeartbeatRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkerHeartbeatRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkerHeartbeatRequest}, {}};

static void InitDefaultsWorkerHeartbeatResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_WorkerHeartbeatResponse_default_instance_;
    new (ptr) ::tensorflow::data::WorkerHeartbeatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::WorkerHeartbeatResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WorkerHeartbeatResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWorkerHeartbeatResponse}, {
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto::scc_info_TaskDef.base,}};

static void InitDefaultsWorkerUpdateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_WorkerUpdateRequest_default_instance_;
    new (ptr) ::tensorflow::data::WorkerUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::WorkerUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WorkerUpdateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWorkerUpdateRequest}, {
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_TaskProgress.base,}};

static void InitDefaultsWorkerUpdateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_WorkerUpdateResponse_default_instance_;
    new (ptr) ::tensorflow::data::WorkerUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::WorkerUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkerUpdateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkerUpdateResponse}, {}};

static void InitDefaultsGetDatasetDefRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetDatasetDefRequest_default_instance_;
    new (ptr) ::tensorflow::data::GetDatasetDefRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetDatasetDefRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDatasetDefRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDatasetDefRequest}, {}};

static void InitDefaultsGetDatasetDefResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetDatasetDefResponse_default_instance_;
    new (ptr) ::tensorflow::data::GetDatasetDefResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetDatasetDefResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetDatasetDefResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetDatasetDefResponse}, {
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto::scc_info_DatasetDef.base,}};

static void InitDefaultsGetSplitRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetSplitRequest_default_instance_;
    new (ptr) ::tensorflow::data::GetSplitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetSplitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetSplitRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetSplitRequest}, {}};

static void InitDefaultsGetSplitResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetSplitResponse_default_instance_;
    new (ptr) ::tensorflow::data::GetSplitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetSplitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetSplitResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetSplitResponse}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::scc_info_TensorProto.base,}};

static void InitDefaultsGetVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetVersionRequest_default_instance_;
    new (ptr) ::tensorflow::data::GetVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVersionRequest}, {}};

static void InitDefaultsGetVersionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetVersionResponse_default_instance_;
    new (ptr) ::tensorflow::data::GetVersionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetVersionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVersionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVersionResponse}, {}};

static void InitDefaultsGetOrRegisterDatasetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetOrRegisterDatasetRequest_default_instance_;
    new (ptr) ::tensorflow::data::GetOrRegisterDatasetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetOrRegisterDatasetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetOrRegisterDatasetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetOrRegisterDatasetRequest}, {
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto::scc_info_DatasetDef.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto::scc_info_DataServiceMetadata.base,}};

static void InitDefaultsGetOrRegisterDatasetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetOrRegisterDatasetResponse_default_instance_;
    new (ptr) ::tensorflow::data::GetOrRegisterDatasetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetOrRegisterDatasetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOrRegisterDatasetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOrRegisterDatasetResponse}, {}};

static void InitDefaultsGetDataServiceMetadataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetDataServiceMetadataRequest_default_instance_;
    new (ptr) ::tensorflow::data::GetDataServiceMetadataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetDataServiceMetadataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDataServiceMetadataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDataServiceMetadataRequest}, {}};

static void InitDefaultsGetDataServiceMetadataResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetDataServiceMetadataResponse_default_instance_;
    new (ptr) ::tensorflow::data::GetDataServiceMetadataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetDataServiceMetadataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetDataServiceMetadataResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetDataServiceMetadataResponse}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto::scc_info_DataServiceMetadata.base,}};

static void InitDefaultsGetDataServiceConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetDataServiceConfigRequest_default_instance_;
    new (ptr) ::tensorflow::data::GetDataServiceConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetDataServiceConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDataServiceConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDataServiceConfigRequest}, {}};

static void InitDefaultsGetDataServiceConfigResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetDataServiceConfigResponse_default_instance_;
    new (ptr) ::tensorflow::data::GetDataServiceConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetDataServiceConfigResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetDataServiceConfigResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetDataServiceConfigResponse}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto::scc_info_DataServiceConfig.base,}};

static void InitDefaultsGetOrCreateJobRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetOrCreateJobRequest_default_instance_;
    new (ptr) ::tensorflow::data::GetOrCreateJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetOrCreateJobRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetOrCreateJobRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetOrCreateJobRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto::scc_info_ProcessingModeDef.base,
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto::scc_info_JobKeyDef.base,}};

static void InitDefaultsGetOrCreateJobResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetOrCreateJobResponse_default_instance_;
    new (ptr) ::tensorflow::data::GetOrCreateJobResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetOrCreateJobResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOrCreateJobResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOrCreateJobResponse}, {}};

static void InitDefaultsMaybeRemoveTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_MaybeRemoveTaskRequest_default_instance_;
    new (ptr) ::tensorflow::data::MaybeRemoveTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::MaybeRemoveTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MaybeRemoveTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaybeRemoveTaskRequest}, {}};

static void InitDefaultsMaybeRemoveTaskResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_MaybeRemoveTaskResponse_default_instance_;
    new (ptr) ::tensorflow::data::MaybeRemoveTaskResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::MaybeRemoveTaskResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MaybeRemoveTaskResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaybeRemoveTaskResponse}, {}};

static void InitDefaultsReleaseJobClientRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_ReleaseJobClientRequest_default_instance_;
    new (ptr) ::tensorflow::data::ReleaseJobClientRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::ReleaseJobClientRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReleaseJobClientRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReleaseJobClientRequest}, {}};

static void InitDefaultsReleaseJobClientResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_ReleaseJobClientResponse_default_instance_;
    new (ptr) ::tensorflow::data::ReleaseJobClientResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::ReleaseJobClientResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReleaseJobClientResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReleaseJobClientResponse}, {}};

static void InitDefaultsClientHeartbeatRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_ClientHeartbeatRequest_default_instance_;
    new (ptr) ::tensorflow::data::ClientHeartbeatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::ClientHeartbeatRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientHeartbeatRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientHeartbeatRequest}, {}};

static void InitDefaultsClientHeartbeatResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_ClientHeartbeatResponse_default_instance_;
    new (ptr) ::tensorflow::data::ClientHeartbeatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::ClientHeartbeatResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientHeartbeatResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientHeartbeatResponse}, {
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsWorkerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_WorkerInfo_default_instance_;
    new (ptr) ::tensorflow::data::WorkerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::WorkerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkerInfo}, {}};

static void InitDefaultsGetWorkersRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetWorkersRequest_default_instance_;
    new (ptr) ::tensorflow::data::GetWorkersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetWorkersRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetWorkersRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetWorkersRequest}, {}};

static void InitDefaultsGetWorkersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::_GetWorkersResponse_default_instance_;
    new (ptr) ::tensorflow::data::GetWorkersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::GetWorkersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetWorkersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetWorkersResponse}, {
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TaskProgress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkerHeartbeatRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkerHeartbeatResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkerUpdateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkerUpdateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDatasetDefRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDatasetDefResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSplitRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSplitResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVersionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOrRegisterDatasetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOrRegisterDatasetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDataServiceMetadataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDataServiceMetadataResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDataServiceConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDataServiceConfigResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOrCreateJobRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOrCreateJobResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaybeRemoveTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaybeRemoveTaskResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReleaseJobClientRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReleaseJobClientResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientHeartbeatRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientHeartbeatResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetWorkersRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetWorkersResponse.base);
}

::google::protobuf::Metadata file_level_metadata[28];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::TaskProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::TaskProgress, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::TaskProgress, completed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatRequest, worker_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatRequest, transfer_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatRequest, worker_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatRequest, worker_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatRequest, current_tasks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatResponse, new_tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerHeartbeatResponse, tasks_to_delete_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerUpdateRequest, worker_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerUpdateRequest, updates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDatasetDefRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDatasetDefRequest, dataset_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDatasetDefResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDatasetDefResponse, dataset_def_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetSplitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetSplitRequest, job_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetSplitRequest, iteration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetSplitRequest, split_provider_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetSplitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetSplitResponse, split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetSplitResponse, end_of_splits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetVersionResponse, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrRegisterDatasetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrRegisterDatasetRequest, dataset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrRegisterDatasetRequest, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrRegisterDatasetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrRegisterDatasetResponse, dataset_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDataServiceMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDataServiceMetadataRequest, dataset_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDataServiceMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDataServiceMetadataResponse, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDataServiceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDataServiceConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetDataServiceConfigResponse, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobRequest, dataset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobRequest, processing_mode_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobRequest, job_key_),
  offsetof(::tensorflow::data::GetOrCreateJobRequestDefaultTypeInternal, num_consumers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobRequest, target_workers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobRequest, optional_num_consumers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetOrCreateJobResponse, job_client_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::MaybeRemoveTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::MaybeRemoveTaskRequest, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::MaybeRemoveTaskRequest, consumer_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::MaybeRemoveTaskRequest, round_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::MaybeRemoveTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::MaybeRemoveTaskResponse, removed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ReleaseJobClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ReleaseJobClientRequest, job_client_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ReleaseJobClientResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatRequest, job_client_id_),
  offsetof(::tensorflow::data::ClientHeartbeatRequestDefaultTypeInternal, current_round_),
  offsetof(::tensorflow::data::ClientHeartbeatRequestDefaultTypeInternal, blocked_round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatRequest, optional_current_round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatRequest, optional_blocked_round_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatResponse, task_info_),
  offsetof(::tensorflow::data::ClientHeartbeatResponseDefaultTypeInternal, block_round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatResponse, job_finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatResponse, deployment_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::ClientHeartbeatResponse, optional_block_round_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::WorkerInfo, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetWorkersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetWorkersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::GetWorkersResponse, workers_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::data::TaskProgress)},
  { 7, -1, sizeof(::tensorflow::data::WorkerHeartbeatRequest)},
  { 17, -1, sizeof(::tensorflow::data::WorkerHeartbeatResponse)},
  { 24, -1, sizeof(::tensorflow::data::WorkerUpdateRequest)},
  { 31, -1, sizeof(::tensorflow::data::WorkerUpdateResponse)},
  { 36, -1, sizeof(::tensorflow::data::GetDatasetDefRequest)},
  { 42, -1, sizeof(::tensorflow::data::GetDatasetDefResponse)},
  { 48, -1, sizeof(::tensorflow::data::GetSplitRequest)},
  { 56, -1, sizeof(::tensorflow::data::GetSplitResponse)},
  { 63, -1, sizeof(::tensorflow::data::GetVersionRequest)},
  { 68, -1, sizeof(::tensorflow::data::GetVersionResponse)},
  { 74, -1, sizeof(::tensorflow::data::GetOrRegisterDatasetRequest)},
  { 81, -1, sizeof(::tensorflow::data::GetOrRegisterDatasetResponse)},
  { 87, -1, sizeof(::tensorflow::data::GetDataServiceMetadataRequest)},
  { 93, -1, sizeof(::tensorflow::data::GetDataServiceMetadataResponse)},
  { 99, -1, sizeof(::tensorflow::data::GetDataServiceConfigRequest)},
  { 104, -1, sizeof(::tensorflow::data::GetDataServiceConfigResponse)},
  { 110, -1, sizeof(::tensorflow::data::GetOrCreateJobRequest)},
  { 121, -1, sizeof(::tensorflow::data::GetOrCreateJobResponse)},
  { 127, -1, sizeof(::tensorflow::data::MaybeRemoveTaskRequest)},
  { 135, -1, sizeof(::tensorflow::data::MaybeRemoveTaskResponse)},
  { 141, -1, sizeof(::tensorflow::data::ReleaseJobClientRequest)},
  { 147, -1, sizeof(::tensorflow::data::ReleaseJobClientResponse)},
  { 152, -1, sizeof(::tensorflow::data::ClientHeartbeatRequest)},
  { 162, -1, sizeof(::tensorflow::data::ClientHeartbeatResponse)},
  { 172, -1, sizeof(::tensorflow::data::WorkerInfo)},
  { 178, -1, sizeof(::tensorflow::data::GetWorkersRequest)},
  { 183, -1, sizeof(::tensorflow::data::GetWorkersResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_TaskProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_WorkerHeartbeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_WorkerHeartbeatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_WorkerUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_WorkerUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetDatasetDefRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetDatasetDefResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetSplitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetSplitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetVersionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetOrRegisterDatasetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetOrRegisterDatasetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetDataServiceMetadataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetDataServiceMetadataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetDataServiceConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetDataServiceConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetOrCreateJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetOrCreateJobResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_MaybeRemoveTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_MaybeRemoveTaskResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_ReleaseJobClientRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_ReleaseJobClientResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_ClientHeartbeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_ClientHeartbeatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_WorkerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetWorkersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::_GetWorkersResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/data/service/dispatcher.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n-tensorflow/core/data/service/dispatche"
      "r.proto\022\017tensorflow.data\032)tensorflow/cor"
      "e/data/service/common.proto\032&tensorflow/"
      "core/framework/tensor.proto\032+tensorflow/"
      "core/protobuf/data_service.proto\"2\n\014Task"
      "Progress\022\017\n\007task_id\030\001 \001(\003\022\021\n\tcompleted\030\002"
      " \001(\010\"\212\001\n\026WorkerHeartbeatRequest\022\026\n\016worke"
      "r_address\030\001 \001(\t\022\030\n\020transfer_address\030\003 \001("
      "\t\022\023\n\013worker_tags\030\004 \003(\t\022\022\n\nworker_uid\030\005 \001"
      "(\003\022\025\n\rcurrent_tasks\030\002 \003(\003\"_\n\027WorkerHeart"
      "beatResponse\022+\n\tnew_tasks\030\001 \003(\0132\030.tensor"
      "flow.data.TaskDef\022\027\n\017tasks_to_delete\030\002 \003"
      "(\003\"]\n\023WorkerUpdateRequest\022\026\n\016worker_addr"
      "ess\030\001 \001(\t\022.\n\007updates\030\002 \003(\0132\035.tensorflow."
      "data.TaskProgress\"\026\n\024WorkerUpdateRespons"
      "e\"*\n\024GetDatasetDefRequest\022\022\n\ndataset_id\030"
      "\001 \001(\003\"I\n\025GetDatasetDefResponse\0220\n\013datase"
      "t_def\030\001 \001(\0132\033.tensorflow.data.DatasetDef"
      "\"R\n\017GetSplitRequest\022\016\n\006job_id\030\001 \001(\003\022\021\n\ti"
      "teration\030\002 \001(\003\022\034\n\024split_provider_index\030\003"
      " \001(\003\"Q\n\020GetSplitResponse\022&\n\005split\030\001 \001(\0132"
      "\027.tensorflow.TensorProto\022\025\n\rend_of_split"
      "s\030\002 \001(\010\"\023\n\021GetVersionRequest\"%\n\022GetVersi"
      "onResponse\022\017\n\007version\030\001 \001(\003\"\211\001\n\033GetOrReg"
      "isterDatasetRequest\022,\n\007dataset\030\001 \001(\0132\033.t"
      "ensorflow.data.DatasetDef\0226\n\010metadata\030\003 "
      "\001(\0132$.tensorflow.data.DataServiceMetadat"
      "aJ\004\010\002\020\003\"2\n\034GetOrRegisterDatasetResponse\022"
      "\022\n\ndataset_id\030\001 \001(\003\"3\n\035GetDataServiceMet"
      "adataRequest\022\022\n\ndataset_id\030\001 \001(\003\"X\n\036GetD"
      "ataServiceMetadataResponse\0226\n\010metadata\030\001"
      " \001(\0132$.tensorflow.data.DataServiceMetada"
      "ta\"\035\n\033GetDataServiceConfigRequest\"R\n\034Get"
      "DataServiceConfigResponse\0222\n\006config\030\001 \001("
      "\0132\".tensorflow.data.DataServiceConfig\"\226\002"
      "\n\025GetOrCreateJobRequest\022\022\n\ndataset_id\030\001 "
      "\001(\003\022\?\n\023processing_mode_def\030\010 \001(\0132\".tenso"
      "rflow.data.ProcessingModeDef\022+\n\007job_key\030"
      "\005 \001(\0132\032.tensorflow.data.JobKeyDef\022\027\n\rnum"
      "_consumers\030\007 \001(\003H\000\0226\n\016target_workers\030\t \001"
      "(\0162\036.tensorflow.data.TargetWorkersB\030\n\026op"
      "tional_num_consumersJ\004\010\002\020\003J\004\010\003\020\004J\004\010\004\020\005\"/"
      "\n\026GetOrCreateJobResponse\022\025\n\rjob_client_i"
      "d\030\001 \001(\003\"P\n\026MaybeRemoveTaskRequest\022\017\n\007tas"
      "k_id\030\001 \001(\003\022\026\n\016consumer_index\030\002 \001(\003\022\r\n\005ro"
      "und\030\003 \001(\003\"*\n\027MaybeRemoveTaskResponse\022\017\n\007"
      "removed\030\001 \001(\010\"0\n\027ReleaseJobClientRequest"
      "\022\025\n\rjob_client_id\030\001 \001(\003\"\032\n\030ReleaseJobCli"
      "entResponse\"\233\001\n\026ClientHeartbeatRequest\022\025"
      "\n\rjob_client_id\030\001 \001(\003\022\027\n\rcurrent_round\030\002"
      " \001(\003H\000\022\027\n\rblocked_round\030\004 \001(\003H\001B\030\n\026optio"
      "nal_current_roundB\030\n\026optional_blocked_ro"
      "undJ\004\010\003\020\004\"\306\001\n\027ClientHeartbeatResponse\022,\n"
      "\ttask_info\030\001 \003(\0132\031.tensorflow.data.TaskI"
      "nfo\022\025\n\013block_round\030\003 \001(\003H\000\022\024\n\014job_finish"
      "ed\030\002 \001(\010\0228\n\017deployment_mode\030\004 \001(\0162\037.tens"
      "orflow.data.DeploymentModeB\026\n\024optional_b"
      "lock_round\"#\n\nWorkerInfo\022\017\n\007address\030\001 \001("
      "\tJ\004\010\002\020\003\"\023\n\021GetWorkersRequest\"B\n\022GetWorke"
      "rsResponse\022,\n\007workers\030\001 \003(\0132\033.tensorflow"
      ".data.WorkerInfo2\262\n\n\021DispatcherService\022d"
      "\n\017WorkerHeartbeat\022\'.tensorflow.data.Work"
      "erHeartbeatRequest\032(.tensorflow.data.Wor"
      "kerHeartbeatResponse\022[\n\014WorkerUpdate\022$.t"
      "ensorflow.data.WorkerUpdateRequest\032%.ten"
      "sorflow.data.WorkerUpdateResponse\022^\n\rGet"
      "DatasetDef\022%.tensorflow.data.GetDatasetD"
      "efRequest\032&.tensorflow.data.GetDatasetDe"
      "fResponse\022O\n\010GetSplit\022 .tensorflow.data."
      "GetSplitRequest\032!.tensorflow.data.GetSpl"
      "itResponse\022U\n\nGetVersion\022\".tensorflow.da"
      "ta.GetVersionRequest\032#.tensorflow.data.G"
      "etVersionResponse\022s\n\024GetOrRegisterDatase"
      "t\022,.tensorflow.data.GetOrRegisterDataset"
      "Request\032-.tensorflow.data.GetOrRegisterD"
      "atasetResponse\022a\n\016GetOrCreateJob\022&.tenso"
      "rflow.data.GetOrCreateJobRequest\032\'.tenso"
      "rflow.data.GetOrCreateJobResponse\022d\n\017May"
      "beRemoveTask\022\'.tensorflow.data.MaybeRemo"
      "veTaskRequest\032(.tensorflow.data.MaybeRem"
      "oveTaskResponse\022g\n\020ReleaseJobClient\022(.te"
      "nsorflow.data.ReleaseJobClientRequest\032)."
      "tensorflow.data.ReleaseJobClientResponse"
      "\022d\n\017ClientHeartbeat\022\'.tensorflow.data.Cl"
      "ientHeartbeatRequest\032(.tensorflow.data.C"
      "lientHeartbeatResponse\022U\n\nGetWorkers\022\".t"
      "ensorflow.data.GetWorkersRequest\032#.tenso"
      "rflow.data.GetWorkersResponse\022y\n\026GetData"
      "ServiceMetadata\022..tensorflow.data.GetDat"
      "aServiceMetadataRequest\032/.tensorflow.dat"
      "a.GetDataServiceMetadataResponse\022s\n\024GetD"
      "ataServiceConfig\022,.tensorflow.data.GetDa"
      "taServiceConfigRequest\032-.tensorflow.data"
      ".GetDataServiceConfigResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3757);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/data/service/dispatcher.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fcommon_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdata_5fservice_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto
namespace tensorflow {
namespace data {

// ===================================================================

void TaskProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskProgress::kTaskIdFieldNumber;
const int TaskProgress::kCompletedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskProgress::TaskProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_TaskProgress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.TaskProgress)
}
TaskProgress::TaskProgress(const TaskProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&task_id_, &from.task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&completed_) -
    reinterpret_cast<char*>(&task_id_)) + sizeof(completed_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.TaskProgress)
}

void TaskProgress::SharedCtor() {
  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&completed_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(completed_));
}

TaskProgress::~TaskProgress() {
  // @@protoc_insertion_point(destructor:tensorflow.data.TaskProgress)
  SharedDtor();
}

void TaskProgress::SharedDtor() {
}

void TaskProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TaskProgress::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskProgress& TaskProgress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_TaskProgress.base);
  return *internal_default_instance();
}


void TaskProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.TaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&completed_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(completed_));
  _internal_metadata_.Clear();
}

bool TaskProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.TaskProgress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool completed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &completed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.TaskProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.TaskProgress)
  return false;
#undef DO_
}

void TaskProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.TaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->task_id(), output);
  }

  // bool completed = 2;
  if (this->completed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->completed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.TaskProgress)
}

::google::protobuf::uint8* TaskProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.TaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->task_id(), target);
  }

  // bool completed = 2;
  if (this->completed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->completed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.TaskProgress)
  return target;
}

size_t TaskProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.TaskProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->task_id());
  }

  // bool completed = 2;
  if (this->completed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.TaskProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.TaskProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.TaskProgress)
    MergeFrom(*source);
  }
}

void TaskProgress::MergeFrom(const TaskProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.TaskProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
  if (from.completed() != 0) {
    set_completed(from.completed());
  }
}

void TaskProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.TaskProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskProgress::CopyFrom(const TaskProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.TaskProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskProgress::IsInitialized() const {
  return true;
}

void TaskProgress::Swap(TaskProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskProgress::InternalSwap(TaskProgress* other) {
  using std::swap;
  swap(task_id_, other->task_id_);
  swap(completed_, other->completed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskProgress::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkerHeartbeatRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerHeartbeatRequest::kWorkerAddressFieldNumber;
const int WorkerHeartbeatRequest::kTransferAddressFieldNumber;
const int WorkerHeartbeatRequest::kWorkerTagsFieldNumber;
const int WorkerHeartbeatRequest::kWorkerUidFieldNumber;
const int WorkerHeartbeatRequest::kCurrentTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerHeartbeatRequest::WorkerHeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerHeartbeatRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.WorkerHeartbeatRequest)
}
WorkerHeartbeatRequest::WorkerHeartbeatRequest(const WorkerHeartbeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      current_tasks_(from.current_tasks_),
      worker_tags_(from.worker_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worker_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_address().size() > 0) {
    worker_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_address_);
  }
  transfer_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transfer_address().size() > 0) {
    transfer_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transfer_address_);
  }
  worker_uid_ = from.worker_uid_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.WorkerHeartbeatRequest)
}

void WorkerHeartbeatRequest::SharedCtor() {
  worker_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_uid_ = GOOGLE_LONGLONG(0);
}

WorkerHeartbeatRequest::~WorkerHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.WorkerHeartbeatRequest)
  SharedDtor();
}

void WorkerHeartbeatRequest::SharedDtor() {
  worker_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorkerHeartbeatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkerHeartbeatRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkerHeartbeatRequest& WorkerHeartbeatRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerHeartbeatRequest.base);
  return *internal_default_instance();
}


void WorkerHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.WorkerHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  current_tasks_.Clear();
  worker_tags_.Clear();
  worker_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_uid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool WorkerHeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.WorkerHeartbeatRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string worker_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_address().data(), static_cast<int>(this->worker_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.WorkerHeartbeatRequest.worker_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 current_tasks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_current_tasks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_current_tasks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transfer_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfer_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transfer_address().data(), static_cast<int>(this->transfer_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.WorkerHeartbeatRequest.transfer_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string worker_tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_worker_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_tags(this->worker_tags_size() - 1).data(),
            static_cast<int>(this->worker_tags(this->worker_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.WorkerHeartbeatRequest.worker_tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 worker_uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worker_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.WorkerHeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.WorkerHeartbeatRequest)
  return false;
#undef DO_
}

void WorkerHeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.WorkerHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_address = 1;
  if (this->worker_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_address().data(), static_cast<int>(this->worker_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerHeartbeatRequest.worker_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->worker_address(), output);
  }

  // repeated int64 current_tasks = 2;
  if (this->current_tasks_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _current_tasks_cached_byte_size_));
  }
  for (int i = 0, n = this->current_tasks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->current_tasks(i), output);
  }

  // string transfer_address = 3;
  if (this->transfer_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer_address().data(), static_cast<int>(this->transfer_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerHeartbeatRequest.transfer_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->transfer_address(), output);
  }

  // repeated string worker_tags = 4;
  for (int i = 0, n = this->worker_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_tags(i).data(), static_cast<int>(this->worker_tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerHeartbeatRequest.worker_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->worker_tags(i), output);
  }

  // int64 worker_uid = 5;
  if (this->worker_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->worker_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.WorkerHeartbeatRequest)
}

::google::protobuf::uint8* WorkerHeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.WorkerHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_address = 1;
  if (this->worker_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_address().data(), static_cast<int>(this->worker_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerHeartbeatRequest.worker_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->worker_address(), target);
  }

  // repeated int64 current_tasks = 2;
  if (this->current_tasks_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _current_tasks_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->current_tasks_, target);
  }

  // string transfer_address = 3;
  if (this->transfer_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer_address().data(), static_cast<int>(this->transfer_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerHeartbeatRequest.transfer_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->transfer_address(), target);
  }

  // repeated string worker_tags = 4;
  for (int i = 0, n = this->worker_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_tags(i).data(), static_cast<int>(this->worker_tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerHeartbeatRequest.worker_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->worker_tags(i), target);
  }

  // int64 worker_uid = 5;
  if (this->worker_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->worker_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.WorkerHeartbeatRequest)
  return target;
}

size_t WorkerHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.WorkerHeartbeatRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 current_tasks = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->current_tasks_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _current_tasks_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string worker_tags = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->worker_tags_size());
  for (int i = 0, n = this->worker_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->worker_tags(i));
  }

  // string worker_address = 1;
  if (this->worker_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_address());
  }

  // string transfer_address = 3;
  if (this->transfer_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transfer_address());
  }

  // int64 worker_uid = 5;
  if (this->worker_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worker_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerHeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.WorkerHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerHeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerHeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.WorkerHeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.WorkerHeartbeatRequest)
    MergeFrom(*source);
  }
}

void WorkerHeartbeatRequest::MergeFrom(const WorkerHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.WorkerHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  current_tasks_.MergeFrom(from.current_tasks_);
  worker_tags_.MergeFrom(from.worker_tags_);
  if (from.worker_address().size() > 0) {

    worker_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_address_);
  }
  if (from.transfer_address().size() > 0) {

    transfer_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transfer_address_);
  }
  if (from.worker_uid() != 0) {
    set_worker_uid(from.worker_uid());
  }
}

void WorkerHeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.WorkerHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerHeartbeatRequest::CopyFrom(const WorkerHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.WorkerHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerHeartbeatRequest::IsInitialized() const {
  return true;
}

void WorkerHeartbeatRequest::Swap(WorkerHeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerHeartbeatRequest::InternalSwap(WorkerHeartbeatRequest* other) {
  using std::swap;
  current_tasks_.InternalSwap(&other->current_tasks_);
  worker_tags_.InternalSwap(CastToBase(&other->worker_tags_));
  worker_address_.Swap(&other->worker_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transfer_address_.Swap(&other->transfer_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(worker_uid_, other->worker_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkerHeartbeatRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkerHeartbeatResponse::InitAsDefaultInstance() {
}
void WorkerHeartbeatResponse::clear_new_tasks() {
  new_tasks_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerHeartbeatResponse::kNewTasksFieldNumber;
const int WorkerHeartbeatResponse::kTasksToDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerHeartbeatResponse::WorkerHeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerHeartbeatResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.WorkerHeartbeatResponse)
}
WorkerHeartbeatResponse::WorkerHeartbeatResponse(const WorkerHeartbeatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      new_tasks_(from.new_tasks_),
      tasks_to_delete_(from.tasks_to_delete_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.WorkerHeartbeatResponse)
}

void WorkerHeartbeatResponse::SharedCtor() {
}

WorkerHeartbeatResponse::~WorkerHeartbeatResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.WorkerHeartbeatResponse)
  SharedDtor();
}

void WorkerHeartbeatResponse::SharedDtor() {
}

void WorkerHeartbeatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkerHeartbeatResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkerHeartbeatResponse& WorkerHeartbeatResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerHeartbeatResponse.base);
  return *internal_default_instance();
}


void WorkerHeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.WorkerHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_tasks_.Clear();
  tasks_to_delete_.Clear();
  _internal_metadata_.Clear();
}

bool WorkerHeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.WorkerHeartbeatResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.data.TaskDef new_tasks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_new_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 tasks_to_delete = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_tasks_to_delete())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_tasks_to_delete())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.WorkerHeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.WorkerHeartbeatResponse)
  return false;
#undef DO_
}

void WorkerHeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.WorkerHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.data.TaskDef new_tasks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->new_tasks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->new_tasks(static_cast<int>(i)),
      output);
  }

  // repeated int64 tasks_to_delete = 2;
  if (this->tasks_to_delete_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _tasks_to_delete_cached_byte_size_));
  }
  for (int i = 0, n = this->tasks_to_delete_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->tasks_to_delete(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.WorkerHeartbeatResponse)
}

::google::protobuf::uint8* WorkerHeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.WorkerHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.data.TaskDef new_tasks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->new_tasks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->new_tasks(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 tasks_to_delete = 2;
  if (this->tasks_to_delete_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _tasks_to_delete_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->tasks_to_delete_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.WorkerHeartbeatResponse)
  return target;
}

size_t WorkerHeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.WorkerHeartbeatResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.data.TaskDef new_tasks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->new_tasks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->new_tasks(static_cast<int>(i)));
    }
  }

  // repeated int64 tasks_to_delete = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->tasks_to_delete_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tasks_to_delete_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerHeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.WorkerHeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerHeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerHeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.WorkerHeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.WorkerHeartbeatResponse)
    MergeFrom(*source);
  }
}

void WorkerHeartbeatResponse::MergeFrom(const WorkerHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.WorkerHeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  new_tasks_.MergeFrom(from.new_tasks_);
  tasks_to_delete_.MergeFrom(from.tasks_to_delete_);
}

void WorkerHeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.WorkerHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerHeartbeatResponse::CopyFrom(const WorkerHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.WorkerHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerHeartbeatResponse::IsInitialized() const {
  return true;
}

void WorkerHeartbeatResponse::Swap(WorkerHeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerHeartbeatResponse::InternalSwap(WorkerHeartbeatResponse* other) {
  using std::swap;
  CastToBase(&new_tasks_)->InternalSwap(CastToBase(&other->new_tasks_));
  tasks_to_delete_.InternalSwap(&other->tasks_to_delete_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkerHeartbeatResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkerUpdateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerUpdateRequest::kWorkerAddressFieldNumber;
const int WorkerUpdateRequest::kUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerUpdateRequest::WorkerUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerUpdateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.WorkerUpdateRequest)
}
WorkerUpdateRequest::WorkerUpdateRequest(const WorkerUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      updates_(from.updates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worker_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_address().size() > 0) {
    worker_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_address_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.WorkerUpdateRequest)
}

void WorkerUpdateRequest::SharedCtor() {
  worker_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WorkerUpdateRequest::~WorkerUpdateRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.WorkerUpdateRequest)
  SharedDtor();
}

void WorkerUpdateRequest::SharedDtor() {
  worker_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorkerUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkerUpdateRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkerUpdateRequest& WorkerUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerUpdateRequest.base);
  return *internal_default_instance();
}


void WorkerUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.WorkerUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  updates_.Clear();
  worker_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WorkerUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.WorkerUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string worker_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_address().data(), static_cast<int>(this->worker_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.WorkerUpdateRequest.worker_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.data.TaskProgress updates = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_updates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.WorkerUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.WorkerUpdateRequest)
  return false;
#undef DO_
}

void WorkerUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.WorkerUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_address = 1;
  if (this->worker_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_address().data(), static_cast<int>(this->worker_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerUpdateRequest.worker_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->worker_address(), output);
  }

  // repeated .tensorflow.data.TaskProgress updates = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->updates(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.WorkerUpdateRequest)
}

::google::protobuf::uint8* WorkerUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.WorkerUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_address = 1;
  if (this->worker_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_address().data(), static_cast<int>(this->worker_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerUpdateRequest.worker_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->worker_address(), target);
  }

  // repeated .tensorflow.data.TaskProgress updates = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->updates(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.WorkerUpdateRequest)
  return target;
}

size_t WorkerUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.WorkerUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.data.TaskProgress updates = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->updates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->updates(static_cast<int>(i)));
    }
  }

  // string worker_address = 1;
  if (this->worker_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.WorkerUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.WorkerUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.WorkerUpdateRequest)
    MergeFrom(*source);
  }
}

void WorkerUpdateRequest::MergeFrom(const WorkerUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.WorkerUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  updates_.MergeFrom(from.updates_);
  if (from.worker_address().size() > 0) {

    worker_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_address_);
  }
}

void WorkerUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.WorkerUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerUpdateRequest::CopyFrom(const WorkerUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.WorkerUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerUpdateRequest::IsInitialized() const {
  return true;
}

void WorkerUpdateRequest::Swap(WorkerUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerUpdateRequest::InternalSwap(WorkerUpdateRequest* other) {
  using std::swap;
  CastToBase(&updates_)->InternalSwap(CastToBase(&other->updates_));
  worker_address_.Swap(&other->worker_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkerUpdateRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkerUpdateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerUpdateResponse::WorkerUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerUpdateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.WorkerUpdateResponse)
}
WorkerUpdateResponse::WorkerUpdateResponse(const WorkerUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.WorkerUpdateResponse)
}

void WorkerUpdateResponse::SharedCtor() {
}

WorkerUpdateResponse::~WorkerUpdateResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.WorkerUpdateResponse)
  SharedDtor();
}

void WorkerUpdateResponse::SharedDtor() {
}

void WorkerUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkerUpdateResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkerUpdateResponse& WorkerUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerUpdateResponse.base);
  return *internal_default_instance();
}


void WorkerUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.WorkerUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool WorkerUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.WorkerUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.WorkerUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.WorkerUpdateResponse)
  return false;
#undef DO_
}

void WorkerUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.WorkerUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.WorkerUpdateResponse)
}

::google::protobuf::uint8* WorkerUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.WorkerUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.WorkerUpdateResponse)
  return target;
}

size_t WorkerUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.WorkerUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.WorkerUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.WorkerUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.WorkerUpdateResponse)
    MergeFrom(*source);
  }
}

void WorkerUpdateResponse::MergeFrom(const WorkerUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.WorkerUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WorkerUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.WorkerUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerUpdateResponse::CopyFrom(const WorkerUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.WorkerUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerUpdateResponse::IsInitialized() const {
  return true;
}

void WorkerUpdateResponse::Swap(WorkerUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerUpdateResponse::InternalSwap(WorkerUpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkerUpdateResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDatasetDefRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDatasetDefRequest::kDatasetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDatasetDefRequest::GetDatasetDefRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDatasetDefRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetDatasetDefRequest)
}
GetDatasetDefRequest::GetDatasetDefRequest(const GetDatasetDefRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dataset_id_ = from.dataset_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetDatasetDefRequest)
}

void GetDatasetDefRequest::SharedCtor() {
  dataset_id_ = GOOGLE_LONGLONG(0);
}

GetDatasetDefRequest::~GetDatasetDefRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetDatasetDefRequest)
  SharedDtor();
}

void GetDatasetDefRequest::SharedDtor() {
}

void GetDatasetDefRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDatasetDefRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDatasetDefRequest& GetDatasetDefRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDatasetDefRequest.base);
  return *internal_default_instance();
}


void GetDatasetDefRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetDatasetDefRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataset_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetDatasetDefRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetDatasetDefRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 dataset_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dataset_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetDatasetDefRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetDatasetDefRequest)
  return false;
#undef DO_
}

void GetDatasetDefRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetDatasetDefRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dataset_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetDatasetDefRequest)
}

::google::protobuf::uint8* GetDatasetDefRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetDatasetDefRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dataset_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetDatasetDefRequest)
  return target;
}

size_t GetDatasetDefRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetDatasetDefRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dataset_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDatasetDefRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetDatasetDefRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDatasetDefRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDatasetDefRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetDatasetDefRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetDatasetDefRequest)
    MergeFrom(*source);
  }
}

void GetDatasetDefRequest::MergeFrom(const GetDatasetDefRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetDatasetDefRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dataset_id() != 0) {
    set_dataset_id(from.dataset_id());
  }
}

void GetDatasetDefRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetDatasetDefRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDatasetDefRequest::CopyFrom(const GetDatasetDefRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetDatasetDefRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDatasetDefRequest::IsInitialized() const {
  return true;
}

void GetDatasetDefRequest::Swap(GetDatasetDefRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDatasetDefRequest::InternalSwap(GetDatasetDefRequest* other) {
  using std::swap;
  swap(dataset_id_, other->dataset_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDatasetDefRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDatasetDefResponse::InitAsDefaultInstance() {
  ::tensorflow::data::_GetDatasetDefResponse_default_instance_._instance.get_mutable()->dataset_def_ = const_cast< ::tensorflow::data::DatasetDef*>(
      ::tensorflow::data::DatasetDef::internal_default_instance());
}
void GetDatasetDefResponse::clear_dataset_def() {
  if (GetArenaNoVirtual() == NULL && dataset_def_ != NULL) {
    delete dataset_def_;
  }
  dataset_def_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDatasetDefResponse::kDatasetDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDatasetDefResponse::GetDatasetDefResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDatasetDefResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetDatasetDefResponse)
}
GetDatasetDefResponse::GetDatasetDefResponse(const GetDatasetDefResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dataset_def()) {
    dataset_def_ = new ::tensorflow::data::DatasetDef(*from.dataset_def_);
  } else {
    dataset_def_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetDatasetDefResponse)
}

void GetDatasetDefResponse::SharedCtor() {
  dataset_def_ = NULL;
}

GetDatasetDefResponse::~GetDatasetDefResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetDatasetDefResponse)
  SharedDtor();
}

void GetDatasetDefResponse::SharedDtor() {
  if (this != internal_default_instance()) delete dataset_def_;
}

void GetDatasetDefResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDatasetDefResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDatasetDefResponse& GetDatasetDefResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDatasetDefResponse.base);
  return *internal_default_instance();
}


void GetDatasetDefResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetDatasetDefResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dataset_def_ != NULL) {
    delete dataset_def_;
  }
  dataset_def_ = NULL;
  _internal_metadata_.Clear();
}

bool GetDatasetDefResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetDatasetDefResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.data.DatasetDef dataset_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dataset_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetDatasetDefResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetDatasetDefResponse)
  return false;
#undef DO_
}

void GetDatasetDefResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetDatasetDefResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.DatasetDef dataset_def = 1;
  if (this->has_dataset_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_dataset_def(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetDatasetDefResponse)
}

::google::protobuf::uint8* GetDatasetDefResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetDatasetDefResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.DatasetDef dataset_def = 1;
  if (this->has_dataset_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_dataset_def(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetDatasetDefResponse)
  return target;
}

size_t GetDatasetDefResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetDatasetDefResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.data.DatasetDef dataset_def = 1;
  if (this->has_dataset_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dataset_def_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDatasetDefResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetDatasetDefResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDatasetDefResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDatasetDefResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetDatasetDefResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetDatasetDefResponse)
    MergeFrom(*source);
  }
}

void GetDatasetDefResponse::MergeFrom(const GetDatasetDefResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetDatasetDefResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dataset_def()) {
    mutable_dataset_def()->::tensorflow::data::DatasetDef::MergeFrom(from.dataset_def());
  }
}

void GetDatasetDefResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetDatasetDefResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDatasetDefResponse::CopyFrom(const GetDatasetDefResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetDatasetDefResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDatasetDefResponse::IsInitialized() const {
  return true;
}

void GetDatasetDefResponse::Swap(GetDatasetDefResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDatasetDefResponse::InternalSwap(GetDatasetDefResponse* other) {
  using std::swap;
  swap(dataset_def_, other->dataset_def_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDatasetDefResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSplitRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSplitRequest::kJobIdFieldNumber;
const int GetSplitRequest::kIterationFieldNumber;
const int GetSplitRequest::kSplitProviderIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSplitRequest::GetSplitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetSplitRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetSplitRequest)
}
GetSplitRequest::GetSplitRequest(const GetSplitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&split_provider_index_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(split_provider_index_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetSplitRequest)
}

void GetSplitRequest::SharedCtor() {
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_provider_index_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(split_provider_index_));
}

GetSplitRequest::~GetSplitRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetSplitRequest)
  SharedDtor();
}

void GetSplitRequest::SharedDtor() {
}

void GetSplitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSplitRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSplitRequest& GetSplitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetSplitRequest.base);
  return *internal_default_instance();
}


void GetSplitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_provider_index_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(split_provider_index_));
  _internal_metadata_.Clear();
}

bool GetSplitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetSplitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 job_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &job_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 iteration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iteration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 split_provider_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &split_provider_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetSplitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetSplitRequest)
  return false;
#undef DO_
}

void GetSplitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 job_id = 1;
  if (this->job_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->job_id(), output);
  }

  // int64 iteration = 2;
  if (this->iteration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iteration(), output);
  }

  // int64 split_provider_index = 3;
  if (this->split_provider_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->split_provider_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetSplitRequest)
}

::google::protobuf::uint8* GetSplitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 job_id = 1;
  if (this->job_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->job_id(), target);
  }

  // int64 iteration = 2;
  if (this->iteration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iteration(), target);
  }

  // int64 split_provider_index = 3;
  if (this->split_provider_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->split_provider_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetSplitRequest)
  return target;
}

size_t GetSplitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetSplitRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->job_id());
  }

  // int64 iteration = 2;
  if (this->iteration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->iteration());
  }

  // int64 split_provider_index = 3;
  if (this->split_provider_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->split_provider_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSplitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetSplitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSplitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSplitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetSplitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetSplitRequest)
    MergeFrom(*source);
  }
}

void GetSplitRequest::MergeFrom(const GetSplitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetSplitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_id() != 0) {
    set_job_id(from.job_id());
  }
  if (from.iteration() != 0) {
    set_iteration(from.iteration());
  }
  if (from.split_provider_index() != 0) {
    set_split_provider_index(from.split_provider_index());
  }
}

void GetSplitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSplitRequest::CopyFrom(const GetSplitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSplitRequest::IsInitialized() const {
  return true;
}

void GetSplitRequest::Swap(GetSplitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSplitRequest::InternalSwap(GetSplitRequest* other) {
  using std::swap;
  swap(job_id_, other->job_id_);
  swap(iteration_, other->iteration_);
  swap(split_provider_index_, other->split_provider_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSplitRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSplitResponse::InitAsDefaultInstance() {
  ::tensorflow::data::_GetSplitResponse_default_instance_._instance.get_mutable()->split_ = const_cast< ::tensorflow::TensorProto*>(
      ::tensorflow::TensorProto::internal_default_instance());
}
void GetSplitResponse::clear_split() {
  if (GetArenaNoVirtual() == NULL && split_ != NULL) {
    delete split_;
  }
  split_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSplitResponse::kSplitFieldNumber;
const int GetSplitResponse::kEndOfSplitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSplitResponse::GetSplitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetSplitResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetSplitResponse)
}
GetSplitResponse::GetSplitResponse(const GetSplitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_split()) {
    split_ = new ::tensorflow::TensorProto(*from.split_);
  } else {
    split_ = NULL;
  }
  end_of_splits_ = from.end_of_splits_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetSplitResponse)
}

void GetSplitResponse::SharedCtor() {
  ::memset(&split_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_of_splits_) -
      reinterpret_cast<char*>(&split_)) + sizeof(end_of_splits_));
}

GetSplitResponse::~GetSplitResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetSplitResponse)
  SharedDtor();
}

void GetSplitResponse::SharedDtor() {
  if (this != internal_default_instance()) delete split_;
}

void GetSplitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSplitResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSplitResponse& GetSplitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetSplitResponse.base);
  return *internal_default_instance();
}


void GetSplitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && split_ != NULL) {
    delete split_;
  }
  split_ = NULL;
  end_of_splits_ = false;
  _internal_metadata_.Clear();
}

bool GetSplitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetSplitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.TensorProto split = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_split()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool end_of_splits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &end_of_splits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetSplitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetSplitResponse)
  return false;
#undef DO_
}

void GetSplitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TensorProto split = 1;
  if (this->has_split()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_split(), output);
  }

  // bool end_of_splits = 2;
  if (this->end_of_splits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->end_of_splits(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetSplitResponse)
}

::google::protobuf::uint8* GetSplitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TensorProto split = 1;
  if (this->has_split()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_split(), deterministic, target);
  }

  // bool end_of_splits = 2;
  if (this->end_of_splits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->end_of_splits(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetSplitResponse)
  return target;
}

size_t GetSplitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetSplitResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.TensorProto split = 1;
  if (this->has_split()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *split_);
  }

  // bool end_of_splits = 2;
  if (this->end_of_splits() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSplitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetSplitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSplitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSplitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetSplitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetSplitResponse)
    MergeFrom(*source);
  }
}

void GetSplitResponse::MergeFrom(const GetSplitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetSplitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_split()) {
    mutable_split()->::tensorflow::TensorProto::MergeFrom(from.split());
  }
  if (from.end_of_splits() != 0) {
    set_end_of_splits(from.end_of_splits());
  }
}

void GetSplitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetSplitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSplitResponse::CopyFrom(const GetSplitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetSplitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSplitResponse::IsInitialized() const {
  return true;
}

void GetSplitResponse::Swap(GetSplitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSplitResponse::InternalSwap(GetSplitResponse* other) {
  using std::swap;
  swap(split_, other->split_);
  swap(end_of_splits_, other->end_of_splits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSplitResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVersionRequest::GetVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetVersionRequest)
}
GetVersionRequest::GetVersionRequest(const GetVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetVersionRequest)
}

void GetVersionRequest::SharedCtor() {
}

GetVersionRequest::~GetVersionRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetVersionRequest)
  SharedDtor();
}

void GetVersionRequest::SharedDtor() {
}

void GetVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVersionRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVersionRequest& GetVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetVersionRequest.base);
  return *internal_default_instance();
}


void GetVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetVersionRequest)
  return false;
#undef DO_
}

void GetVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetVersionRequest)
}

::google::protobuf::uint8* GetVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetVersionRequest)
  return target;
}

size_t GetVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetVersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetVersionRequest)
    MergeFrom(*source);
  }
}

void GetVersionRequest::MergeFrom(const GetVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVersionRequest::CopyFrom(const GetVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVersionRequest::IsInitialized() const {
  return true;
}

void GetVersionRequest::Swap(GetVersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVersionRequest::InternalSwap(GetVersionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVersionRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVersionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVersionResponse::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVersionResponse::GetVersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetVersionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetVersionResponse)
}
GetVersionResponse::GetVersionResponse(const GetVersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetVersionResponse)
}

void GetVersionResponse::SharedCtor() {
  version_ = GOOGLE_LONGLONG(0);
}

GetVersionResponse::~GetVersionResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetVersionResponse)
  SharedDtor();
}

void GetVersionResponse::SharedDtor() {
}

void GetVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVersionResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVersionResponse& GetVersionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetVersionResponse.base);
  return *internal_default_instance();
}


void GetVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetVersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetVersionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetVersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetVersionResponse)
  return false;
#undef DO_
}

void GetVersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetVersionResponse)
}

::google::protobuf::uint8* GetVersionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetVersionResponse)
  return target;
}

size_t GetVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetVersionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVersionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVersionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetVersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetVersionResponse)
    MergeFrom(*source);
  }
}

void GetVersionResponse::MergeFrom(const GetVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version() != 0) {
    set_version(from.version());
  }
}

void GetVersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVersionResponse::CopyFrom(const GetVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVersionResponse::IsInitialized() const {
  return true;
}

void GetVersionResponse::Swap(GetVersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVersionResponse::InternalSwap(GetVersionResponse* other) {
  using std::swap;
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVersionResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOrRegisterDatasetRequest::InitAsDefaultInstance() {
  ::tensorflow::data::_GetOrRegisterDatasetRequest_default_instance_._instance.get_mutable()->dataset_ = const_cast< ::tensorflow::data::DatasetDef*>(
      ::tensorflow::data::DatasetDef::internal_default_instance());
  ::tensorflow::data::_GetOrRegisterDatasetRequest_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::tensorflow::data::DataServiceMetadata*>(
      ::tensorflow::data::DataServiceMetadata::internal_default_instance());
}
void GetOrRegisterDatasetRequest::clear_dataset() {
  if (GetArenaNoVirtual() == NULL && dataset_ != NULL) {
    delete dataset_;
  }
  dataset_ = NULL;
}
void GetOrRegisterDatasetRequest::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrRegisterDatasetRequest::kDatasetFieldNumber;
const int GetOrRegisterDatasetRequest::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrRegisterDatasetRequest::GetOrRegisterDatasetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetOrRegisterDatasetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetOrRegisterDatasetRequest)
}
GetOrRegisterDatasetRequest::GetOrRegisterDatasetRequest(const GetOrRegisterDatasetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dataset()) {
    dataset_ = new ::tensorflow::data::DatasetDef(*from.dataset_);
  } else {
    dataset_ = NULL;
  }
  if (from.has_metadata()) {
    metadata_ = new ::tensorflow::data::DataServiceMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetOrRegisterDatasetRequest)
}

void GetOrRegisterDatasetRequest::SharedCtor() {
  ::memset(&dataset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&metadata_) -
      reinterpret_cast<char*>(&dataset_)) + sizeof(metadata_));
}

GetOrRegisterDatasetRequest::~GetOrRegisterDatasetRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetOrRegisterDatasetRequest)
  SharedDtor();
}

void GetOrRegisterDatasetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete dataset_;
  if (this != internal_default_instance()) delete metadata_;
}

void GetOrRegisterDatasetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetOrRegisterDatasetRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrRegisterDatasetRequest& GetOrRegisterDatasetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetOrRegisterDatasetRequest.base);
  return *internal_default_instance();
}


void GetOrRegisterDatasetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetOrRegisterDatasetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dataset_ != NULL) {
    delete dataset_;
  }
  dataset_ = NULL;
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  _internal_metadata_.Clear();
}

bool GetOrRegisterDatasetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetOrRegisterDatasetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.data.DatasetDef dataset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dataset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.data.DataServiceMetadata metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetOrRegisterDatasetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetOrRegisterDatasetRequest)
  return false;
#undef DO_
}

void GetOrRegisterDatasetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetOrRegisterDatasetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.DatasetDef dataset = 1;
  if (this->has_dataset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_dataset(), output);
  }

  // .tensorflow.data.DataServiceMetadata metadata = 3;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetOrRegisterDatasetRequest)
}

::google::protobuf::uint8* GetOrRegisterDatasetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetOrRegisterDatasetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.DatasetDef dataset = 1;
  if (this->has_dataset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_dataset(), deterministic, target);
  }

  // .tensorflow.data.DataServiceMetadata metadata = 3;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_metadata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetOrRegisterDatasetRequest)
  return target;
}

size_t GetOrRegisterDatasetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetOrRegisterDatasetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.data.DatasetDef dataset = 1;
  if (this->has_dataset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dataset_);
  }

  // .tensorflow.data.DataServiceMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrRegisterDatasetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetOrRegisterDatasetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrRegisterDatasetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrRegisterDatasetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetOrRegisterDatasetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetOrRegisterDatasetRequest)
    MergeFrom(*source);
  }
}

void GetOrRegisterDatasetRequest::MergeFrom(const GetOrRegisterDatasetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetOrRegisterDatasetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dataset()) {
    mutable_dataset()->::tensorflow::data::DatasetDef::MergeFrom(from.dataset());
  }
  if (from.has_metadata()) {
    mutable_metadata()->::tensorflow::data::DataServiceMetadata::MergeFrom(from.metadata());
  }
}

void GetOrRegisterDatasetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetOrRegisterDatasetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrRegisterDatasetRequest::CopyFrom(const GetOrRegisterDatasetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetOrRegisterDatasetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrRegisterDatasetRequest::IsInitialized() const {
  return true;
}

void GetOrRegisterDatasetRequest::Swap(GetOrRegisterDatasetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrRegisterDatasetRequest::InternalSwap(GetOrRegisterDatasetRequest* other) {
  using std::swap;
  swap(dataset_, other->dataset_);
  swap(metadata_, other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetOrRegisterDatasetRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOrRegisterDatasetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrRegisterDatasetResponse::kDatasetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrRegisterDatasetResponse::GetOrRegisterDatasetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetOrRegisterDatasetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetOrRegisterDatasetResponse)
}
GetOrRegisterDatasetResponse::GetOrRegisterDatasetResponse(const GetOrRegisterDatasetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dataset_id_ = from.dataset_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetOrRegisterDatasetResponse)
}

void GetOrRegisterDatasetResponse::SharedCtor() {
  dataset_id_ = GOOGLE_LONGLONG(0);
}

GetOrRegisterDatasetResponse::~GetOrRegisterDatasetResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetOrRegisterDatasetResponse)
  SharedDtor();
}

void GetOrRegisterDatasetResponse::SharedDtor() {
}

void GetOrRegisterDatasetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetOrRegisterDatasetResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrRegisterDatasetResponse& GetOrRegisterDatasetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetOrRegisterDatasetResponse.base);
  return *internal_default_instance();
}


void GetOrRegisterDatasetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetOrRegisterDatasetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataset_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetOrRegisterDatasetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetOrRegisterDatasetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 dataset_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dataset_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetOrRegisterDatasetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetOrRegisterDatasetResponse)
  return false;
#undef DO_
}

void GetOrRegisterDatasetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetOrRegisterDatasetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dataset_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetOrRegisterDatasetResponse)
}

::google::protobuf::uint8* GetOrRegisterDatasetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetOrRegisterDatasetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dataset_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetOrRegisterDatasetResponse)
  return target;
}

size_t GetOrRegisterDatasetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetOrRegisterDatasetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dataset_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrRegisterDatasetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetOrRegisterDatasetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrRegisterDatasetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrRegisterDatasetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetOrRegisterDatasetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetOrRegisterDatasetResponse)
    MergeFrom(*source);
  }
}

void GetOrRegisterDatasetResponse::MergeFrom(const GetOrRegisterDatasetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetOrRegisterDatasetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dataset_id() != 0) {
    set_dataset_id(from.dataset_id());
  }
}

void GetOrRegisterDatasetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetOrRegisterDatasetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrRegisterDatasetResponse::CopyFrom(const GetOrRegisterDatasetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetOrRegisterDatasetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrRegisterDatasetResponse::IsInitialized() const {
  return true;
}

void GetOrRegisterDatasetResponse::Swap(GetOrRegisterDatasetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrRegisterDatasetResponse::InternalSwap(GetOrRegisterDatasetResponse* other) {
  using std::swap;
  swap(dataset_id_, other->dataset_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetOrRegisterDatasetResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDataServiceMetadataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDataServiceMetadataRequest::kDatasetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDataServiceMetadataRequest::GetDataServiceMetadataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDataServiceMetadataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetDataServiceMetadataRequest)
}
GetDataServiceMetadataRequest::GetDataServiceMetadataRequest(const GetDataServiceMetadataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dataset_id_ = from.dataset_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetDataServiceMetadataRequest)
}

void GetDataServiceMetadataRequest::SharedCtor() {
  dataset_id_ = GOOGLE_LONGLONG(0);
}

GetDataServiceMetadataRequest::~GetDataServiceMetadataRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetDataServiceMetadataRequest)
  SharedDtor();
}

void GetDataServiceMetadataRequest::SharedDtor() {
}

void GetDataServiceMetadataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDataServiceMetadataRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDataServiceMetadataRequest& GetDataServiceMetadataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDataServiceMetadataRequest.base);
  return *internal_default_instance();
}


void GetDataServiceMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetDataServiceMetadataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataset_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetDataServiceMetadataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetDataServiceMetadataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 dataset_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dataset_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetDataServiceMetadataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetDataServiceMetadataRequest)
  return false;
#undef DO_
}

void GetDataServiceMetadataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetDataServiceMetadataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dataset_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetDataServiceMetadataRequest)
}

::google::protobuf::uint8* GetDataServiceMetadataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetDataServiceMetadataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dataset_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetDataServiceMetadataRequest)
  return target;
}

size_t GetDataServiceMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetDataServiceMetadataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dataset_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDataServiceMetadataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetDataServiceMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDataServiceMetadataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDataServiceMetadataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetDataServiceMetadataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetDataServiceMetadataRequest)
    MergeFrom(*source);
  }
}

void GetDataServiceMetadataRequest::MergeFrom(const GetDataServiceMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetDataServiceMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dataset_id() != 0) {
    set_dataset_id(from.dataset_id());
  }
}

void GetDataServiceMetadataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetDataServiceMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDataServiceMetadataRequest::CopyFrom(const GetDataServiceMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetDataServiceMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataServiceMetadataRequest::IsInitialized() const {
  return true;
}

void GetDataServiceMetadataRequest::Swap(GetDataServiceMetadataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDataServiceMetadataRequest::InternalSwap(GetDataServiceMetadataRequest* other) {
  using std::swap;
  swap(dataset_id_, other->dataset_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDataServiceMetadataRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDataServiceMetadataResponse::InitAsDefaultInstance() {
  ::tensorflow::data::_GetDataServiceMetadataResponse_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::tensorflow::data::DataServiceMetadata*>(
      ::tensorflow::data::DataServiceMetadata::internal_default_instance());
}
void GetDataServiceMetadataResponse::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDataServiceMetadataResponse::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDataServiceMetadataResponse::GetDataServiceMetadataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDataServiceMetadataResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetDataServiceMetadataResponse)
}
GetDataServiceMetadataResponse::GetDataServiceMetadataResponse(const GetDataServiceMetadataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metadata()) {
    metadata_ = new ::tensorflow::data::DataServiceMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetDataServiceMetadataResponse)
}

void GetDataServiceMetadataResponse::SharedCtor() {
  metadata_ = NULL;
}

GetDataServiceMetadataResponse::~GetDataServiceMetadataResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetDataServiceMetadataResponse)
  SharedDtor();
}

void GetDataServiceMetadataResponse::SharedDtor() {
  if (this != internal_default_instance()) delete metadata_;
}

void GetDataServiceMetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDataServiceMetadataResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDataServiceMetadataResponse& GetDataServiceMetadataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDataServiceMetadataResponse.base);
  return *internal_default_instance();
}


void GetDataServiceMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetDataServiceMetadataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  _internal_metadata_.Clear();
}

bool GetDataServiceMetadataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetDataServiceMetadataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.data.DataServiceMetadata metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetDataServiceMetadataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetDataServiceMetadataResponse)
  return false;
#undef DO_
}

void GetDataServiceMetadataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetDataServiceMetadataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.DataServiceMetadata metadata = 1;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetDataServiceMetadataResponse)
}

::google::protobuf::uint8* GetDataServiceMetadataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetDataServiceMetadataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.DataServiceMetadata metadata = 1;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_metadata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetDataServiceMetadataResponse)
  return target;
}

size_t GetDataServiceMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetDataServiceMetadataResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.data.DataServiceMetadata metadata = 1;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDataServiceMetadataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetDataServiceMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDataServiceMetadataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDataServiceMetadataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetDataServiceMetadataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetDataServiceMetadataResponse)
    MergeFrom(*source);
  }
}

void GetDataServiceMetadataResponse::MergeFrom(const GetDataServiceMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetDataServiceMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_metadata()) {
    mutable_metadata()->::tensorflow::data::DataServiceMetadata::MergeFrom(from.metadata());
  }
}

void GetDataServiceMetadataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetDataServiceMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDataServiceMetadataResponse::CopyFrom(const GetDataServiceMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetDataServiceMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataServiceMetadataResponse::IsInitialized() const {
  return true;
}

void GetDataServiceMetadataResponse::Swap(GetDataServiceMetadataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDataServiceMetadataResponse::InternalSwap(GetDataServiceMetadataResponse* other) {
  using std::swap;
  swap(metadata_, other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDataServiceMetadataResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDataServiceConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDataServiceConfigRequest::GetDataServiceConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDataServiceConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetDataServiceConfigRequest)
}
GetDataServiceConfigRequest::GetDataServiceConfigRequest(const GetDataServiceConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetDataServiceConfigRequest)
}

void GetDataServiceConfigRequest::SharedCtor() {
}

GetDataServiceConfigRequest::~GetDataServiceConfigRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetDataServiceConfigRequest)
  SharedDtor();
}

void GetDataServiceConfigRequest::SharedDtor() {
}

void GetDataServiceConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDataServiceConfigRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDataServiceConfigRequest& GetDataServiceConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDataServiceConfigRequest.base);
  return *internal_default_instance();
}


void GetDataServiceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetDataServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetDataServiceConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetDataServiceConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetDataServiceConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetDataServiceConfigRequest)
  return false;
#undef DO_
}

void GetDataServiceConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetDataServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetDataServiceConfigRequest)
}

::google::protobuf::uint8* GetDataServiceConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetDataServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetDataServiceConfigRequest)
  return target;
}

size_t GetDataServiceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetDataServiceConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDataServiceConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetDataServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDataServiceConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDataServiceConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetDataServiceConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetDataServiceConfigRequest)
    MergeFrom(*source);
  }
}

void GetDataServiceConfigRequest::MergeFrom(const GetDataServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetDataServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetDataServiceConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetDataServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDataServiceConfigRequest::CopyFrom(const GetDataServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetDataServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataServiceConfigRequest::IsInitialized() const {
  return true;
}

void GetDataServiceConfigRequest::Swap(GetDataServiceConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDataServiceConfigRequest::InternalSwap(GetDataServiceConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDataServiceConfigRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDataServiceConfigResponse::InitAsDefaultInstance() {
  ::tensorflow::data::_GetDataServiceConfigResponse_default_instance_._instance.get_mutable()->config_ = const_cast< ::tensorflow::data::DataServiceConfig*>(
      ::tensorflow::data::DataServiceConfig::internal_default_instance());
}
void GetDataServiceConfigResponse::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDataServiceConfigResponse::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDataServiceConfigResponse::GetDataServiceConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDataServiceConfigResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetDataServiceConfigResponse)
}
GetDataServiceConfigResponse::GetDataServiceConfigResponse(const GetDataServiceConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::tensorflow::data::DataServiceConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetDataServiceConfigResponse)
}

void GetDataServiceConfigResponse::SharedCtor() {
  config_ = NULL;
}

GetDataServiceConfigResponse::~GetDataServiceConfigResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetDataServiceConfigResponse)
  SharedDtor();
}

void GetDataServiceConfigResponse::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
}

void GetDataServiceConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDataServiceConfigResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDataServiceConfigResponse& GetDataServiceConfigResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetDataServiceConfigResponse.base);
  return *internal_default_instance();
}


void GetDataServiceConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetDataServiceConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool GetDataServiceConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetDataServiceConfigResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.data.DataServiceConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetDataServiceConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetDataServiceConfigResponse)
  return false;
#undef DO_
}

void GetDataServiceConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetDataServiceConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.DataServiceConfig config = 1;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetDataServiceConfigResponse)
}

::google::protobuf::uint8* GetDataServiceConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetDataServiceConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.DataServiceConfig config = 1;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetDataServiceConfigResponse)
  return target;
}

size_t GetDataServiceConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetDataServiceConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.data.DataServiceConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDataServiceConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetDataServiceConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDataServiceConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDataServiceConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetDataServiceConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetDataServiceConfigResponse)
    MergeFrom(*source);
  }
}

void GetDataServiceConfigResponse::MergeFrom(const GetDataServiceConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetDataServiceConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::tensorflow::data::DataServiceConfig::MergeFrom(from.config());
  }
}

void GetDataServiceConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetDataServiceConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDataServiceConfigResponse::CopyFrom(const GetDataServiceConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetDataServiceConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataServiceConfigResponse::IsInitialized() const {
  return true;
}

void GetDataServiceConfigResponse::Swap(GetDataServiceConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDataServiceConfigResponse::InternalSwap(GetDataServiceConfigResponse* other) {
  using std::swap;
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDataServiceConfigResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOrCreateJobRequest::InitAsDefaultInstance() {
  ::tensorflow::data::_GetOrCreateJobRequest_default_instance_._instance.get_mutable()->processing_mode_def_ = const_cast< ::tensorflow::data::ProcessingModeDef*>(
      ::tensorflow::data::ProcessingModeDef::internal_default_instance());
  ::tensorflow::data::_GetOrCreateJobRequest_default_instance_._instance.get_mutable()->job_key_ = const_cast< ::tensorflow::data::JobKeyDef*>(
      ::tensorflow::data::JobKeyDef::internal_default_instance());
  ::tensorflow::data::_GetOrCreateJobRequest_default_instance_.num_consumers_ = GOOGLE_LONGLONG(0);
}
void GetOrCreateJobRequest::clear_processing_mode_def() {
  if (GetArenaNoVirtual() == NULL && processing_mode_def_ != NULL) {
    delete processing_mode_def_;
  }
  processing_mode_def_ = NULL;
}
void GetOrCreateJobRequest::clear_job_key() {
  if (GetArenaNoVirtual() == NULL && job_key_ != NULL) {
    delete job_key_;
  }
  job_key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrCreateJobRequest::kDatasetIdFieldNumber;
const int GetOrCreateJobRequest::kProcessingModeDefFieldNumber;
const int GetOrCreateJobRequest::kJobKeyFieldNumber;
const int GetOrCreateJobRequest::kNumConsumersFieldNumber;
const int GetOrCreateJobRequest::kTargetWorkersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrCreateJobRequest::GetOrCreateJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetOrCreateJobRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetOrCreateJobRequest)
}
GetOrCreateJobRequest::GetOrCreateJobRequest(const GetOrCreateJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_job_key()) {
    job_key_ = new ::tensorflow::data::JobKeyDef(*from.job_key_);
  } else {
    job_key_ = NULL;
  }
  if (from.has_processing_mode_def()) {
    processing_mode_def_ = new ::tensorflow::data::ProcessingModeDef(*from.processing_mode_def_);
  } else {
    processing_mode_def_ = NULL;
  }
  ::memcpy(&dataset_id_, &from.dataset_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_workers_) -
    reinterpret_cast<char*>(&dataset_id_)) + sizeof(target_workers_));
  clear_has_optional_num_consumers();
  switch (from.optional_num_consumers_case()) {
    case kNumConsumers: {
      set_num_consumers(from.num_consumers());
      break;
    }
    case OPTIONAL_NUM_CONSUMERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetOrCreateJobRequest)
}

void GetOrCreateJobRequest::SharedCtor() {
  ::memset(&job_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_workers_) -
      reinterpret_cast<char*>(&job_key_)) + sizeof(target_workers_));
  clear_has_optional_num_consumers();
}

GetOrCreateJobRequest::~GetOrCreateJobRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetOrCreateJobRequest)
  SharedDtor();
}

void GetOrCreateJobRequest::SharedDtor() {
  if (this != internal_default_instance()) delete job_key_;
  if (this != internal_default_instance()) delete processing_mode_def_;
  if (has_optional_num_consumers()) {
    clear_optional_num_consumers();
  }
}

void GetOrCreateJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetOrCreateJobRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrCreateJobRequest& GetOrCreateJobRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetOrCreateJobRequest.base);
  return *internal_default_instance();
}


void GetOrCreateJobRequest::clear_optional_num_consumers() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.data.GetOrCreateJobRequest)
  switch (optional_num_consumers_case()) {
    case kNumConsumers: {
      // No need to clear
      break;
    }
    case OPTIONAL_NUM_CONSUMERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIONAL_NUM_CONSUMERS_NOT_SET;
}


void GetOrCreateJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetOrCreateJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && job_key_ != NULL) {
    delete job_key_;
  }
  job_key_ = NULL;
  if (GetArenaNoVirtual() == NULL && processing_mode_def_ != NULL) {
    delete processing_mode_def_;
  }
  processing_mode_def_ = NULL;
  ::memset(&dataset_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_workers_) -
      reinterpret_cast<char*>(&dataset_id_)) + sizeof(target_workers_));
  clear_optional_num_consumers();
  _internal_metadata_.Clear();
}

bool GetOrCreateJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetOrCreateJobRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 dataset_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dataset_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.data.JobKeyDef job_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_consumers = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_optional_num_consumers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_num_consumers_.num_consumers_)));
          set_has_num_consumers();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.data.ProcessingModeDef processing_mode_def = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_processing_mode_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.data.TargetWorkers target_workers = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_target_workers(static_cast< ::tensorflow::data::TargetWorkers >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetOrCreateJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetOrCreateJobRequest)
  return false;
#undef DO_
}

void GetOrCreateJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetOrCreateJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dataset_id(), output);
  }

  // .tensorflow.data.JobKeyDef job_key = 5;
  if (this->has_job_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_job_key(), output);
  }

  // int64 num_consumers = 7;
  if (has_num_consumers()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->num_consumers(), output);
  }

  // .tensorflow.data.ProcessingModeDef processing_mode_def = 8;
  if (this->has_processing_mode_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_processing_mode_def(), output);
  }

  // .tensorflow.data.TargetWorkers target_workers = 9;
  if (this->target_workers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->target_workers(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetOrCreateJobRequest)
}

::google::protobuf::uint8* GetOrCreateJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetOrCreateJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dataset_id(), target);
  }

  // .tensorflow.data.JobKeyDef job_key = 5;
  if (this->has_job_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_job_key(), deterministic, target);
  }

  // int64 num_consumers = 7;
  if (has_num_consumers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->num_consumers(), target);
  }

  // .tensorflow.data.ProcessingModeDef processing_mode_def = 8;
  if (this->has_processing_mode_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_processing_mode_def(), deterministic, target);
  }

  // .tensorflow.data.TargetWorkers target_workers = 9;
  if (this->target_workers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->target_workers(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetOrCreateJobRequest)
  return target;
}

size_t GetOrCreateJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetOrCreateJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.data.JobKeyDef job_key = 5;
  if (this->has_job_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *job_key_);
  }

  // .tensorflow.data.ProcessingModeDef processing_mode_def = 8;
  if (this->has_processing_mode_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *processing_mode_def_);
  }

  // int64 dataset_id = 1;
  if (this->dataset_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dataset_id());
  }

  // .tensorflow.data.TargetWorkers target_workers = 9;
  if (this->target_workers() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->target_workers());
  }

  switch (optional_num_consumers_case()) {
    // int64 num_consumers = 7;
    case kNumConsumers: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->num_consumers());
      break;
    }
    case OPTIONAL_NUM_CONSUMERS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrCreateJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetOrCreateJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrCreateJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrCreateJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetOrCreateJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetOrCreateJobRequest)
    MergeFrom(*source);
  }
}

void GetOrCreateJobRequest::MergeFrom(const GetOrCreateJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetOrCreateJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job_key()) {
    mutable_job_key()->::tensorflow::data::JobKeyDef::MergeFrom(from.job_key());
  }
  if (from.has_processing_mode_def()) {
    mutable_processing_mode_def()->::tensorflow::data::ProcessingModeDef::MergeFrom(from.processing_mode_def());
  }
  if (from.dataset_id() != 0) {
    set_dataset_id(from.dataset_id());
  }
  if (from.target_workers() != 0) {
    set_target_workers(from.target_workers());
  }
  switch (from.optional_num_consumers_case()) {
    case kNumConsumers: {
      set_num_consumers(from.num_consumers());
      break;
    }
    case OPTIONAL_NUM_CONSUMERS_NOT_SET: {
      break;
    }
  }
}

void GetOrCreateJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetOrCreateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrCreateJobRequest::CopyFrom(const GetOrCreateJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetOrCreateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrCreateJobRequest::IsInitialized() const {
  return true;
}

void GetOrCreateJobRequest::Swap(GetOrCreateJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrCreateJobRequest::InternalSwap(GetOrCreateJobRequest* other) {
  using std::swap;
  swap(job_key_, other->job_key_);
  swap(processing_mode_def_, other->processing_mode_def_);
  swap(dataset_id_, other->dataset_id_);
  swap(target_workers_, other->target_workers_);
  swap(optional_num_consumers_, other->optional_num_consumers_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetOrCreateJobRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOrCreateJobResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrCreateJobResponse::kJobClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrCreateJobResponse::GetOrCreateJobResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetOrCreateJobResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetOrCreateJobResponse)
}
GetOrCreateJobResponse::GetOrCreateJobResponse(const GetOrCreateJobResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  job_client_id_ = from.job_client_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetOrCreateJobResponse)
}

void GetOrCreateJobResponse::SharedCtor() {
  job_client_id_ = GOOGLE_LONGLONG(0);
}

GetOrCreateJobResponse::~GetOrCreateJobResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetOrCreateJobResponse)
  SharedDtor();
}

void GetOrCreateJobResponse::SharedDtor() {
}

void GetOrCreateJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetOrCreateJobResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrCreateJobResponse& GetOrCreateJobResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetOrCreateJobResponse.base);
  return *internal_default_instance();
}


void GetOrCreateJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetOrCreateJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_client_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetOrCreateJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetOrCreateJobResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 job_client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &job_client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetOrCreateJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetOrCreateJobResponse)
  return false;
#undef DO_
}

void GetOrCreateJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetOrCreateJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->job_client_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetOrCreateJobResponse)
}

::google::protobuf::uint8* GetOrCreateJobResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetOrCreateJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->job_client_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetOrCreateJobResponse)
  return target;
}

size_t GetOrCreateJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetOrCreateJobResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->job_client_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrCreateJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetOrCreateJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrCreateJobResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrCreateJobResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetOrCreateJobResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetOrCreateJobResponse)
    MergeFrom(*source);
  }
}

void GetOrCreateJobResponse::MergeFrom(const GetOrCreateJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetOrCreateJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_client_id() != 0) {
    set_job_client_id(from.job_client_id());
  }
}

void GetOrCreateJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetOrCreateJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrCreateJobResponse::CopyFrom(const GetOrCreateJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetOrCreateJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrCreateJobResponse::IsInitialized() const {
  return true;
}

void GetOrCreateJobResponse::Swap(GetOrCreateJobResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrCreateJobResponse::InternalSwap(GetOrCreateJobResponse* other) {
  using std::swap;
  swap(job_client_id_, other->job_client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetOrCreateJobResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MaybeRemoveTaskRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaybeRemoveTaskRequest::kTaskIdFieldNumber;
const int MaybeRemoveTaskRequest::kConsumerIndexFieldNumber;
const int MaybeRemoveTaskRequest::kRoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaybeRemoveTaskRequest::MaybeRemoveTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_MaybeRemoveTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.MaybeRemoveTaskRequest)
}
MaybeRemoveTaskRequest::MaybeRemoveTaskRequest(const MaybeRemoveTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&task_id_, &from.task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&round_) -
    reinterpret_cast<char*>(&task_id_)) + sizeof(round_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.MaybeRemoveTaskRequest)
}

void MaybeRemoveTaskRequest::SharedCtor() {
  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&round_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(round_));
}

MaybeRemoveTaskRequest::~MaybeRemoveTaskRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.MaybeRemoveTaskRequest)
  SharedDtor();
}

void MaybeRemoveTaskRequest::SharedDtor() {
}

void MaybeRemoveTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MaybeRemoveTaskRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaybeRemoveTaskRequest& MaybeRemoveTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_MaybeRemoveTaskRequest.base);
  return *internal_default_instance();
}


void MaybeRemoveTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.MaybeRemoveTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&round_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(round_));
  _internal_metadata_.Clear();
}

bool MaybeRemoveTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.MaybeRemoveTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 consumer_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &consumer_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 round = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.MaybeRemoveTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.MaybeRemoveTaskRequest)
  return false;
#undef DO_
}

void MaybeRemoveTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.MaybeRemoveTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->task_id(), output);
  }

  // int64 consumer_index = 2;
  if (this->consumer_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->consumer_index(), output);
  }

  // int64 round = 3;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->round(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.MaybeRemoveTaskRequest)
}

::google::protobuf::uint8* MaybeRemoveTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.MaybeRemoveTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->task_id(), target);
  }

  // int64 consumer_index = 2;
  if (this->consumer_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->consumer_index(), target);
  }

  // int64 round = 3;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->round(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.MaybeRemoveTaskRequest)
  return target;
}

size_t MaybeRemoveTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.MaybeRemoveTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->task_id());
  }

  // int64 consumer_index = 2;
  if (this->consumer_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->consumer_index());
  }

  // int64 round = 3;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->round());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaybeRemoveTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.MaybeRemoveTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MaybeRemoveTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaybeRemoveTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.MaybeRemoveTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.MaybeRemoveTaskRequest)
    MergeFrom(*source);
  }
}

void MaybeRemoveTaskRequest::MergeFrom(const MaybeRemoveTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.MaybeRemoveTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
  if (from.consumer_index() != 0) {
    set_consumer_index(from.consumer_index());
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
}

void MaybeRemoveTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.MaybeRemoveTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaybeRemoveTaskRequest::CopyFrom(const MaybeRemoveTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.MaybeRemoveTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaybeRemoveTaskRequest::IsInitialized() const {
  return true;
}

void MaybeRemoveTaskRequest::Swap(MaybeRemoveTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaybeRemoveTaskRequest::InternalSwap(MaybeRemoveTaskRequest* other) {
  using std::swap;
  swap(task_id_, other->task_id_);
  swap(consumer_index_, other->consumer_index_);
  swap(round_, other->round_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MaybeRemoveTaskRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MaybeRemoveTaskResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaybeRemoveTaskResponse::kRemovedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaybeRemoveTaskResponse::MaybeRemoveTaskResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_MaybeRemoveTaskResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.MaybeRemoveTaskResponse)
}
MaybeRemoveTaskResponse::MaybeRemoveTaskResponse(const MaybeRemoveTaskResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  removed_ = from.removed_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.MaybeRemoveTaskResponse)
}

void MaybeRemoveTaskResponse::SharedCtor() {
  removed_ = false;
}

MaybeRemoveTaskResponse::~MaybeRemoveTaskResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.MaybeRemoveTaskResponse)
  SharedDtor();
}

void MaybeRemoveTaskResponse::SharedDtor() {
}

void MaybeRemoveTaskResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MaybeRemoveTaskResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaybeRemoveTaskResponse& MaybeRemoveTaskResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_MaybeRemoveTaskResponse.base);
  return *internal_default_instance();
}


void MaybeRemoveTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.MaybeRemoveTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  removed_ = false;
  _internal_metadata_.Clear();
}

bool MaybeRemoveTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.MaybeRemoveTaskResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool removed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.MaybeRemoveTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.MaybeRemoveTaskResponse)
  return false;
#undef DO_
}

void MaybeRemoveTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.MaybeRemoveTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool removed = 1;
  if (this->removed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->removed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.MaybeRemoveTaskResponse)
}

::google::protobuf::uint8* MaybeRemoveTaskResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.MaybeRemoveTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool removed = 1;
  if (this->removed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->removed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.MaybeRemoveTaskResponse)
  return target;
}

size_t MaybeRemoveTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.MaybeRemoveTaskResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool removed = 1;
  if (this->removed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaybeRemoveTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.MaybeRemoveTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MaybeRemoveTaskResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaybeRemoveTaskResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.MaybeRemoveTaskResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.MaybeRemoveTaskResponse)
    MergeFrom(*source);
  }
}

void MaybeRemoveTaskResponse::MergeFrom(const MaybeRemoveTaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.MaybeRemoveTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.removed() != 0) {
    set_removed(from.removed());
  }
}

void MaybeRemoveTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.MaybeRemoveTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaybeRemoveTaskResponse::CopyFrom(const MaybeRemoveTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.MaybeRemoveTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaybeRemoveTaskResponse::IsInitialized() const {
  return true;
}

void MaybeRemoveTaskResponse::Swap(MaybeRemoveTaskResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaybeRemoveTaskResponse::InternalSwap(MaybeRemoveTaskResponse* other) {
  using std::swap;
  swap(removed_, other->removed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MaybeRemoveTaskResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReleaseJobClientRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReleaseJobClientRequest::kJobClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReleaseJobClientRequest::ReleaseJobClientRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_ReleaseJobClientRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.ReleaseJobClientRequest)
}
ReleaseJobClientRequest::ReleaseJobClientRequest(const ReleaseJobClientRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  job_client_id_ = from.job_client_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.ReleaseJobClientRequest)
}

void ReleaseJobClientRequest::SharedCtor() {
  job_client_id_ = GOOGLE_LONGLONG(0);
}

ReleaseJobClientRequest::~ReleaseJobClientRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.ReleaseJobClientRequest)
  SharedDtor();
}

void ReleaseJobClientRequest::SharedDtor() {
}

void ReleaseJobClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReleaseJobClientRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReleaseJobClientRequest& ReleaseJobClientRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_ReleaseJobClientRequest.base);
  return *internal_default_instance();
}


void ReleaseJobClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.ReleaseJobClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_client_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ReleaseJobClientRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.ReleaseJobClientRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 job_client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &job_client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.ReleaseJobClientRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.ReleaseJobClientRequest)
  return false;
#undef DO_
}

void ReleaseJobClientRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.ReleaseJobClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->job_client_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.ReleaseJobClientRequest)
}

::google::protobuf::uint8* ReleaseJobClientRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.ReleaseJobClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->job_client_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.ReleaseJobClientRequest)
  return target;
}

size_t ReleaseJobClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.ReleaseJobClientRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->job_client_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseJobClientRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.ReleaseJobClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseJobClientRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReleaseJobClientRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.ReleaseJobClientRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.ReleaseJobClientRequest)
    MergeFrom(*source);
  }
}

void ReleaseJobClientRequest::MergeFrom(const ReleaseJobClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.ReleaseJobClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_client_id() != 0) {
    set_job_client_id(from.job_client_id());
  }
}

void ReleaseJobClientRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.ReleaseJobClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseJobClientRequest::CopyFrom(const ReleaseJobClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.ReleaseJobClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseJobClientRequest::IsInitialized() const {
  return true;
}

void ReleaseJobClientRequest::Swap(ReleaseJobClientRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReleaseJobClientRequest::InternalSwap(ReleaseJobClientRequest* other) {
  using std::swap;
  swap(job_client_id_, other->job_client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReleaseJobClientRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReleaseJobClientResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReleaseJobClientResponse::ReleaseJobClientResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_ReleaseJobClientResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.ReleaseJobClientResponse)
}
ReleaseJobClientResponse::ReleaseJobClientResponse(const ReleaseJobClientResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.ReleaseJobClientResponse)
}

void ReleaseJobClientResponse::SharedCtor() {
}

ReleaseJobClientResponse::~ReleaseJobClientResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.ReleaseJobClientResponse)
  SharedDtor();
}

void ReleaseJobClientResponse::SharedDtor() {
}

void ReleaseJobClientResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReleaseJobClientResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReleaseJobClientResponse& ReleaseJobClientResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_ReleaseJobClientResponse.base);
  return *internal_default_instance();
}


void ReleaseJobClientResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.ReleaseJobClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReleaseJobClientResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.ReleaseJobClientResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.ReleaseJobClientResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.ReleaseJobClientResponse)
  return false;
#undef DO_
}

void ReleaseJobClientResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.ReleaseJobClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.ReleaseJobClientResponse)
}

::google::protobuf::uint8* ReleaseJobClientResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.ReleaseJobClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.ReleaseJobClientResponse)
  return target;
}

size_t ReleaseJobClientResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.ReleaseJobClientResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseJobClientResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.ReleaseJobClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseJobClientResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReleaseJobClientResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.ReleaseJobClientResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.ReleaseJobClientResponse)
    MergeFrom(*source);
  }
}

void ReleaseJobClientResponse::MergeFrom(const ReleaseJobClientResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.ReleaseJobClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReleaseJobClientResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.ReleaseJobClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseJobClientResponse::CopyFrom(const ReleaseJobClientResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.ReleaseJobClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseJobClientResponse::IsInitialized() const {
  return true;
}

void ReleaseJobClientResponse::Swap(ReleaseJobClientResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReleaseJobClientResponse::InternalSwap(ReleaseJobClientResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReleaseJobClientResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientHeartbeatRequest::InitAsDefaultInstance() {
  ::tensorflow::data::_ClientHeartbeatRequest_default_instance_.current_round_ = GOOGLE_LONGLONG(0);
  ::tensorflow::data::_ClientHeartbeatRequest_default_instance_.blocked_round_ = GOOGLE_LONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientHeartbeatRequest::kJobClientIdFieldNumber;
const int ClientHeartbeatRequest::kCurrentRoundFieldNumber;
const int ClientHeartbeatRequest::kBlockedRoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientHeartbeatRequest::ClientHeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_ClientHeartbeatRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.ClientHeartbeatRequest)
}
ClientHeartbeatRequest::ClientHeartbeatRequest(const ClientHeartbeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  job_client_id_ = from.job_client_id_;
  clear_has_optional_current_round();
  switch (from.optional_current_round_case()) {
    case kCurrentRound: {
      set_current_round(from.current_round());
      break;
    }
    case OPTIONAL_CURRENT_ROUND_NOT_SET: {
      break;
    }
  }
  clear_has_optional_blocked_round();
  switch (from.optional_blocked_round_case()) {
    case kBlockedRound: {
      set_blocked_round(from.blocked_round());
      break;
    }
    case OPTIONAL_BLOCKED_ROUND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.ClientHeartbeatRequest)
}

void ClientHeartbeatRequest::SharedCtor() {
  job_client_id_ = GOOGLE_LONGLONG(0);
  clear_has_optional_current_round();
  clear_has_optional_blocked_round();
}

ClientHeartbeatRequest::~ClientHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.ClientHeartbeatRequest)
  SharedDtor();
}

void ClientHeartbeatRequest::SharedDtor() {
  if (has_optional_current_round()) {
    clear_optional_current_round();
  }
  if (has_optional_blocked_round()) {
    clear_optional_blocked_round();
  }
}

void ClientHeartbeatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientHeartbeatRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientHeartbeatRequest& ClientHeartbeatRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_ClientHeartbeatRequest.base);
  return *internal_default_instance();
}


void ClientHeartbeatRequest::clear_optional_current_round() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.data.ClientHeartbeatRequest)
  switch (optional_current_round_case()) {
    case kCurrentRound: {
      // No need to clear
      break;
    }
    case OPTIONAL_CURRENT_ROUND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIONAL_CURRENT_ROUND_NOT_SET;
}

void ClientHeartbeatRequest::clear_optional_blocked_round() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.data.ClientHeartbeatRequest)
  switch (optional_blocked_round_case()) {
    case kBlockedRound: {
      // No need to clear
      break;
    }
    case OPTIONAL_BLOCKED_ROUND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = OPTIONAL_BLOCKED_ROUND_NOT_SET;
}


void ClientHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.ClientHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_client_id_ = GOOGLE_LONGLONG(0);
  clear_optional_current_round();
  clear_optional_blocked_round();
  _internal_metadata_.Clear();
}

bool ClientHeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.ClientHeartbeatRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 job_client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &job_client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 current_round = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_optional_current_round();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_current_round_.current_round_)));
          set_has_current_round();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 blocked_round = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_optional_blocked_round();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_blocked_round_.blocked_round_)));
          set_has_blocked_round();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.ClientHeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.ClientHeartbeatRequest)
  return false;
#undef DO_
}

void ClientHeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.ClientHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->job_client_id(), output);
  }

  // int64 current_round = 2;
  if (has_current_round()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->current_round(), output);
  }

  // int64 blocked_round = 4;
  if (has_blocked_round()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->blocked_round(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.ClientHeartbeatRequest)
}

::google::protobuf::uint8* ClientHeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.ClientHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->job_client_id(), target);
  }

  // int64 current_round = 2;
  if (has_current_round()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->current_round(), target);
  }

  // int64 blocked_round = 4;
  if (has_blocked_round()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->blocked_round(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.ClientHeartbeatRequest)
  return target;
}

size_t ClientHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.ClientHeartbeatRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 job_client_id = 1;
  if (this->job_client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->job_client_id());
  }

  switch (optional_current_round_case()) {
    // int64 current_round = 2;
    case kCurrentRound: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->current_round());
      break;
    }
    case OPTIONAL_CURRENT_ROUND_NOT_SET: {
      break;
    }
  }
  switch (optional_blocked_round_case()) {
    // int64 blocked_round = 4;
    case kBlockedRound: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->blocked_round());
      break;
    }
    case OPTIONAL_BLOCKED_ROUND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientHeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.ClientHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientHeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientHeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.ClientHeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.ClientHeartbeatRequest)
    MergeFrom(*source);
  }
}

void ClientHeartbeatRequest::MergeFrom(const ClientHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.ClientHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_client_id() != 0) {
    set_job_client_id(from.job_client_id());
  }
  switch (from.optional_current_round_case()) {
    case kCurrentRound: {
      set_current_round(from.current_round());
      break;
    }
    case OPTIONAL_CURRENT_ROUND_NOT_SET: {
      break;
    }
  }
  switch (from.optional_blocked_round_case()) {
    case kBlockedRound: {
      set_blocked_round(from.blocked_round());
      break;
    }
    case OPTIONAL_BLOCKED_ROUND_NOT_SET: {
      break;
    }
  }
}

void ClientHeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.ClientHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientHeartbeatRequest::CopyFrom(const ClientHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.ClientHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientHeartbeatRequest::IsInitialized() const {
  return true;
}

void ClientHeartbeatRequest::Swap(ClientHeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientHeartbeatRequest::InternalSwap(ClientHeartbeatRequest* other) {
  using std::swap;
  swap(job_client_id_, other->job_client_id_);
  swap(optional_current_round_, other->optional_current_round_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(optional_blocked_round_, other->optional_blocked_round_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientHeartbeatRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientHeartbeatResponse::InitAsDefaultInstance() {
  ::tensorflow::data::_ClientHeartbeatResponse_default_instance_.block_round_ = GOOGLE_LONGLONG(0);
}
void ClientHeartbeatResponse::clear_task_info() {
  task_info_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientHeartbeatResponse::kTaskInfoFieldNumber;
const int ClientHeartbeatResponse::kBlockRoundFieldNumber;
const int ClientHeartbeatResponse::kJobFinishedFieldNumber;
const int ClientHeartbeatResponse::kDeploymentModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientHeartbeatResponse::ClientHeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_ClientHeartbeatResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.ClientHeartbeatResponse)
}
ClientHeartbeatResponse::ClientHeartbeatResponse(const ClientHeartbeatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      task_info_(from.task_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&job_finished_, &from.job_finished_,
    static_cast<size_t>(reinterpret_cast<char*>(&deployment_mode_) -
    reinterpret_cast<char*>(&job_finished_)) + sizeof(deployment_mode_));
  clear_has_optional_block_round();
  switch (from.optional_block_round_case()) {
    case kBlockRound: {
      set_block_round(from.block_round());
      break;
    }
    case OPTIONAL_BLOCK_ROUND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.ClientHeartbeatResponse)
}

void ClientHeartbeatResponse::SharedCtor() {
  ::memset(&job_finished_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deployment_mode_) -
      reinterpret_cast<char*>(&job_finished_)) + sizeof(deployment_mode_));
  clear_has_optional_block_round();
}

ClientHeartbeatResponse::~ClientHeartbeatResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.ClientHeartbeatResponse)
  SharedDtor();
}

void ClientHeartbeatResponse::SharedDtor() {
  if (has_optional_block_round()) {
    clear_optional_block_round();
  }
}

void ClientHeartbeatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientHeartbeatResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientHeartbeatResponse& ClientHeartbeatResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_ClientHeartbeatResponse.base);
  return *internal_default_instance();
}


void ClientHeartbeatResponse::clear_optional_block_round() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.data.ClientHeartbeatResponse)
  switch (optional_block_round_case()) {
    case kBlockRound: {
      // No need to clear
      break;
    }
    case OPTIONAL_BLOCK_ROUND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIONAL_BLOCK_ROUND_NOT_SET;
}


void ClientHeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.ClientHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_info_.Clear();
  ::memset(&job_finished_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deployment_mode_) -
      reinterpret_cast<char*>(&job_finished_)) + sizeof(deployment_mode_));
  clear_optional_block_round();
  _internal_metadata_.Clear();
}

bool ClientHeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.ClientHeartbeatResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.data.TaskInfo task_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool job_finished = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &job_finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 block_round = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_optional_block_round();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_block_round_.block_round_)));
          set_has_block_round();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.data.DeploymentMode deployment_mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_deployment_mode(static_cast< ::tensorflow::data::DeploymentMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.ClientHeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.ClientHeartbeatResponse)
  return false;
#undef DO_
}

void ClientHeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.ClientHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.data.TaskInfo task_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->task_info(static_cast<int>(i)),
      output);
  }

  // bool job_finished = 2;
  if (this->job_finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->job_finished(), output);
  }

  // int64 block_round = 3;
  if (has_block_round()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->block_round(), output);
  }

  // .tensorflow.data.DeploymentMode deployment_mode = 4;
  if (this->deployment_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->deployment_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.ClientHeartbeatResponse)
}

::google::protobuf::uint8* ClientHeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.ClientHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.data.TaskInfo task_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->task_info(static_cast<int>(i)), deterministic, target);
  }

  // bool job_finished = 2;
  if (this->job_finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->job_finished(), target);
  }

  // int64 block_round = 3;
  if (has_block_round()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->block_round(), target);
  }

  // .tensorflow.data.DeploymentMode deployment_mode = 4;
  if (this->deployment_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->deployment_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.ClientHeartbeatResponse)
  return target;
}

size_t ClientHeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.ClientHeartbeatResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.data.TaskInfo task_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->task_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->task_info(static_cast<int>(i)));
    }
  }

  // bool job_finished = 2;
  if (this->job_finished() != 0) {
    total_size += 1 + 1;
  }

  // .tensorflow.data.DeploymentMode deployment_mode = 4;
  if (this->deployment_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deployment_mode());
  }

  switch (optional_block_round_case()) {
    // int64 block_round = 3;
    case kBlockRound: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->block_round());
      break;
    }
    case OPTIONAL_BLOCK_ROUND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientHeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.ClientHeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientHeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientHeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.ClientHeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.ClientHeartbeatResponse)
    MergeFrom(*source);
  }
}

void ClientHeartbeatResponse::MergeFrom(const ClientHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.ClientHeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  task_info_.MergeFrom(from.task_info_);
  if (from.job_finished() != 0) {
    set_job_finished(from.job_finished());
  }
  if (from.deployment_mode() != 0) {
    set_deployment_mode(from.deployment_mode());
  }
  switch (from.optional_block_round_case()) {
    case kBlockRound: {
      set_block_round(from.block_round());
      break;
    }
    case OPTIONAL_BLOCK_ROUND_NOT_SET: {
      break;
    }
  }
}

void ClientHeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.ClientHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientHeartbeatResponse::CopyFrom(const ClientHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.ClientHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientHeartbeatResponse::IsInitialized() const {
  return true;
}

void ClientHeartbeatResponse::Swap(ClientHeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientHeartbeatResponse::InternalSwap(ClientHeartbeatResponse* other) {
  using std::swap;
  CastToBase(&task_info_)->InternalSwap(CastToBase(&other->task_info_));
  swap(job_finished_, other->job_finished_);
  swap(deployment_mode_, other->deployment_mode_);
  swap(optional_block_round_, other->optional_block_round_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientHeartbeatResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerInfo::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerInfo::WorkerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.WorkerInfo)
}
WorkerInfo::WorkerInfo(const WorkerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.WorkerInfo)
}

void WorkerInfo::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WorkerInfo::~WorkerInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.data.WorkerInfo)
  SharedDtor();
}

void WorkerInfo::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorkerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkerInfo::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkerInfo& WorkerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_WorkerInfo.base);
  return *internal_default_instance();
}


void WorkerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.WorkerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WorkerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.WorkerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.WorkerInfo.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.WorkerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.WorkerInfo)
  return false;
#undef DO_
}

void WorkerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.WorkerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerInfo.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.WorkerInfo)
}

::google::protobuf::uint8* WorkerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.WorkerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.WorkerInfo.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.WorkerInfo)
  return target;
}

size_t WorkerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.WorkerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.WorkerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.WorkerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.WorkerInfo)
    MergeFrom(*source);
  }
}

void WorkerInfo::MergeFrom(const WorkerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.WorkerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void WorkerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.WorkerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerInfo::CopyFrom(const WorkerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.WorkerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerInfo::IsInitialized() const {
  return true;
}

void WorkerInfo::Swap(WorkerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerInfo::InternalSwap(WorkerInfo* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkerInfo::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetWorkersRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWorkersRequest::GetWorkersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetWorkersRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetWorkersRequest)
}
GetWorkersRequest::GetWorkersRequest(const GetWorkersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetWorkersRequest)
}

void GetWorkersRequest::SharedCtor() {
}

GetWorkersRequest::~GetWorkersRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetWorkersRequest)
  SharedDtor();
}

void GetWorkersRequest::SharedDtor() {
}

void GetWorkersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetWorkersRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWorkersRequest& GetWorkersRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetWorkersRequest.base);
  return *internal_default_instance();
}


void GetWorkersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetWorkersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetWorkersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetWorkersRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetWorkersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetWorkersRequest)
  return false;
#undef DO_
}

void GetWorkersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetWorkersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetWorkersRequest)
}

::google::protobuf::uint8* GetWorkersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetWorkersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetWorkersRequest)
  return target;
}

size_t GetWorkersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetWorkersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetWorkersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWorkersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetWorkersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetWorkersRequest)
    MergeFrom(*source);
  }
}

void GetWorkersRequest::MergeFrom(const GetWorkersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetWorkersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetWorkersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetWorkersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkersRequest::CopyFrom(const GetWorkersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetWorkersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkersRequest::IsInitialized() const {
  return true;
}

void GetWorkersRequest::Swap(GetWorkersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWorkersRequest::InternalSwap(GetWorkersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetWorkersRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetWorkersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetWorkersResponse::kWorkersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWorkersResponse::GetWorkersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetWorkersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.GetWorkersResponse)
}
GetWorkersResponse::GetWorkersResponse(const GetWorkersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      workers_(from.workers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.GetWorkersResponse)
}

void GetWorkersResponse::SharedCtor() {
}

GetWorkersResponse::~GetWorkersResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.data.GetWorkersResponse)
  SharedDtor();
}

void GetWorkersResponse::SharedDtor() {
}

void GetWorkersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetWorkersResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWorkersResponse& GetWorkersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::scc_info_GetWorkersResponse.base);
  return *internal_default_instance();
}


void GetWorkersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.GetWorkersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workers_.Clear();
  _internal_metadata_.Clear();
}

bool GetWorkersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.GetWorkersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.data.WorkerInfo workers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.GetWorkersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.GetWorkersResponse)
  return false;
#undef DO_
}

void GetWorkersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.GetWorkersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.data.WorkerInfo workers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->workers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.GetWorkersResponse)
}

::google::protobuf::uint8* GetWorkersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.GetWorkersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.data.WorkerInfo workers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->workers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.GetWorkersResponse)
  return target;
}

size_t GetWorkersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.GetWorkersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.data.WorkerInfo workers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->workers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.GetWorkersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWorkersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.GetWorkersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.GetWorkersResponse)
    MergeFrom(*source);
  }
}

void GetWorkersResponse::MergeFrom(const GetWorkersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.GetWorkersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workers_.MergeFrom(from.workers_);
}

void GetWorkersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.GetWorkersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkersResponse::CopyFrom(const GetWorkersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.GetWorkersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkersResponse::IsInitialized() const {
  return true;
}

void GetWorkersResponse::Swap(GetWorkersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWorkersResponse::InternalSwap(GetWorkersResponse* other) {
  using std::swap;
  CastToBase(&workers_)->InternalSwap(CastToBase(&other->workers_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetWorkersResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fdata_2fservice_2fdispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::TaskProgress* Arena::CreateMaybeMessage< ::tensorflow::data::TaskProgress >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::TaskProgress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::WorkerHeartbeatRequest* Arena::CreateMaybeMessage< ::tensorflow::data::WorkerHeartbeatRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::WorkerHeartbeatRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::WorkerHeartbeatResponse* Arena::CreateMaybeMessage< ::tensorflow::data::WorkerHeartbeatResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::WorkerHeartbeatResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::WorkerUpdateRequest* Arena::CreateMaybeMessage< ::tensorflow::data::WorkerUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::WorkerUpdateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::WorkerUpdateResponse* Arena::CreateMaybeMessage< ::tensorflow::data::WorkerUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::WorkerUpdateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetDatasetDefRequest* Arena::CreateMaybeMessage< ::tensorflow::data::GetDatasetDefRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetDatasetDefRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetDatasetDefResponse* Arena::CreateMaybeMessage< ::tensorflow::data::GetDatasetDefResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetDatasetDefResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetSplitRequest* Arena::CreateMaybeMessage< ::tensorflow::data::GetSplitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetSplitRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetSplitResponse* Arena::CreateMaybeMessage< ::tensorflow::data::GetSplitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetSplitResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetVersionRequest* Arena::CreateMaybeMessage< ::tensorflow::data::GetVersionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetVersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetVersionResponse* Arena::CreateMaybeMessage< ::tensorflow::data::GetVersionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetVersionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetOrRegisterDatasetRequest* Arena::CreateMaybeMessage< ::tensorflow::data::GetOrRegisterDatasetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetOrRegisterDatasetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetOrRegisterDatasetResponse* Arena::CreateMaybeMessage< ::tensorflow::data::GetOrRegisterDatasetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetOrRegisterDatasetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetDataServiceMetadataRequest* Arena::CreateMaybeMessage< ::tensorflow::data::GetDataServiceMetadataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetDataServiceMetadataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetDataServiceMetadataResponse* Arena::CreateMaybeMessage< ::tensorflow::data::GetDataServiceMetadataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetDataServiceMetadataResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetDataServiceConfigRequest* Arena::CreateMaybeMessage< ::tensorflow::data::GetDataServiceConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetDataServiceConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetDataServiceConfigResponse* Arena::CreateMaybeMessage< ::tensorflow::data::GetDataServiceConfigResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetDataServiceConfigResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetOrCreateJobRequest* Arena::CreateMaybeMessage< ::tensorflow::data::GetOrCreateJobRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetOrCreateJobRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetOrCreateJobResponse* Arena::CreateMaybeMessage< ::tensorflow::data::GetOrCreateJobResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetOrCreateJobResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::MaybeRemoveTaskRequest* Arena::CreateMaybeMessage< ::tensorflow::data::MaybeRemoveTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::MaybeRemoveTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::MaybeRemoveTaskResponse* Arena::CreateMaybeMessage< ::tensorflow::data::MaybeRemoveTaskResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::MaybeRemoveTaskResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::ReleaseJobClientRequest* Arena::CreateMaybeMessage< ::tensorflow::data::ReleaseJobClientRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::ReleaseJobClientRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::ReleaseJobClientResponse* Arena::CreateMaybeMessage< ::tensorflow::data::ReleaseJobClientResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::ReleaseJobClientResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::ClientHeartbeatRequest* Arena::CreateMaybeMessage< ::tensorflow::data::ClientHeartbeatRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::ClientHeartbeatRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::ClientHeartbeatResponse* Arena::CreateMaybeMessage< ::tensorflow::data::ClientHeartbeatResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::ClientHeartbeatResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::WorkerInfo* Arena::CreateMaybeMessage< ::tensorflow::data::WorkerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::WorkerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetWorkersRequest* Arena::CreateMaybeMessage< ::tensorflow::data::GetWorkersRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetWorkersRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::GetWorkersResponse* Arena::CreateMaybeMessage< ::tensorflow::data::GetWorkersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::GetWorkersResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
