// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/kernel_stats.proto

#include "tensorflow/core/profiler/protobuf/kernel_stats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KernelReport;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto
namespace tensorflow {
namespace profiler {
class KernelReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KernelReport>
      _instance;
} _KernelReport_default_instance_;
class KernelStatsDbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KernelStatsDb>
      _instance;
} _KernelStatsDb_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto {
static void InitDefaultsKernelReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_KernelReport_default_instance_;
    new (ptr) ::tensorflow::profiler::KernelReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::KernelReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KernelReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKernelReport}, {}};

static void InitDefaultsKernelStatsDb() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_KernelStatsDb_default_instance_;
    new (ptr) ::tensorflow::profiler::KernelStatsDb();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::KernelStatsDb::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KernelStatsDb =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKernelStatsDb}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::scc_info_KernelReport.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_KernelReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KernelStatsDb.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, registers_per_thread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, static_shmem_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, dynamic_shmem_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, block_dim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, grid_dim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, total_duration_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, min_duration_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, max_duration_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, is_kernel_using_tensor_core_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, is_op_tensor_core_eligible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, op_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, occurrences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelReport, occupancy_pct_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelStatsDb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::KernelStatsDb, reports_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::KernelReport)},
  { 19, -1, sizeof(::tensorflow::profiler::KernelStatsDb)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_KernelReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_KernelStatsDb_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/kernel_stats.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n4tensorflow/core/profiler/protobuf/kern"
      "el_stats.proto\022\023tensorflow.profiler\"\353\002\n\014"
      "KernelReport\022\014\n\004name\030\001 \001(\t\022\034\n\024registers_"
      "per_thread\030\002 \001(\r\022\032\n\022static_shmem_bytes\030\003"
      " \001(\r\022\033\n\023dynamic_shmem_bytes\030\004 \001(\r\022\021\n\tblo"
      "ck_dim\030\005 \003(\r\022\020\n\010grid_dim\030\006 \003(\r\022\031\n\021total_"
      "duration_ns\030\007 \001(\004\022\027\n\017min_duration_ns\030\010 \001"
      "(\004\022\027\n\017max_duration_ns\030\t \001(\004\022#\n\033is_kernel"
      "_using_tensor_core\030\n \001(\010\022\"\n\032is_op_tensor"
      "_core_eligible\030\013 \001(\010\022\017\n\007op_name\030\014 \001(\t\022\023\n"
      "\013occurrences\030\r \001(\r\022\025\n\roccupancy_pct\030\016 \001("
      "\002\"C\n\rKernelStatsDb\0222\n\007reports\030\001 \003(\0132!.te"
      "nsorflow.profiler.KernelReportb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 518);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/kernel_stats.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto
namespace tensorflow {
namespace profiler {

// ===================================================================

void KernelReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KernelReport::kNameFieldNumber;
const int KernelReport::kRegistersPerThreadFieldNumber;
const int KernelReport::kStaticShmemBytesFieldNumber;
const int KernelReport::kDynamicShmemBytesFieldNumber;
const int KernelReport::kBlockDimFieldNumber;
const int KernelReport::kGridDimFieldNumber;
const int KernelReport::kTotalDurationNsFieldNumber;
const int KernelReport::kMinDurationNsFieldNumber;
const int KernelReport::kMaxDurationNsFieldNumber;
const int KernelReport::kIsKernelUsingTensorCoreFieldNumber;
const int KernelReport::kIsOpTensorCoreEligibleFieldNumber;
const int KernelReport::kOpNameFieldNumber;
const int KernelReport::kOccurrencesFieldNumber;
const int KernelReport::kOccupancyPctFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KernelReport::KernelReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::scc_info_KernelReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.KernelReport)
}
KernelReport::KernelReport(const KernelReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      block_dim_(from.block_dim_),
      grid_dim_(from.grid_dim_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_name().size() > 0) {
    op_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_name_);
  }
  ::memcpy(&registers_per_thread_, &from.registers_per_thread_,
    static_cast<size_t>(reinterpret_cast<char*>(&occupancy_pct_) -
    reinterpret_cast<char*>(&registers_per_thread_)) + sizeof(occupancy_pct_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.KernelReport)
}

void KernelReport::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&registers_per_thread_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&occupancy_pct_) -
      reinterpret_cast<char*>(&registers_per_thread_)) + sizeof(occupancy_pct_));
}

KernelReport::~KernelReport() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.KernelReport)
  SharedDtor();
}

void KernelReport::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KernelReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KernelReport::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KernelReport& KernelReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::scc_info_KernelReport.base);
  return *internal_default_instance();
}


void KernelReport::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.KernelReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_dim_.Clear();
  grid_dim_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&registers_per_thread_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&occupancy_pct_) -
      reinterpret_cast<char*>(&registers_per_thread_)) + sizeof(occupancy_pct_));
  _internal_metadata_.Clear();
}

bool KernelReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.KernelReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.KernelReport.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 registers_per_thread = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &registers_per_thread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 static_shmem_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &static_shmem_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dynamic_shmem_bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dynamic_shmem_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 block_dim = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_block_dim())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_block_dim())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 grid_dim = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_grid_dim())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_grid_dim())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_duration_ns = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_duration_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 min_duration_ns = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &min_duration_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 max_duration_ns = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_duration_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_kernel_using_tensor_core = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_kernel_using_tensor_core_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_op_tensor_core_eligible = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_op_tensor_core_eligible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string op_name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_name().data(), static_cast<int>(this->op_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.KernelReport.op_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 occurrences = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &occurrences_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float occupancy_pct = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &occupancy_pct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.KernelReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.KernelReport)
  return false;
#undef DO_
}

void KernelReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.KernelReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.KernelReport.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint32 registers_per_thread = 2;
  if (this->registers_per_thread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->registers_per_thread(), output);
  }

  // uint32 static_shmem_bytes = 3;
  if (this->static_shmem_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->static_shmem_bytes(), output);
  }

  // uint32 dynamic_shmem_bytes = 4;
  if (this->dynamic_shmem_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dynamic_shmem_bytes(), output);
  }

  // repeated uint32 block_dim = 5;
  if (this->block_dim_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _block_dim_cached_byte_size_));
  }
  for (int i = 0, n = this->block_dim_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->block_dim(i), output);
  }

  // repeated uint32 grid_dim = 6;
  if (this->grid_dim_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _grid_dim_cached_byte_size_));
  }
  for (int i = 0, n = this->grid_dim_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->grid_dim(i), output);
  }

  // uint64 total_duration_ns = 7;
  if (this->total_duration_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->total_duration_ns(), output);
  }

  // uint64 min_duration_ns = 8;
  if (this->min_duration_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->min_duration_ns(), output);
  }

  // uint64 max_duration_ns = 9;
  if (this->max_duration_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->max_duration_ns(), output);
  }

  // bool is_kernel_using_tensor_core = 10;
  if (this->is_kernel_using_tensor_core() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_kernel_using_tensor_core(), output);
  }

  // bool is_op_tensor_core_eligible = 11;
  if (this->is_op_tensor_core_eligible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_op_tensor_core_eligible(), output);
  }

  // string op_name = 12;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.KernelReport.op_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->op_name(), output);
  }

  // uint32 occurrences = 13;
  if (this->occurrences() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->occurrences(), output);
  }

  // float occupancy_pct = 14;
  if (this->occupancy_pct() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->occupancy_pct(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.KernelReport)
}

::google::protobuf::uint8* KernelReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.KernelReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.KernelReport.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint32 registers_per_thread = 2;
  if (this->registers_per_thread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->registers_per_thread(), target);
  }

  // uint32 static_shmem_bytes = 3;
  if (this->static_shmem_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->static_shmem_bytes(), target);
  }

  // uint32 dynamic_shmem_bytes = 4;
  if (this->dynamic_shmem_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dynamic_shmem_bytes(), target);
  }

  // repeated uint32 block_dim = 5;
  if (this->block_dim_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _block_dim_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->block_dim_, target);
  }

  // repeated uint32 grid_dim = 6;
  if (this->grid_dim_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _grid_dim_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->grid_dim_, target);
  }

  // uint64 total_duration_ns = 7;
  if (this->total_duration_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->total_duration_ns(), target);
  }

  // uint64 min_duration_ns = 8;
  if (this->min_duration_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->min_duration_ns(), target);
  }

  // uint64 max_duration_ns = 9;
  if (this->max_duration_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->max_duration_ns(), target);
  }

  // bool is_kernel_using_tensor_core = 10;
  if (this->is_kernel_using_tensor_core() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_kernel_using_tensor_core(), target);
  }

  // bool is_op_tensor_core_eligible = 11;
  if (this->is_op_tensor_core_eligible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_op_tensor_core_eligible(), target);
  }

  // string op_name = 12;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.KernelReport.op_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->op_name(), target);
  }

  // uint32 occurrences = 13;
  if (this->occurrences() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->occurrences(), target);
  }

  // float occupancy_pct = 14;
  if (this->occupancy_pct() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->occupancy_pct(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.KernelReport)
  return target;
}

size_t KernelReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.KernelReport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 block_dim = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->block_dim_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _block_dim_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 grid_dim = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->grid_dim_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _grid_dim_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string op_name = 12;
  if (this->op_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_name());
  }

  // uint32 registers_per_thread = 2;
  if (this->registers_per_thread() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->registers_per_thread());
  }

  // uint32 static_shmem_bytes = 3;
  if (this->static_shmem_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->static_shmem_bytes());
  }

  // uint64 total_duration_ns = 7;
  if (this->total_duration_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_duration_ns());
  }

  // uint64 min_duration_ns = 8;
  if (this->min_duration_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->min_duration_ns());
  }

  // uint32 dynamic_shmem_bytes = 4;
  if (this->dynamic_shmem_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dynamic_shmem_bytes());
  }

  // bool is_kernel_using_tensor_core = 10;
  if (this->is_kernel_using_tensor_core() != 0) {
    total_size += 1 + 1;
  }

  // bool is_op_tensor_core_eligible = 11;
  if (this->is_op_tensor_core_eligible() != 0) {
    total_size += 1 + 1;
  }

  // uint64 max_duration_ns = 9;
  if (this->max_duration_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_duration_ns());
  }

  // uint32 occurrences = 13;
  if (this->occurrences() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->occurrences());
  }

  // float occupancy_pct = 14;
  if (this->occupancy_pct() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KernelReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.KernelReport)
  GOOGLE_DCHECK_NE(&from, this);
  const KernelReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KernelReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.KernelReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.KernelReport)
    MergeFrom(*source);
  }
}

void KernelReport::MergeFrom(const KernelReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.KernelReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_dim_.MergeFrom(from.block_dim_);
  grid_dim_.MergeFrom(from.grid_dim_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.op_name().size() > 0) {

    op_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_name_);
  }
  if (from.registers_per_thread() != 0) {
    set_registers_per_thread(from.registers_per_thread());
  }
  if (from.static_shmem_bytes() != 0) {
    set_static_shmem_bytes(from.static_shmem_bytes());
  }
  if (from.total_duration_ns() != 0) {
    set_total_duration_ns(from.total_duration_ns());
  }
  if (from.min_duration_ns() != 0) {
    set_min_duration_ns(from.min_duration_ns());
  }
  if (from.dynamic_shmem_bytes() != 0) {
    set_dynamic_shmem_bytes(from.dynamic_shmem_bytes());
  }
  if (from.is_kernel_using_tensor_core() != 0) {
    set_is_kernel_using_tensor_core(from.is_kernel_using_tensor_core());
  }
  if (from.is_op_tensor_core_eligible() != 0) {
    set_is_op_tensor_core_eligible(from.is_op_tensor_core_eligible());
  }
  if (from.max_duration_ns() != 0) {
    set_max_duration_ns(from.max_duration_ns());
  }
  if (from.occurrences() != 0) {
    set_occurrences(from.occurrences());
  }
  if (from.occupancy_pct() != 0) {
    set_occupancy_pct(from.occupancy_pct());
  }
}

void KernelReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.KernelReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KernelReport::CopyFrom(const KernelReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.KernelReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KernelReport::IsInitialized() const {
  return true;
}

void KernelReport::Swap(KernelReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KernelReport::InternalSwap(KernelReport* other) {
  using std::swap;
  block_dim_.InternalSwap(&other->block_dim_);
  grid_dim_.InternalSwap(&other->grid_dim_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  op_name_.Swap(&other->op_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(registers_per_thread_, other->registers_per_thread_);
  swap(static_shmem_bytes_, other->static_shmem_bytes_);
  swap(total_duration_ns_, other->total_duration_ns_);
  swap(min_duration_ns_, other->min_duration_ns_);
  swap(dynamic_shmem_bytes_, other->dynamic_shmem_bytes_);
  swap(is_kernel_using_tensor_core_, other->is_kernel_using_tensor_core_);
  swap(is_op_tensor_core_eligible_, other->is_op_tensor_core_eligible_);
  swap(max_duration_ns_, other->max_duration_ns_);
  swap(occurrences_, other->occurrences_);
  swap(occupancy_pct_, other->occupancy_pct_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KernelReport::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KernelStatsDb::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KernelStatsDb::kReportsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KernelStatsDb::KernelStatsDb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::scc_info_KernelStatsDb.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.KernelStatsDb)
}
KernelStatsDb::KernelStatsDb(const KernelStatsDb& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reports_(from.reports_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.KernelStatsDb)
}

void KernelStatsDb::SharedCtor() {
}

KernelStatsDb::~KernelStatsDb() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.KernelStatsDb)
  SharedDtor();
}

void KernelStatsDb::SharedDtor() {
}

void KernelStatsDb::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KernelStatsDb::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KernelStatsDb& KernelStatsDb::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::scc_info_KernelStatsDb.base);
  return *internal_default_instance();
}


void KernelStatsDb::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.KernelStatsDb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reports_.Clear();
  _internal_metadata_.Clear();
}

bool KernelStatsDb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.KernelStatsDb)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.profiler.KernelReport reports = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.KernelStatsDb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.KernelStatsDb)
  return false;
#undef DO_
}

void KernelStatsDb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.KernelStatsDb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.KernelReport reports = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reports_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->reports(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.KernelStatsDb)
}

::google::protobuf::uint8* KernelStatsDb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.KernelStatsDb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.KernelReport reports = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reports_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->reports(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.KernelStatsDb)
  return target;
}

size_t KernelStatsDb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.KernelStatsDb)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.KernelReport reports = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->reports_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reports(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KernelStatsDb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.KernelStatsDb)
  GOOGLE_DCHECK_NE(&from, this);
  const KernelStatsDb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KernelStatsDb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.KernelStatsDb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.KernelStatsDb)
    MergeFrom(*source);
  }
}

void KernelStatsDb::MergeFrom(const KernelStatsDb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.KernelStatsDb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reports_.MergeFrom(from.reports_);
}

void KernelStatsDb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.KernelStatsDb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KernelStatsDb::CopyFrom(const KernelStatsDb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.KernelStatsDb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KernelStatsDb::IsInitialized() const {
  return true;
}

void KernelStatsDb::Swap(KernelStatsDb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KernelStatsDb::InternalSwap(KernelStatsDb* other) {
  using std::swap;
  CastToBase(&reports_)->InternalSwap(CastToBase(&other->reports_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KernelStatsDb::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::KernelReport* Arena::CreateMaybeMessage< ::tensorflow::profiler::KernelReport >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::KernelReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::KernelStatsDb* Arena::CreateMaybeMessage< ::tensorflow::profiler::KernelStatsDb >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::KernelStatsDb >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
