// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/pod_viewer.proto

#include "tensorflow/core/profiler/protobuf/pod_viewer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Diagnostics;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StepBreakdownEvents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PodStatsRecord;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChannelInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PodViewerSummary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PodViewerTopology;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReplicaGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllReduceOpInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PodStatsMap_PodStatsPerCoreEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PodStatsSequence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_PodStatsMap;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto
namespace tensorflow {
namespace profiler {
class ReplicaGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplicaGroup>
      _instance;
} _ReplicaGroup_default_instance_;
class AllReduceOpInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllReduceOpInfo>
      _instance;
} _AllReduceOpInfo_default_instance_;
class PodStatsMap_PodStatsPerCoreEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodStatsMap_PodStatsPerCoreEntry_DoNotUse>
      _instance;
} _PodStatsMap_PodStatsPerCoreEntry_DoNotUse_default_instance_;
class PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse>
      _instance;
} _PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse_default_instance_;
class PodStatsMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodStatsMap>
      _instance;
} _PodStatsMap_default_instance_;
class PodStatsSequenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodStatsSequence>
      _instance;
} _PodStatsSequence_default_instance_;
class ChannelInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelInfo>
      _instance;
} _ChannelInfo_default_instance_;
class PodViewerSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodViewerSummary>
      _instance;
} _PodViewerSummary_default_instance_;
class PodViewerTopologyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodViewerTopology>
      _instance;
} _PodViewerTopology_default_instance_;
class PodViewerDatabaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodViewerDatabase>
      _instance;
} _PodViewerDatabase_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto {
static void InitDefaultsReplicaGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_ReplicaGroup_default_instance_;
    new (ptr) ::tensorflow::profiler::ReplicaGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::ReplicaGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReplicaGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReplicaGroup}, {}};

static void InitDefaultsAllReduceOpInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_AllReduceOpInfo_default_instance_;
    new (ptr) ::tensorflow::profiler::AllReduceOpInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::AllReduceOpInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllReduceOpInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllReduceOpInfo}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_ReplicaGroup.base,}};

static void InitDefaultsPodStatsMap_PodStatsPerCoreEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PodStatsMap_PodStatsPerCoreEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse();
  }
  ::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PodStatsMap_PodStatsPerCoreEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPodStatsMap_PodStatsPerCoreEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto::scc_info_PodStatsRecord.base,}};

static void InitDefaultsPodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse();
  }
  ::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse}, {}};

static void InitDefaultsPodStatsMap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PodStatsMap_default_instance_;
    new (ptr) ::tensorflow::profiler::PodStatsMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PodStatsMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_PodStatsMap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsPodStatsMap}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodStatsMap_PodStatsPerCoreEntry_DoNotUse.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_ChannelInfo.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_AllReduceOpInfo.base,}};

static void InitDefaultsPodStatsSequence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PodStatsSequence_default_instance_;
    new (ptr) ::tensorflow::profiler::PodStatsSequence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PodStatsSequence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PodStatsSequence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPodStatsSequence}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodStatsMap.base,}};

static void InitDefaultsChannelInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_ChannelInfo_default_instance_;
    new (ptr) ::tensorflow::profiler::ChannelInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::ChannelInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChannelInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChannelInfo}, {}};

static void InitDefaultsPodViewerSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PodViewerSummary_default_instance_;
    new (ptr) ::tensorflow::profiler::PodViewerSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PodViewerSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PodViewerSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPodViewerSummary}, {}};

static void InitDefaultsPodViewerTopology() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PodViewerTopology_default_instance_;
    new (ptr) ::tensorflow::profiler::PodViewerTopology();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PodViewerTopology::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PodViewerTopology =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPodViewerTopology}, {}};

static void InitDefaultsPodViewerDatabase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PodViewerDatabase_default_instance_;
    new (ptr) ::tensorflow::profiler::PodViewerDatabase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PodViewerDatabase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_PodViewerDatabase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsPodViewerDatabase}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodStatsSequence.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodViewerSummary.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto::scc_info_Diagnostics.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto::scc_info_StepBreakdownEvents.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodViewerTopology.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReplicaGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllReduceOpInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PodStatsMap_PodStatsPerCoreEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PodStatsMap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PodStatsSequence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PodViewerSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PodViewerTopology.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PodViewerDatabase.base);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ReplicaGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ReplicaGroup, replica_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::AllReduceOpInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::AllReduceOpInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::AllReduceOpInfo, occurrences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::AllReduceOpInfo, duration_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::AllReduceOpInfo, data_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::AllReduceOpInfo, replica_groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::AllReduceOpInfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap, step_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap, pod_stats_per_core_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap, channel_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap, core_id_to_replica_id_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsMap, all_reduce_op_db_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsSequence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodStatsSequence, pod_stats_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, src_core_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, dst_core_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, data_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, duration_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, occurrences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, utilization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, hlo_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, send_delay_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ChannelInfo, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerSummary, warnings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerTopology, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerTopology, x_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerTopology, y_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerTopology, z_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerTopology, host_x_stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerTopology, host_y_stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerTopology, host_z_stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerTopology, num_cores_per_chip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerDatabase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerDatabase, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerDatabase, pod_stats_sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerDatabase, summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerDatabase, diagnostics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerDatabase, step_breakdown_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PodViewerDatabase, topology_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::ReplicaGroup)},
  { 6, -1, sizeof(::tensorflow::profiler::AllReduceOpInfo)},
  { 17, 24, sizeof(::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse)},
  { 26, 33, sizeof(::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse)},
  { 35, -1, sizeof(::tensorflow::profiler::PodStatsMap)},
  { 45, -1, sizeof(::tensorflow::profiler::PodStatsSequence)},
  { 51, -1, sizeof(::tensorflow::profiler::ChannelInfo)},
  { 66, -1, sizeof(::tensorflow::profiler::PodViewerSummary)},
  { 72, -1, sizeof(::tensorflow::profiler::PodViewerTopology)},
  { 84, -1, sizeof(::tensorflow::profiler::PodViewerDatabase)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_ReplicaGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_AllReduceOpInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PodStatsMap_PodStatsPerCoreEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PodStatsMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PodStatsSequence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_ChannelInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PodViewerSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PodViewerTopology_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PodViewerDatabase_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/pod_viewer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2tensorflow/core/profiler/protobuf/pod_"
      "viewer.proto\022\023tensorflow.profiler\0323tenso"
      "rflow/core/profiler/protobuf/diagnostics"
      ".proto\0321tensorflow/core/profiler/protobu"
      "f/pod_stats.proto\"#\n\014ReplicaGroup\022\023\n\013rep"
      "lica_ids\030\001 \003(\003\"\254\001\n\017AllReduceOpInfo\022\014\n\004na"
      "me\030\001 \001(\t\022\023\n\013occurrences\030\002 \001(\r\022\023\n\013duratio"
      "n_us\030\003 \001(\001\022\021\n\tdata_size\030\004 \001(\004\0229\n\016replica"
      "_groups\030\005 \003(\0132!.tensorflow.profiler.Repl"
      "icaGroup\022\023\n\013description\030\006 \001(\t\"\341\003\n\013PodSta"
      "tsMap\022\020\n\010step_num\030\001 \001(\r\022Q\n\022pod_stats_per"
      "_core\030\002 \003(\01325.tensorflow.profiler.PodSta"
      "tsMap.PodStatsPerCoreEntry\0224\n\nchannel_db"
      "\030\003 \003(\0132 .tensorflow.profiler.ChannelInfo"
      "\022]\n\031core_id_to_replica_id_map\030\004 \003(\0132:.te"
      "nsorflow.profiler.PodStatsMap.CoreIdToRe"
      "plicaIdMapEntry\022>\n\020all_reduce_op_db\030\005 \003("
      "\0132$.tensorflow.profiler.AllReduceOpInfo\032"
      "[\n\024PodStatsPerCoreEntry\022\013\n\003key\030\001 \001(\r\0222\n\005"
      "value\030\002 \001(\0132#.tensorflow.profiler.PodSta"
      "tsRecord:\0028\001\032;\n\031CoreIdToReplicaIdMapEntr"
      "y\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"K\n\020Pod"
      "StatsSequence\0227\n\rpod_stats_map\030\001 \003(\0132 .t"
      "ensorflow.profiler.PodStatsMap\"\360\001\n\013Chann"
      "elInfo\022\022\n\nchannel_id\030\001 \001(\003\022\024\n\014src_core_i"
      "ds\030\013 \003(\r\022\024\n\014dst_core_ids\030\014 \003(\r\022\021\n\tdata_s"
      "ize\030\004 \001(\004\022\023\n\013duration_us\030\005 \001(\001\022\023\n\013occurr"
      "ences\030\006 \001(\r\022\023\n\013utilization\030\007 \001(\001\022\021\n\thlo_"
      "names\030\010 \003(\t\022\025\n\rsend_delay_us\030\t \001(\001\022\023\n\013de"
      "scription\030\r \001(\tJ\004\010\002\020\003J\004\010\003\020\004J\004\010\n\020\013\"$\n\020Pod"
      "ViewerSummary\022\020\n\010warnings\030\001 \003(\t\"\263\001\n\021PodV"
      "iewerTopology\022\023\n\013x_dimension\030\001 \001(\005\022\023\n\013y_"
      "dimension\030\002 \001(\005\022\023\n\013z_dimension\030\003 \001(\005\022\025\n\r"
      "host_x_stride\030\004 \001(\005\022\025\n\rhost_y_stride\030\005 \001"
      "(\005\022\025\n\rhost_z_stride\030\006 \001(\005\022\032\n\022num_cores_p"
      "er_chip\030\007 \001(\005\"\373\002\n\021PodViewerDatabase\022\023\n\013d"
      "evice_type\030\n \001(\t\022A\n\022pod_stats_sequence\030\003"
      " \001(\0132%.tensorflow.profiler.PodStatsSeque"
      "nce\0226\n\007summary\030\007 \001(\0132%.tensorflow.profil"
      "er.PodViewerSummary\0225\n\013diagnostics\030\010 \001(\013"
      "2 .tensorflow.profiler.Diagnostics\022G\n\025st"
      "ep_breakdown_events\030\t \003(\0132(.tensorflow.p"
      "rofiler.StepBreakdownEvents\0228\n\010topology\030"
      "\013 \001(\0132&.tensorflow.profiler.PodViewerTop"
      "ologyJ\004\010\001\020\002J\004\010\002\020\003J\004\010\004\020\005J\004\010\005\020\006J\004\010\006\020\007b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1803);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/pod_viewer.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto
namespace tensorflow {
namespace profiler {

// ===================================================================

void ReplicaGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplicaGroup::kReplicaIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplicaGroup::ReplicaGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_ReplicaGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.ReplicaGroup)
}
ReplicaGroup::ReplicaGroup(const ReplicaGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      replica_ids_(from.replica_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.ReplicaGroup)
}

void ReplicaGroup::SharedCtor() {
}

ReplicaGroup::~ReplicaGroup() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.ReplicaGroup)
  SharedDtor();
}

void ReplicaGroup::SharedDtor() {
}

void ReplicaGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReplicaGroup::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplicaGroup& ReplicaGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_ReplicaGroup.base);
  return *internal_default_instance();
}


void ReplicaGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.ReplicaGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replica_ids_.Clear();
  _internal_metadata_.Clear();
}

bool ReplicaGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.ReplicaGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 replica_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_replica_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_replica_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.ReplicaGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.ReplicaGroup)
  return false;
#undef DO_
}

void ReplicaGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.ReplicaGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 replica_ids = 1;
  if (this->replica_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _replica_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->replica_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->replica_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.ReplicaGroup)
}

::google::protobuf::uint8* ReplicaGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.ReplicaGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 replica_ids = 1;
  if (this->replica_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _replica_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->replica_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.ReplicaGroup)
  return target;
}

size_t ReplicaGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.ReplicaGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 replica_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->replica_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _replica_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplicaGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.ReplicaGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplicaGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplicaGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.ReplicaGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.ReplicaGroup)
    MergeFrom(*source);
  }
}

void ReplicaGroup::MergeFrom(const ReplicaGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.ReplicaGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replica_ids_.MergeFrom(from.replica_ids_);
}

void ReplicaGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.ReplicaGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplicaGroup::CopyFrom(const ReplicaGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.ReplicaGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplicaGroup::IsInitialized() const {
  return true;
}

void ReplicaGroup::Swap(ReplicaGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplicaGroup::InternalSwap(ReplicaGroup* other) {
  using std::swap;
  replica_ids_.InternalSwap(&other->replica_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReplicaGroup::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllReduceOpInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllReduceOpInfo::kNameFieldNumber;
const int AllReduceOpInfo::kOccurrencesFieldNumber;
const int AllReduceOpInfo::kDurationUsFieldNumber;
const int AllReduceOpInfo::kDataSizeFieldNumber;
const int AllReduceOpInfo::kReplicaGroupsFieldNumber;
const int AllReduceOpInfo::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllReduceOpInfo::AllReduceOpInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_AllReduceOpInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.AllReduceOpInfo)
}
AllReduceOpInfo::AllReduceOpInfo(const AllReduceOpInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      replica_groups_(from.replica_groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&duration_us_, &from.duration_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&occurrences_) -
    reinterpret_cast<char*>(&duration_us_)) + sizeof(occurrences_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.AllReduceOpInfo)
}

void AllReduceOpInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duration_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&occurrences_) -
      reinterpret_cast<char*>(&duration_us_)) + sizeof(occurrences_));
}

AllReduceOpInfo::~AllReduceOpInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.AllReduceOpInfo)
  SharedDtor();
}

void AllReduceOpInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllReduceOpInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllReduceOpInfo::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllReduceOpInfo& AllReduceOpInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_AllReduceOpInfo.base);
  return *internal_default_instance();
}


void AllReduceOpInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.AllReduceOpInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replica_groups_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duration_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&occurrences_) -
      reinterpret_cast<char*>(&duration_us_)) + sizeof(occurrences_));
  _internal_metadata_.Clear();
}

bool AllReduceOpInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.AllReduceOpInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.AllReduceOpInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 occurrences = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &occurrences_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double duration_us = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &duration_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 data_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.ReplicaGroup replica_groups = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replica_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.AllReduceOpInfo.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.AllReduceOpInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.AllReduceOpInfo)
  return false;
#undef DO_
}

void AllReduceOpInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.AllReduceOpInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.AllReduceOpInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint32 occurrences = 2;
  if (this->occurrences() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->occurrences(), output);
  }

  // double duration_us = 3;
  if (this->duration_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->duration_us(), output);
  }

  // uint64 data_size = 4;
  if (this->data_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->data_size(), output);
  }

  // repeated .tensorflow.profiler.ReplicaGroup replica_groups = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_groups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->replica_groups(static_cast<int>(i)),
      output);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.AllReduceOpInfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.AllReduceOpInfo)
}

::google::protobuf::uint8* AllReduceOpInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.AllReduceOpInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.AllReduceOpInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint32 occurrences = 2;
  if (this->occurrences() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->occurrences(), target);
  }

  // double duration_us = 3;
  if (this->duration_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->duration_us(), target);
  }

  // uint64 data_size = 4;
  if (this->data_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->data_size(), target);
  }

  // repeated .tensorflow.profiler.ReplicaGroup replica_groups = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_groups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->replica_groups(static_cast<int>(i)), deterministic, target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.AllReduceOpInfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.AllReduceOpInfo)
  return target;
}

size_t AllReduceOpInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.AllReduceOpInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.ReplicaGroup replica_groups = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->replica_groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replica_groups(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // double duration_us = 3;
  if (this->duration_us() != 0) {
    total_size += 1 + 8;
  }

  // uint64 data_size = 4;
  if (this->data_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->data_size());
  }

  // uint32 occurrences = 2;
  if (this->occurrences() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->occurrences());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllReduceOpInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.AllReduceOpInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AllReduceOpInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllReduceOpInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.AllReduceOpInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.AllReduceOpInfo)
    MergeFrom(*source);
  }
}

void AllReduceOpInfo::MergeFrom(const AllReduceOpInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.AllReduceOpInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replica_groups_.MergeFrom(from.replica_groups_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.duration_us() != 0) {
    set_duration_us(from.duration_us());
  }
  if (from.data_size() != 0) {
    set_data_size(from.data_size());
  }
  if (from.occurrences() != 0) {
    set_occurrences(from.occurrences());
  }
}

void AllReduceOpInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.AllReduceOpInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllReduceOpInfo::CopyFrom(const AllReduceOpInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.AllReduceOpInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllReduceOpInfo::IsInitialized() const {
  return true;
}

void AllReduceOpInfo::Swap(AllReduceOpInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllReduceOpInfo::InternalSwap(AllReduceOpInfo* other) {
  using std::swap;
  CastToBase(&replica_groups_)->InternalSwap(CastToBase(&other->replica_groups_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(duration_us_, other->duration_us_);
  swap(data_size_, other->data_size_);
  swap(occurrences_, other->occurrences_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllReduceOpInfo::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PodStatsMap_PodStatsPerCoreEntry_DoNotUse::PodStatsMap_PodStatsPerCoreEntry_DoNotUse() {}
PodStatsMap_PodStatsPerCoreEntry_DoNotUse::PodStatsMap_PodStatsPerCoreEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodStatsMap_PodStatsPerCoreEntry_DoNotUse::MergeFrom(const PodStatsMap_PodStatsPerCoreEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodStatsMap_PodStatsPerCoreEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[2];
}
void PodStatsMap_PodStatsPerCoreEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse() {}
PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse::MergeFrom(const PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[3];
}
void PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PodStatsMap::InitAsDefaultInstance() {
}
void PodStatsMap::clear_pod_stats_per_core() {
  pod_stats_per_core_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodStatsMap::kStepNumFieldNumber;
const int PodStatsMap::kPodStatsPerCoreFieldNumber;
const int PodStatsMap::kChannelDbFieldNumber;
const int PodStatsMap::kCoreIdToReplicaIdMapFieldNumber;
const int PodStatsMap::kAllReduceOpDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodStatsMap::PodStatsMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodStatsMap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PodStatsMap)
}
PodStatsMap::PodStatsMap(const PodStatsMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_db_(from.channel_db_),
      all_reduce_op_db_(from.all_reduce_op_db_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pod_stats_per_core_.MergeFrom(from.pod_stats_per_core_);
  core_id_to_replica_id_map_.MergeFrom(from.core_id_to_replica_id_map_);
  step_num_ = from.step_num_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PodStatsMap)
}

void PodStatsMap::SharedCtor() {
  step_num_ = 0u;
}

PodStatsMap::~PodStatsMap() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PodStatsMap)
  SharedDtor();
}

void PodStatsMap::SharedDtor() {
}

void PodStatsMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PodStatsMap::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodStatsMap& PodStatsMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodStatsMap.base);
  return *internal_default_instance();
}


void PodStatsMap::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PodStatsMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_stats_per_core_.Clear();
  channel_db_.Clear();
  core_id_to_replica_id_map_.Clear();
  all_reduce_op_db_.Clear();
  step_num_ = 0u;
  _internal_metadata_.Clear();
}

bool PodStatsMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PodStatsMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 step_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &step_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .tensorflow.profiler.PodStatsRecord> pod_stats_per_core = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PodStatsMap_PodStatsPerCoreEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodStatsMap_PodStatsPerCoreEntry_DoNotUse,
              ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord > > parser(&pod_stats_per_core_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.ChannelInfo channel_db = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channel_db()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> core_id_to_replica_id_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&core_id_to_replica_id_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.AllReduceOpInfo all_reduce_op_db = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_all_reduce_op_db()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PodStatsMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PodStatsMap)
  return false;
#undef DO_
}

void PodStatsMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PodStatsMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 step_num = 1;
  if (this->step_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->step_num(), output);
  }

  // map<uint32, .tensorflow.profiler.PodStatsRecord> pod_stats_per_core = 2;
  if (!this->pod_stats_per_core().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->pod_stats_per_core().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pod_stats_per_core().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::const_iterator
          it = this->pod_stats_per_core().begin();
          it != this->pod_stats_per_core().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PodStatsMap_PodStatsPerCoreEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pod_stats_per_core_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::std::unique_ptr<PodStatsMap_PodStatsPerCoreEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::const_iterator
          it = this->pod_stats_per_core().begin();
          it != this->pod_stats_per_core().end(); ++it) {
        entry.reset(pod_stats_per_core_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // repeated .tensorflow.profiler.ChannelInfo channel_db = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_db_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->channel_db(static_cast<int>(i)),
      output);
  }

  // map<uint32, uint32> core_id_to_replica_id_map = 4;
  if (!this->core_id_to_replica_id_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->core_id_to_replica_id_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->core_id_to_replica_id_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->core_id_to_replica_id_map().begin();
          it != this->core_id_to_replica_id_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(core_id_to_replica_id_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::std::unique_ptr<PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->core_id_to_replica_id_map().begin();
          it != this->core_id_to_replica_id_map().end(); ++it) {
        entry.reset(core_id_to_replica_id_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // repeated .tensorflow.profiler.AllReduceOpInfo all_reduce_op_db = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->all_reduce_op_db_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->all_reduce_op_db(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PodStatsMap)
}

::google::protobuf::uint8* PodStatsMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PodStatsMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 step_num = 1;
  if (this->step_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->step_num(), target);
  }

  // map<uint32, .tensorflow.profiler.PodStatsRecord> pod_stats_per_core = 2;
  if (!this->pod_stats_per_core().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->pod_stats_per_core().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pod_stats_per_core().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::const_iterator
          it = this->pod_stats_per_core().begin();
          it != this->pod_stats_per_core().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PodStatsMap_PodStatsPerCoreEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pod_stats_per_core_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<PodStatsMap_PodStatsPerCoreEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::const_iterator
          it = this->pod_stats_per_core().begin();
          it != this->pod_stats_per_core().end(); ++it) {
        entry.reset(pod_stats_per_core_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // repeated .tensorflow.profiler.ChannelInfo channel_db = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_db_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->channel_db(static_cast<int>(i)), deterministic, target);
  }

  // map<uint32, uint32> core_id_to_replica_id_map = 4;
  if (!this->core_id_to_replica_id_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->core_id_to_replica_id_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->core_id_to_replica_id_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->core_id_to_replica_id_map().begin();
          it != this->core_id_to_replica_id_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(core_id_to_replica_id_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->core_id_to_replica_id_map().begin();
          it != this->core_id_to_replica_id_map().end(); ++it) {
        entry.reset(core_id_to_replica_id_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // repeated .tensorflow.profiler.AllReduceOpInfo all_reduce_op_db = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->all_reduce_op_db_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->all_reduce_op_db(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PodStatsMap)
  return target;
}

size_t PodStatsMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PodStatsMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .tensorflow.profiler.PodStatsRecord> pod_stats_per_core = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pod_stats_per_core_size());
  {
    ::std::unique_ptr<PodStatsMap_PodStatsPerCoreEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::PodStatsRecord >::const_iterator
        it = this->pod_stats_per_core().begin();
        it != this->pod_stats_per_core().end(); ++it) {
      entry.reset(pod_stats_per_core_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .tensorflow.profiler.ChannelInfo channel_db = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_db_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel_db(static_cast<int>(i)));
    }
  }

  // map<uint32, uint32> core_id_to_replica_id_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->core_id_to_replica_id_map_size());
  {
    ::std::unique_ptr<PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->core_id_to_replica_id_map().begin();
        it != this->core_id_to_replica_id_map().end(); ++it) {
      entry.reset(core_id_to_replica_id_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .tensorflow.profiler.AllReduceOpInfo all_reduce_op_db = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->all_reduce_op_db_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->all_reduce_op_db(static_cast<int>(i)));
    }
  }

  // uint32 step_num = 1;
  if (this->step_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->step_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PodStatsMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PodStatsMap)
  GOOGLE_DCHECK_NE(&from, this);
  const PodStatsMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodStatsMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PodStatsMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PodStatsMap)
    MergeFrom(*source);
  }
}

void PodStatsMap::MergeFrom(const PodStatsMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PodStatsMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pod_stats_per_core_.MergeFrom(from.pod_stats_per_core_);
  channel_db_.MergeFrom(from.channel_db_);
  core_id_to_replica_id_map_.MergeFrom(from.core_id_to_replica_id_map_);
  all_reduce_op_db_.MergeFrom(from.all_reduce_op_db_);
  if (from.step_num() != 0) {
    set_step_num(from.step_num());
  }
}

void PodStatsMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PodStatsMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodStatsMap::CopyFrom(const PodStatsMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PodStatsMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodStatsMap::IsInitialized() const {
  return true;
}

void PodStatsMap::Swap(PodStatsMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodStatsMap::InternalSwap(PodStatsMap* other) {
  using std::swap;
  pod_stats_per_core_.Swap(&other->pod_stats_per_core_);
  CastToBase(&channel_db_)->InternalSwap(CastToBase(&other->channel_db_));
  core_id_to_replica_id_map_.Swap(&other->core_id_to_replica_id_map_);
  CastToBase(&all_reduce_op_db_)->InternalSwap(CastToBase(&other->all_reduce_op_db_));
  swap(step_num_, other->step_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PodStatsMap::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PodStatsSequence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodStatsSequence::kPodStatsMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodStatsSequence::PodStatsSequence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodStatsSequence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PodStatsSequence)
}
PodStatsSequence::PodStatsSequence(const PodStatsSequence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pod_stats_map_(from.pod_stats_map_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PodStatsSequence)
}

void PodStatsSequence::SharedCtor() {
}

PodStatsSequence::~PodStatsSequence() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PodStatsSequence)
  SharedDtor();
}

void PodStatsSequence::SharedDtor() {
}

void PodStatsSequence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PodStatsSequence::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodStatsSequence& PodStatsSequence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodStatsSequence.base);
  return *internal_default_instance();
}


void PodStatsSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PodStatsSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_stats_map_.Clear();
  _internal_metadata_.Clear();
}

bool PodStatsSequence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PodStatsSequence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.profiler.PodStatsMap pod_stats_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pod_stats_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PodStatsSequence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PodStatsSequence)
  return false;
#undef DO_
}

void PodStatsSequence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PodStatsSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.PodStatsMap pod_stats_map = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pod_stats_map_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pod_stats_map(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PodStatsSequence)
}

::google::protobuf::uint8* PodStatsSequence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PodStatsSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.PodStatsMap pod_stats_map = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pod_stats_map_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pod_stats_map(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PodStatsSequence)
  return target;
}

size_t PodStatsSequence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PodStatsSequence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.PodStatsMap pod_stats_map = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pod_stats_map_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pod_stats_map(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PodStatsSequence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PodStatsSequence)
  GOOGLE_DCHECK_NE(&from, this);
  const PodStatsSequence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodStatsSequence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PodStatsSequence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PodStatsSequence)
    MergeFrom(*source);
  }
}

void PodStatsSequence::MergeFrom(const PodStatsSequence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PodStatsSequence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pod_stats_map_.MergeFrom(from.pod_stats_map_);
}

void PodStatsSequence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PodStatsSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodStatsSequence::CopyFrom(const PodStatsSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PodStatsSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodStatsSequence::IsInitialized() const {
  return true;
}

void PodStatsSequence::Swap(PodStatsSequence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodStatsSequence::InternalSwap(PodStatsSequence* other) {
  using std::swap;
  CastToBase(&pod_stats_map_)->InternalSwap(CastToBase(&other->pod_stats_map_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PodStatsSequence::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelInfo::kChannelIdFieldNumber;
const int ChannelInfo::kSrcCoreIdsFieldNumber;
const int ChannelInfo::kDstCoreIdsFieldNumber;
const int ChannelInfo::kDataSizeFieldNumber;
const int ChannelInfo::kDurationUsFieldNumber;
const int ChannelInfo::kOccurrencesFieldNumber;
const int ChannelInfo::kUtilizationFieldNumber;
const int ChannelInfo::kHloNamesFieldNumber;
const int ChannelInfo::kSendDelayUsFieldNumber;
const int ChannelInfo::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelInfo::ChannelInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_ChannelInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.ChannelInfo)
}
ChannelInfo::ChannelInfo(const ChannelInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hlo_names_(from.hlo_names_),
      src_core_ids_(from.src_core_ids_),
      dst_core_ids_(from.dst_core_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&occurrences_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(occurrences_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.ChannelInfo)
}

void ChannelInfo::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&occurrences_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(occurrences_));
}

ChannelInfo::~ChannelInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.ChannelInfo)
  SharedDtor();
}

void ChannelInfo::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChannelInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelInfo::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelInfo& ChannelInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_ChannelInfo.base);
  return *internal_default_instance();
}


void ChannelInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.ChannelInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hlo_names_.Clear();
  src_core_ids_.Clear();
  dst_core_ids_.Clear();
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&occurrences_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(occurrences_));
  _internal_metadata_.Clear();
}

bool ChannelInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.ChannelInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 data_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double duration_us = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &duration_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 occurrences = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &occurrences_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double utilization = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &utilization_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string hlo_names = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_hlo_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hlo_names(this->hlo_names_size() - 1).data(),
            static_cast<int>(this->hlo_names(this->hlo_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.ChannelInfo.hlo_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double send_delay_us = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &send_delay_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 src_core_ids = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_src_core_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_src_core_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 dst_core_ids = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_dst_core_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 98u, input, this->mutable_dst_core_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.ChannelInfo.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.ChannelInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.ChannelInfo)
  return false;
#undef DO_
}

void ChannelInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.ChannelInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // uint64 data_size = 4;
  if (this->data_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->data_size(), output);
  }

  // double duration_us = 5;
  if (this->duration_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->duration_us(), output);
  }

  // uint32 occurrences = 6;
  if (this->occurrences() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->occurrences(), output);
  }

  // double utilization = 7;
  if (this->utilization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->utilization(), output);
  }

  // repeated string hlo_names = 8;
  for (int i = 0, n = this->hlo_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hlo_names(i).data(), static_cast<int>(this->hlo_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.ChannelInfo.hlo_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->hlo_names(i), output);
  }

  // double send_delay_us = 9;
  if (this->send_delay_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->send_delay_us(), output);
  }

  // repeated uint32 src_core_ids = 11;
  if (this->src_core_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _src_core_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->src_core_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->src_core_ids(i), output);
  }

  // repeated uint32 dst_core_ids = 12;
  if (this->dst_core_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dst_core_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->dst_core_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->dst_core_ids(i), output);
  }

  // string description = 13;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.ChannelInfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.ChannelInfo)
}

::google::protobuf::uint8* ChannelInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.ChannelInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // uint64 data_size = 4;
  if (this->data_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->data_size(), target);
  }

  // double duration_us = 5;
  if (this->duration_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->duration_us(), target);
  }

  // uint32 occurrences = 6;
  if (this->occurrences() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->occurrences(), target);
  }

  // double utilization = 7;
  if (this->utilization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->utilization(), target);
  }

  // repeated string hlo_names = 8;
  for (int i = 0, n = this->hlo_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hlo_names(i).data(), static_cast<int>(this->hlo_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.ChannelInfo.hlo_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->hlo_names(i), target);
  }

  // double send_delay_us = 9;
  if (this->send_delay_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->send_delay_us(), target);
  }

  // repeated uint32 src_core_ids = 11;
  if (this->src_core_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _src_core_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->src_core_ids_, target);
  }

  // repeated uint32 dst_core_ids = 12;
  if (this->dst_core_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dst_core_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->dst_core_ids_, target);
  }

  // string description = 13;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.ChannelInfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.ChannelInfo)
  return target;
}

size_t ChannelInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.ChannelInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string hlo_names = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hlo_names_size());
  for (int i = 0, n = this->hlo_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->hlo_names(i));
  }

  // repeated uint32 src_core_ids = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->src_core_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _src_core_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 dst_core_ids = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->dst_core_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dst_core_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string description = 13;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  // uint64 data_size = 4;
  if (this->data_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->data_size());
  }

  // double duration_us = 5;
  if (this->duration_us() != 0) {
    total_size += 1 + 8;
  }

  // double utilization = 7;
  if (this->utilization() != 0) {
    total_size += 1 + 8;
  }

  // double send_delay_us = 9;
  if (this->send_delay_us() != 0) {
    total_size += 1 + 8;
  }

  // uint32 occurrences = 6;
  if (this->occurrences() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->occurrences());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.ChannelInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.ChannelInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.ChannelInfo)
    MergeFrom(*source);
  }
}

void ChannelInfo::MergeFrom(const ChannelInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.ChannelInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hlo_names_.MergeFrom(from.hlo_names_);
  src_core_ids_.MergeFrom(from.src_core_ids_);
  dst_core_ids_.MergeFrom(from.dst_core_ids_);
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.data_size() != 0) {
    set_data_size(from.data_size());
  }
  if (from.duration_us() != 0) {
    set_duration_us(from.duration_us());
  }
  if (from.utilization() != 0) {
    set_utilization(from.utilization());
  }
  if (from.send_delay_us() != 0) {
    set_send_delay_us(from.send_delay_us());
  }
  if (from.occurrences() != 0) {
    set_occurrences(from.occurrences());
  }
}

void ChannelInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.ChannelInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelInfo::CopyFrom(const ChannelInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.ChannelInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelInfo::IsInitialized() const {
  return true;
}

void ChannelInfo::Swap(ChannelInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelInfo::InternalSwap(ChannelInfo* other) {
  using std::swap;
  hlo_names_.InternalSwap(CastToBase(&other->hlo_names_));
  src_core_ids_.InternalSwap(&other->src_core_ids_);
  dst_core_ids_.InternalSwap(&other->dst_core_ids_);
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_id_, other->channel_id_);
  swap(data_size_, other->data_size_);
  swap(duration_us_, other->duration_us_);
  swap(utilization_, other->utilization_);
  swap(send_delay_us_, other->send_delay_us_);
  swap(occurrences_, other->occurrences_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelInfo::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PodViewerSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodViewerSummary::kWarningsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodViewerSummary::PodViewerSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodViewerSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PodViewerSummary)
}
PodViewerSummary::PodViewerSummary(const PodViewerSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      warnings_(from.warnings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PodViewerSummary)
}

void PodViewerSummary::SharedCtor() {
}

PodViewerSummary::~PodViewerSummary() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PodViewerSummary)
  SharedDtor();
}

void PodViewerSummary::SharedDtor() {
}

void PodViewerSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PodViewerSummary::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodViewerSummary& PodViewerSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodViewerSummary.base);
  return *internal_default_instance();
}


void PodViewerSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PodViewerSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  warnings_.Clear();
  _internal_metadata_.Clear();
}

bool PodViewerSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PodViewerSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string warnings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_warnings()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warnings(this->warnings_size() - 1).data(),
            static_cast<int>(this->warnings(this->warnings_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.PodViewerSummary.warnings"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PodViewerSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PodViewerSummary)
  return false;
#undef DO_
}

void PodViewerSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PodViewerSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string warnings = 1;
  for (int i = 0, n = this->warnings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warnings(i).data(), static_cast<int>(this->warnings(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PodViewerSummary.warnings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->warnings(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PodViewerSummary)
}

::google::protobuf::uint8* PodViewerSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PodViewerSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string warnings = 1;
  for (int i = 0, n = this->warnings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warnings(i).data(), static_cast<int>(this->warnings(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PodViewerSummary.warnings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->warnings(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PodViewerSummary)
  return target;
}

size_t PodViewerSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PodViewerSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string warnings = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->warnings_size());
  for (int i = 0, n = this->warnings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->warnings(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PodViewerSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PodViewerSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const PodViewerSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodViewerSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PodViewerSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PodViewerSummary)
    MergeFrom(*source);
  }
}

void PodViewerSummary::MergeFrom(const PodViewerSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PodViewerSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  warnings_.MergeFrom(from.warnings_);
}

void PodViewerSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PodViewerSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodViewerSummary::CopyFrom(const PodViewerSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PodViewerSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodViewerSummary::IsInitialized() const {
  return true;
}

void PodViewerSummary::Swap(PodViewerSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodViewerSummary::InternalSwap(PodViewerSummary* other) {
  using std::swap;
  warnings_.InternalSwap(CastToBase(&other->warnings_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PodViewerSummary::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PodViewerTopology::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodViewerTopology::kXDimensionFieldNumber;
const int PodViewerTopology::kYDimensionFieldNumber;
const int PodViewerTopology::kZDimensionFieldNumber;
const int PodViewerTopology::kHostXStrideFieldNumber;
const int PodViewerTopology::kHostYStrideFieldNumber;
const int PodViewerTopology::kHostZStrideFieldNumber;
const int PodViewerTopology::kNumCoresPerChipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodViewerTopology::PodViewerTopology()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodViewerTopology.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PodViewerTopology)
}
PodViewerTopology::PodViewerTopology(const PodViewerTopology& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_dimension_, &from.x_dimension_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_cores_per_chip_) -
    reinterpret_cast<char*>(&x_dimension_)) + sizeof(num_cores_per_chip_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PodViewerTopology)
}

void PodViewerTopology::SharedCtor() {
  ::memset(&x_dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_cores_per_chip_) -
      reinterpret_cast<char*>(&x_dimension_)) + sizeof(num_cores_per_chip_));
}

PodViewerTopology::~PodViewerTopology() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PodViewerTopology)
  SharedDtor();
}

void PodViewerTopology::SharedDtor() {
}

void PodViewerTopology::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PodViewerTopology::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodViewerTopology& PodViewerTopology::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodViewerTopology.base);
  return *internal_default_instance();
}


void PodViewerTopology::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PodViewerTopology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_cores_per_chip_) -
      reinterpret_cast<char*>(&x_dimension_)) + sizeof(num_cores_per_chip_));
  _internal_metadata_.Clear();
}

bool PodViewerTopology::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PodViewerTopology)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x_dimension = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y_dimension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z_dimension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 host_x_stride = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_x_stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 host_y_stride = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_y_stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 host_z_stride = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_z_stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_cores_per_chip = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_cores_per_chip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PodViewerTopology)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PodViewerTopology)
  return false;
#undef DO_
}

void PodViewerTopology::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PodViewerTopology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x_dimension = 1;
  if (this->x_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x_dimension(), output);
  }

  // int32 y_dimension = 2;
  if (this->y_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y_dimension(), output);
  }

  // int32 z_dimension = 3;
  if (this->z_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z_dimension(), output);
  }

  // int32 host_x_stride = 4;
  if (this->host_x_stride() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->host_x_stride(), output);
  }

  // int32 host_y_stride = 5;
  if (this->host_y_stride() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->host_y_stride(), output);
  }

  // int32 host_z_stride = 6;
  if (this->host_z_stride() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->host_z_stride(), output);
  }

  // int32 num_cores_per_chip = 7;
  if (this->num_cores_per_chip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->num_cores_per_chip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PodViewerTopology)
}

::google::protobuf::uint8* PodViewerTopology::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PodViewerTopology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x_dimension = 1;
  if (this->x_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x_dimension(), target);
  }

  // int32 y_dimension = 2;
  if (this->y_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y_dimension(), target);
  }

  // int32 z_dimension = 3;
  if (this->z_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z_dimension(), target);
  }

  // int32 host_x_stride = 4;
  if (this->host_x_stride() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->host_x_stride(), target);
  }

  // int32 host_y_stride = 5;
  if (this->host_y_stride() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->host_y_stride(), target);
  }

  // int32 host_z_stride = 6;
  if (this->host_z_stride() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->host_z_stride(), target);
  }

  // int32 num_cores_per_chip = 7;
  if (this->num_cores_per_chip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->num_cores_per_chip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PodViewerTopology)
  return target;
}

size_t PodViewerTopology::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PodViewerTopology)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x_dimension = 1;
  if (this->x_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_dimension());
  }

  // int32 y_dimension = 2;
  if (this->y_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_dimension());
  }

  // int32 z_dimension = 3;
  if (this->z_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z_dimension());
  }

  // int32 host_x_stride = 4;
  if (this->host_x_stride() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->host_x_stride());
  }

  // int32 host_y_stride = 5;
  if (this->host_y_stride() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->host_y_stride());
  }

  // int32 host_z_stride = 6;
  if (this->host_z_stride() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->host_z_stride());
  }

  // int32 num_cores_per_chip = 7;
  if (this->num_cores_per_chip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_cores_per_chip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PodViewerTopology::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PodViewerTopology)
  GOOGLE_DCHECK_NE(&from, this);
  const PodViewerTopology* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodViewerTopology>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PodViewerTopology)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PodViewerTopology)
    MergeFrom(*source);
  }
}

void PodViewerTopology::MergeFrom(const PodViewerTopology& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PodViewerTopology)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_dimension() != 0) {
    set_x_dimension(from.x_dimension());
  }
  if (from.y_dimension() != 0) {
    set_y_dimension(from.y_dimension());
  }
  if (from.z_dimension() != 0) {
    set_z_dimension(from.z_dimension());
  }
  if (from.host_x_stride() != 0) {
    set_host_x_stride(from.host_x_stride());
  }
  if (from.host_y_stride() != 0) {
    set_host_y_stride(from.host_y_stride());
  }
  if (from.host_z_stride() != 0) {
    set_host_z_stride(from.host_z_stride());
  }
  if (from.num_cores_per_chip() != 0) {
    set_num_cores_per_chip(from.num_cores_per_chip());
  }
}

void PodViewerTopology::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PodViewerTopology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodViewerTopology::CopyFrom(const PodViewerTopology& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PodViewerTopology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodViewerTopology::IsInitialized() const {
  return true;
}

void PodViewerTopology::Swap(PodViewerTopology* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodViewerTopology::InternalSwap(PodViewerTopology* other) {
  using std::swap;
  swap(x_dimension_, other->x_dimension_);
  swap(y_dimension_, other->y_dimension_);
  swap(z_dimension_, other->z_dimension_);
  swap(host_x_stride_, other->host_x_stride_);
  swap(host_y_stride_, other->host_y_stride_);
  swap(host_z_stride_, other->host_z_stride_);
  swap(num_cores_per_chip_, other->num_cores_per_chip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PodViewerTopology::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PodViewerDatabase::InitAsDefaultInstance() {
  ::tensorflow::profiler::_PodViewerDatabase_default_instance_._instance.get_mutable()->pod_stats_sequence_ = const_cast< ::tensorflow::profiler::PodStatsSequence*>(
      ::tensorflow::profiler::PodStatsSequence::internal_default_instance());
  ::tensorflow::profiler::_PodViewerDatabase_default_instance_._instance.get_mutable()->summary_ = const_cast< ::tensorflow::profiler::PodViewerSummary*>(
      ::tensorflow::profiler::PodViewerSummary::internal_default_instance());
  ::tensorflow::profiler::_PodViewerDatabase_default_instance_._instance.get_mutable()->diagnostics_ = const_cast< ::tensorflow::profiler::Diagnostics*>(
      ::tensorflow::profiler::Diagnostics::internal_default_instance());
  ::tensorflow::profiler::_PodViewerDatabase_default_instance_._instance.get_mutable()->topology_ = const_cast< ::tensorflow::profiler::PodViewerTopology*>(
      ::tensorflow::profiler::PodViewerTopology::internal_default_instance());
}
void PodViewerDatabase::clear_diagnostics() {
  if (GetArenaNoVirtual() == NULL && diagnostics_ != NULL) {
    delete diagnostics_;
  }
  diagnostics_ = NULL;
}
void PodViewerDatabase::clear_step_breakdown_events() {
  step_breakdown_events_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodViewerDatabase::kDeviceTypeFieldNumber;
const int PodViewerDatabase::kPodStatsSequenceFieldNumber;
const int PodViewerDatabase::kSummaryFieldNumber;
const int PodViewerDatabase::kDiagnosticsFieldNumber;
const int PodViewerDatabase::kStepBreakdownEventsFieldNumber;
const int PodViewerDatabase::kTopologyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodViewerDatabase::PodViewerDatabase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodViewerDatabase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PodViewerDatabase)
}
PodViewerDatabase::PodViewerDatabase(const PodViewerDatabase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      step_breakdown_events_(from.step_breakdown_events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.has_pod_stats_sequence()) {
    pod_stats_sequence_ = new ::tensorflow::profiler::PodStatsSequence(*from.pod_stats_sequence_);
  } else {
    pod_stats_sequence_ = NULL;
  }
  if (from.has_summary()) {
    summary_ = new ::tensorflow::profiler::PodViewerSummary(*from.summary_);
  } else {
    summary_ = NULL;
  }
  if (from.has_diagnostics()) {
    diagnostics_ = new ::tensorflow::profiler::Diagnostics(*from.diagnostics_);
  } else {
    diagnostics_ = NULL;
  }
  if (from.has_topology()) {
    topology_ = new ::tensorflow::profiler::PodViewerTopology(*from.topology_);
  } else {
    topology_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PodViewerDatabase)
}

void PodViewerDatabase::SharedCtor() {
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pod_stats_sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&topology_) -
      reinterpret_cast<char*>(&pod_stats_sequence_)) + sizeof(topology_));
}

PodViewerDatabase::~PodViewerDatabase() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PodViewerDatabase)
  SharedDtor();
}

void PodViewerDatabase::SharedDtor() {
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pod_stats_sequence_;
  if (this != internal_default_instance()) delete summary_;
  if (this != internal_default_instance()) delete diagnostics_;
  if (this != internal_default_instance()) delete topology_;
}

void PodViewerDatabase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PodViewerDatabase::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodViewerDatabase& PodViewerDatabase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::scc_info_PodViewerDatabase.base);
  return *internal_default_instance();
}


void PodViewerDatabase::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PodViewerDatabase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_breakdown_events_.Clear();
  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pod_stats_sequence_ != NULL) {
    delete pod_stats_sequence_;
  }
  pod_stats_sequence_ = NULL;
  if (GetArenaNoVirtual() == NULL && summary_ != NULL) {
    delete summary_;
  }
  summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && diagnostics_ != NULL) {
    delete diagnostics_;
  }
  diagnostics_ = NULL;
  if (GetArenaNoVirtual() == NULL && topology_ != NULL) {
    delete topology_;
  }
  topology_ = NULL;
  _internal_metadata_.Clear();
}

bool PodViewerDatabase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PodViewerDatabase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.profiler.PodStatsSequence pod_stats_sequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pod_stats_sequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.PodViewerSummary summary = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.Diagnostics diagnostics = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.StepBreakdownEvents step_breakdown_events = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_step_breakdown_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.PodViewerDatabase.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.PodViewerTopology topology = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topology()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PodViewerDatabase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PodViewerDatabase)
  return false;
#undef DO_
}

void PodViewerDatabase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PodViewerDatabase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.PodStatsSequence pod_stats_sequence = 3;
  if (this->has_pod_stats_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pod_stats_sequence(), output);
  }

  // .tensorflow.profiler.PodViewerSummary summary = 7;
  if (this->has_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_summary(), output);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 8;
  if (this->has_diagnostics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_diagnostics(), output);
  }

  // repeated .tensorflow.profiler.StepBreakdownEvents step_breakdown_events = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_breakdown_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->step_breakdown_events(static_cast<int>(i)),
      output);
  }

  // string device_type = 10;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PodViewerDatabase.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->device_type(), output);
  }

  // .tensorflow.profiler.PodViewerTopology topology = 11;
  if (this->has_topology()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_topology(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PodViewerDatabase)
}

::google::protobuf::uint8* PodViewerDatabase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PodViewerDatabase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.PodStatsSequence pod_stats_sequence = 3;
  if (this->has_pod_stats_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pod_stats_sequence(), deterministic, target);
  }

  // .tensorflow.profiler.PodViewerSummary summary = 7;
  if (this->has_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_summary(), deterministic, target);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 8;
  if (this->has_diagnostics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_diagnostics(), deterministic, target);
  }

  // repeated .tensorflow.profiler.StepBreakdownEvents step_breakdown_events = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_breakdown_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->step_breakdown_events(static_cast<int>(i)), deterministic, target);
  }

  // string device_type = 10;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PodViewerDatabase.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->device_type(), target);
  }

  // .tensorflow.profiler.PodViewerTopology topology = 11;
  if (this->has_topology()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_topology(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PodViewerDatabase)
  return target;
}

size_t PodViewerDatabase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PodViewerDatabase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.StepBreakdownEvents step_breakdown_events = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->step_breakdown_events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->step_breakdown_events(static_cast<int>(i)));
    }
  }

  // string device_type = 10;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // .tensorflow.profiler.PodStatsSequence pod_stats_sequence = 3;
  if (this->has_pod_stats_sequence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pod_stats_sequence_);
  }

  // .tensorflow.profiler.PodViewerSummary summary = 7;
  if (this->has_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *summary_);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 8;
  if (this->has_diagnostics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *diagnostics_);
  }

  // .tensorflow.profiler.PodViewerTopology topology = 11;
  if (this->has_topology()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *topology_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PodViewerDatabase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PodViewerDatabase)
  GOOGLE_DCHECK_NE(&from, this);
  const PodViewerDatabase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodViewerDatabase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PodViewerDatabase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PodViewerDatabase)
    MergeFrom(*source);
  }
}

void PodViewerDatabase::MergeFrom(const PodViewerDatabase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PodViewerDatabase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  step_breakdown_events_.MergeFrom(from.step_breakdown_events_);
  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.has_pod_stats_sequence()) {
    mutable_pod_stats_sequence()->::tensorflow::profiler::PodStatsSequence::MergeFrom(from.pod_stats_sequence());
  }
  if (from.has_summary()) {
    mutable_summary()->::tensorflow::profiler::PodViewerSummary::MergeFrom(from.summary());
  }
  if (from.has_diagnostics()) {
    mutable_diagnostics()->::tensorflow::profiler::Diagnostics::MergeFrom(from.diagnostics());
  }
  if (from.has_topology()) {
    mutable_topology()->::tensorflow::profiler::PodViewerTopology::MergeFrom(from.topology());
  }
}

void PodViewerDatabase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PodViewerDatabase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodViewerDatabase::CopyFrom(const PodViewerDatabase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PodViewerDatabase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodViewerDatabase::IsInitialized() const {
  return true;
}

void PodViewerDatabase::Swap(PodViewerDatabase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodViewerDatabase::InternalSwap(PodViewerDatabase* other) {
  using std::swap;
  CastToBase(&step_breakdown_events_)->InternalSwap(CastToBase(&other->step_breakdown_events_));
  device_type_.Swap(&other->device_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pod_stats_sequence_, other->pod_stats_sequence_);
  swap(summary_, other->summary_);
  swap(diagnostics_, other->diagnostics_);
  swap(topology_, other->topology_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PodViewerDatabase::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fviewer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::ReplicaGroup* Arena::CreateMaybeMessage< ::tensorflow::profiler::ReplicaGroup >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::ReplicaGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::AllReduceOpInfo* Arena::CreateMaybeMessage< ::tensorflow::profiler::AllReduceOpInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::AllReduceOpInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PodStatsMap_PodStatsPerCoreEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PodStatsMap_CoreIdToReplicaIdMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PodStatsMap* Arena::CreateMaybeMessage< ::tensorflow::profiler::PodStatsMap >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PodStatsMap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PodStatsSequence* Arena::CreateMaybeMessage< ::tensorflow::profiler::PodStatsSequence >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PodStatsSequence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::ChannelInfo* Arena::CreateMaybeMessage< ::tensorflow::profiler::ChannelInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::ChannelInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PodViewerSummary* Arena::CreateMaybeMessage< ::tensorflow::profiler::PodViewerSummary >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PodViewerSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PodViewerTopology* Arena::CreateMaybeMessage< ::tensorflow::profiler::PodViewerTopology >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PodViewerTopology >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PodViewerDatabase* Arena::CreateMaybeMessage< ::tensorflow::profiler::PodViewerDatabase >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PodViewerDatabase >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
