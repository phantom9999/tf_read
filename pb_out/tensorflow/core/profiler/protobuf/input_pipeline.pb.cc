// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/input_pipeline.proto

#include "tensorflow/core/profiler/protobuf/input_pipeline.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Diagnostics;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InputOpDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InputTimeBreakdown;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StepSummary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputPipelineAnalysisRecommendation;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
namespace tensorflow {
namespace profiler {
class BottleneckAnalysisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BottleneckAnalysis>
      _instance;
} _BottleneckAnalysis_default_instance_;
class StepSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StepSummary>
      _instance;
} _StepSummary_default_instance_;
class PerGenericStepDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerGenericStepDetails>
      _instance;
} _PerGenericStepDetails_default_instance_;
class InputTimeBreakdownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputTimeBreakdown>
      _instance;
} _InputTimeBreakdown_default_instance_;
class InputOpDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputOpDetails>
      _instance;
} _InputOpDetails_default_instance_;
class InputPipelineAnalysisRecommendationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputPipelineAnalysisRecommendation>
      _instance;
} _InputPipelineAnalysisRecommendation_default_instance_;
class GenericStepTimeBreakdownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericStepTimeBreakdown>
      _instance;
} _GenericStepTimeBreakdown_default_instance_;
class InputPipelineAnalysisResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputPipelineAnalysisResult>
      _instance;
} _InputPipelineAnalysisResult_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto {
static void InitDefaultsBottleneckAnalysis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_BottleneckAnalysis_default_instance_;
    new (ptr) ::tensorflow::profiler::BottleneckAnalysis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::BottleneckAnalysis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BottleneckAnalysis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBottleneckAnalysis}, {}};

static void InitDefaultsStepSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_StepSummary_default_instance_;
    new (ptr) ::tensorflow::profiler::StepSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::StepSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StepSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStepSummary}, {}};

static void InitDefaultsPerGenericStepDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PerGenericStepDetails_default_instance_;
    new (ptr) ::tensorflow::profiler::PerGenericStepDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PerGenericStepDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PerGenericStepDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPerGenericStepDetails}, {}};

static void InitDefaultsInputTimeBreakdown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_InputTimeBreakdown_default_instance_;
    new (ptr) ::tensorflow::profiler::InputTimeBreakdown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::InputTimeBreakdown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InputTimeBreakdown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInputTimeBreakdown}, {}};

static void InitDefaultsInputOpDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_InputOpDetails_default_instance_;
    new (ptr) ::tensorflow::profiler::InputOpDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::InputOpDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InputOpDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInputOpDetails}, {}};

static void InitDefaultsInputPipelineAnalysisRecommendation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_InputPipelineAnalysisRecommendation_default_instance_;
    new (ptr) ::tensorflow::profiler::InputPipelineAnalysisRecommendation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputPipelineAnalysisRecommendation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputPipelineAnalysisRecommendation}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsGenericStepTimeBreakdown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_;
    new (ptr) ::tensorflow::profiler::GenericStepTimeBreakdown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::GenericStepTimeBreakdown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GenericStepTimeBreakdown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGenericStepTimeBreakdown}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_StepSummary.base,}};

static void InitDefaultsInputPipelineAnalysisResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_InputPipelineAnalysisResult_default_instance_;
    new (ptr) ::tensorflow::profiler::InputPipelineAnalysisResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::InputPipelineAnalysisResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_InputPipelineAnalysisResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsInputPipelineAnalysisResult}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_StepSummary.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputTimeBreakdown.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputOpDetails.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputPipelineAnalysisRecommendation.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto::scc_info_Diagnostics.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BottleneckAnalysis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StepSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PerGenericStepDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputTimeBreakdown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputOpDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputPipelineAnalysisRecommendation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenericStepTimeBreakdown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputPipelineAnalysisResult.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, input_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, output_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, idle_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, compute_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, input_classification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, input_statement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, kernel_launch_classification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, kernel_launch_statement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, all_other_classification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, all_other_statement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, device_collectives_classification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BottleneckAnalysis, device_collectives_statement_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::StepSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::StepSummary, average_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::StepSummary, standard_deviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::StepSummary, minimum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::StepSummary, maximum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, step_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, step_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, step_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, unknown_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, host_wait_input_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, host_to_device_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, output_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, device_compute_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, device_to_device_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, device_collectives_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, host_compute_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, host_prepare_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerGenericStepDetails, host_compile_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputTimeBreakdown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputTimeBreakdown, demanded_file_read_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputTimeBreakdown, advanced_file_read_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputTimeBreakdown, preprocessing_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputTimeBreakdown, enqueue_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputTimeBreakdown, unclassified_non_enqueue_us_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputOpDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputOpDetails, op_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputOpDetails, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputOpDetails, time_in_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputOpDetails, time_in_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputOpDetails, self_time_in_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputOpDetails, self_time_in_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputOpDetails, category_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisRecommendation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisRecommendation, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisRecommendation, bottleneck_analysis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisRecommendation, summary_next_step_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, unknown_time_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, host_wait_input_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, host_to_device_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, input_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, output_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, device_compute_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, device_to_device_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, device_collectives_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, host_compute_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, host_prepare_ms_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericStepTimeBreakdown, host_compile_ms_summary_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, hardware_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, step_time_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, input_percent_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, input_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, output_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, idle_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, compute_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, step_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, input_time_breakdown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, input_op_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, recommendation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, step_time_breakdown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineAnalysisResult, diagnostics_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::BottleneckAnalysis)},
  { 17, -1, sizeof(::tensorflow::profiler::StepSummary)},
  { 26, -1, sizeof(::tensorflow::profiler::PerGenericStepDetails)},
  { 44, -1, sizeof(::tensorflow::profiler::InputTimeBreakdown)},
  { 54, -1, sizeof(::tensorflow::profiler::InputOpDetails)},
  { 66, -1, sizeof(::tensorflow::profiler::InputPipelineAnalysisRecommendation)},
  { 74, -1, sizeof(::tensorflow::profiler::GenericStepTimeBreakdown)},
  { 90, -1, sizeof(::tensorflow::profiler::InputPipelineAnalysisResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_BottleneckAnalysis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_StepSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PerGenericStepDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_InputTimeBreakdown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_InputOpDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_InputPipelineAnalysisRecommendation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_InputPipelineAnalysisResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/input_pipeline.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n6tensorflow/core/profiler/protobuf/inpu"
      "t_pipeline.proto\022\023tensorflow.profiler\032\031g"
      "oogle/protobuf/any.proto\0323tensorflow/cor"
      "e/profiler/protobuf/diagnostics.proto\"\200\003"
      "\n\022BottleneckAnalysis\022\025\n\rinput_percent\030\007 "
      "\001(\001\022\026\n\016output_percent\030\010 \001(\001\022\024\n\014idle_perc"
      "ent\030\t \001(\001\022\027\n\017compute_percent\030\n \001(\001\022\034\n\024in"
      "put_classification\030\001 \001(\t\022\027\n\017input_statem"
      "ent\030\002 \001(\t\022$\n\034kernel_launch_classificatio"
      "n\030\003 \001(\t\022\037\n\027kernel_launch_statement\030\004 \001(\t"
      "\022 \n\030all_other_classification\030\005 \001(\t\022\033\n\023al"
      "l_other_statement\030\006 \001(\t\022)\n!device_collec"
      "tives_classification\030\013 \001(\t\022$\n\034device_col"
      "lectives_statement\030\014 \001(\t\"\\\n\013StepSummary\022"
      "\017\n\007average\030\001 \001(\001\022\032\n\022standard_deviation\030\002"
      " \001(\001\022\017\n\007minimum\030\003 \001(\001\022\017\n\007maximum\030\004 \001(\001\"\340"
      "\002\n\025PerGenericStepDetails\022\023\n\013step_number\030"
      "\001 \001(\005\022\021\n\tstep_name\030\016 \001(\t\022\024\n\014step_time_ms"
      "\030\002 \001(\001\022\027\n\017unknown_time_ms\030\003 \001(\001\022\032\n\022host_"
      "wait_input_ms\030\013 \001(\001\022\031\n\021host_to_device_ms"
      "\030\014 \001(\001\022\021\n\toutput_ms\030\005 \001(\001\022\031\n\021device_comp"
      "ute_ms\030\006 \001(\001\022\033\n\023device_to_device_ms\030\007 \001("
      "\001\022\035\n\025device_collectives_ms\030\r \001(\001\022\027\n\017host"
      "_compute_ms\030\010 \001(\001\022\027\n\017host_prepare_ms\030\t \001"
      "(\001\022\027\n\017host_compile_ms\030\n \001(\001J\004\010\004\020\005\"\245\001\n\022In"
      "putTimeBreakdown\022\035\n\025demanded_file_read_u"
      "s\030\001 \001(\001\022\035\n\025advanced_file_read_us\030\002 \001(\001\022\030"
      "\n\020preprocessing_us\030\003 \001(\001\022\022\n\nenqueue_us\030\004"
      " \001(\001\022#\n\033unclassified_non_enqueue_us\030\005 \001("
      "\001\"\246\001\n\016InputOpDetails\022\017\n\007op_name\030\001 \001(\t\022\r\n"
      "\005count\030\002 \001(\004\022\022\n\ntime_in_ms\030\003 \001(\001\022\027\n\017time"
      "_in_percent\030\004 \001(\001\022\027\n\017self_time_in_ms\030\005 \001"
      "(\001\022\034\n\024self_time_in_percent\030\006 \001(\001\022\020\n\010cate"
      "gory\030\007 \001(\t\"\204\001\n#InputPipelineAnalysisReco"
      "mmendation\022\017\n\007details\030\001 \003(\t\0221\n\023bottlenec"
      "k_analysis\030\002 \001(\0132\024.google.protobuf.Any\022\031"
      "\n\021summary_next_step\030\003 \001(\t\"\205\006\n\030GenericSte"
      "pTimeBreakdown\022A\n\027unknown_time_ms_summar"
      "y\030\001 \001(\0132 .tensorflow.profiler.StepSummar"
      "y\022D\n\032host_wait_input_ms_summary\030\t \001(\0132 ."
      "tensorflow.profiler.StepSummary\022C\n\031host_"
      "to_device_ms_summary\030\n \001(\0132 .tensorflow."
      "profiler.StepSummary\022:\n\020input_ms_summary"
      "\030\013 \001(\0132 .tensorflow.profiler.StepSummary"
      "\022;\n\021output_ms_summary\030\003 \001(\0132 .tensorflow"
      ".profiler.StepSummary\022C\n\031device_compute_"
      "ms_summary\030\004 \001(\0132 .tensorflow.profiler.S"
      "tepSummary\022E\n\033device_to_device_ms_summar"
      "y\030\005 \001(\0132 .tensorflow.profiler.StepSummar"
      "y\022G\n\035device_collectives_ms_summary\030\014 \001(\013"
      "2 .tensorflow.profiler.StepSummary\022A\n\027ho"
      "st_compute_ms_summary\030\006 \001(\0132 .tensorflow"
      ".profiler.StepSummary\022A\n\027host_prepare_ms"
      "_summary\030\007 \001(\0132 .tensorflow.profiler.Ste"
      "pSummary\022A\n\027host_compile_ms_summary\030\010 \001("
      "\0132 .tensorflow.profiler.StepSummaryJ\004\010\002\020"
      "\003\"\212\005\n\033InputPipelineAnalysisResult\022\025\n\rhar"
      "dware_type\030\t \001(\t\022;\n\021step_time_summary\030\002 "
      "\001(\0132 .tensorflow.profiler.StepSummary\022\?\n"
      "\025input_percent_summary\030\003 \001(\0132 .tensorflo"
      "w.profiler.StepSummary\022\025\n\rinput_percent\030"
      "\013 \001(\001\022\026\n\016output_percent\030\r \001(\001\022\024\n\014idle_pe"
      "rcent\030\016 \001(\001\022\027\n\017compute_percent\030\017 \001(\001\022*\n\014"
      "step_details\030\004 \003(\0132\024.google.protobuf.Any"
      "\022E\n\024input_time_breakdown\030\005 \001(\0132\'.tensorf"
      "low.profiler.InputTimeBreakdown\022=\n\020input"
      "_op_details\030\006 \003(\0132#.tensorflow.profiler."
      "InputOpDetails\022P\n\016recommendation\030\007 \001(\01328"
      ".tensorflow.profiler.InputPipelineAnalys"
      "isRecommendation\0221\n\023step_time_breakdown\030"
      "\010 \001(\0132\024.google.protobuf.Any\0225\n\013diagnosti"
      "cs\030\014 \001(\0132 .tensorflow.profiler.Diagnosti"
      "csJ\004\010\001\020\002J\004\010\n\020\013b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2902);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/input_pipeline.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
namespace tensorflow {
namespace profiler {

// ===================================================================

void BottleneckAnalysis::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BottleneckAnalysis::kInputPercentFieldNumber;
const int BottleneckAnalysis::kOutputPercentFieldNumber;
const int BottleneckAnalysis::kIdlePercentFieldNumber;
const int BottleneckAnalysis::kComputePercentFieldNumber;
const int BottleneckAnalysis::kInputClassificationFieldNumber;
const int BottleneckAnalysis::kInputStatementFieldNumber;
const int BottleneckAnalysis::kKernelLaunchClassificationFieldNumber;
const int BottleneckAnalysis::kKernelLaunchStatementFieldNumber;
const int BottleneckAnalysis::kAllOtherClassificationFieldNumber;
const int BottleneckAnalysis::kAllOtherStatementFieldNumber;
const int BottleneckAnalysis::kDeviceCollectivesClassificationFieldNumber;
const int BottleneckAnalysis::kDeviceCollectivesStatementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BottleneckAnalysis::BottleneckAnalysis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_BottleneckAnalysis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.BottleneckAnalysis)
}
BottleneckAnalysis::BottleneckAnalysis(const BottleneckAnalysis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_classification().size() > 0) {
    input_classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_classification_);
  }
  input_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_statement().size() > 0) {
    input_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_statement_);
  }
  kernel_launch_classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kernel_launch_classification().size() > 0) {
    kernel_launch_classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_launch_classification_);
  }
  kernel_launch_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kernel_launch_statement().size() > 0) {
    kernel_launch_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_launch_statement_);
  }
  all_other_classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.all_other_classification().size() > 0) {
    all_other_classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.all_other_classification_);
  }
  all_other_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.all_other_statement().size() > 0) {
    all_other_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.all_other_statement_);
  }
  device_collectives_classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_collectives_classification().size() > 0) {
    device_collectives_classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_collectives_classification_);
  }
  device_collectives_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_collectives_statement().size() > 0) {
    device_collectives_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_collectives_statement_);
  }
  ::memcpy(&input_percent_, &from.input_percent_,
    static_cast<size_t>(reinterpret_cast<char*>(&compute_percent_) -
    reinterpret_cast<char*>(&input_percent_)) + sizeof(compute_percent_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.BottleneckAnalysis)
}

void BottleneckAnalysis::SharedCtor() {
  input_classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_percent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compute_percent_) -
      reinterpret_cast<char*>(&input_percent_)) + sizeof(compute_percent_));
}

BottleneckAnalysis::~BottleneckAnalysis() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.BottleneckAnalysis)
  SharedDtor();
}

void BottleneckAnalysis::SharedDtor() {
  input_classification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_classification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_classification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_classification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BottleneckAnalysis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BottleneckAnalysis::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BottleneckAnalysis& BottleneckAnalysis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_BottleneckAnalysis.base);
  return *internal_default_instance();
}


void BottleneckAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.BottleneckAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_percent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compute_percent_) -
      reinterpret_cast<char*>(&input_percent_)) + sizeof(compute_percent_));
  _internal_metadata_.Clear();
}

bool BottleneckAnalysis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.BottleneckAnalysis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string input_classification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_classification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_classification().data(), static_cast<int>(this->input_classification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BottleneckAnalysis.input_classification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input_statement = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_statement().data(), static_cast<int>(this->input_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BottleneckAnalysis.input_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kernel_launch_classification = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kernel_launch_classification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kernel_launch_classification().data(), static_cast<int>(this->kernel_launch_classification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kernel_launch_statement = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kernel_launch_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kernel_launch_statement().data(), static_cast<int>(this->kernel_launch_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string all_other_classification = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_all_other_classification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->all_other_classification().data(), static_cast<int>(this->all_other_classification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BottleneckAnalysis.all_other_classification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string all_other_statement = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_all_other_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->all_other_statement().data(), static_cast<int>(this->all_other_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BottleneckAnalysis.all_other_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double input_percent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &input_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double output_percent = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double idle_percent = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &idle_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double compute_percent = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &compute_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_collectives_classification = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_collectives_classification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_collectives_classification().data(), static_cast<int>(this->device_collectives_classification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BottleneckAnalysis.device_collectives_classification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_collectives_statement = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_collectives_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_collectives_statement().data(), static_cast<int>(this->device_collectives_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BottleneckAnalysis.device_collectives_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.BottleneckAnalysis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.BottleneckAnalysis)
  return false;
#undef DO_
}

void BottleneckAnalysis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.BottleneckAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_classification = 1;
  if (this->input_classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_classification().data(), static_cast<int>(this->input_classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.input_classification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->input_classification(), output);
  }

  // string input_statement = 2;
  if (this->input_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_statement().data(), static_cast<int>(this->input_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.input_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->input_statement(), output);
  }

  // string kernel_launch_classification = 3;
  if (this->kernel_launch_classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_launch_classification().data(), static_cast<int>(this->kernel_launch_classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->kernel_launch_classification(), output);
  }

  // string kernel_launch_statement = 4;
  if (this->kernel_launch_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_launch_statement().data(), static_cast<int>(this->kernel_launch_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->kernel_launch_statement(), output);
  }

  // string all_other_classification = 5;
  if (this->all_other_classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_other_classification().data(), static_cast<int>(this->all_other_classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.all_other_classification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->all_other_classification(), output);
  }

  // string all_other_statement = 6;
  if (this->all_other_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_other_statement().data(), static_cast<int>(this->all_other_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.all_other_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->all_other_statement(), output);
  }

  // double input_percent = 7;
  if (this->input_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->input_percent(), output);
  }

  // double output_percent = 8;
  if (this->output_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->output_percent(), output);
  }

  // double idle_percent = 9;
  if (this->idle_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->idle_percent(), output);
  }

  // double compute_percent = 10;
  if (this->compute_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->compute_percent(), output);
  }

  // string device_collectives_classification = 11;
  if (this->device_collectives_classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_collectives_classification().data(), static_cast<int>(this->device_collectives_classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.device_collectives_classification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->device_collectives_classification(), output);
  }

  // string device_collectives_statement = 12;
  if (this->device_collectives_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_collectives_statement().data(), static_cast<int>(this->device_collectives_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.device_collectives_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->device_collectives_statement(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.BottleneckAnalysis)
}

::google::protobuf::uint8* BottleneckAnalysis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.BottleneckAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_classification = 1;
  if (this->input_classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_classification().data(), static_cast<int>(this->input_classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.input_classification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->input_classification(), target);
  }

  // string input_statement = 2;
  if (this->input_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_statement().data(), static_cast<int>(this->input_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.input_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->input_statement(), target);
  }

  // string kernel_launch_classification = 3;
  if (this->kernel_launch_classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_launch_classification().data(), static_cast<int>(this->kernel_launch_classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->kernel_launch_classification(), target);
  }

  // string kernel_launch_statement = 4;
  if (this->kernel_launch_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_launch_statement().data(), static_cast<int>(this->kernel_launch_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->kernel_launch_statement(), target);
  }

  // string all_other_classification = 5;
  if (this->all_other_classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_other_classification().data(), static_cast<int>(this->all_other_classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.all_other_classification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->all_other_classification(), target);
  }

  // string all_other_statement = 6;
  if (this->all_other_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_other_statement().data(), static_cast<int>(this->all_other_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.all_other_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->all_other_statement(), target);
  }

  // double input_percent = 7;
  if (this->input_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->input_percent(), target);
  }

  // double output_percent = 8;
  if (this->output_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->output_percent(), target);
  }

  // double idle_percent = 9;
  if (this->idle_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->idle_percent(), target);
  }

  // double compute_percent = 10;
  if (this->compute_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->compute_percent(), target);
  }

  // string device_collectives_classification = 11;
  if (this->device_collectives_classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_collectives_classification().data(), static_cast<int>(this->device_collectives_classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.device_collectives_classification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->device_collectives_classification(), target);
  }

  // string device_collectives_statement = 12;
  if (this->device_collectives_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_collectives_statement().data(), static_cast<int>(this->device_collectives_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BottleneckAnalysis.device_collectives_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->device_collectives_statement(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.BottleneckAnalysis)
  return target;
}

size_t BottleneckAnalysis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.BottleneckAnalysis)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string input_classification = 1;
  if (this->input_classification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_classification());
  }

  // string input_statement = 2;
  if (this->input_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_statement());
  }

  // string kernel_launch_classification = 3;
  if (this->kernel_launch_classification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kernel_launch_classification());
  }

  // string kernel_launch_statement = 4;
  if (this->kernel_launch_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kernel_launch_statement());
  }

  // string all_other_classification = 5;
  if (this->all_other_classification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->all_other_classification());
  }

  // string all_other_statement = 6;
  if (this->all_other_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->all_other_statement());
  }

  // string device_collectives_classification = 11;
  if (this->device_collectives_classification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_collectives_classification());
  }

  // string device_collectives_statement = 12;
  if (this->device_collectives_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_collectives_statement());
  }

  // double input_percent = 7;
  if (this->input_percent() != 0) {
    total_size += 1 + 8;
  }

  // double output_percent = 8;
  if (this->output_percent() != 0) {
    total_size += 1 + 8;
  }

  // double idle_percent = 9;
  if (this->idle_percent() != 0) {
    total_size += 1 + 8;
  }

  // double compute_percent = 10;
  if (this->compute_percent() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BottleneckAnalysis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.BottleneckAnalysis)
  GOOGLE_DCHECK_NE(&from, this);
  const BottleneckAnalysis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BottleneckAnalysis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.BottleneckAnalysis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.BottleneckAnalysis)
    MergeFrom(*source);
  }
}

void BottleneckAnalysis::MergeFrom(const BottleneckAnalysis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.BottleneckAnalysis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input_classification().size() > 0) {

    input_classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_classification_);
  }
  if (from.input_statement().size() > 0) {

    input_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_statement_);
  }
  if (from.kernel_launch_classification().size() > 0) {

    kernel_launch_classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_launch_classification_);
  }
  if (from.kernel_launch_statement().size() > 0) {

    kernel_launch_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_launch_statement_);
  }
  if (from.all_other_classification().size() > 0) {

    all_other_classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.all_other_classification_);
  }
  if (from.all_other_statement().size() > 0) {

    all_other_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.all_other_statement_);
  }
  if (from.device_collectives_classification().size() > 0) {

    device_collectives_classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_collectives_classification_);
  }
  if (from.device_collectives_statement().size() > 0) {

    device_collectives_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_collectives_statement_);
  }
  if (from.input_percent() != 0) {
    set_input_percent(from.input_percent());
  }
  if (from.output_percent() != 0) {
    set_output_percent(from.output_percent());
  }
  if (from.idle_percent() != 0) {
    set_idle_percent(from.idle_percent());
  }
  if (from.compute_percent() != 0) {
    set_compute_percent(from.compute_percent());
  }
}

void BottleneckAnalysis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.BottleneckAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BottleneckAnalysis::CopyFrom(const BottleneckAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.BottleneckAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BottleneckAnalysis::IsInitialized() const {
  return true;
}

void BottleneckAnalysis::Swap(BottleneckAnalysis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BottleneckAnalysis::InternalSwap(BottleneckAnalysis* other) {
  using std::swap;
  input_classification_.Swap(&other->input_classification_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_statement_.Swap(&other->input_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kernel_launch_classification_.Swap(&other->kernel_launch_classification_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kernel_launch_statement_.Swap(&other->kernel_launch_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  all_other_classification_.Swap(&other->all_other_classification_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  all_other_statement_.Swap(&other->all_other_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_collectives_classification_.Swap(&other->device_collectives_classification_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_collectives_statement_.Swap(&other->device_collectives_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_percent_, other->input_percent_);
  swap(output_percent_, other->output_percent_);
  swap(idle_percent_, other->idle_percent_);
  swap(compute_percent_, other->compute_percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BottleneckAnalysis::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StepSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StepSummary::kAverageFieldNumber;
const int StepSummary::kStandardDeviationFieldNumber;
const int StepSummary::kMinimumFieldNumber;
const int StepSummary::kMaximumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StepSummary::StepSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_StepSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.StepSummary)
}
StepSummary::StepSummary(const StepSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&average_, &from.average_,
    static_cast<size_t>(reinterpret_cast<char*>(&maximum_) -
    reinterpret_cast<char*>(&average_)) + sizeof(maximum_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.StepSummary)
}

void StepSummary::SharedCtor() {
  ::memset(&average_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&average_)) + sizeof(maximum_));
}

StepSummary::~StepSummary() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.StepSummary)
  SharedDtor();
}

void StepSummary::SharedDtor() {
}

void StepSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StepSummary::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StepSummary& StepSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_StepSummary.base);
  return *internal_default_instance();
}


void StepSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.StepSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&average_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&average_)) + sizeof(maximum_));
  _internal_metadata_.Clear();
}

bool StepSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.StepSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double average = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &average_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double standard_deviation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &standard_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double minimum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double maximum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.StepSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.StepSummary)
  return false;
#undef DO_
}

void StepSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.StepSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double average = 1;
  if (this->average() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->average(), output);
  }

  // double standard_deviation = 2;
  if (this->standard_deviation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->standard_deviation(), output);
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->minimum(), output);
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->maximum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.StepSummary)
}

::google::protobuf::uint8* StepSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.StepSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double average = 1;
  if (this->average() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->average(), target);
  }

  // double standard_deviation = 2;
  if (this->standard_deviation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->standard_deviation(), target);
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->minimum(), target);
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->maximum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.StepSummary)
  return target;
}

size_t StepSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.StepSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double average = 1;
  if (this->average() != 0) {
    total_size += 1 + 8;
  }

  // double standard_deviation = 2;
  if (this->standard_deviation() != 0) {
    total_size += 1 + 8;
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    total_size += 1 + 8;
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StepSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.StepSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const StepSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StepSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.StepSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.StepSummary)
    MergeFrom(*source);
  }
}

void StepSummary::MergeFrom(const StepSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.StepSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.average() != 0) {
    set_average(from.average());
  }
  if (from.standard_deviation() != 0) {
    set_standard_deviation(from.standard_deviation());
  }
  if (from.minimum() != 0) {
    set_minimum(from.minimum());
  }
  if (from.maximum() != 0) {
    set_maximum(from.maximum());
  }
}

void StepSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.StepSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StepSummary::CopyFrom(const StepSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.StepSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepSummary::IsInitialized() const {
  return true;
}

void StepSummary::Swap(StepSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StepSummary::InternalSwap(StepSummary* other) {
  using std::swap;
  swap(average_, other->average_);
  swap(standard_deviation_, other->standard_deviation_);
  swap(minimum_, other->minimum_);
  swap(maximum_, other->maximum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StepSummary::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PerGenericStepDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerGenericStepDetails::kStepNumberFieldNumber;
const int PerGenericStepDetails::kStepNameFieldNumber;
const int PerGenericStepDetails::kStepTimeMsFieldNumber;
const int PerGenericStepDetails::kUnknownTimeMsFieldNumber;
const int PerGenericStepDetails::kHostWaitInputMsFieldNumber;
const int PerGenericStepDetails::kHostToDeviceMsFieldNumber;
const int PerGenericStepDetails::kOutputMsFieldNumber;
const int PerGenericStepDetails::kDeviceComputeMsFieldNumber;
const int PerGenericStepDetails::kDeviceToDeviceMsFieldNumber;
const int PerGenericStepDetails::kDeviceCollectivesMsFieldNumber;
const int PerGenericStepDetails::kHostComputeMsFieldNumber;
const int PerGenericStepDetails::kHostPrepareMsFieldNumber;
const int PerGenericStepDetails::kHostCompileMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerGenericStepDetails::PerGenericStepDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_PerGenericStepDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PerGenericStepDetails)
}
PerGenericStepDetails::PerGenericStepDetails(const PerGenericStepDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  step_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.step_name().size() > 0) {
    step_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_name_);
  }
  ::memcpy(&step_time_ms_, &from.step_time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&step_number_) -
    reinterpret_cast<char*>(&step_time_ms_)) + sizeof(step_number_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PerGenericStepDetails)
}

void PerGenericStepDetails::SharedCtor() {
  step_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&step_time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_number_) -
      reinterpret_cast<char*>(&step_time_ms_)) + sizeof(step_number_));
}

PerGenericStepDetails::~PerGenericStepDetails() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PerGenericStepDetails)
  SharedDtor();
}

void PerGenericStepDetails::SharedDtor() {
  step_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PerGenericStepDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PerGenericStepDetails::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerGenericStepDetails& PerGenericStepDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_PerGenericStepDetails.base);
  return *internal_default_instance();
}


void PerGenericStepDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PerGenericStepDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&step_time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_number_) -
      reinterpret_cast<char*>(&step_time_ms_)) + sizeof(step_number_));
  _internal_metadata_.Clear();
}

bool PerGenericStepDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PerGenericStepDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 step_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double step_time_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &step_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double unknown_time_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &unknown_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double output_ms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_compute_ms = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_compute_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_to_device_ms = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_to_device_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_compute_ms = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_compute_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_prepare_ms = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_prepare_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_compile_ms = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_compile_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_wait_input_ms = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_wait_input_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_to_device_ms = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_to_device_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_collectives_ms = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_collectives_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string step_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_step_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->step_name().data(), static_cast<int>(this->step_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.PerGenericStepDetails.step_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PerGenericStepDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PerGenericStepDetails)
  return false;
#undef DO_
}

void PerGenericStepDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PerGenericStepDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 step_number = 1;
  if (this->step_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->step_number(), output);
  }

  // double step_time_ms = 2;
  if (this->step_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->step_time_ms(), output);
  }

  // double unknown_time_ms = 3;
  if (this->unknown_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->unknown_time_ms(), output);
  }

  // double output_ms = 5;
  if (this->output_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->output_ms(), output);
  }

  // double device_compute_ms = 6;
  if (this->device_compute_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->device_compute_ms(), output);
  }

  // double device_to_device_ms = 7;
  if (this->device_to_device_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->device_to_device_ms(), output);
  }

  // double host_compute_ms = 8;
  if (this->host_compute_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->host_compute_ms(), output);
  }

  // double host_prepare_ms = 9;
  if (this->host_prepare_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->host_prepare_ms(), output);
  }

  // double host_compile_ms = 10;
  if (this->host_compile_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->host_compile_ms(), output);
  }

  // double host_wait_input_ms = 11;
  if (this->host_wait_input_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->host_wait_input_ms(), output);
  }

  // double host_to_device_ms = 12;
  if (this->host_to_device_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->host_to_device_ms(), output);
  }

  // double device_collectives_ms = 13;
  if (this->device_collectives_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->device_collectives_ms(), output);
  }

  // string step_name = 14;
  if (this->step_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step_name().data(), static_cast<int>(this->step_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PerGenericStepDetails.step_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->step_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PerGenericStepDetails)
}

::google::protobuf::uint8* PerGenericStepDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PerGenericStepDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 step_number = 1;
  if (this->step_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->step_number(), target);
  }

  // double step_time_ms = 2;
  if (this->step_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->step_time_ms(), target);
  }

  // double unknown_time_ms = 3;
  if (this->unknown_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->unknown_time_ms(), target);
  }

  // double output_ms = 5;
  if (this->output_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->output_ms(), target);
  }

  // double device_compute_ms = 6;
  if (this->device_compute_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->device_compute_ms(), target);
  }

  // double device_to_device_ms = 7;
  if (this->device_to_device_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->device_to_device_ms(), target);
  }

  // double host_compute_ms = 8;
  if (this->host_compute_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->host_compute_ms(), target);
  }

  // double host_prepare_ms = 9;
  if (this->host_prepare_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->host_prepare_ms(), target);
  }

  // double host_compile_ms = 10;
  if (this->host_compile_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->host_compile_ms(), target);
  }

  // double host_wait_input_ms = 11;
  if (this->host_wait_input_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->host_wait_input_ms(), target);
  }

  // double host_to_device_ms = 12;
  if (this->host_to_device_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->host_to_device_ms(), target);
  }

  // double device_collectives_ms = 13;
  if (this->device_collectives_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->device_collectives_ms(), target);
  }

  // string step_name = 14;
  if (this->step_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step_name().data(), static_cast<int>(this->step_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PerGenericStepDetails.step_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->step_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PerGenericStepDetails)
  return target;
}

size_t PerGenericStepDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PerGenericStepDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string step_name = 14;
  if (this->step_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->step_name());
  }

  // double step_time_ms = 2;
  if (this->step_time_ms() != 0) {
    total_size += 1 + 8;
  }

  // double unknown_time_ms = 3;
  if (this->unknown_time_ms() != 0) {
    total_size += 1 + 8;
  }

  // double output_ms = 5;
  if (this->output_ms() != 0) {
    total_size += 1 + 8;
  }

  // double device_compute_ms = 6;
  if (this->device_compute_ms() != 0) {
    total_size += 1 + 8;
  }

  // double device_to_device_ms = 7;
  if (this->device_to_device_ms() != 0) {
    total_size += 1 + 8;
  }

  // double host_compute_ms = 8;
  if (this->host_compute_ms() != 0) {
    total_size += 1 + 8;
  }

  // double host_prepare_ms = 9;
  if (this->host_prepare_ms() != 0) {
    total_size += 1 + 8;
  }

  // double host_compile_ms = 10;
  if (this->host_compile_ms() != 0) {
    total_size += 1 + 8;
  }

  // double host_wait_input_ms = 11;
  if (this->host_wait_input_ms() != 0) {
    total_size += 1 + 8;
  }

  // double host_to_device_ms = 12;
  if (this->host_to_device_ms() != 0) {
    total_size += 1 + 8;
  }

  // double device_collectives_ms = 13;
  if (this->device_collectives_ms() != 0) {
    total_size += 1 + 8;
  }

  // int32 step_number = 1;
  if (this->step_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PerGenericStepDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PerGenericStepDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const PerGenericStepDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerGenericStepDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PerGenericStepDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PerGenericStepDetails)
    MergeFrom(*source);
  }
}

void PerGenericStepDetails::MergeFrom(const PerGenericStepDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PerGenericStepDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.step_name().size() > 0) {

    step_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_name_);
  }
  if (from.step_time_ms() != 0) {
    set_step_time_ms(from.step_time_ms());
  }
  if (from.unknown_time_ms() != 0) {
    set_unknown_time_ms(from.unknown_time_ms());
  }
  if (from.output_ms() != 0) {
    set_output_ms(from.output_ms());
  }
  if (from.device_compute_ms() != 0) {
    set_device_compute_ms(from.device_compute_ms());
  }
  if (from.device_to_device_ms() != 0) {
    set_device_to_device_ms(from.device_to_device_ms());
  }
  if (from.host_compute_ms() != 0) {
    set_host_compute_ms(from.host_compute_ms());
  }
  if (from.host_prepare_ms() != 0) {
    set_host_prepare_ms(from.host_prepare_ms());
  }
  if (from.host_compile_ms() != 0) {
    set_host_compile_ms(from.host_compile_ms());
  }
  if (from.host_wait_input_ms() != 0) {
    set_host_wait_input_ms(from.host_wait_input_ms());
  }
  if (from.host_to_device_ms() != 0) {
    set_host_to_device_ms(from.host_to_device_ms());
  }
  if (from.device_collectives_ms() != 0) {
    set_device_collectives_ms(from.device_collectives_ms());
  }
  if (from.step_number() != 0) {
    set_step_number(from.step_number());
  }
}

void PerGenericStepDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PerGenericStepDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerGenericStepDetails::CopyFrom(const PerGenericStepDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PerGenericStepDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerGenericStepDetails::IsInitialized() const {
  return true;
}

void PerGenericStepDetails::Swap(PerGenericStepDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerGenericStepDetails::InternalSwap(PerGenericStepDetails* other) {
  using std::swap;
  step_name_.Swap(&other->step_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(step_time_ms_, other->step_time_ms_);
  swap(unknown_time_ms_, other->unknown_time_ms_);
  swap(output_ms_, other->output_ms_);
  swap(device_compute_ms_, other->device_compute_ms_);
  swap(device_to_device_ms_, other->device_to_device_ms_);
  swap(host_compute_ms_, other->host_compute_ms_);
  swap(host_prepare_ms_, other->host_prepare_ms_);
  swap(host_compile_ms_, other->host_compile_ms_);
  swap(host_wait_input_ms_, other->host_wait_input_ms_);
  swap(host_to_device_ms_, other->host_to_device_ms_);
  swap(device_collectives_ms_, other->device_collectives_ms_);
  swap(step_number_, other->step_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PerGenericStepDetails::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputTimeBreakdown::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputTimeBreakdown::kDemandedFileReadUsFieldNumber;
const int InputTimeBreakdown::kAdvancedFileReadUsFieldNumber;
const int InputTimeBreakdown::kPreprocessingUsFieldNumber;
const int InputTimeBreakdown::kEnqueueUsFieldNumber;
const int InputTimeBreakdown::kUnclassifiedNonEnqueueUsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputTimeBreakdown::InputTimeBreakdown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputTimeBreakdown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.InputTimeBreakdown)
}
InputTimeBreakdown::InputTimeBreakdown(const InputTimeBreakdown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&demanded_file_read_us_, &from.demanded_file_read_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&unclassified_non_enqueue_us_) -
    reinterpret_cast<char*>(&demanded_file_read_us_)) + sizeof(unclassified_non_enqueue_us_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.InputTimeBreakdown)
}

void InputTimeBreakdown::SharedCtor() {
  ::memset(&demanded_file_read_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unclassified_non_enqueue_us_) -
      reinterpret_cast<char*>(&demanded_file_read_us_)) + sizeof(unclassified_non_enqueue_us_));
}

InputTimeBreakdown::~InputTimeBreakdown() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.InputTimeBreakdown)
  SharedDtor();
}

void InputTimeBreakdown::SharedDtor() {
}

void InputTimeBreakdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputTimeBreakdown::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputTimeBreakdown& InputTimeBreakdown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputTimeBreakdown.base);
  return *internal_default_instance();
}


void InputTimeBreakdown::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.InputTimeBreakdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&demanded_file_read_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unclassified_non_enqueue_us_) -
      reinterpret_cast<char*>(&demanded_file_read_us_)) + sizeof(unclassified_non_enqueue_us_));
  _internal_metadata_.Clear();
}

bool InputTimeBreakdown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.InputTimeBreakdown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double demanded_file_read_us = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &demanded_file_read_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double advanced_file_read_us = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &advanced_file_read_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double preprocessing_us = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preprocessing_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double enqueue_us = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &enqueue_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double unclassified_non_enqueue_us = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &unclassified_non_enqueue_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.InputTimeBreakdown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.InputTimeBreakdown)
  return false;
#undef DO_
}

void InputTimeBreakdown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.InputTimeBreakdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double demanded_file_read_us = 1;
  if (this->demanded_file_read_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->demanded_file_read_us(), output);
  }

  // double advanced_file_read_us = 2;
  if (this->advanced_file_read_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->advanced_file_read_us(), output);
  }

  // double preprocessing_us = 3;
  if (this->preprocessing_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->preprocessing_us(), output);
  }

  // double enqueue_us = 4;
  if (this->enqueue_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->enqueue_us(), output);
  }

  // double unclassified_non_enqueue_us = 5;
  if (this->unclassified_non_enqueue_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->unclassified_non_enqueue_us(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.InputTimeBreakdown)
}

::google::protobuf::uint8* InputTimeBreakdown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.InputTimeBreakdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double demanded_file_read_us = 1;
  if (this->demanded_file_read_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->demanded_file_read_us(), target);
  }

  // double advanced_file_read_us = 2;
  if (this->advanced_file_read_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->advanced_file_read_us(), target);
  }

  // double preprocessing_us = 3;
  if (this->preprocessing_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->preprocessing_us(), target);
  }

  // double enqueue_us = 4;
  if (this->enqueue_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->enqueue_us(), target);
  }

  // double unclassified_non_enqueue_us = 5;
  if (this->unclassified_non_enqueue_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->unclassified_non_enqueue_us(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.InputTimeBreakdown)
  return target;
}

size_t InputTimeBreakdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.InputTimeBreakdown)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double demanded_file_read_us = 1;
  if (this->demanded_file_read_us() != 0) {
    total_size += 1 + 8;
  }

  // double advanced_file_read_us = 2;
  if (this->advanced_file_read_us() != 0) {
    total_size += 1 + 8;
  }

  // double preprocessing_us = 3;
  if (this->preprocessing_us() != 0) {
    total_size += 1 + 8;
  }

  // double enqueue_us = 4;
  if (this->enqueue_us() != 0) {
    total_size += 1 + 8;
  }

  // double unclassified_non_enqueue_us = 5;
  if (this->unclassified_non_enqueue_us() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputTimeBreakdown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.InputTimeBreakdown)
  GOOGLE_DCHECK_NE(&from, this);
  const InputTimeBreakdown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputTimeBreakdown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.InputTimeBreakdown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.InputTimeBreakdown)
    MergeFrom(*source);
  }
}

void InputTimeBreakdown::MergeFrom(const InputTimeBreakdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.InputTimeBreakdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.demanded_file_read_us() != 0) {
    set_demanded_file_read_us(from.demanded_file_read_us());
  }
  if (from.advanced_file_read_us() != 0) {
    set_advanced_file_read_us(from.advanced_file_read_us());
  }
  if (from.preprocessing_us() != 0) {
    set_preprocessing_us(from.preprocessing_us());
  }
  if (from.enqueue_us() != 0) {
    set_enqueue_us(from.enqueue_us());
  }
  if (from.unclassified_non_enqueue_us() != 0) {
    set_unclassified_non_enqueue_us(from.unclassified_non_enqueue_us());
  }
}

void InputTimeBreakdown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.InputTimeBreakdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputTimeBreakdown::CopyFrom(const InputTimeBreakdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.InputTimeBreakdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputTimeBreakdown::IsInitialized() const {
  return true;
}

void InputTimeBreakdown::Swap(InputTimeBreakdown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputTimeBreakdown::InternalSwap(InputTimeBreakdown* other) {
  using std::swap;
  swap(demanded_file_read_us_, other->demanded_file_read_us_);
  swap(advanced_file_read_us_, other->advanced_file_read_us_);
  swap(preprocessing_us_, other->preprocessing_us_);
  swap(enqueue_us_, other->enqueue_us_);
  swap(unclassified_non_enqueue_us_, other->unclassified_non_enqueue_us_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputTimeBreakdown::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputOpDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputOpDetails::kOpNameFieldNumber;
const int InputOpDetails::kCountFieldNumber;
const int InputOpDetails::kTimeInMsFieldNumber;
const int InputOpDetails::kTimeInPercentFieldNumber;
const int InputOpDetails::kSelfTimeInMsFieldNumber;
const int InputOpDetails::kSelfTimeInPercentFieldNumber;
const int InputOpDetails::kCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputOpDetails::InputOpDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputOpDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.InputOpDetails)
}
InputOpDetails::InputOpDetails(const InputOpDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_name().size() > 0) {
    op_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_name_);
  }
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.category().size() > 0) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&self_time_in_percent_) -
    reinterpret_cast<char*>(&count_)) + sizeof(self_time_in_percent_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.InputOpDetails)
}

void InputOpDetails::SharedCtor() {
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&self_time_in_percent_) -
      reinterpret_cast<char*>(&count_)) + sizeof(self_time_in_percent_));
}

InputOpDetails::~InputOpDetails() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.InputOpDetails)
  SharedDtor();
}

void InputOpDetails::SharedDtor() {
  op_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputOpDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputOpDetails::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputOpDetails& InputOpDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputOpDetails.base);
  return *internal_default_instance();
}


void InputOpDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.InputOpDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&self_time_in_percent_) -
      reinterpret_cast<char*>(&count_)) + sizeof(self_time_in_percent_));
  _internal_metadata_.Clear();
}

bool InputOpDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.InputOpDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string op_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_name().data(), static_cast<int>(this->op_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.InputOpDetails.op_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time_in_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_in_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time_in_percent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_in_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double self_time_in_ms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &self_time_in_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double self_time_in_percent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &self_time_in_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string category = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.InputOpDetails.category"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.InputOpDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.InputOpDetails)
  return false;
#undef DO_
}

void InputOpDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.InputOpDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op_name = 1;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputOpDetails.op_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->op_name(), output);
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->count(), output);
  }

  // double time_in_ms = 3;
  if (this->time_in_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->time_in_ms(), output);
  }

  // double time_in_percent = 4;
  if (this->time_in_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->time_in_percent(), output);
  }

  // double self_time_in_ms = 5;
  if (this->self_time_in_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->self_time_in_ms(), output);
  }

  // double self_time_in_percent = 6;
  if (this->self_time_in_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->self_time_in_percent(), output);
  }

  // string category = 7;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputOpDetails.category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->category(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.InputOpDetails)
}

::google::protobuf::uint8* InputOpDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.InputOpDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op_name = 1;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputOpDetails.op_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->op_name(), target);
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->count(), target);
  }

  // double time_in_ms = 3;
  if (this->time_in_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->time_in_ms(), target);
  }

  // double time_in_percent = 4;
  if (this->time_in_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->time_in_percent(), target);
  }

  // double self_time_in_ms = 5;
  if (this->self_time_in_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->self_time_in_ms(), target);
  }

  // double self_time_in_percent = 6;
  if (this->self_time_in_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->self_time_in_percent(), target);
  }

  // string category = 7;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputOpDetails.category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->category(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.InputOpDetails)
  return target;
}

size_t InputOpDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.InputOpDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string op_name = 1;
  if (this->op_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_name());
  }

  // string category = 7;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->category());
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  // double time_in_ms = 3;
  if (this->time_in_ms() != 0) {
    total_size += 1 + 8;
  }

  // double time_in_percent = 4;
  if (this->time_in_percent() != 0) {
    total_size += 1 + 8;
  }

  // double self_time_in_ms = 5;
  if (this->self_time_in_ms() != 0) {
    total_size += 1 + 8;
  }

  // double self_time_in_percent = 6;
  if (this->self_time_in_percent() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputOpDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.InputOpDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const InputOpDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputOpDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.InputOpDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.InputOpDetails)
    MergeFrom(*source);
  }
}

void InputOpDetails::MergeFrom(const InputOpDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.InputOpDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_name().size() > 0) {

    op_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_name_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.time_in_ms() != 0) {
    set_time_in_ms(from.time_in_ms());
  }
  if (from.time_in_percent() != 0) {
    set_time_in_percent(from.time_in_percent());
  }
  if (from.self_time_in_ms() != 0) {
    set_self_time_in_ms(from.self_time_in_ms());
  }
  if (from.self_time_in_percent() != 0) {
    set_self_time_in_percent(from.self_time_in_percent());
  }
}

void InputOpDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.InputOpDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputOpDetails::CopyFrom(const InputOpDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.InputOpDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputOpDetails::IsInitialized() const {
  return true;
}

void InputOpDetails::Swap(InputOpDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputOpDetails::InternalSwap(InputOpDetails* other) {
  using std::swap;
  op_name_.Swap(&other->op_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  category_.Swap(&other->category_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  swap(time_in_ms_, other->time_in_ms_);
  swap(time_in_percent_, other->time_in_percent_);
  swap(self_time_in_ms_, other->self_time_in_ms_);
  swap(self_time_in_percent_, other->self_time_in_percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputOpDetails::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputPipelineAnalysisRecommendation::InitAsDefaultInstance() {
  ::tensorflow::profiler::_InputPipelineAnalysisRecommendation_default_instance_._instance.get_mutable()->bottleneck_analysis_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void InputPipelineAnalysisRecommendation::clear_bottleneck_analysis() {
  if (GetArenaNoVirtual() == NULL && bottleneck_analysis_ != NULL) {
    delete bottleneck_analysis_;
  }
  bottleneck_analysis_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputPipelineAnalysisRecommendation::kDetailsFieldNumber;
const int InputPipelineAnalysisRecommendation::kBottleneckAnalysisFieldNumber;
const int InputPipelineAnalysisRecommendation::kSummaryNextStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputPipelineAnalysisRecommendation::InputPipelineAnalysisRecommendation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputPipelineAnalysisRecommendation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.InputPipelineAnalysisRecommendation)
}
InputPipelineAnalysisRecommendation::InputPipelineAnalysisRecommendation(const InputPipelineAnalysisRecommendation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      details_(from.details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  summary_next_step_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.summary_next_step().size() > 0) {
    summary_next_step_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.summary_next_step_);
  }
  if (from.has_bottleneck_analysis()) {
    bottleneck_analysis_ = new ::google::protobuf::Any(*from.bottleneck_analysis_);
  } else {
    bottleneck_analysis_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.InputPipelineAnalysisRecommendation)
}

void InputPipelineAnalysisRecommendation::SharedCtor() {
  summary_next_step_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bottleneck_analysis_ = NULL;
}

InputPipelineAnalysisRecommendation::~InputPipelineAnalysisRecommendation() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  SharedDtor();
}

void InputPipelineAnalysisRecommendation::SharedDtor() {
  summary_next_step_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bottleneck_analysis_;
}

void InputPipelineAnalysisRecommendation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputPipelineAnalysisRecommendation::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputPipelineAnalysisRecommendation& InputPipelineAnalysisRecommendation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputPipelineAnalysisRecommendation.base);
  return *internal_default_instance();
}


void InputPipelineAnalysisRecommendation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  details_.Clear();
  summary_next_step_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && bottleneck_analysis_ != NULL) {
    delete bottleneck_analysis_;
  }
  bottleneck_analysis_ = NULL;
  _internal_metadata_.Clear();
}

bool InputPipelineAnalysisRecommendation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string details = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->details(this->details_size() - 1).data(),
            static_cast<int>(this->details(this->details_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.InputPipelineAnalysisRecommendation.details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any bottleneck_analysis = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bottleneck_analysis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string summary_next_step = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_summary_next_step()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->summary_next_step().data(), static_cast<int>(this->summary_next_step().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  return false;
#undef DO_
}

void InputPipelineAnalysisRecommendation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string details = 1;
  for (int i = 0, n = this->details_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details(i).data(), static_cast<int>(this->details(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputPipelineAnalysisRecommendation.details");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->details(i), output);
  }

  // .google.protobuf.Any bottleneck_analysis = 2;
  if (this->has_bottleneck_analysis()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bottleneck_analysis(), output);
  }

  // string summary_next_step = 3;
  if (this->summary_next_step().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->summary_next_step().data(), static_cast<int>(this->summary_next_step().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->summary_next_step(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.InputPipelineAnalysisRecommendation)
}

::google::protobuf::uint8* InputPipelineAnalysisRecommendation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string details = 1;
  for (int i = 0, n = this->details_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details(i).data(), static_cast<int>(this->details(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputPipelineAnalysisRecommendation.details");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->details(i), target);
  }

  // .google.protobuf.Any bottleneck_analysis = 2;
  if (this->has_bottleneck_analysis()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bottleneck_analysis(), deterministic, target);
  }

  // string summary_next_step = 3;
  if (this->summary_next_step().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->summary_next_step().data(), static_cast<int>(this->summary_next_step().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->summary_next_step(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  return target;
}

size_t InputPipelineAnalysisRecommendation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string details = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->details_size());
  for (int i = 0, n = this->details_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->details(i));
  }

  // string summary_next_step = 3;
  if (this->summary_next_step().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->summary_next_step());
  }

  // .google.protobuf.Any bottleneck_analysis = 2;
  if (this->has_bottleneck_analysis()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bottleneck_analysis_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputPipelineAnalysisRecommendation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  const InputPipelineAnalysisRecommendation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputPipelineAnalysisRecommendation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.InputPipelineAnalysisRecommendation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.InputPipelineAnalysisRecommendation)
    MergeFrom(*source);
  }
}

void InputPipelineAnalysisRecommendation::MergeFrom(const InputPipelineAnalysisRecommendation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  details_.MergeFrom(from.details_);
  if (from.summary_next_step().size() > 0) {

    summary_next_step_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.summary_next_step_);
  }
  if (from.has_bottleneck_analysis()) {
    mutable_bottleneck_analysis()->::google::protobuf::Any::MergeFrom(from.bottleneck_analysis());
  }
}

void InputPipelineAnalysisRecommendation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputPipelineAnalysisRecommendation::CopyFrom(const InputPipelineAnalysisRecommendation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.InputPipelineAnalysisRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputPipelineAnalysisRecommendation::IsInitialized() const {
  return true;
}

void InputPipelineAnalysisRecommendation::Swap(InputPipelineAnalysisRecommendation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputPipelineAnalysisRecommendation::InternalSwap(InputPipelineAnalysisRecommendation* other) {
  using std::swap;
  details_.InternalSwap(CastToBase(&other->details_));
  summary_next_step_.Swap(&other->summary_next_step_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bottleneck_analysis_, other->bottleneck_analysis_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputPipelineAnalysisRecommendation::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenericStepTimeBreakdown::InitAsDefaultInstance() {
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->unknown_time_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->host_wait_input_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->host_to_device_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->input_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->output_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->device_compute_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->device_to_device_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->device_collectives_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->host_compute_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->host_prepare_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_GenericStepTimeBreakdown_default_instance_._instance.get_mutable()->host_compile_ms_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericStepTimeBreakdown::kUnknownTimeMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kHostWaitInputMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kHostToDeviceMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kInputMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kOutputMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kDeviceComputeMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kDeviceToDeviceMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kDeviceCollectivesMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kHostComputeMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kHostPrepareMsSummaryFieldNumber;
const int GenericStepTimeBreakdown::kHostCompileMsSummaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericStepTimeBreakdown::GenericStepTimeBreakdown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_GenericStepTimeBreakdown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.GenericStepTimeBreakdown)
}
GenericStepTimeBreakdown::GenericStepTimeBreakdown(const GenericStepTimeBreakdown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_unknown_time_ms_summary()) {
    unknown_time_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.unknown_time_ms_summary_);
  } else {
    unknown_time_ms_summary_ = NULL;
  }
  if (from.has_output_ms_summary()) {
    output_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.output_ms_summary_);
  } else {
    output_ms_summary_ = NULL;
  }
  if (from.has_device_compute_ms_summary()) {
    device_compute_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.device_compute_ms_summary_);
  } else {
    device_compute_ms_summary_ = NULL;
  }
  if (from.has_device_to_device_ms_summary()) {
    device_to_device_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.device_to_device_ms_summary_);
  } else {
    device_to_device_ms_summary_ = NULL;
  }
  if (from.has_host_compute_ms_summary()) {
    host_compute_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.host_compute_ms_summary_);
  } else {
    host_compute_ms_summary_ = NULL;
  }
  if (from.has_host_prepare_ms_summary()) {
    host_prepare_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.host_prepare_ms_summary_);
  } else {
    host_prepare_ms_summary_ = NULL;
  }
  if (from.has_host_compile_ms_summary()) {
    host_compile_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.host_compile_ms_summary_);
  } else {
    host_compile_ms_summary_ = NULL;
  }
  if (from.has_host_wait_input_ms_summary()) {
    host_wait_input_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.host_wait_input_ms_summary_);
  } else {
    host_wait_input_ms_summary_ = NULL;
  }
  if (from.has_host_to_device_ms_summary()) {
    host_to_device_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.host_to_device_ms_summary_);
  } else {
    host_to_device_ms_summary_ = NULL;
  }
  if (from.has_input_ms_summary()) {
    input_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.input_ms_summary_);
  } else {
    input_ms_summary_ = NULL;
  }
  if (from.has_device_collectives_ms_summary()) {
    device_collectives_ms_summary_ = new ::tensorflow::profiler::StepSummary(*from.device_collectives_ms_summary_);
  } else {
    device_collectives_ms_summary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.GenericStepTimeBreakdown)
}

void GenericStepTimeBreakdown::SharedCtor() {
  ::memset(&unknown_time_ms_summary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_collectives_ms_summary_) -
      reinterpret_cast<char*>(&unknown_time_ms_summary_)) + sizeof(device_collectives_ms_summary_));
}

GenericStepTimeBreakdown::~GenericStepTimeBreakdown() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.GenericStepTimeBreakdown)
  SharedDtor();
}

void GenericStepTimeBreakdown::SharedDtor() {
  if (this != internal_default_instance()) delete unknown_time_ms_summary_;
  if (this != internal_default_instance()) delete output_ms_summary_;
  if (this != internal_default_instance()) delete device_compute_ms_summary_;
  if (this != internal_default_instance()) delete device_to_device_ms_summary_;
  if (this != internal_default_instance()) delete host_compute_ms_summary_;
  if (this != internal_default_instance()) delete host_prepare_ms_summary_;
  if (this != internal_default_instance()) delete host_compile_ms_summary_;
  if (this != internal_default_instance()) delete host_wait_input_ms_summary_;
  if (this != internal_default_instance()) delete host_to_device_ms_summary_;
  if (this != internal_default_instance()) delete input_ms_summary_;
  if (this != internal_default_instance()) delete device_collectives_ms_summary_;
}

void GenericStepTimeBreakdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenericStepTimeBreakdown::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericStepTimeBreakdown& GenericStepTimeBreakdown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_GenericStepTimeBreakdown.base);
  return *internal_default_instance();
}


void GenericStepTimeBreakdown::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.GenericStepTimeBreakdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && unknown_time_ms_summary_ != NULL) {
    delete unknown_time_ms_summary_;
  }
  unknown_time_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_ms_summary_ != NULL) {
    delete output_ms_summary_;
  }
  output_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_compute_ms_summary_ != NULL) {
    delete device_compute_ms_summary_;
  }
  device_compute_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_to_device_ms_summary_ != NULL) {
    delete device_to_device_ms_summary_;
  }
  device_to_device_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && host_compute_ms_summary_ != NULL) {
    delete host_compute_ms_summary_;
  }
  host_compute_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && host_prepare_ms_summary_ != NULL) {
    delete host_prepare_ms_summary_;
  }
  host_prepare_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && host_compile_ms_summary_ != NULL) {
    delete host_compile_ms_summary_;
  }
  host_compile_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && host_wait_input_ms_summary_ != NULL) {
    delete host_wait_input_ms_summary_;
  }
  host_wait_input_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && host_to_device_ms_summary_ != NULL) {
    delete host_to_device_ms_summary_;
  }
  host_to_device_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ms_summary_ != NULL) {
    delete input_ms_summary_;
  }
  input_ms_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_collectives_ms_summary_ != NULL) {
    delete device_collectives_ms_summary_;
  }
  device_collectives_ms_summary_ = NULL;
  _internal_metadata_.Clear();
}

bool GenericStepTimeBreakdown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.GenericStepTimeBreakdown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.profiler.StepSummary unknown_time_ms_summary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unknown_time_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary output_ms_summary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary device_compute_ms_summary = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_compute_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary device_to_device_ms_summary = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_to_device_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary host_compute_ms_summary = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_compute_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary host_prepare_ms_summary = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_prepare_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary host_compile_ms_summary = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_compile_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary host_wait_input_ms_summary = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_wait_input_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary host_to_device_ms_summary = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_to_device_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary input_ms_summary = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary device_collectives_ms_summary = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_collectives_ms_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.GenericStepTimeBreakdown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.GenericStepTimeBreakdown)
  return false;
#undef DO_
}

void GenericStepTimeBreakdown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.GenericStepTimeBreakdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.StepSummary unknown_time_ms_summary = 1;
  if (this->has_unknown_time_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_unknown_time_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary output_ms_summary = 3;
  if (this->has_output_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_output_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary device_compute_ms_summary = 4;
  if (this->has_device_compute_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_device_compute_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary device_to_device_ms_summary = 5;
  if (this->has_device_to_device_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_device_to_device_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary host_compute_ms_summary = 6;
  if (this->has_host_compute_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_host_compute_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary host_prepare_ms_summary = 7;
  if (this->has_host_prepare_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_host_prepare_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary host_compile_ms_summary = 8;
  if (this->has_host_compile_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_host_compile_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary host_wait_input_ms_summary = 9;
  if (this->has_host_wait_input_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_host_wait_input_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary host_to_device_ms_summary = 10;
  if (this->has_host_to_device_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_host_to_device_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary input_ms_summary = 11;
  if (this->has_input_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_input_ms_summary(), output);
  }

  // .tensorflow.profiler.StepSummary device_collectives_ms_summary = 12;
  if (this->has_device_collectives_ms_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_device_collectives_ms_summary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.GenericStepTimeBreakdown)
}

::google::protobuf::uint8* GenericStepTimeBreakdown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.GenericStepTimeBreakdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.StepSummary unknown_time_ms_summary = 1;
  if (this->has_unknown_time_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_unknown_time_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary output_ms_summary = 3;
  if (this->has_output_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_output_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary device_compute_ms_summary = 4;
  if (this->has_device_compute_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_device_compute_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary device_to_device_ms_summary = 5;
  if (this->has_device_to_device_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_device_to_device_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary host_compute_ms_summary = 6;
  if (this->has_host_compute_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_host_compute_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary host_prepare_ms_summary = 7;
  if (this->has_host_prepare_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_host_prepare_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary host_compile_ms_summary = 8;
  if (this->has_host_compile_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_host_compile_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary host_wait_input_ms_summary = 9;
  if (this->has_host_wait_input_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_host_wait_input_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary host_to_device_ms_summary = 10;
  if (this->has_host_to_device_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_host_to_device_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary input_ms_summary = 11;
  if (this->has_input_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_input_ms_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary device_collectives_ms_summary = 12;
  if (this->has_device_collectives_ms_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_device_collectives_ms_summary(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.GenericStepTimeBreakdown)
  return target;
}

size_t GenericStepTimeBreakdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.GenericStepTimeBreakdown)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.profiler.StepSummary unknown_time_ms_summary = 1;
  if (this->has_unknown_time_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unknown_time_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary output_ms_summary = 3;
  if (this->has_output_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary device_compute_ms_summary = 4;
  if (this->has_device_compute_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_compute_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary device_to_device_ms_summary = 5;
  if (this->has_device_to_device_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_to_device_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary host_compute_ms_summary = 6;
  if (this->has_host_compute_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_compute_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary host_prepare_ms_summary = 7;
  if (this->has_host_prepare_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_prepare_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary host_compile_ms_summary = 8;
  if (this->has_host_compile_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_compile_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary host_wait_input_ms_summary = 9;
  if (this->has_host_wait_input_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_wait_input_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary host_to_device_ms_summary = 10;
  if (this->has_host_to_device_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_to_device_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary input_ms_summary = 11;
  if (this->has_input_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_ms_summary_);
  }

  // .tensorflow.profiler.StepSummary device_collectives_ms_summary = 12;
  if (this->has_device_collectives_ms_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_collectives_ms_summary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericStepTimeBreakdown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.GenericStepTimeBreakdown)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericStepTimeBreakdown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericStepTimeBreakdown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.GenericStepTimeBreakdown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.GenericStepTimeBreakdown)
    MergeFrom(*source);
  }
}

void GenericStepTimeBreakdown::MergeFrom(const GenericStepTimeBreakdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.GenericStepTimeBreakdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unknown_time_ms_summary()) {
    mutable_unknown_time_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.unknown_time_ms_summary());
  }
  if (from.has_output_ms_summary()) {
    mutable_output_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.output_ms_summary());
  }
  if (from.has_device_compute_ms_summary()) {
    mutable_device_compute_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.device_compute_ms_summary());
  }
  if (from.has_device_to_device_ms_summary()) {
    mutable_device_to_device_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.device_to_device_ms_summary());
  }
  if (from.has_host_compute_ms_summary()) {
    mutable_host_compute_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.host_compute_ms_summary());
  }
  if (from.has_host_prepare_ms_summary()) {
    mutable_host_prepare_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.host_prepare_ms_summary());
  }
  if (from.has_host_compile_ms_summary()) {
    mutable_host_compile_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.host_compile_ms_summary());
  }
  if (from.has_host_wait_input_ms_summary()) {
    mutable_host_wait_input_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.host_wait_input_ms_summary());
  }
  if (from.has_host_to_device_ms_summary()) {
    mutable_host_to_device_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.host_to_device_ms_summary());
  }
  if (from.has_input_ms_summary()) {
    mutable_input_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.input_ms_summary());
  }
  if (from.has_device_collectives_ms_summary()) {
    mutable_device_collectives_ms_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.device_collectives_ms_summary());
  }
}

void GenericStepTimeBreakdown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.GenericStepTimeBreakdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericStepTimeBreakdown::CopyFrom(const GenericStepTimeBreakdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.GenericStepTimeBreakdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericStepTimeBreakdown::IsInitialized() const {
  return true;
}

void GenericStepTimeBreakdown::Swap(GenericStepTimeBreakdown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericStepTimeBreakdown::InternalSwap(GenericStepTimeBreakdown* other) {
  using std::swap;
  swap(unknown_time_ms_summary_, other->unknown_time_ms_summary_);
  swap(output_ms_summary_, other->output_ms_summary_);
  swap(device_compute_ms_summary_, other->device_compute_ms_summary_);
  swap(device_to_device_ms_summary_, other->device_to_device_ms_summary_);
  swap(host_compute_ms_summary_, other->host_compute_ms_summary_);
  swap(host_prepare_ms_summary_, other->host_prepare_ms_summary_);
  swap(host_compile_ms_summary_, other->host_compile_ms_summary_);
  swap(host_wait_input_ms_summary_, other->host_wait_input_ms_summary_);
  swap(host_to_device_ms_summary_, other->host_to_device_ms_summary_);
  swap(input_ms_summary_, other->input_ms_summary_);
  swap(device_collectives_ms_summary_, other->device_collectives_ms_summary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenericStepTimeBreakdown::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputPipelineAnalysisResult::InitAsDefaultInstance() {
  ::tensorflow::profiler::_InputPipelineAnalysisResult_default_instance_._instance.get_mutable()->step_time_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_InputPipelineAnalysisResult_default_instance_._instance.get_mutable()->input_percent_summary_ = const_cast< ::tensorflow::profiler::StepSummary*>(
      ::tensorflow::profiler::StepSummary::internal_default_instance());
  ::tensorflow::profiler::_InputPipelineAnalysisResult_default_instance_._instance.get_mutable()->input_time_breakdown_ = const_cast< ::tensorflow::profiler::InputTimeBreakdown*>(
      ::tensorflow::profiler::InputTimeBreakdown::internal_default_instance());
  ::tensorflow::profiler::_InputPipelineAnalysisResult_default_instance_._instance.get_mutable()->recommendation_ = const_cast< ::tensorflow::profiler::InputPipelineAnalysisRecommendation*>(
      ::tensorflow::profiler::InputPipelineAnalysisRecommendation::internal_default_instance());
  ::tensorflow::profiler::_InputPipelineAnalysisResult_default_instance_._instance.get_mutable()->step_time_breakdown_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::tensorflow::profiler::_InputPipelineAnalysisResult_default_instance_._instance.get_mutable()->diagnostics_ = const_cast< ::tensorflow::profiler::Diagnostics*>(
      ::tensorflow::profiler::Diagnostics::internal_default_instance());
}
void InputPipelineAnalysisResult::clear_step_details() {
  step_details_.Clear();
}
void InputPipelineAnalysisResult::clear_step_time_breakdown() {
  if (GetArenaNoVirtual() == NULL && step_time_breakdown_ != NULL) {
    delete step_time_breakdown_;
  }
  step_time_breakdown_ = NULL;
}
void InputPipelineAnalysisResult::clear_diagnostics() {
  if (GetArenaNoVirtual() == NULL && diagnostics_ != NULL) {
    delete diagnostics_;
  }
  diagnostics_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputPipelineAnalysisResult::kHardwareTypeFieldNumber;
const int InputPipelineAnalysisResult::kStepTimeSummaryFieldNumber;
const int InputPipelineAnalysisResult::kInputPercentSummaryFieldNumber;
const int InputPipelineAnalysisResult::kInputPercentFieldNumber;
const int InputPipelineAnalysisResult::kOutputPercentFieldNumber;
const int InputPipelineAnalysisResult::kIdlePercentFieldNumber;
const int InputPipelineAnalysisResult::kComputePercentFieldNumber;
const int InputPipelineAnalysisResult::kStepDetailsFieldNumber;
const int InputPipelineAnalysisResult::kInputTimeBreakdownFieldNumber;
const int InputPipelineAnalysisResult::kInputOpDetailsFieldNumber;
const int InputPipelineAnalysisResult::kRecommendationFieldNumber;
const int InputPipelineAnalysisResult::kStepTimeBreakdownFieldNumber;
const int InputPipelineAnalysisResult::kDiagnosticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputPipelineAnalysisResult::InputPipelineAnalysisResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputPipelineAnalysisResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.InputPipelineAnalysisResult)
}
InputPipelineAnalysisResult::InputPipelineAnalysisResult(const InputPipelineAnalysisResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      step_details_(from.step_details_),
      input_op_details_(from.input_op_details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hardware_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hardware_type().size() > 0) {
    hardware_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hardware_type_);
  }
  if (from.has_step_time_summary()) {
    step_time_summary_ = new ::tensorflow::profiler::StepSummary(*from.step_time_summary_);
  } else {
    step_time_summary_ = NULL;
  }
  if (from.has_input_percent_summary()) {
    input_percent_summary_ = new ::tensorflow::profiler::StepSummary(*from.input_percent_summary_);
  } else {
    input_percent_summary_ = NULL;
  }
  if (from.has_input_time_breakdown()) {
    input_time_breakdown_ = new ::tensorflow::profiler::InputTimeBreakdown(*from.input_time_breakdown_);
  } else {
    input_time_breakdown_ = NULL;
  }
  if (from.has_recommendation()) {
    recommendation_ = new ::tensorflow::profiler::InputPipelineAnalysisRecommendation(*from.recommendation_);
  } else {
    recommendation_ = NULL;
  }
  if (from.has_step_time_breakdown()) {
    step_time_breakdown_ = new ::google::protobuf::Any(*from.step_time_breakdown_);
  } else {
    step_time_breakdown_ = NULL;
  }
  if (from.has_diagnostics()) {
    diagnostics_ = new ::tensorflow::profiler::Diagnostics(*from.diagnostics_);
  } else {
    diagnostics_ = NULL;
  }
  ::memcpy(&input_percent_, &from.input_percent_,
    static_cast<size_t>(reinterpret_cast<char*>(&compute_percent_) -
    reinterpret_cast<char*>(&input_percent_)) + sizeof(compute_percent_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.InputPipelineAnalysisResult)
}

void InputPipelineAnalysisResult::SharedCtor() {
  hardware_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&step_time_summary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compute_percent_) -
      reinterpret_cast<char*>(&step_time_summary_)) + sizeof(compute_percent_));
}

InputPipelineAnalysisResult::~InputPipelineAnalysisResult() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.InputPipelineAnalysisResult)
  SharedDtor();
}

void InputPipelineAnalysisResult::SharedDtor() {
  hardware_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete step_time_summary_;
  if (this != internal_default_instance()) delete input_percent_summary_;
  if (this != internal_default_instance()) delete input_time_breakdown_;
  if (this != internal_default_instance()) delete recommendation_;
  if (this != internal_default_instance()) delete step_time_breakdown_;
  if (this != internal_default_instance()) delete diagnostics_;
}

void InputPipelineAnalysisResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputPipelineAnalysisResult::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputPipelineAnalysisResult& InputPipelineAnalysisResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputPipelineAnalysisResult.base);
  return *internal_default_instance();
}


void InputPipelineAnalysisResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.InputPipelineAnalysisResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_details_.Clear();
  input_op_details_.Clear();
  hardware_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && step_time_summary_ != NULL) {
    delete step_time_summary_;
  }
  step_time_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_percent_summary_ != NULL) {
    delete input_percent_summary_;
  }
  input_percent_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_time_breakdown_ != NULL) {
    delete input_time_breakdown_;
  }
  input_time_breakdown_ = NULL;
  if (GetArenaNoVirtual() == NULL && recommendation_ != NULL) {
    delete recommendation_;
  }
  recommendation_ = NULL;
  if (GetArenaNoVirtual() == NULL && step_time_breakdown_ != NULL) {
    delete step_time_breakdown_;
  }
  step_time_breakdown_ = NULL;
  if (GetArenaNoVirtual() == NULL && diagnostics_ != NULL) {
    delete diagnostics_;
  }
  diagnostics_ = NULL;
  ::memset(&input_percent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compute_percent_) -
      reinterpret_cast<char*>(&input_percent_)) + sizeof(compute_percent_));
  _internal_metadata_.Clear();
}

bool InputPipelineAnalysisResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.InputPipelineAnalysisResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.profiler.StepSummary step_time_summary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_step_time_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepSummary input_percent_summary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_percent_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any step_details = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_step_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.InputTimeBreakdown input_time_breakdown = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_time_breakdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.InputOpDetails input_op_details = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input_op_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.InputPipelineAnalysisRecommendation recommendation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recommendation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any step_time_breakdown = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_step_time_breakdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hardware_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hardware_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hardware_type().data(), static_cast<int>(this->hardware_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.InputPipelineAnalysisResult.hardware_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double input_percent = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &input_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.Diagnostics diagnostics = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double output_percent = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double idle_percent = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &idle_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double compute_percent = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &compute_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.InputPipelineAnalysisResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.InputPipelineAnalysisResult)
  return false;
#undef DO_
}

void InputPipelineAnalysisResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.InputPipelineAnalysisResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.StepSummary step_time_summary = 2;
  if (this->has_step_time_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_step_time_summary(), output);
  }

  // .tensorflow.profiler.StepSummary input_percent_summary = 3;
  if (this->has_input_percent_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_input_percent_summary(), output);
  }

  // repeated .google.protobuf.Any step_details = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->step_details(static_cast<int>(i)),
      output);
  }

  // .tensorflow.profiler.InputTimeBreakdown input_time_breakdown = 5;
  if (this->has_input_time_breakdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_input_time_breakdown(), output);
  }

  // repeated .tensorflow.profiler.InputOpDetails input_op_details = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_op_details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->input_op_details(static_cast<int>(i)),
      output);
  }

  // .tensorflow.profiler.InputPipelineAnalysisRecommendation recommendation = 7;
  if (this->has_recommendation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_recommendation(), output);
  }

  // .google.protobuf.Any step_time_breakdown = 8;
  if (this->has_step_time_breakdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_step_time_breakdown(), output);
  }

  // string hardware_type = 9;
  if (this->hardware_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hardware_type().data(), static_cast<int>(this->hardware_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputPipelineAnalysisResult.hardware_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->hardware_type(), output);
  }

  // double input_percent = 11;
  if (this->input_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->input_percent(), output);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 12;
  if (this->has_diagnostics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_diagnostics(), output);
  }

  // double output_percent = 13;
  if (this->output_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->output_percent(), output);
  }

  // double idle_percent = 14;
  if (this->idle_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->idle_percent(), output);
  }

  // double compute_percent = 15;
  if (this->compute_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->compute_percent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.InputPipelineAnalysisResult)
}

::google::protobuf::uint8* InputPipelineAnalysisResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.InputPipelineAnalysisResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.StepSummary step_time_summary = 2;
  if (this->has_step_time_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_step_time_summary(), deterministic, target);
  }

  // .tensorflow.profiler.StepSummary input_percent_summary = 3;
  if (this->has_input_percent_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_input_percent_summary(), deterministic, target);
  }

  // repeated .google.protobuf.Any step_details = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->step_details(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.profiler.InputTimeBreakdown input_time_breakdown = 5;
  if (this->has_input_time_breakdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_input_time_breakdown(), deterministic, target);
  }

  // repeated .tensorflow.profiler.InputOpDetails input_op_details = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_op_details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->input_op_details(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.profiler.InputPipelineAnalysisRecommendation recommendation = 7;
  if (this->has_recommendation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_recommendation(), deterministic, target);
  }

  // .google.protobuf.Any step_time_breakdown = 8;
  if (this->has_step_time_breakdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_step_time_breakdown(), deterministic, target);
  }

  // string hardware_type = 9;
  if (this->hardware_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hardware_type().data(), static_cast<int>(this->hardware_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputPipelineAnalysisResult.hardware_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->hardware_type(), target);
  }

  // double input_percent = 11;
  if (this->input_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->input_percent(), target);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 12;
  if (this->has_diagnostics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_diagnostics(), deterministic, target);
  }

  // double output_percent = 13;
  if (this->output_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->output_percent(), target);
  }

  // double idle_percent = 14;
  if (this->idle_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->idle_percent(), target);
  }

  // double compute_percent = 15;
  if (this->compute_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->compute_percent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.InputPipelineAnalysisResult)
  return target;
}

size_t InputPipelineAnalysisResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.InputPipelineAnalysisResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any step_details = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->step_details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->step_details(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.InputOpDetails input_op_details = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->input_op_details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_op_details(static_cast<int>(i)));
    }
  }

  // string hardware_type = 9;
  if (this->hardware_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hardware_type());
  }

  // .tensorflow.profiler.StepSummary step_time_summary = 2;
  if (this->has_step_time_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *step_time_summary_);
  }

  // .tensorflow.profiler.StepSummary input_percent_summary = 3;
  if (this->has_input_percent_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_percent_summary_);
  }

  // .tensorflow.profiler.InputTimeBreakdown input_time_breakdown = 5;
  if (this->has_input_time_breakdown()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_time_breakdown_);
  }

  // .tensorflow.profiler.InputPipelineAnalysisRecommendation recommendation = 7;
  if (this->has_recommendation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recommendation_);
  }

  // .google.protobuf.Any step_time_breakdown = 8;
  if (this->has_step_time_breakdown()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *step_time_breakdown_);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 12;
  if (this->has_diagnostics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *diagnostics_);
  }

  // double input_percent = 11;
  if (this->input_percent() != 0) {
    total_size += 1 + 8;
  }

  // double output_percent = 13;
  if (this->output_percent() != 0) {
    total_size += 1 + 8;
  }

  // double idle_percent = 14;
  if (this->idle_percent() != 0) {
    total_size += 1 + 8;
  }

  // double compute_percent = 15;
  if (this->compute_percent() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputPipelineAnalysisResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.InputPipelineAnalysisResult)
  GOOGLE_DCHECK_NE(&from, this);
  const InputPipelineAnalysisResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputPipelineAnalysisResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.InputPipelineAnalysisResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.InputPipelineAnalysisResult)
    MergeFrom(*source);
  }
}

void InputPipelineAnalysisResult::MergeFrom(const InputPipelineAnalysisResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.InputPipelineAnalysisResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  step_details_.MergeFrom(from.step_details_);
  input_op_details_.MergeFrom(from.input_op_details_);
  if (from.hardware_type().size() > 0) {

    hardware_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hardware_type_);
  }
  if (from.has_step_time_summary()) {
    mutable_step_time_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.step_time_summary());
  }
  if (from.has_input_percent_summary()) {
    mutable_input_percent_summary()->::tensorflow::profiler::StepSummary::MergeFrom(from.input_percent_summary());
  }
  if (from.has_input_time_breakdown()) {
    mutable_input_time_breakdown()->::tensorflow::profiler::InputTimeBreakdown::MergeFrom(from.input_time_breakdown());
  }
  if (from.has_recommendation()) {
    mutable_recommendation()->::tensorflow::profiler::InputPipelineAnalysisRecommendation::MergeFrom(from.recommendation());
  }
  if (from.has_step_time_breakdown()) {
    mutable_step_time_breakdown()->::google::protobuf::Any::MergeFrom(from.step_time_breakdown());
  }
  if (from.has_diagnostics()) {
    mutable_diagnostics()->::tensorflow::profiler::Diagnostics::MergeFrom(from.diagnostics());
  }
  if (from.input_percent() != 0) {
    set_input_percent(from.input_percent());
  }
  if (from.output_percent() != 0) {
    set_output_percent(from.output_percent());
  }
  if (from.idle_percent() != 0) {
    set_idle_percent(from.idle_percent());
  }
  if (from.compute_percent() != 0) {
    set_compute_percent(from.compute_percent());
  }
}

void InputPipelineAnalysisResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.InputPipelineAnalysisResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputPipelineAnalysisResult::CopyFrom(const InputPipelineAnalysisResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.InputPipelineAnalysisResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputPipelineAnalysisResult::IsInitialized() const {
  return true;
}

void InputPipelineAnalysisResult::Swap(InputPipelineAnalysisResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputPipelineAnalysisResult::InternalSwap(InputPipelineAnalysisResult* other) {
  using std::swap;
  CastToBase(&step_details_)->InternalSwap(CastToBase(&other->step_details_));
  CastToBase(&input_op_details_)->InternalSwap(CastToBase(&other->input_op_details_));
  hardware_type_.Swap(&other->hardware_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(step_time_summary_, other->step_time_summary_);
  swap(input_percent_summary_, other->input_percent_summary_);
  swap(input_time_breakdown_, other->input_time_breakdown_);
  swap(recommendation_, other->recommendation_);
  swap(step_time_breakdown_, other->step_time_breakdown_);
  swap(diagnostics_, other->diagnostics_);
  swap(input_percent_, other->input_percent_);
  swap(output_percent_, other->output_percent_);
  swap(idle_percent_, other->idle_percent_);
  swap(compute_percent_, other->compute_percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputPipelineAnalysisResult::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::BottleneckAnalysis* Arena::CreateMaybeMessage< ::tensorflow::profiler::BottleneckAnalysis >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::BottleneckAnalysis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::StepSummary* Arena::CreateMaybeMessage< ::tensorflow::profiler::StepSummary >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::StepSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PerGenericStepDetails* Arena::CreateMaybeMessage< ::tensorflow::profiler::PerGenericStepDetails >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PerGenericStepDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::InputTimeBreakdown* Arena::CreateMaybeMessage< ::tensorflow::profiler::InputTimeBreakdown >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::InputTimeBreakdown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::InputOpDetails* Arena::CreateMaybeMessage< ::tensorflow::profiler::InputOpDetails >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::InputOpDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::InputPipelineAnalysisRecommendation* Arena::CreateMaybeMessage< ::tensorflow::profiler::InputPipelineAnalysisRecommendation >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::InputPipelineAnalysisRecommendation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::GenericStepTimeBreakdown* Arena::CreateMaybeMessage< ::tensorflow::profiler::GenericStepTimeBreakdown >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::GenericStepTimeBreakdown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::InputPipelineAnalysisResult* Arena::CreateMaybeMessage< ::tensorflow::profiler::InputPipelineAnalysisResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::InputPipelineAnalysisResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
