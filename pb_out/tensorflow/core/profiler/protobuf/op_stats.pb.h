// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/op_stats.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/core/profiler/protobuf/diagnostics.pb.h"
#include "tensorflow/core/profiler/protobuf/kernel_stats.pb.h"
#include "tensorflow/core/profiler/protobuf/op_metrics.pb.h"
#include "tensorflow/core/profiler/protobuf/steps_db.pb.h"
#include "tensorflow/core/profiler/protobuf/tf_function.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto 

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto
namespace tensorflow {
namespace profiler {
class CoreDetails;
class CoreDetailsDefaultTypeInternal;
extern CoreDetailsDefaultTypeInternal _CoreDetails_default_instance_;
class HostDependentJobInfoResult;
class HostDependentJobInfoResultDefaultTypeInternal;
extern HostDependentJobInfoResultDefaultTypeInternal _HostDependentJobInfoResult_default_instance_;
class HostIndependentJobInfoResult;
class HostIndependentJobInfoResultDefaultTypeInternal;
extern HostIndependentJobInfoResultDefaultTypeInternal _HostIndependentJobInfoResult_default_instance_;
class OpStats;
class OpStatsDefaultTypeInternal;
extern OpStatsDefaultTypeInternal _OpStats_default_instance_;
class OpStats_CoreIdToDetailsEntry_DoNotUse;
class OpStats_CoreIdToDetailsEntry_DoNotUseDefaultTypeInternal;
extern OpStats_CoreIdToDetailsEntry_DoNotUseDefaultTypeInternal _OpStats_CoreIdToDetailsEntry_DoNotUse_default_instance_;
class PerfEnv;
class PerfEnvDefaultTypeInternal;
extern PerfEnvDefaultTypeInternal _PerfEnv_default_instance_;
class RunEnvironment;
class RunEnvironmentDefaultTypeInternal;
extern RunEnvironmentDefaultTypeInternal _RunEnvironment_default_instance_;
class RunEnvironment_HostnamesEntry_DoNotUse;
class RunEnvironment_HostnamesEntry_DoNotUseDefaultTypeInternal;
extern RunEnvironment_HostnamesEntry_DoNotUseDefaultTypeInternal _RunEnvironment_HostnamesEntry_DoNotUse_default_instance_;
class SystemTopology;
class SystemTopologyDefaultTypeInternal;
extern SystemTopologyDefaultTypeInternal _SystemTopology_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::profiler::CoreDetails* Arena::CreateMaybeMessage<::tensorflow::profiler::CoreDetails>(Arena*);
template<> ::tensorflow::profiler::HostDependentJobInfoResult* Arena::CreateMaybeMessage<::tensorflow::profiler::HostDependentJobInfoResult>(Arena*);
template<> ::tensorflow::profiler::HostIndependentJobInfoResult* Arena::CreateMaybeMessage<::tensorflow::profiler::HostIndependentJobInfoResult>(Arena*);
template<> ::tensorflow::profiler::OpStats* Arena::CreateMaybeMessage<::tensorflow::profiler::OpStats>(Arena*);
template<> ::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse>(Arena*);
template<> ::tensorflow::profiler::PerfEnv* Arena::CreateMaybeMessage<::tensorflow::profiler::PerfEnv>(Arena*);
template<> ::tensorflow::profiler::RunEnvironment* Arena::CreateMaybeMessage<::tensorflow::profiler::RunEnvironment>(Arena*);
template<> ::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse>(Arena*);
template<> ::tensorflow::profiler::SystemTopology* Arena::CreateMaybeMessage<::tensorflow::profiler::SystemTopology>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace profiler {

// ===================================================================

class PerfEnv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.PerfEnv) */ {
 public:
  PerfEnv();
  virtual ~PerfEnv();

  PerfEnv(const PerfEnv& from);

  inline PerfEnv& operator=(const PerfEnv& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerfEnv(PerfEnv&& from) noexcept
    : PerfEnv() {
    *this = ::std::move(from);
  }

  inline PerfEnv& operator=(PerfEnv&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PerfEnv& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerfEnv* internal_default_instance() {
    return reinterpret_cast<const PerfEnv*>(
               &_PerfEnv_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PerfEnv* other);
  friend void swap(PerfEnv& a, PerfEnv& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerfEnv* New() const final {
    return CreateMaybeMessage<PerfEnv>(NULL);
  }

  PerfEnv* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PerfEnv>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PerfEnv& from);
  void MergeFrom(const PerfEnv& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PerfEnv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double peak_tera_flops_per_second = 1;
  void clear_peak_tera_flops_per_second();
  static const int kPeakTeraFlopsPerSecondFieldNumber = 1;
  double peak_tera_flops_per_second() const;
  void set_peak_tera_flops_per_second(double value);

  // double peak_hbm_bw_giga_bytes_per_second = 2;
  void clear_peak_hbm_bw_giga_bytes_per_second();
  static const int kPeakHbmBwGigaBytesPerSecondFieldNumber = 2;
  double peak_hbm_bw_giga_bytes_per_second() const;
  void set_peak_hbm_bw_giga_bytes_per_second(double value);

  // double ridge_point = 3;
  void clear_ridge_point();
  static const int kRidgePointFieldNumber = 3;
  double ridge_point() const;
  void set_ridge_point(double value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.PerfEnv)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double peak_tera_flops_per_second_;
  double peak_hbm_bw_giga_bytes_per_second_;
  double ridge_point_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HostIndependentJobInfoResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.HostIndependentJobInfoResult) */ {
 public:
  HostIndependentJobInfoResult();
  virtual ~HostIndependentJobInfoResult();

  HostIndependentJobInfoResult(const HostIndependentJobInfoResult& from);

  inline HostIndependentJobInfoResult& operator=(const HostIndependentJobInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HostIndependentJobInfoResult(HostIndependentJobInfoResult&& from) noexcept
    : HostIndependentJobInfoResult() {
    *this = ::std::move(from);
  }

  inline HostIndependentJobInfoResult& operator=(HostIndependentJobInfoResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HostIndependentJobInfoResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HostIndependentJobInfoResult* internal_default_instance() {
    return reinterpret_cast<const HostIndependentJobInfoResult*>(
               &_HostIndependentJobInfoResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HostIndependentJobInfoResult* other);
  friend void swap(HostIndependentJobInfoResult& a, HostIndependentJobInfoResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HostIndependentJobInfoResult* New() const final {
    return CreateMaybeMessage<HostIndependentJobInfoResult>(NULL);
  }

  HostIndependentJobInfoResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HostIndependentJobInfoResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HostIndependentJobInfoResult& from);
  void MergeFrom(const HostIndependentJobInfoResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HostIndependentJobInfoResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string build_target = 3;
  void clear_build_target();
  static const int kBuildTargetFieldNumber = 3;
  const ::std::string& build_target() const;
  void set_build_target(const ::std::string& value);
  #if LANG_CXX11
  void set_build_target(::std::string&& value);
  #endif
  void set_build_target(const char* value);
  void set_build_target(const char* value, size_t size);
  ::std::string* mutable_build_target();
  ::std::string* release_build_target();
  void set_allocated_build_target(::std::string* build_target);

  // int64 change_list = 1;
  void clear_change_list();
  static const int kChangeListFieldNumber = 1;
  ::google::protobuf::int64 change_list() const;
  void set_change_list(::google::protobuf::int64 value);

  // int64 build_time = 2;
  void clear_build_time();
  static const int kBuildTimeFieldNumber = 2;
  ::google::protobuf::int64 build_time() const;
  void set_build_time(::google::protobuf::int64 value);

  // uint32 profile_duration_ms = 4;
  void clear_profile_duration_ms();
  static const int kProfileDurationMsFieldNumber = 4;
  ::google::protobuf::uint32 profile_duration_ms() const;
  void set_profile_duration_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.HostIndependentJobInfoResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr build_target_;
  ::google::protobuf::int64 change_list_;
  ::google::protobuf::int64 build_time_;
  ::google::protobuf::uint32 profile_duration_ms_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HostDependentJobInfoResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.HostDependentJobInfoResult) */ {
 public:
  HostDependentJobInfoResult();
  virtual ~HostDependentJobInfoResult();

  HostDependentJobInfoResult(const HostDependentJobInfoResult& from);

  inline HostDependentJobInfoResult& operator=(const HostDependentJobInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HostDependentJobInfoResult(HostDependentJobInfoResult&& from) noexcept
    : HostDependentJobInfoResult() {
    *this = ::std::move(from);
  }

  inline HostDependentJobInfoResult& operator=(HostDependentJobInfoResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HostDependentJobInfoResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HostDependentJobInfoResult* internal_default_instance() {
    return reinterpret_cast<const HostDependentJobInfoResult*>(
               &_HostDependentJobInfoResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HostDependentJobInfoResult* other);
  friend void swap(HostDependentJobInfoResult& a, HostDependentJobInfoResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HostDependentJobInfoResult* New() const final {
    return CreateMaybeMessage<HostDependentJobInfoResult>(NULL);
  }

  HostDependentJobInfoResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HostDependentJobInfoResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HostDependentJobInfoResult& from);
  void MergeFrom(const HostDependentJobInfoResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HostDependentJobInfoResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host_id = 1;
  void clear_host_id();
  static const int kHostIdFieldNumber = 1;
  const ::std::string& host_id() const;
  void set_host_id(const ::std::string& value);
  #if LANG_CXX11
  void set_host_id(::std::string&& value);
  #endif
  void set_host_id(const char* value);
  void set_host_id(const char* value, size_t size);
  ::std::string* mutable_host_id();
  ::std::string* release_host_id();
  void set_allocated_host_id(::std::string* host_id);

  // string command_line = 2;
  void clear_command_line();
  static const int kCommandLineFieldNumber = 2;
  const ::std::string& command_line() const;
  void set_command_line(const ::std::string& value);
  #if LANG_CXX11
  void set_command_line(::std::string&& value);
  #endif
  void set_command_line(const char* value);
  void set_command_line(const char* value, size_t size);
  ::std::string* mutable_command_line();
  ::std::string* release_command_line();
  void set_allocated_command_line(::std::string* command_line);

  // string bns_address = 4;
  void clear_bns_address();
  static const int kBnsAddressFieldNumber = 4;
  const ::std::string& bns_address() const;
  void set_bns_address(const ::std::string& value);
  #if LANG_CXX11
  void set_bns_address(::std::string&& value);
  #endif
  void set_bns_address(const char* value);
  void set_bns_address(const char* value, size_t size);
  ::std::string* mutable_bns_address();
  ::std::string* release_bns_address();
  void set_allocated_bns_address(::std::string* bns_address);

  // int64 start_time = 3;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  ::google::protobuf::int64 start_time() const;
  void set_start_time(::google::protobuf::int64 value);

  // uint64 profile_time_ns = 5;
  void clear_profile_time_ns();
  static const int kProfileTimeNsFieldNumber = 5;
  ::google::protobuf::uint64 profile_time_ns() const;
  void set_profile_time_ns(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.HostDependentJobInfoResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_id_;
  ::google::protobuf::internal::ArenaStringPtr command_line_;
  ::google::protobuf::internal::ArenaStringPtr bns_address_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::uint64 profile_time_ns_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SystemTopology : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.SystemTopology) */ {
 public:
  SystemTopology();
  virtual ~SystemTopology();

  SystemTopology(const SystemTopology& from);

  inline SystemTopology& operator=(const SystemTopology& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemTopology(SystemTopology&& from) noexcept
    : SystemTopology() {
    *this = ::std::move(from);
  }

  inline SystemTopology& operator=(SystemTopology&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemTopology& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemTopology* internal_default_instance() {
    return reinterpret_cast<const SystemTopology*>(
               &_SystemTopology_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SystemTopology* other);
  friend void swap(SystemTopology& a, SystemTopology& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemTopology* New() const final {
    return CreateMaybeMessage<SystemTopology>(NULL);
  }

  SystemTopology* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemTopology>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemTopology& from);
  void MergeFrom(const SystemTopology& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemTopology* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 x_dimension = 1;
  void clear_x_dimension();
  static const int kXDimensionFieldNumber = 1;
  ::google::protobuf::int64 x_dimension() const;
  void set_x_dimension(::google::protobuf::int64 value);

  // int64 y_dimension = 2;
  void clear_y_dimension();
  static const int kYDimensionFieldNumber = 2;
  ::google::protobuf::int64 y_dimension() const;
  void set_y_dimension(::google::protobuf::int64 value);

  // int64 z_dimension = 3;
  void clear_z_dimension();
  static const int kZDimensionFieldNumber = 3;
  ::google::protobuf::int64 z_dimension() const;
  void set_z_dimension(::google::protobuf::int64 value);

  // int64 num_expected_reduced_chips = 4;
  void clear_num_expected_reduced_chips();
  static const int kNumExpectedReducedChipsFieldNumber = 4;
  ::google::protobuf::int64 num_expected_reduced_chips() const;
  void set_num_expected_reduced_chips(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.SystemTopology)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 x_dimension_;
  ::google::protobuf::int64 y_dimension_;
  ::google::protobuf::int64 z_dimension_;
  ::google::protobuf::int64 num_expected_reduced_chips_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunEnvironment_HostnamesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<RunEnvironment_HostnamesEntry_DoNotUse, 
    ::std::string, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<RunEnvironment_HostnamesEntry_DoNotUse, 
    ::std::string, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  RunEnvironment_HostnamesEntry_DoNotUse();
  RunEnvironment_HostnamesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const RunEnvironment_HostnamesEntry_DoNotUse& other);
  static const RunEnvironment_HostnamesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RunEnvironment_HostnamesEntry_DoNotUse*>(&_RunEnvironment_HostnamesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class RunEnvironment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.RunEnvironment) */ {
 public:
  RunEnvironment();
  virtual ~RunEnvironment();

  RunEnvironment(const RunEnvironment& from);

  inline RunEnvironment& operator=(const RunEnvironment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunEnvironment(RunEnvironment&& from) noexcept
    : RunEnvironment() {
    *this = ::std::move(from);
  }

  inline RunEnvironment& operator=(RunEnvironment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RunEnvironment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunEnvironment* internal_default_instance() {
    return reinterpret_cast<const RunEnvironment*>(
               &_RunEnvironment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RunEnvironment* other);
  friend void swap(RunEnvironment& a, RunEnvironment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunEnvironment* New() const final {
    return CreateMaybeMessage<RunEnvironment>(NULL);
  }

  RunEnvironment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunEnvironment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunEnvironment& from);
  void MergeFrom(const RunEnvironment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunEnvironment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bool> hostnames = 3;
  int hostnames_size() const;
  void clear_hostnames();
  static const int kHostnamesFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, bool >&
      hostnames() const;
  ::google::protobuf::Map< ::std::string, bool >*
      mutable_hostnames();

  // repeated .tensorflow.profiler.HostDependentJobInfoResult host_dependent_job_info = 8;
  int host_dependent_job_info_size() const;
  void clear_host_dependent_job_info();
  static const int kHostDependentJobInfoFieldNumber = 8;
  ::tensorflow::profiler::HostDependentJobInfoResult* mutable_host_dependent_job_info(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::HostDependentJobInfoResult >*
      mutable_host_dependent_job_info();
  const ::tensorflow::profiler::HostDependentJobInfoResult& host_dependent_job_info(int index) const;
  ::tensorflow::profiler::HostDependentJobInfoResult* add_host_dependent_job_info();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::HostDependentJobInfoResult >&
      host_dependent_job_info() const;

  // string device_type = 4;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 4;
  const ::std::string& device_type() const;
  void set_device_type(const ::std::string& value);
  #if LANG_CXX11
  void set_device_type(::std::string&& value);
  #endif
  void set_device_type(const char* value);
  void set_device_type(const char* value, size_t size);
  ::std::string* mutable_device_type();
  ::std::string* release_device_type();
  void set_allocated_device_type(::std::string* device_type);

  // .tensorflow.profiler.HostIndependentJobInfoResult host_independent_job_info = 7;
  bool has_host_independent_job_info() const;
  void clear_host_independent_job_info();
  static const int kHostIndependentJobInfoFieldNumber = 7;
  private:
  const ::tensorflow::profiler::HostIndependentJobInfoResult& _internal_host_independent_job_info() const;
  public:
  const ::tensorflow::profiler::HostIndependentJobInfoResult& host_independent_job_info() const;
  ::tensorflow::profiler::HostIndependentJobInfoResult* release_host_independent_job_info();
  ::tensorflow::profiler::HostIndependentJobInfoResult* mutable_host_independent_job_info();
  void set_allocated_host_independent_job_info(::tensorflow::profiler::HostIndependentJobInfoResult* host_independent_job_info);

  // .tensorflow.profiler.SystemTopology topology = 11;
  bool has_topology() const;
  void clear_topology();
  static const int kTopologyFieldNumber = 11;
  private:
  const ::tensorflow::profiler::SystemTopology& _internal_topology() const;
  public:
  const ::tensorflow::profiler::SystemTopology& topology() const;
  ::tensorflow::profiler::SystemTopology* release_topology();
  ::tensorflow::profiler::SystemTopology* mutable_topology();
  void set_allocated_topology(::tensorflow::profiler::SystemTopology* topology);

  // int32 host_count = 1;
  void clear_host_count();
  static const int kHostCountFieldNumber = 1;
  ::google::protobuf::int32 host_count() const;
  void set_host_count(::google::protobuf::int32 value);

  // int32 task_count = 2;
  void clear_task_count();
  static const int kTaskCountFieldNumber = 2;
  ::google::protobuf::int32 task_count() const;
  void set_task_count(::google::protobuf::int32 value);

  // int32 device_core_count = 5;
  void clear_device_core_count();
  static const int kDeviceCoreCountFieldNumber = 5;
  ::google::protobuf::int32 device_core_count() const;
  void set_device_core_count(::google::protobuf::int32 value);

  // int32 per_core_batch_size = 6;
  void clear_per_core_batch_size();
  static const int kPerCoreBatchSizeFieldNumber = 6;
  ::google::protobuf::int32 per_core_batch_size() const;
  void set_per_core_batch_size(::google::protobuf::int32 value);

  // int32 replica_count = 9;
  void clear_replica_count();
  static const int kReplicaCountFieldNumber = 9;
  ::google::protobuf::int32 replica_count() const;
  void set_replica_count(::google::protobuf::int32 value);

  // int32 num_cores_per_replica = 10;
  void clear_num_cores_per_replica();
  static const int kNumCoresPerReplicaFieldNumber = 10;
  ::google::protobuf::int32 num_cores_per_replica() const;
  void set_num_cores_per_replica(::google::protobuf::int32 value);

  // uint32 host_trace_level = 12;
  void clear_host_trace_level();
  static const int kHostTraceLevelFieldNumber = 12;
  ::google::protobuf::uint32 host_trace_level() const;
  void set_host_trace_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.RunEnvironment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      RunEnvironment_HostnamesEntry_DoNotUse,
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > hostnames_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::HostDependentJobInfoResult > host_dependent_job_info_;
  ::google::protobuf::internal::ArenaStringPtr device_type_;
  ::tensorflow::profiler::HostIndependentJobInfoResult* host_independent_job_info_;
  ::tensorflow::profiler::SystemTopology* topology_;
  ::google::protobuf::int32 host_count_;
  ::google::protobuf::int32 task_count_;
  ::google::protobuf::int32 device_core_count_;
  ::google::protobuf::int32 per_core_batch_size_;
  ::google::protobuf::int32 replica_count_;
  ::google::protobuf::int32 num_cores_per_replica_;
  ::google::protobuf::uint32 host_trace_level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoreDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.CoreDetails) */ {
 public:
  CoreDetails();
  virtual ~CoreDetails();

  CoreDetails(const CoreDetails& from);

  inline CoreDetails& operator=(const CoreDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoreDetails(CoreDetails&& from) noexcept
    : CoreDetails() {
    *this = ::std::move(from);
  }

  inline CoreDetails& operator=(CoreDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoreDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoreDetails* internal_default_instance() {
    return reinterpret_cast<const CoreDetails*>(
               &_CoreDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CoreDetails* other);
  friend void swap(CoreDetails& a, CoreDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoreDetails* New() const final {
    return CreateMaybeMessage<CoreDetails>(NULL);
  }

  CoreDetails* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CoreDetails>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CoreDetails& from);
  void MergeFrom(const CoreDetails& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CoreDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hostname = 1;
  void clear_hostname();
  static const int kHostnameFieldNumber = 1;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // uint32 device_ordinal = 2;
  void clear_device_ordinal();
  static const int kDeviceOrdinalFieldNumber = 2;
  ::google::protobuf::uint32 device_ordinal() const;
  void set_device_ordinal(::google::protobuf::uint32 value);

  // uint32 core_num = 3;
  void clear_core_num();
  static const int kCoreNumFieldNumber = 3;
  ::google::protobuf::uint32 core_num() const;
  void set_core_num(::google::protobuf::uint32 value);

  // uint32 local_chip_id = 4;
  void clear_local_chip_id();
  static const int kLocalChipIdFieldNumber = 4;
  ::google::protobuf::uint32 local_chip_id() const;
  void set_local_chip_id(::google::protobuf::uint32 value);

  // uint32 global_chip_id = 5;
  void clear_global_chip_id();
  static const int kGlobalChipIdFieldNumber = 5;
  ::google::protobuf::uint32 global_chip_id() const;
  void set_global_chip_id(::google::protobuf::uint32 value);

  // uint32 global_core_id = 6;
  void clear_global_core_id();
  static const int kGlobalCoreIdFieldNumber = 6;
  ::google::protobuf::uint32 global_core_id() const;
  void set_global_core_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.CoreDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::uint32 device_ordinal_;
  ::google::protobuf::uint32 core_num_;
  ::google::protobuf::uint32 local_chip_id_;
  ::google::protobuf::uint32 global_chip_id_;
  ::google::protobuf::uint32 global_core_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpStats_CoreIdToDetailsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<OpStats_CoreIdToDetailsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<OpStats_CoreIdToDetailsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  OpStats_CoreIdToDetailsEntry_DoNotUse();
  OpStats_CoreIdToDetailsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const OpStats_CoreIdToDetailsEntry_DoNotUse& other);
  static const OpStats_CoreIdToDetailsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const OpStats_CoreIdToDetailsEntry_DoNotUse*>(&_OpStats_CoreIdToDetailsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class OpStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.OpStats) */ {
 public:
  OpStats();
  virtual ~OpStats();

  OpStats(const OpStats& from);

  inline OpStats& operator=(const OpStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpStats(OpStats&& from) noexcept
    : OpStats() {
    *this = ::std::move(from);
  }

  inline OpStats& operator=(OpStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpStats* internal_default_instance() {
    return reinterpret_cast<const OpStats*>(
               &_OpStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(OpStats* other);
  friend void swap(OpStats& a, OpStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpStats* New() const final {
    return CreateMaybeMessage<OpStats>(NULL);
  }

  OpStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OpStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OpStats& from);
  void MergeFrom(const OpStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .tensorflow.profiler.CoreDetails> core_id_to_details = 11;
  int core_id_to_details_size() const;
  void clear_core_id_to_details();
  static const int kCoreIdToDetailsFieldNumber = 11;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >&
      core_id_to_details() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >*
      mutable_core_id_to_details();

  // .tensorflow.profiler.OpMetricsDb host_op_metrics_db = 1;
  bool has_host_op_metrics_db() const;
  void clear_host_op_metrics_db();
  static const int kHostOpMetricsDbFieldNumber = 1;
  private:
  const ::tensorflow::profiler::OpMetricsDb& _internal_host_op_metrics_db() const;
  public:
  const ::tensorflow::profiler::OpMetricsDb& host_op_metrics_db() const;
  ::tensorflow::profiler::OpMetricsDb* release_host_op_metrics_db();
  ::tensorflow::profiler::OpMetricsDb* mutable_host_op_metrics_db();
  void set_allocated_host_op_metrics_db(::tensorflow::profiler::OpMetricsDb* host_op_metrics_db);

  // .tensorflow.profiler.OpMetricsDb device_op_metrics_db = 2;
  bool has_device_op_metrics_db() const;
  void clear_device_op_metrics_db();
  static const int kDeviceOpMetricsDbFieldNumber = 2;
  private:
  const ::tensorflow::profiler::OpMetricsDb& _internal_device_op_metrics_db() const;
  public:
  const ::tensorflow::profiler::OpMetricsDb& device_op_metrics_db() const;
  ::tensorflow::profiler::OpMetricsDb* release_device_op_metrics_db();
  ::tensorflow::profiler::OpMetricsDb* mutable_device_op_metrics_db();
  void set_allocated_device_op_metrics_db(::tensorflow::profiler::OpMetricsDb* device_op_metrics_db);

  // .tensorflow.profiler.PerfEnv perf_env = 3;
  bool has_perf_env() const;
  void clear_perf_env();
  static const int kPerfEnvFieldNumber = 3;
  private:
  const ::tensorflow::profiler::PerfEnv& _internal_perf_env() const;
  public:
  const ::tensorflow::profiler::PerfEnv& perf_env() const;
  ::tensorflow::profiler::PerfEnv* release_perf_env();
  ::tensorflow::profiler::PerfEnv* mutable_perf_env();
  void set_allocated_perf_env(::tensorflow::profiler::PerfEnv* perf_env);

  // .tensorflow.profiler.StepDatabaseResult step_db = 4;
  bool has_step_db() const;
  void clear_step_db();
  static const int kStepDbFieldNumber = 4;
  private:
  const ::tensorflow::profiler::StepDatabaseResult& _internal_step_db() const;
  public:
  const ::tensorflow::profiler::StepDatabaseResult& step_db() const;
  ::tensorflow::profiler::StepDatabaseResult* release_step_db();
  ::tensorflow::profiler::StepDatabaseResult* mutable_step_db();
  void set_allocated_step_db(::tensorflow::profiler::StepDatabaseResult* step_db);

  // .tensorflow.profiler.RunEnvironment run_environment = 5;
  bool has_run_environment() const;
  void clear_run_environment();
  static const int kRunEnvironmentFieldNumber = 5;
  private:
  const ::tensorflow::profiler::RunEnvironment& _internal_run_environment() const;
  public:
  const ::tensorflow::profiler::RunEnvironment& run_environment() const;
  ::tensorflow::profiler::RunEnvironment* release_run_environment();
  ::tensorflow::profiler::RunEnvironment* mutable_run_environment();
  void set_allocated_run_environment(::tensorflow::profiler::RunEnvironment* run_environment);

  // .tensorflow.profiler.KernelStatsDb kernel_stats_db = 6;
  bool has_kernel_stats_db() const;
  void clear_kernel_stats_db();
  static const int kKernelStatsDbFieldNumber = 6;
  private:
  const ::tensorflow::profiler::KernelStatsDb& _internal_kernel_stats_db() const;
  public:
  const ::tensorflow::profiler::KernelStatsDb& kernel_stats_db() const;
  ::tensorflow::profiler::KernelStatsDb* release_kernel_stats_db();
  ::tensorflow::profiler::KernelStatsDb* mutable_kernel_stats_db();
  void set_allocated_kernel_stats_db(::tensorflow::profiler::KernelStatsDb* kernel_stats_db);

  // .tensorflow.profiler.TfFunctionDb tf_function_db = 8;
  bool has_tf_function_db() const;
  void clear_tf_function_db();
  static const int kTfFunctionDbFieldNumber = 8;
  private:
  const ::tensorflow::profiler::TfFunctionDb& _internal_tf_function_db() const;
  public:
  const ::tensorflow::profiler::TfFunctionDb& tf_function_db() const;
  ::tensorflow::profiler::TfFunctionDb* release_tf_function_db();
  ::tensorflow::profiler::TfFunctionDb* mutable_tf_function_db();
  void set_allocated_tf_function_db(::tensorflow::profiler::TfFunctionDb* tf_function_db);

  // .tensorflow.profiler.Diagnostics diagnostics = 9;
  bool has_diagnostics() const;
  void clear_diagnostics();
  static const int kDiagnosticsFieldNumber = 9;
  private:
  const ::tensorflow::profiler::Diagnostics& _internal_diagnostics() const;
  public:
  const ::tensorflow::profiler::Diagnostics& diagnostics() const;
  ::tensorflow::profiler::Diagnostics* release_diagnostics();
  ::tensorflow::profiler::Diagnostics* mutable_diagnostics();
  void set_allocated_diagnostics(::tensorflow::profiler::Diagnostics* diagnostics);

  // .tensorflow.profiler.OpMetricsDb hlo_metrics_db_complete_steps_only = 10;
  bool has_hlo_metrics_db_complete_steps_only() const;
  void clear_hlo_metrics_db_complete_steps_only();
  static const int kHloMetricsDbCompleteStepsOnlyFieldNumber = 10;
  private:
  const ::tensorflow::profiler::OpMetricsDb& _internal_hlo_metrics_db_complete_steps_only() const;
  public:
  const ::tensorflow::profiler::OpMetricsDb& hlo_metrics_db_complete_steps_only() const;
  ::tensorflow::profiler::OpMetricsDb* release_hlo_metrics_db_complete_steps_only();
  ::tensorflow::profiler::OpMetricsDb* mutable_hlo_metrics_db_complete_steps_only();
  void set_allocated_hlo_metrics_db_complete_steps_only(::tensorflow::profiler::OpMetricsDb* hlo_metrics_db_complete_steps_only);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.OpStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      OpStats_CoreIdToDetailsEntry_DoNotUse,
      ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > core_id_to_details_;
  ::tensorflow::profiler::OpMetricsDb* host_op_metrics_db_;
  ::tensorflow::profiler::OpMetricsDb* device_op_metrics_db_;
  ::tensorflow::profiler::PerfEnv* perf_env_;
  ::tensorflow::profiler::StepDatabaseResult* step_db_;
  ::tensorflow::profiler::RunEnvironment* run_environment_;
  ::tensorflow::profiler::KernelStatsDb* kernel_stats_db_;
  ::tensorflow::profiler::TfFunctionDb* tf_function_db_;
  ::tensorflow::profiler::Diagnostics* diagnostics_;
  ::tensorflow::profiler::OpMetricsDb* hlo_metrics_db_complete_steps_only_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PerfEnv

// double peak_tera_flops_per_second = 1;
inline void PerfEnv::clear_peak_tera_flops_per_second() {
  peak_tera_flops_per_second_ = 0;
}
inline double PerfEnv::peak_tera_flops_per_second() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerfEnv.peak_tera_flops_per_second)
  return peak_tera_flops_per_second_;
}
inline void PerfEnv::set_peak_tera_flops_per_second(double value) {
  
  peak_tera_flops_per_second_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerfEnv.peak_tera_flops_per_second)
}

// double peak_hbm_bw_giga_bytes_per_second = 2;
inline void PerfEnv::clear_peak_hbm_bw_giga_bytes_per_second() {
  peak_hbm_bw_giga_bytes_per_second_ = 0;
}
inline double PerfEnv::peak_hbm_bw_giga_bytes_per_second() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerfEnv.peak_hbm_bw_giga_bytes_per_second)
  return peak_hbm_bw_giga_bytes_per_second_;
}
inline void PerfEnv::set_peak_hbm_bw_giga_bytes_per_second(double value) {
  
  peak_hbm_bw_giga_bytes_per_second_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerfEnv.peak_hbm_bw_giga_bytes_per_second)
}

// double ridge_point = 3;
inline void PerfEnv::clear_ridge_point() {
  ridge_point_ = 0;
}
inline double PerfEnv::ridge_point() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerfEnv.ridge_point)
  return ridge_point_;
}
inline void PerfEnv::set_ridge_point(double value) {
  
  ridge_point_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerfEnv.ridge_point)
}

// -------------------------------------------------------------------

// HostIndependentJobInfoResult

// int64 change_list = 1;
inline void HostIndependentJobInfoResult::clear_change_list() {
  change_list_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HostIndependentJobInfoResult::change_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostIndependentJobInfoResult.change_list)
  return change_list_;
}
inline void HostIndependentJobInfoResult::set_change_list(::google::protobuf::int64 value) {
  
  change_list_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostIndependentJobInfoResult.change_list)
}

// int64 build_time = 2;
inline void HostIndependentJobInfoResult::clear_build_time() {
  build_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HostIndependentJobInfoResult::build_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostIndependentJobInfoResult.build_time)
  return build_time_;
}
inline void HostIndependentJobInfoResult::set_build_time(::google::protobuf::int64 value) {
  
  build_time_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostIndependentJobInfoResult.build_time)
}

// string build_target = 3;
inline void HostIndependentJobInfoResult::clear_build_target() {
  build_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HostIndependentJobInfoResult::build_target() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostIndependentJobInfoResult.build_target)
  return build_target_.GetNoArena();
}
inline void HostIndependentJobInfoResult::set_build_target(const ::std::string& value) {
  
  build_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostIndependentJobInfoResult.build_target)
}
#if LANG_CXX11
inline void HostIndependentJobInfoResult::set_build_target(::std::string&& value) {
  
  build_target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.HostIndependentJobInfoResult.build_target)
}
#endif
inline void HostIndependentJobInfoResult::set_build_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  build_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.HostIndependentJobInfoResult.build_target)
}
inline void HostIndependentJobInfoResult::set_build_target(const char* value, size_t size) {
  
  build_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.HostIndependentJobInfoResult.build_target)
}
inline ::std::string* HostIndependentJobInfoResult::mutable_build_target() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.HostIndependentJobInfoResult.build_target)
  return build_target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HostIndependentJobInfoResult::release_build_target() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.HostIndependentJobInfoResult.build_target)
  
  return build_target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostIndependentJobInfoResult::set_allocated_build_target(::std::string* build_target) {
  if (build_target != NULL) {
    
  } else {
    
  }
  build_target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), build_target);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.HostIndependentJobInfoResult.build_target)
}

// uint32 profile_duration_ms = 4;
inline void HostIndependentJobInfoResult::clear_profile_duration_ms() {
  profile_duration_ms_ = 0u;
}
inline ::google::protobuf::uint32 HostIndependentJobInfoResult::profile_duration_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostIndependentJobInfoResult.profile_duration_ms)
  return profile_duration_ms_;
}
inline void HostIndependentJobInfoResult::set_profile_duration_ms(::google::protobuf::uint32 value) {
  
  profile_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostIndependentJobInfoResult.profile_duration_ms)
}

// -------------------------------------------------------------------

// HostDependentJobInfoResult

// string host_id = 1;
inline void HostDependentJobInfoResult::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HostDependentJobInfoResult::host_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostDependentJobInfoResult.host_id)
  return host_id_.GetNoArena();
}
inline void HostDependentJobInfoResult::set_host_id(const ::std::string& value) {
  
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostDependentJobInfoResult.host_id)
}
#if LANG_CXX11
inline void HostDependentJobInfoResult::set_host_id(::std::string&& value) {
  
  host_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.HostDependentJobInfoResult.host_id)
}
#endif
inline void HostDependentJobInfoResult::set_host_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.HostDependentJobInfoResult.host_id)
}
inline void HostDependentJobInfoResult::set_host_id(const char* value, size_t size) {
  
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.HostDependentJobInfoResult.host_id)
}
inline ::std::string* HostDependentJobInfoResult::mutable_host_id() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.HostDependentJobInfoResult.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HostDependentJobInfoResult::release_host_id() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.HostDependentJobInfoResult.host_id)
  
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostDependentJobInfoResult::set_allocated_host_id(::std::string* host_id) {
  if (host_id != NULL) {
    
  } else {
    
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.HostDependentJobInfoResult.host_id)
}

// string command_line = 2;
inline void HostDependentJobInfoResult::clear_command_line() {
  command_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HostDependentJobInfoResult::command_line() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostDependentJobInfoResult.command_line)
  return command_line_.GetNoArena();
}
inline void HostDependentJobInfoResult::set_command_line(const ::std::string& value) {
  
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostDependentJobInfoResult.command_line)
}
#if LANG_CXX11
inline void HostDependentJobInfoResult::set_command_line(::std::string&& value) {
  
  command_line_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.HostDependentJobInfoResult.command_line)
}
#endif
inline void HostDependentJobInfoResult::set_command_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.HostDependentJobInfoResult.command_line)
}
inline void HostDependentJobInfoResult::set_command_line(const char* value, size_t size) {
  
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.HostDependentJobInfoResult.command_line)
}
inline ::std::string* HostDependentJobInfoResult::mutable_command_line() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.HostDependentJobInfoResult.command_line)
  return command_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HostDependentJobInfoResult::release_command_line() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.HostDependentJobInfoResult.command_line)
  
  return command_line_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostDependentJobInfoResult::set_allocated_command_line(::std::string* command_line) {
  if (command_line != NULL) {
    
  } else {
    
  }
  command_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_line);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.HostDependentJobInfoResult.command_line)
}

// int64 start_time = 3;
inline void HostDependentJobInfoResult::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HostDependentJobInfoResult::start_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostDependentJobInfoResult.start_time)
  return start_time_;
}
inline void HostDependentJobInfoResult::set_start_time(::google::protobuf::int64 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostDependentJobInfoResult.start_time)
}

// string bns_address = 4;
inline void HostDependentJobInfoResult::clear_bns_address() {
  bns_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HostDependentJobInfoResult::bns_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostDependentJobInfoResult.bns_address)
  return bns_address_.GetNoArena();
}
inline void HostDependentJobInfoResult::set_bns_address(const ::std::string& value) {
  
  bns_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostDependentJobInfoResult.bns_address)
}
#if LANG_CXX11
inline void HostDependentJobInfoResult::set_bns_address(::std::string&& value) {
  
  bns_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.HostDependentJobInfoResult.bns_address)
}
#endif
inline void HostDependentJobInfoResult::set_bns_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bns_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.HostDependentJobInfoResult.bns_address)
}
inline void HostDependentJobInfoResult::set_bns_address(const char* value, size_t size) {
  
  bns_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.HostDependentJobInfoResult.bns_address)
}
inline ::std::string* HostDependentJobInfoResult::mutable_bns_address() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.HostDependentJobInfoResult.bns_address)
  return bns_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HostDependentJobInfoResult::release_bns_address() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.HostDependentJobInfoResult.bns_address)
  
  return bns_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostDependentJobInfoResult::set_allocated_bns_address(::std::string* bns_address) {
  if (bns_address != NULL) {
    
  } else {
    
  }
  bns_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bns_address);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.HostDependentJobInfoResult.bns_address)
}

// uint64 profile_time_ns = 5;
inline void HostDependentJobInfoResult::clear_profile_time_ns() {
  profile_time_ns_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HostDependentJobInfoResult::profile_time_ns() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.HostDependentJobInfoResult.profile_time_ns)
  return profile_time_ns_;
}
inline void HostDependentJobInfoResult::set_profile_time_ns(::google::protobuf::uint64 value) {
  
  profile_time_ns_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.HostDependentJobInfoResult.profile_time_ns)
}

// -------------------------------------------------------------------

// SystemTopology

// int64 x_dimension = 1;
inline void SystemTopology::clear_x_dimension() {
  x_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SystemTopology::x_dimension() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.SystemTopology.x_dimension)
  return x_dimension_;
}
inline void SystemTopology::set_x_dimension(::google::protobuf::int64 value) {
  
  x_dimension_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.SystemTopology.x_dimension)
}

// int64 y_dimension = 2;
inline void SystemTopology::clear_y_dimension() {
  y_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SystemTopology::y_dimension() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.SystemTopology.y_dimension)
  return y_dimension_;
}
inline void SystemTopology::set_y_dimension(::google::protobuf::int64 value) {
  
  y_dimension_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.SystemTopology.y_dimension)
}

// int64 z_dimension = 3;
inline void SystemTopology::clear_z_dimension() {
  z_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SystemTopology::z_dimension() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.SystemTopology.z_dimension)
  return z_dimension_;
}
inline void SystemTopology::set_z_dimension(::google::protobuf::int64 value) {
  
  z_dimension_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.SystemTopology.z_dimension)
}

// int64 num_expected_reduced_chips = 4;
inline void SystemTopology::clear_num_expected_reduced_chips() {
  num_expected_reduced_chips_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SystemTopology::num_expected_reduced_chips() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.SystemTopology.num_expected_reduced_chips)
  return num_expected_reduced_chips_;
}
inline void SystemTopology::set_num_expected_reduced_chips(::google::protobuf::int64 value) {
  
  num_expected_reduced_chips_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.SystemTopology.num_expected_reduced_chips)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RunEnvironment

// int32 host_count = 1;
inline void RunEnvironment::clear_host_count() {
  host_count_ = 0;
}
inline ::google::protobuf::int32 RunEnvironment::host_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.host_count)
  return host_count_;
}
inline void RunEnvironment::set_host_count(::google::protobuf::int32 value) {
  
  host_count_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.RunEnvironment.host_count)
}

// int32 task_count = 2;
inline void RunEnvironment::clear_task_count() {
  task_count_ = 0;
}
inline ::google::protobuf::int32 RunEnvironment::task_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.task_count)
  return task_count_;
}
inline void RunEnvironment::set_task_count(::google::protobuf::int32 value) {
  
  task_count_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.RunEnvironment.task_count)
}

// map<string, bool> hostnames = 3;
inline int RunEnvironment::hostnames_size() const {
  return hostnames_.size();
}
inline void RunEnvironment::clear_hostnames() {
  hostnames_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, bool >&
RunEnvironment::hostnames() const {
  // @@protoc_insertion_point(field_map:tensorflow.profiler.RunEnvironment.hostnames)
  return hostnames_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, bool >*
RunEnvironment::mutable_hostnames() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.profiler.RunEnvironment.hostnames)
  return hostnames_.MutableMap();
}

// string device_type = 4;
inline void RunEnvironment::clear_device_type() {
  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunEnvironment::device_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.device_type)
  return device_type_.GetNoArena();
}
inline void RunEnvironment::set_device_type(const ::std::string& value) {
  
  device_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.RunEnvironment.device_type)
}
#if LANG_CXX11
inline void RunEnvironment::set_device_type(::std::string&& value) {
  
  device_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.RunEnvironment.device_type)
}
#endif
inline void RunEnvironment::set_device_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.RunEnvironment.device_type)
}
inline void RunEnvironment::set_device_type(const char* value, size_t size) {
  
  device_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.RunEnvironment.device_type)
}
inline ::std::string* RunEnvironment::mutable_device_type() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.RunEnvironment.device_type)
  return device_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunEnvironment::release_device_type() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.RunEnvironment.device_type)
  
  return device_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunEnvironment::set_allocated_device_type(::std::string* device_type) {
  if (device_type != NULL) {
    
  } else {
    
  }
  device_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_type);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.RunEnvironment.device_type)
}

// int32 device_core_count = 5;
inline void RunEnvironment::clear_device_core_count() {
  device_core_count_ = 0;
}
inline ::google::protobuf::int32 RunEnvironment::device_core_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.device_core_count)
  return device_core_count_;
}
inline void RunEnvironment::set_device_core_count(::google::protobuf::int32 value) {
  
  device_core_count_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.RunEnvironment.device_core_count)
}

// int32 per_core_batch_size = 6;
inline void RunEnvironment::clear_per_core_batch_size() {
  per_core_batch_size_ = 0;
}
inline ::google::protobuf::int32 RunEnvironment::per_core_batch_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.per_core_batch_size)
  return per_core_batch_size_;
}
inline void RunEnvironment::set_per_core_batch_size(::google::protobuf::int32 value) {
  
  per_core_batch_size_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.RunEnvironment.per_core_batch_size)
}

// .tensorflow.profiler.HostIndependentJobInfoResult host_independent_job_info = 7;
inline bool RunEnvironment::has_host_independent_job_info() const {
  return this != internal_default_instance() && host_independent_job_info_ != NULL;
}
inline void RunEnvironment::clear_host_independent_job_info() {
  if (GetArenaNoVirtual() == NULL && host_independent_job_info_ != NULL) {
    delete host_independent_job_info_;
  }
  host_independent_job_info_ = NULL;
}
inline const ::tensorflow::profiler::HostIndependentJobInfoResult& RunEnvironment::_internal_host_independent_job_info() const {
  return *host_independent_job_info_;
}
inline const ::tensorflow::profiler::HostIndependentJobInfoResult& RunEnvironment::host_independent_job_info() const {
  const ::tensorflow::profiler::HostIndependentJobInfoResult* p = host_independent_job_info_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.host_independent_job_info)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::HostIndependentJobInfoResult*>(
      &::tensorflow::profiler::_HostIndependentJobInfoResult_default_instance_);
}
inline ::tensorflow::profiler::HostIndependentJobInfoResult* RunEnvironment::release_host_independent_job_info() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.RunEnvironment.host_independent_job_info)
  
  ::tensorflow::profiler::HostIndependentJobInfoResult* temp = host_independent_job_info_;
  host_independent_job_info_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::HostIndependentJobInfoResult* RunEnvironment::mutable_host_independent_job_info() {
  
  if (host_independent_job_info_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::HostIndependentJobInfoResult>(GetArenaNoVirtual());
    host_independent_job_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.RunEnvironment.host_independent_job_info)
  return host_independent_job_info_;
}
inline void RunEnvironment::set_allocated_host_independent_job_info(::tensorflow::profiler::HostIndependentJobInfoResult* host_independent_job_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_independent_job_info_;
  }
  if (host_independent_job_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_independent_job_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_independent_job_info, submessage_arena);
    }
    
  } else {
    
  }
  host_independent_job_info_ = host_independent_job_info;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.RunEnvironment.host_independent_job_info)
}

// repeated .tensorflow.profiler.HostDependentJobInfoResult host_dependent_job_info = 8;
inline int RunEnvironment::host_dependent_job_info_size() const {
  return host_dependent_job_info_.size();
}
inline void RunEnvironment::clear_host_dependent_job_info() {
  host_dependent_job_info_.Clear();
}
inline ::tensorflow::profiler::HostDependentJobInfoResult* RunEnvironment::mutable_host_dependent_job_info(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.RunEnvironment.host_dependent_job_info)
  return host_dependent_job_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::HostDependentJobInfoResult >*
RunEnvironment::mutable_host_dependent_job_info() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.RunEnvironment.host_dependent_job_info)
  return &host_dependent_job_info_;
}
inline const ::tensorflow::profiler::HostDependentJobInfoResult& RunEnvironment::host_dependent_job_info(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.host_dependent_job_info)
  return host_dependent_job_info_.Get(index);
}
inline ::tensorflow::profiler::HostDependentJobInfoResult* RunEnvironment::add_host_dependent_job_info() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.RunEnvironment.host_dependent_job_info)
  return host_dependent_job_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::HostDependentJobInfoResult >&
RunEnvironment::host_dependent_job_info() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.RunEnvironment.host_dependent_job_info)
  return host_dependent_job_info_;
}

// int32 replica_count = 9;
inline void RunEnvironment::clear_replica_count() {
  replica_count_ = 0;
}
inline ::google::protobuf::int32 RunEnvironment::replica_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.replica_count)
  return replica_count_;
}
inline void RunEnvironment::set_replica_count(::google::protobuf::int32 value) {
  
  replica_count_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.RunEnvironment.replica_count)
}

// int32 num_cores_per_replica = 10;
inline void RunEnvironment::clear_num_cores_per_replica() {
  num_cores_per_replica_ = 0;
}
inline ::google::protobuf::int32 RunEnvironment::num_cores_per_replica() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.num_cores_per_replica)
  return num_cores_per_replica_;
}
inline void RunEnvironment::set_num_cores_per_replica(::google::protobuf::int32 value) {
  
  num_cores_per_replica_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.RunEnvironment.num_cores_per_replica)
}

// .tensorflow.profiler.SystemTopology topology = 11;
inline bool RunEnvironment::has_topology() const {
  return this != internal_default_instance() && topology_ != NULL;
}
inline void RunEnvironment::clear_topology() {
  if (GetArenaNoVirtual() == NULL && topology_ != NULL) {
    delete topology_;
  }
  topology_ = NULL;
}
inline const ::tensorflow::profiler::SystemTopology& RunEnvironment::_internal_topology() const {
  return *topology_;
}
inline const ::tensorflow::profiler::SystemTopology& RunEnvironment::topology() const {
  const ::tensorflow::profiler::SystemTopology* p = topology_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.topology)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::SystemTopology*>(
      &::tensorflow::profiler::_SystemTopology_default_instance_);
}
inline ::tensorflow::profiler::SystemTopology* RunEnvironment::release_topology() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.RunEnvironment.topology)
  
  ::tensorflow::profiler::SystemTopology* temp = topology_;
  topology_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::SystemTopology* RunEnvironment::mutable_topology() {
  
  if (topology_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::SystemTopology>(GetArenaNoVirtual());
    topology_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.RunEnvironment.topology)
  return topology_;
}
inline void RunEnvironment::set_allocated_topology(::tensorflow::profiler::SystemTopology* topology) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete topology_;
  }
  if (topology) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      topology = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, topology, submessage_arena);
    }
    
  } else {
    
  }
  topology_ = topology;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.RunEnvironment.topology)
}

// uint32 host_trace_level = 12;
inline void RunEnvironment::clear_host_trace_level() {
  host_trace_level_ = 0u;
}
inline ::google::protobuf::uint32 RunEnvironment::host_trace_level() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.RunEnvironment.host_trace_level)
  return host_trace_level_;
}
inline void RunEnvironment::set_host_trace_level(::google::protobuf::uint32 value) {
  
  host_trace_level_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.RunEnvironment.host_trace_level)
}

// -------------------------------------------------------------------

// CoreDetails

// string hostname = 1;
inline void CoreDetails::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CoreDetails::hostname() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CoreDetails.hostname)
  return hostname_.GetNoArena();
}
inline void CoreDetails::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.CoreDetails.hostname)
}
#if LANG_CXX11
inline void CoreDetails::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.CoreDetails.hostname)
}
#endif
inline void CoreDetails::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.CoreDetails.hostname)
}
inline void CoreDetails::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.CoreDetails.hostname)
}
inline ::std::string* CoreDetails::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.CoreDetails.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoreDetails::release_hostname() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.CoreDetails.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoreDetails::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.CoreDetails.hostname)
}

// uint32 device_ordinal = 2;
inline void CoreDetails::clear_device_ordinal() {
  device_ordinal_ = 0u;
}
inline ::google::protobuf::uint32 CoreDetails::device_ordinal() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CoreDetails.device_ordinal)
  return device_ordinal_;
}
inline void CoreDetails::set_device_ordinal(::google::protobuf::uint32 value) {
  
  device_ordinal_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.CoreDetails.device_ordinal)
}

// uint32 core_num = 3;
inline void CoreDetails::clear_core_num() {
  core_num_ = 0u;
}
inline ::google::protobuf::uint32 CoreDetails::core_num() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CoreDetails.core_num)
  return core_num_;
}
inline void CoreDetails::set_core_num(::google::protobuf::uint32 value) {
  
  core_num_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.CoreDetails.core_num)
}

// uint32 local_chip_id = 4;
inline void CoreDetails::clear_local_chip_id() {
  local_chip_id_ = 0u;
}
inline ::google::protobuf::uint32 CoreDetails::local_chip_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CoreDetails.local_chip_id)
  return local_chip_id_;
}
inline void CoreDetails::set_local_chip_id(::google::protobuf::uint32 value) {
  
  local_chip_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.CoreDetails.local_chip_id)
}

// uint32 global_chip_id = 5;
inline void CoreDetails::clear_global_chip_id() {
  global_chip_id_ = 0u;
}
inline ::google::protobuf::uint32 CoreDetails::global_chip_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CoreDetails.global_chip_id)
  return global_chip_id_;
}
inline void CoreDetails::set_global_chip_id(::google::protobuf::uint32 value) {
  
  global_chip_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.CoreDetails.global_chip_id)
}

// uint32 global_core_id = 6;
inline void CoreDetails::clear_global_core_id() {
  global_core_id_ = 0u;
}
inline ::google::protobuf::uint32 CoreDetails::global_core_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CoreDetails.global_core_id)
  return global_core_id_;
}
inline void CoreDetails::set_global_core_id(::google::protobuf::uint32 value) {
  
  global_core_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.CoreDetails.global_core_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpStats

// .tensorflow.profiler.OpMetricsDb host_op_metrics_db = 1;
inline bool OpStats::has_host_op_metrics_db() const {
  return this != internal_default_instance() && host_op_metrics_db_ != NULL;
}
inline const ::tensorflow::profiler::OpMetricsDb& OpStats::_internal_host_op_metrics_db() const {
  return *host_op_metrics_db_;
}
inline const ::tensorflow::profiler::OpMetricsDb& OpStats::host_op_metrics_db() const {
  const ::tensorflow::profiler::OpMetricsDb* p = host_op_metrics_db_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.host_op_metrics_db)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::OpMetricsDb*>(
      &::tensorflow::profiler::_OpMetricsDb_default_instance_);
}
inline ::tensorflow::profiler::OpMetricsDb* OpStats::release_host_op_metrics_db() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.host_op_metrics_db)
  
  ::tensorflow::profiler::OpMetricsDb* temp = host_op_metrics_db_;
  host_op_metrics_db_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::OpMetricsDb* OpStats::mutable_host_op_metrics_db() {
  
  if (host_op_metrics_db_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::OpMetricsDb>(GetArenaNoVirtual());
    host_op_metrics_db_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.host_op_metrics_db)
  return host_op_metrics_db_;
}
inline void OpStats::set_allocated_host_op_metrics_db(::tensorflow::profiler::OpMetricsDb* host_op_metrics_db) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(host_op_metrics_db_);
  }
  if (host_op_metrics_db) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_op_metrics_db = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_op_metrics_db, submessage_arena);
    }
    
  } else {
    
  }
  host_op_metrics_db_ = host_op_metrics_db;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.host_op_metrics_db)
}

// .tensorflow.profiler.OpMetricsDb device_op_metrics_db = 2;
inline bool OpStats::has_device_op_metrics_db() const {
  return this != internal_default_instance() && device_op_metrics_db_ != NULL;
}
inline const ::tensorflow::profiler::OpMetricsDb& OpStats::_internal_device_op_metrics_db() const {
  return *device_op_metrics_db_;
}
inline const ::tensorflow::profiler::OpMetricsDb& OpStats::device_op_metrics_db() const {
  const ::tensorflow::profiler::OpMetricsDb* p = device_op_metrics_db_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.device_op_metrics_db)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::OpMetricsDb*>(
      &::tensorflow::profiler::_OpMetricsDb_default_instance_);
}
inline ::tensorflow::profiler::OpMetricsDb* OpStats::release_device_op_metrics_db() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.device_op_metrics_db)
  
  ::tensorflow::profiler::OpMetricsDb* temp = device_op_metrics_db_;
  device_op_metrics_db_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::OpMetricsDb* OpStats::mutable_device_op_metrics_db() {
  
  if (device_op_metrics_db_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::OpMetricsDb>(GetArenaNoVirtual());
    device_op_metrics_db_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.device_op_metrics_db)
  return device_op_metrics_db_;
}
inline void OpStats::set_allocated_device_op_metrics_db(::tensorflow::profiler::OpMetricsDb* device_op_metrics_db) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_op_metrics_db_);
  }
  if (device_op_metrics_db) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_op_metrics_db = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_op_metrics_db, submessage_arena);
    }
    
  } else {
    
  }
  device_op_metrics_db_ = device_op_metrics_db;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.device_op_metrics_db)
}

// .tensorflow.profiler.OpMetricsDb hlo_metrics_db_complete_steps_only = 10;
inline bool OpStats::has_hlo_metrics_db_complete_steps_only() const {
  return this != internal_default_instance() && hlo_metrics_db_complete_steps_only_ != NULL;
}
inline const ::tensorflow::profiler::OpMetricsDb& OpStats::_internal_hlo_metrics_db_complete_steps_only() const {
  return *hlo_metrics_db_complete_steps_only_;
}
inline const ::tensorflow::profiler::OpMetricsDb& OpStats::hlo_metrics_db_complete_steps_only() const {
  const ::tensorflow::profiler::OpMetricsDb* p = hlo_metrics_db_complete_steps_only_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.hlo_metrics_db_complete_steps_only)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::OpMetricsDb*>(
      &::tensorflow::profiler::_OpMetricsDb_default_instance_);
}
inline ::tensorflow::profiler::OpMetricsDb* OpStats::release_hlo_metrics_db_complete_steps_only() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.hlo_metrics_db_complete_steps_only)
  
  ::tensorflow::profiler::OpMetricsDb* temp = hlo_metrics_db_complete_steps_only_;
  hlo_metrics_db_complete_steps_only_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::OpMetricsDb* OpStats::mutable_hlo_metrics_db_complete_steps_only() {
  
  if (hlo_metrics_db_complete_steps_only_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::OpMetricsDb>(GetArenaNoVirtual());
    hlo_metrics_db_complete_steps_only_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.hlo_metrics_db_complete_steps_only)
  return hlo_metrics_db_complete_steps_only_;
}
inline void OpStats::set_allocated_hlo_metrics_db_complete_steps_only(::tensorflow::profiler::OpMetricsDb* hlo_metrics_db_complete_steps_only) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hlo_metrics_db_complete_steps_only_);
  }
  if (hlo_metrics_db_complete_steps_only) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hlo_metrics_db_complete_steps_only = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hlo_metrics_db_complete_steps_only, submessage_arena);
    }
    
  } else {
    
  }
  hlo_metrics_db_complete_steps_only_ = hlo_metrics_db_complete_steps_only;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.hlo_metrics_db_complete_steps_only)
}

// .tensorflow.profiler.PerfEnv perf_env = 3;
inline bool OpStats::has_perf_env() const {
  return this != internal_default_instance() && perf_env_ != NULL;
}
inline void OpStats::clear_perf_env() {
  if (GetArenaNoVirtual() == NULL && perf_env_ != NULL) {
    delete perf_env_;
  }
  perf_env_ = NULL;
}
inline const ::tensorflow::profiler::PerfEnv& OpStats::_internal_perf_env() const {
  return *perf_env_;
}
inline const ::tensorflow::profiler::PerfEnv& OpStats::perf_env() const {
  const ::tensorflow::profiler::PerfEnv* p = perf_env_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.perf_env)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::PerfEnv*>(
      &::tensorflow::profiler::_PerfEnv_default_instance_);
}
inline ::tensorflow::profiler::PerfEnv* OpStats::release_perf_env() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.perf_env)
  
  ::tensorflow::profiler::PerfEnv* temp = perf_env_;
  perf_env_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::PerfEnv* OpStats::mutable_perf_env() {
  
  if (perf_env_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::PerfEnv>(GetArenaNoVirtual());
    perf_env_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.perf_env)
  return perf_env_;
}
inline void OpStats::set_allocated_perf_env(::tensorflow::profiler::PerfEnv* perf_env) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete perf_env_;
  }
  if (perf_env) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      perf_env = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, perf_env, submessage_arena);
    }
    
  } else {
    
  }
  perf_env_ = perf_env;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.perf_env)
}

// .tensorflow.profiler.StepDatabaseResult step_db = 4;
inline bool OpStats::has_step_db() const {
  return this != internal_default_instance() && step_db_ != NULL;
}
inline const ::tensorflow::profiler::StepDatabaseResult& OpStats::_internal_step_db() const {
  return *step_db_;
}
inline const ::tensorflow::profiler::StepDatabaseResult& OpStats::step_db() const {
  const ::tensorflow::profiler::StepDatabaseResult* p = step_db_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.step_db)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepDatabaseResult*>(
      &::tensorflow::profiler::_StepDatabaseResult_default_instance_);
}
inline ::tensorflow::profiler::StepDatabaseResult* OpStats::release_step_db() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.step_db)
  
  ::tensorflow::profiler::StepDatabaseResult* temp = step_db_;
  step_db_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepDatabaseResult* OpStats::mutable_step_db() {
  
  if (step_db_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepDatabaseResult>(GetArenaNoVirtual());
    step_db_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.step_db)
  return step_db_;
}
inline void OpStats::set_allocated_step_db(::tensorflow::profiler::StepDatabaseResult* step_db) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(step_db_);
  }
  if (step_db) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      step_db = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, step_db, submessage_arena);
    }
    
  } else {
    
  }
  step_db_ = step_db;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.step_db)
}

// .tensorflow.profiler.RunEnvironment run_environment = 5;
inline bool OpStats::has_run_environment() const {
  return this != internal_default_instance() && run_environment_ != NULL;
}
inline void OpStats::clear_run_environment() {
  if (GetArenaNoVirtual() == NULL && run_environment_ != NULL) {
    delete run_environment_;
  }
  run_environment_ = NULL;
}
inline const ::tensorflow::profiler::RunEnvironment& OpStats::_internal_run_environment() const {
  return *run_environment_;
}
inline const ::tensorflow::profiler::RunEnvironment& OpStats::run_environment() const {
  const ::tensorflow::profiler::RunEnvironment* p = run_environment_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.run_environment)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::RunEnvironment*>(
      &::tensorflow::profiler::_RunEnvironment_default_instance_);
}
inline ::tensorflow::profiler::RunEnvironment* OpStats::release_run_environment() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.run_environment)
  
  ::tensorflow::profiler::RunEnvironment* temp = run_environment_;
  run_environment_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::RunEnvironment* OpStats::mutable_run_environment() {
  
  if (run_environment_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::RunEnvironment>(GetArenaNoVirtual());
    run_environment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.run_environment)
  return run_environment_;
}
inline void OpStats::set_allocated_run_environment(::tensorflow::profiler::RunEnvironment* run_environment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete run_environment_;
  }
  if (run_environment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      run_environment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, run_environment, submessage_arena);
    }
    
  } else {
    
  }
  run_environment_ = run_environment;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.run_environment)
}

// .tensorflow.profiler.KernelStatsDb kernel_stats_db = 6;
inline bool OpStats::has_kernel_stats_db() const {
  return this != internal_default_instance() && kernel_stats_db_ != NULL;
}
inline const ::tensorflow::profiler::KernelStatsDb& OpStats::_internal_kernel_stats_db() const {
  return *kernel_stats_db_;
}
inline const ::tensorflow::profiler::KernelStatsDb& OpStats::kernel_stats_db() const {
  const ::tensorflow::profiler::KernelStatsDb* p = kernel_stats_db_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.kernel_stats_db)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::KernelStatsDb*>(
      &::tensorflow::profiler::_KernelStatsDb_default_instance_);
}
inline ::tensorflow::profiler::KernelStatsDb* OpStats::release_kernel_stats_db() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.kernel_stats_db)
  
  ::tensorflow::profiler::KernelStatsDb* temp = kernel_stats_db_;
  kernel_stats_db_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::KernelStatsDb* OpStats::mutable_kernel_stats_db() {
  
  if (kernel_stats_db_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::KernelStatsDb>(GetArenaNoVirtual());
    kernel_stats_db_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.kernel_stats_db)
  return kernel_stats_db_;
}
inline void OpStats::set_allocated_kernel_stats_db(::tensorflow::profiler::KernelStatsDb* kernel_stats_db) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(kernel_stats_db_);
  }
  if (kernel_stats_db) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kernel_stats_db = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kernel_stats_db, submessage_arena);
    }
    
  } else {
    
  }
  kernel_stats_db_ = kernel_stats_db;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.kernel_stats_db)
}

// .tensorflow.profiler.TfFunctionDb tf_function_db = 8;
inline bool OpStats::has_tf_function_db() const {
  return this != internal_default_instance() && tf_function_db_ != NULL;
}
inline const ::tensorflow::profiler::TfFunctionDb& OpStats::_internal_tf_function_db() const {
  return *tf_function_db_;
}
inline const ::tensorflow::profiler::TfFunctionDb& OpStats::tf_function_db() const {
  const ::tensorflow::profiler::TfFunctionDb* p = tf_function_db_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.tf_function_db)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::TfFunctionDb*>(
      &::tensorflow::profiler::_TfFunctionDb_default_instance_);
}
inline ::tensorflow::profiler::TfFunctionDb* OpStats::release_tf_function_db() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.tf_function_db)
  
  ::tensorflow::profiler::TfFunctionDb* temp = tf_function_db_;
  tf_function_db_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::TfFunctionDb* OpStats::mutable_tf_function_db() {
  
  if (tf_function_db_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::TfFunctionDb>(GetArenaNoVirtual());
    tf_function_db_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.tf_function_db)
  return tf_function_db_;
}
inline void OpStats::set_allocated_tf_function_db(::tensorflow::profiler::TfFunctionDb* tf_function_db) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tf_function_db_);
  }
  if (tf_function_db) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tf_function_db = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tf_function_db, submessage_arena);
    }
    
  } else {
    
  }
  tf_function_db_ = tf_function_db;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.tf_function_db)
}

// map<uint32, .tensorflow.profiler.CoreDetails> core_id_to_details = 11;
inline int OpStats::core_id_to_details_size() const {
  return core_id_to_details_.size();
}
inline void OpStats::clear_core_id_to_details() {
  core_id_to_details_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >&
OpStats::core_id_to_details() const {
  // @@protoc_insertion_point(field_map:tensorflow.profiler.OpStats.core_id_to_details)
  return core_id_to_details_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >*
OpStats::mutable_core_id_to_details() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.profiler.OpStats.core_id_to_details)
  return core_id_to_details_.MutableMap();
}

// .tensorflow.profiler.Diagnostics diagnostics = 9;
inline bool OpStats::has_diagnostics() const {
  return this != internal_default_instance() && diagnostics_ != NULL;
}
inline const ::tensorflow::profiler::Diagnostics& OpStats::_internal_diagnostics() const {
  return *diagnostics_;
}
inline const ::tensorflow::profiler::Diagnostics& OpStats::diagnostics() const {
  const ::tensorflow::profiler::Diagnostics* p = diagnostics_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpStats.diagnostics)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::Diagnostics*>(
      &::tensorflow::profiler::_Diagnostics_default_instance_);
}
inline ::tensorflow::profiler::Diagnostics* OpStats::release_diagnostics() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpStats.diagnostics)
  
  ::tensorflow::profiler::Diagnostics* temp = diagnostics_;
  diagnostics_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::Diagnostics* OpStats::mutable_diagnostics() {
  
  if (diagnostics_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::Diagnostics>(GetArenaNoVirtual());
    diagnostics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpStats.diagnostics)
  return diagnostics_;
}
inline void OpStats::set_allocated_diagnostics(::tensorflow::profiler::Diagnostics* diagnostics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(diagnostics_);
  }
  if (diagnostics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      diagnostics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, diagnostics, submessage_arena);
    }
    
  } else {
    
  }
  diagnostics_ = diagnostics;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpStats.diagnostics)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace profiler
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto
