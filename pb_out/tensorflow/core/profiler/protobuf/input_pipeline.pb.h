// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/input_pipeline.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "tensorflow/core/profiler/protobuf/diagnostics.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto 

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
namespace tensorflow {
namespace profiler {
class BottleneckAnalysis;
class BottleneckAnalysisDefaultTypeInternal;
extern BottleneckAnalysisDefaultTypeInternal _BottleneckAnalysis_default_instance_;
class GenericStepTimeBreakdown;
class GenericStepTimeBreakdownDefaultTypeInternal;
extern GenericStepTimeBreakdownDefaultTypeInternal _GenericStepTimeBreakdown_default_instance_;
class InputOpDetails;
class InputOpDetailsDefaultTypeInternal;
extern InputOpDetailsDefaultTypeInternal _InputOpDetails_default_instance_;
class InputPipelineAnalysisRecommendation;
class InputPipelineAnalysisRecommendationDefaultTypeInternal;
extern InputPipelineAnalysisRecommendationDefaultTypeInternal _InputPipelineAnalysisRecommendation_default_instance_;
class InputPipelineAnalysisResult;
class InputPipelineAnalysisResultDefaultTypeInternal;
extern InputPipelineAnalysisResultDefaultTypeInternal _InputPipelineAnalysisResult_default_instance_;
class InputTimeBreakdown;
class InputTimeBreakdownDefaultTypeInternal;
extern InputTimeBreakdownDefaultTypeInternal _InputTimeBreakdown_default_instance_;
class PerGenericStepDetails;
class PerGenericStepDetailsDefaultTypeInternal;
extern PerGenericStepDetailsDefaultTypeInternal _PerGenericStepDetails_default_instance_;
class StepSummary;
class StepSummaryDefaultTypeInternal;
extern StepSummaryDefaultTypeInternal _StepSummary_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::profiler::BottleneckAnalysis* Arena::CreateMaybeMessage<::tensorflow::profiler::BottleneckAnalysis>(Arena*);
template<> ::tensorflow::profiler::GenericStepTimeBreakdown* Arena::CreateMaybeMessage<::tensorflow::profiler::GenericStepTimeBreakdown>(Arena*);
template<> ::tensorflow::profiler::InputOpDetails* Arena::CreateMaybeMessage<::tensorflow::profiler::InputOpDetails>(Arena*);
template<> ::tensorflow::profiler::InputPipelineAnalysisRecommendation* Arena::CreateMaybeMessage<::tensorflow::profiler::InputPipelineAnalysisRecommendation>(Arena*);
template<> ::tensorflow::profiler::InputPipelineAnalysisResult* Arena::CreateMaybeMessage<::tensorflow::profiler::InputPipelineAnalysisResult>(Arena*);
template<> ::tensorflow::profiler::InputTimeBreakdown* Arena::CreateMaybeMessage<::tensorflow::profiler::InputTimeBreakdown>(Arena*);
template<> ::tensorflow::profiler::PerGenericStepDetails* Arena::CreateMaybeMessage<::tensorflow::profiler::PerGenericStepDetails>(Arena*);
template<> ::tensorflow::profiler::StepSummary* Arena::CreateMaybeMessage<::tensorflow::profiler::StepSummary>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace profiler {

// ===================================================================

class BottleneckAnalysis : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.BottleneckAnalysis) */ {
 public:
  BottleneckAnalysis();
  virtual ~BottleneckAnalysis();

  BottleneckAnalysis(const BottleneckAnalysis& from);

  inline BottleneckAnalysis& operator=(const BottleneckAnalysis& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BottleneckAnalysis(BottleneckAnalysis&& from) noexcept
    : BottleneckAnalysis() {
    *this = ::std::move(from);
  }

  inline BottleneckAnalysis& operator=(BottleneckAnalysis&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BottleneckAnalysis& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BottleneckAnalysis* internal_default_instance() {
    return reinterpret_cast<const BottleneckAnalysis*>(
               &_BottleneckAnalysis_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BottleneckAnalysis* other);
  friend void swap(BottleneckAnalysis& a, BottleneckAnalysis& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BottleneckAnalysis* New() const final {
    return CreateMaybeMessage<BottleneckAnalysis>(NULL);
  }

  BottleneckAnalysis* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BottleneckAnalysis>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BottleneckAnalysis& from);
  void MergeFrom(const BottleneckAnalysis& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BottleneckAnalysis* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string input_classification = 1;
  void clear_input_classification();
  static const int kInputClassificationFieldNumber = 1;
  const ::std::string& input_classification() const;
  void set_input_classification(const ::std::string& value);
  #if LANG_CXX11
  void set_input_classification(::std::string&& value);
  #endif
  void set_input_classification(const char* value);
  void set_input_classification(const char* value, size_t size);
  ::std::string* mutable_input_classification();
  ::std::string* release_input_classification();
  void set_allocated_input_classification(::std::string* input_classification);

  // string input_statement = 2;
  void clear_input_statement();
  static const int kInputStatementFieldNumber = 2;
  const ::std::string& input_statement() const;
  void set_input_statement(const ::std::string& value);
  #if LANG_CXX11
  void set_input_statement(::std::string&& value);
  #endif
  void set_input_statement(const char* value);
  void set_input_statement(const char* value, size_t size);
  ::std::string* mutable_input_statement();
  ::std::string* release_input_statement();
  void set_allocated_input_statement(::std::string* input_statement);

  // string kernel_launch_classification = 3;
  void clear_kernel_launch_classification();
  static const int kKernelLaunchClassificationFieldNumber = 3;
  const ::std::string& kernel_launch_classification() const;
  void set_kernel_launch_classification(const ::std::string& value);
  #if LANG_CXX11
  void set_kernel_launch_classification(::std::string&& value);
  #endif
  void set_kernel_launch_classification(const char* value);
  void set_kernel_launch_classification(const char* value, size_t size);
  ::std::string* mutable_kernel_launch_classification();
  ::std::string* release_kernel_launch_classification();
  void set_allocated_kernel_launch_classification(::std::string* kernel_launch_classification);

  // string kernel_launch_statement = 4;
  void clear_kernel_launch_statement();
  static const int kKernelLaunchStatementFieldNumber = 4;
  const ::std::string& kernel_launch_statement() const;
  void set_kernel_launch_statement(const ::std::string& value);
  #if LANG_CXX11
  void set_kernel_launch_statement(::std::string&& value);
  #endif
  void set_kernel_launch_statement(const char* value);
  void set_kernel_launch_statement(const char* value, size_t size);
  ::std::string* mutable_kernel_launch_statement();
  ::std::string* release_kernel_launch_statement();
  void set_allocated_kernel_launch_statement(::std::string* kernel_launch_statement);

  // string all_other_classification = 5;
  void clear_all_other_classification();
  static const int kAllOtherClassificationFieldNumber = 5;
  const ::std::string& all_other_classification() const;
  void set_all_other_classification(const ::std::string& value);
  #if LANG_CXX11
  void set_all_other_classification(::std::string&& value);
  #endif
  void set_all_other_classification(const char* value);
  void set_all_other_classification(const char* value, size_t size);
  ::std::string* mutable_all_other_classification();
  ::std::string* release_all_other_classification();
  void set_allocated_all_other_classification(::std::string* all_other_classification);

  // string all_other_statement = 6;
  void clear_all_other_statement();
  static const int kAllOtherStatementFieldNumber = 6;
  const ::std::string& all_other_statement() const;
  void set_all_other_statement(const ::std::string& value);
  #if LANG_CXX11
  void set_all_other_statement(::std::string&& value);
  #endif
  void set_all_other_statement(const char* value);
  void set_all_other_statement(const char* value, size_t size);
  ::std::string* mutable_all_other_statement();
  ::std::string* release_all_other_statement();
  void set_allocated_all_other_statement(::std::string* all_other_statement);

  // string device_collectives_classification = 11;
  void clear_device_collectives_classification();
  static const int kDeviceCollectivesClassificationFieldNumber = 11;
  const ::std::string& device_collectives_classification() const;
  void set_device_collectives_classification(const ::std::string& value);
  #if LANG_CXX11
  void set_device_collectives_classification(::std::string&& value);
  #endif
  void set_device_collectives_classification(const char* value);
  void set_device_collectives_classification(const char* value, size_t size);
  ::std::string* mutable_device_collectives_classification();
  ::std::string* release_device_collectives_classification();
  void set_allocated_device_collectives_classification(::std::string* device_collectives_classification);

  // string device_collectives_statement = 12;
  void clear_device_collectives_statement();
  static const int kDeviceCollectivesStatementFieldNumber = 12;
  const ::std::string& device_collectives_statement() const;
  void set_device_collectives_statement(const ::std::string& value);
  #if LANG_CXX11
  void set_device_collectives_statement(::std::string&& value);
  #endif
  void set_device_collectives_statement(const char* value);
  void set_device_collectives_statement(const char* value, size_t size);
  ::std::string* mutable_device_collectives_statement();
  ::std::string* release_device_collectives_statement();
  void set_allocated_device_collectives_statement(::std::string* device_collectives_statement);

  // double input_percent = 7;
  void clear_input_percent();
  static const int kInputPercentFieldNumber = 7;
  double input_percent() const;
  void set_input_percent(double value);

  // double output_percent = 8;
  void clear_output_percent();
  static const int kOutputPercentFieldNumber = 8;
  double output_percent() const;
  void set_output_percent(double value);

  // double idle_percent = 9;
  void clear_idle_percent();
  static const int kIdlePercentFieldNumber = 9;
  double idle_percent() const;
  void set_idle_percent(double value);

  // double compute_percent = 10;
  void clear_compute_percent();
  static const int kComputePercentFieldNumber = 10;
  double compute_percent() const;
  void set_compute_percent(double value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.BottleneckAnalysis)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_classification_;
  ::google::protobuf::internal::ArenaStringPtr input_statement_;
  ::google::protobuf::internal::ArenaStringPtr kernel_launch_classification_;
  ::google::protobuf::internal::ArenaStringPtr kernel_launch_statement_;
  ::google::protobuf::internal::ArenaStringPtr all_other_classification_;
  ::google::protobuf::internal::ArenaStringPtr all_other_statement_;
  ::google::protobuf::internal::ArenaStringPtr device_collectives_classification_;
  ::google::protobuf::internal::ArenaStringPtr device_collectives_statement_;
  double input_percent_;
  double output_percent_;
  double idle_percent_;
  double compute_percent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StepSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.StepSummary) */ {
 public:
  StepSummary();
  virtual ~StepSummary();

  StepSummary(const StepSummary& from);

  inline StepSummary& operator=(const StepSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StepSummary(StepSummary&& from) noexcept
    : StepSummary() {
    *this = ::std::move(from);
  }

  inline StepSummary& operator=(StepSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StepSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepSummary* internal_default_instance() {
    return reinterpret_cast<const StepSummary*>(
               &_StepSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(StepSummary* other);
  friend void swap(StepSummary& a, StepSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StepSummary* New() const final {
    return CreateMaybeMessage<StepSummary>(NULL);
  }

  StepSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StepSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StepSummary& from);
  void MergeFrom(const StepSummary& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double average = 1;
  void clear_average();
  static const int kAverageFieldNumber = 1;
  double average() const;
  void set_average(double value);

  // double standard_deviation = 2;
  void clear_standard_deviation();
  static const int kStandardDeviationFieldNumber = 2;
  double standard_deviation() const;
  void set_standard_deviation(double value);

  // double minimum = 3;
  void clear_minimum();
  static const int kMinimumFieldNumber = 3;
  double minimum() const;
  void set_minimum(double value);

  // double maximum = 4;
  void clear_maximum();
  static const int kMaximumFieldNumber = 4;
  double maximum() const;
  void set_maximum(double value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.StepSummary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double average_;
  double standard_deviation_;
  double minimum_;
  double maximum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PerGenericStepDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.PerGenericStepDetails) */ {
 public:
  PerGenericStepDetails();
  virtual ~PerGenericStepDetails();

  PerGenericStepDetails(const PerGenericStepDetails& from);

  inline PerGenericStepDetails& operator=(const PerGenericStepDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerGenericStepDetails(PerGenericStepDetails&& from) noexcept
    : PerGenericStepDetails() {
    *this = ::std::move(from);
  }

  inline PerGenericStepDetails& operator=(PerGenericStepDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PerGenericStepDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerGenericStepDetails* internal_default_instance() {
    return reinterpret_cast<const PerGenericStepDetails*>(
               &_PerGenericStepDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PerGenericStepDetails* other);
  friend void swap(PerGenericStepDetails& a, PerGenericStepDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerGenericStepDetails* New() const final {
    return CreateMaybeMessage<PerGenericStepDetails>(NULL);
  }

  PerGenericStepDetails* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PerGenericStepDetails>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PerGenericStepDetails& from);
  void MergeFrom(const PerGenericStepDetails& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PerGenericStepDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string step_name = 14;
  void clear_step_name();
  static const int kStepNameFieldNumber = 14;
  const ::std::string& step_name() const;
  void set_step_name(const ::std::string& value);
  #if LANG_CXX11
  void set_step_name(::std::string&& value);
  #endif
  void set_step_name(const char* value);
  void set_step_name(const char* value, size_t size);
  ::std::string* mutable_step_name();
  ::std::string* release_step_name();
  void set_allocated_step_name(::std::string* step_name);

  // double step_time_ms = 2;
  void clear_step_time_ms();
  static const int kStepTimeMsFieldNumber = 2;
  double step_time_ms() const;
  void set_step_time_ms(double value);

  // double unknown_time_ms = 3;
  void clear_unknown_time_ms();
  static const int kUnknownTimeMsFieldNumber = 3;
  double unknown_time_ms() const;
  void set_unknown_time_ms(double value);

  // double output_ms = 5;
  void clear_output_ms();
  static const int kOutputMsFieldNumber = 5;
  double output_ms() const;
  void set_output_ms(double value);

  // double device_compute_ms = 6;
  void clear_device_compute_ms();
  static const int kDeviceComputeMsFieldNumber = 6;
  double device_compute_ms() const;
  void set_device_compute_ms(double value);

  // double device_to_device_ms = 7;
  void clear_device_to_device_ms();
  static const int kDeviceToDeviceMsFieldNumber = 7;
  double device_to_device_ms() const;
  void set_device_to_device_ms(double value);

  // double host_compute_ms = 8;
  void clear_host_compute_ms();
  static const int kHostComputeMsFieldNumber = 8;
  double host_compute_ms() const;
  void set_host_compute_ms(double value);

  // double host_prepare_ms = 9;
  void clear_host_prepare_ms();
  static const int kHostPrepareMsFieldNumber = 9;
  double host_prepare_ms() const;
  void set_host_prepare_ms(double value);

  // double host_compile_ms = 10;
  void clear_host_compile_ms();
  static const int kHostCompileMsFieldNumber = 10;
  double host_compile_ms() const;
  void set_host_compile_ms(double value);

  // double host_wait_input_ms = 11;
  void clear_host_wait_input_ms();
  static const int kHostWaitInputMsFieldNumber = 11;
  double host_wait_input_ms() const;
  void set_host_wait_input_ms(double value);

  // double host_to_device_ms = 12;
  void clear_host_to_device_ms();
  static const int kHostToDeviceMsFieldNumber = 12;
  double host_to_device_ms() const;
  void set_host_to_device_ms(double value);

  // double device_collectives_ms = 13;
  void clear_device_collectives_ms();
  static const int kDeviceCollectivesMsFieldNumber = 13;
  double device_collectives_ms() const;
  void set_device_collectives_ms(double value);

  // int32 step_number = 1;
  void clear_step_number();
  static const int kStepNumberFieldNumber = 1;
  ::google::protobuf::int32 step_number() const;
  void set_step_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.PerGenericStepDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr step_name_;
  double step_time_ms_;
  double unknown_time_ms_;
  double output_ms_;
  double device_compute_ms_;
  double device_to_device_ms_;
  double host_compute_ms_;
  double host_prepare_ms_;
  double host_compile_ms_;
  double host_wait_input_ms_;
  double host_to_device_ms_;
  double device_collectives_ms_;
  ::google::protobuf::int32 step_number_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputTimeBreakdown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputTimeBreakdown) */ {
 public:
  InputTimeBreakdown();
  virtual ~InputTimeBreakdown();

  InputTimeBreakdown(const InputTimeBreakdown& from);

  inline InputTimeBreakdown& operator=(const InputTimeBreakdown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputTimeBreakdown(InputTimeBreakdown&& from) noexcept
    : InputTimeBreakdown() {
    *this = ::std::move(from);
  }

  inline InputTimeBreakdown& operator=(InputTimeBreakdown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputTimeBreakdown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputTimeBreakdown* internal_default_instance() {
    return reinterpret_cast<const InputTimeBreakdown*>(
               &_InputTimeBreakdown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(InputTimeBreakdown* other);
  friend void swap(InputTimeBreakdown& a, InputTimeBreakdown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputTimeBreakdown* New() const final {
    return CreateMaybeMessage<InputTimeBreakdown>(NULL);
  }

  InputTimeBreakdown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputTimeBreakdown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputTimeBreakdown& from);
  void MergeFrom(const InputTimeBreakdown& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputTimeBreakdown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double demanded_file_read_us = 1;
  void clear_demanded_file_read_us();
  static const int kDemandedFileReadUsFieldNumber = 1;
  double demanded_file_read_us() const;
  void set_demanded_file_read_us(double value);

  // double advanced_file_read_us = 2;
  void clear_advanced_file_read_us();
  static const int kAdvancedFileReadUsFieldNumber = 2;
  double advanced_file_read_us() const;
  void set_advanced_file_read_us(double value);

  // double preprocessing_us = 3;
  void clear_preprocessing_us();
  static const int kPreprocessingUsFieldNumber = 3;
  double preprocessing_us() const;
  void set_preprocessing_us(double value);

  // double enqueue_us = 4;
  void clear_enqueue_us();
  static const int kEnqueueUsFieldNumber = 4;
  double enqueue_us() const;
  void set_enqueue_us(double value);

  // double unclassified_non_enqueue_us = 5;
  void clear_unclassified_non_enqueue_us();
  static const int kUnclassifiedNonEnqueueUsFieldNumber = 5;
  double unclassified_non_enqueue_us() const;
  void set_unclassified_non_enqueue_us(double value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputTimeBreakdown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double demanded_file_read_us_;
  double advanced_file_read_us_;
  double preprocessing_us_;
  double enqueue_us_;
  double unclassified_non_enqueue_us_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputOpDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputOpDetails) */ {
 public:
  InputOpDetails();
  virtual ~InputOpDetails();

  InputOpDetails(const InputOpDetails& from);

  inline InputOpDetails& operator=(const InputOpDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputOpDetails(InputOpDetails&& from) noexcept
    : InputOpDetails() {
    *this = ::std::move(from);
  }

  inline InputOpDetails& operator=(InputOpDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputOpDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputOpDetails* internal_default_instance() {
    return reinterpret_cast<const InputOpDetails*>(
               &_InputOpDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(InputOpDetails* other);
  friend void swap(InputOpDetails& a, InputOpDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputOpDetails* New() const final {
    return CreateMaybeMessage<InputOpDetails>(NULL);
  }

  InputOpDetails* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputOpDetails>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputOpDetails& from);
  void MergeFrom(const InputOpDetails& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputOpDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string op_name = 1;
  void clear_op_name();
  static const int kOpNameFieldNumber = 1;
  const ::std::string& op_name() const;
  void set_op_name(const ::std::string& value);
  #if LANG_CXX11
  void set_op_name(::std::string&& value);
  #endif
  void set_op_name(const char* value);
  void set_op_name(const char* value, size_t size);
  ::std::string* mutable_op_name();
  ::std::string* release_op_name();
  void set_allocated_op_name(::std::string* op_name);

  // string category = 7;
  void clear_category();
  static const int kCategoryFieldNumber = 7;
  const ::std::string& category() const;
  void set_category(const ::std::string& value);
  #if LANG_CXX11
  void set_category(::std::string&& value);
  #endif
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  ::std::string* mutable_category();
  ::std::string* release_category();
  void set_allocated_category(::std::string* category);

  // uint64 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // double time_in_ms = 3;
  void clear_time_in_ms();
  static const int kTimeInMsFieldNumber = 3;
  double time_in_ms() const;
  void set_time_in_ms(double value);

  // double time_in_percent = 4;
  void clear_time_in_percent();
  static const int kTimeInPercentFieldNumber = 4;
  double time_in_percent() const;
  void set_time_in_percent(double value);

  // double self_time_in_ms = 5;
  void clear_self_time_in_ms();
  static const int kSelfTimeInMsFieldNumber = 5;
  double self_time_in_ms() const;
  void set_self_time_in_ms(double value);

  // double self_time_in_percent = 6;
  void clear_self_time_in_percent();
  static const int kSelfTimeInPercentFieldNumber = 6;
  double self_time_in_percent() const;
  void set_self_time_in_percent(double value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputOpDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr op_name_;
  ::google::protobuf::internal::ArenaStringPtr category_;
  ::google::protobuf::uint64 count_;
  double time_in_ms_;
  double time_in_percent_;
  double self_time_in_ms_;
  double self_time_in_percent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputPipelineAnalysisRecommendation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputPipelineAnalysisRecommendation) */ {
 public:
  InputPipelineAnalysisRecommendation();
  virtual ~InputPipelineAnalysisRecommendation();

  InputPipelineAnalysisRecommendation(const InputPipelineAnalysisRecommendation& from);

  inline InputPipelineAnalysisRecommendation& operator=(const InputPipelineAnalysisRecommendation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputPipelineAnalysisRecommendation(InputPipelineAnalysisRecommendation&& from) noexcept
    : InputPipelineAnalysisRecommendation() {
    *this = ::std::move(from);
  }

  inline InputPipelineAnalysisRecommendation& operator=(InputPipelineAnalysisRecommendation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputPipelineAnalysisRecommendation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputPipelineAnalysisRecommendation* internal_default_instance() {
    return reinterpret_cast<const InputPipelineAnalysisRecommendation*>(
               &_InputPipelineAnalysisRecommendation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(InputPipelineAnalysisRecommendation* other);
  friend void swap(InputPipelineAnalysisRecommendation& a, InputPipelineAnalysisRecommendation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputPipelineAnalysisRecommendation* New() const final {
    return CreateMaybeMessage<InputPipelineAnalysisRecommendation>(NULL);
  }

  InputPipelineAnalysisRecommendation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputPipelineAnalysisRecommendation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputPipelineAnalysisRecommendation& from);
  void MergeFrom(const InputPipelineAnalysisRecommendation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputPipelineAnalysisRecommendation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string details = 1;
  int details_size() const;
  void clear_details();
  static const int kDetailsFieldNumber = 1;
  const ::std::string& details(int index) const;
  ::std::string* mutable_details(int index);
  void set_details(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_details(int index, ::std::string&& value);
  #endif
  void set_details(int index, const char* value);
  void set_details(int index, const char* value, size_t size);
  ::std::string* add_details();
  void add_details(const ::std::string& value);
  #if LANG_CXX11
  void add_details(::std::string&& value);
  #endif
  void add_details(const char* value);
  void add_details(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& details() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_details();

  // string summary_next_step = 3;
  void clear_summary_next_step();
  static const int kSummaryNextStepFieldNumber = 3;
  const ::std::string& summary_next_step() const;
  void set_summary_next_step(const ::std::string& value);
  #if LANG_CXX11
  void set_summary_next_step(::std::string&& value);
  #endif
  void set_summary_next_step(const char* value);
  void set_summary_next_step(const char* value, size_t size);
  ::std::string* mutable_summary_next_step();
  ::std::string* release_summary_next_step();
  void set_allocated_summary_next_step(::std::string* summary_next_step);

  // .google.protobuf.Any bottleneck_analysis = 2;
  bool has_bottleneck_analysis() const;
  void clear_bottleneck_analysis();
  static const int kBottleneckAnalysisFieldNumber = 2;
  private:
  const ::google::protobuf::Any& _internal_bottleneck_analysis() const;
  public:
  const ::google::protobuf::Any& bottleneck_analysis() const;
  ::google::protobuf::Any* release_bottleneck_analysis();
  ::google::protobuf::Any* mutable_bottleneck_analysis();
  void set_allocated_bottleneck_analysis(::google::protobuf::Any* bottleneck_analysis);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputPipelineAnalysisRecommendation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> details_;
  ::google::protobuf::internal::ArenaStringPtr summary_next_step_;
  ::google::protobuf::Any* bottleneck_analysis_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenericStepTimeBreakdown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.GenericStepTimeBreakdown) */ {
 public:
  GenericStepTimeBreakdown();
  virtual ~GenericStepTimeBreakdown();

  GenericStepTimeBreakdown(const GenericStepTimeBreakdown& from);

  inline GenericStepTimeBreakdown& operator=(const GenericStepTimeBreakdown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenericStepTimeBreakdown(GenericStepTimeBreakdown&& from) noexcept
    : GenericStepTimeBreakdown() {
    *this = ::std::move(from);
  }

  inline GenericStepTimeBreakdown& operator=(GenericStepTimeBreakdown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericStepTimeBreakdown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenericStepTimeBreakdown* internal_default_instance() {
    return reinterpret_cast<const GenericStepTimeBreakdown*>(
               &_GenericStepTimeBreakdown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GenericStepTimeBreakdown* other);
  friend void swap(GenericStepTimeBreakdown& a, GenericStepTimeBreakdown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenericStepTimeBreakdown* New() const final {
    return CreateMaybeMessage<GenericStepTimeBreakdown>(NULL);
  }

  GenericStepTimeBreakdown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenericStepTimeBreakdown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenericStepTimeBreakdown& from);
  void MergeFrom(const GenericStepTimeBreakdown& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenericStepTimeBreakdown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.profiler.StepSummary unknown_time_ms_summary = 1;
  bool has_unknown_time_ms_summary() const;
  void clear_unknown_time_ms_summary();
  static const int kUnknownTimeMsSummaryFieldNumber = 1;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_unknown_time_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& unknown_time_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_unknown_time_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_unknown_time_ms_summary();
  void set_allocated_unknown_time_ms_summary(::tensorflow::profiler::StepSummary* unknown_time_ms_summary);

  // .tensorflow.profiler.StepSummary output_ms_summary = 3;
  bool has_output_ms_summary() const;
  void clear_output_ms_summary();
  static const int kOutputMsSummaryFieldNumber = 3;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_output_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& output_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_output_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_output_ms_summary();
  void set_allocated_output_ms_summary(::tensorflow::profiler::StepSummary* output_ms_summary);

  // .tensorflow.profiler.StepSummary device_compute_ms_summary = 4;
  bool has_device_compute_ms_summary() const;
  void clear_device_compute_ms_summary();
  static const int kDeviceComputeMsSummaryFieldNumber = 4;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_device_compute_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& device_compute_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_device_compute_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_device_compute_ms_summary();
  void set_allocated_device_compute_ms_summary(::tensorflow::profiler::StepSummary* device_compute_ms_summary);

  // .tensorflow.profiler.StepSummary device_to_device_ms_summary = 5;
  bool has_device_to_device_ms_summary() const;
  void clear_device_to_device_ms_summary();
  static const int kDeviceToDeviceMsSummaryFieldNumber = 5;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_device_to_device_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& device_to_device_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_device_to_device_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_device_to_device_ms_summary();
  void set_allocated_device_to_device_ms_summary(::tensorflow::profiler::StepSummary* device_to_device_ms_summary);

  // .tensorflow.profiler.StepSummary host_compute_ms_summary = 6;
  bool has_host_compute_ms_summary() const;
  void clear_host_compute_ms_summary();
  static const int kHostComputeMsSummaryFieldNumber = 6;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_host_compute_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& host_compute_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_host_compute_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_host_compute_ms_summary();
  void set_allocated_host_compute_ms_summary(::tensorflow::profiler::StepSummary* host_compute_ms_summary);

  // .tensorflow.profiler.StepSummary host_prepare_ms_summary = 7;
  bool has_host_prepare_ms_summary() const;
  void clear_host_prepare_ms_summary();
  static const int kHostPrepareMsSummaryFieldNumber = 7;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_host_prepare_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& host_prepare_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_host_prepare_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_host_prepare_ms_summary();
  void set_allocated_host_prepare_ms_summary(::tensorflow::profiler::StepSummary* host_prepare_ms_summary);

  // .tensorflow.profiler.StepSummary host_compile_ms_summary = 8;
  bool has_host_compile_ms_summary() const;
  void clear_host_compile_ms_summary();
  static const int kHostCompileMsSummaryFieldNumber = 8;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_host_compile_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& host_compile_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_host_compile_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_host_compile_ms_summary();
  void set_allocated_host_compile_ms_summary(::tensorflow::profiler::StepSummary* host_compile_ms_summary);

  // .tensorflow.profiler.StepSummary host_wait_input_ms_summary = 9;
  bool has_host_wait_input_ms_summary() const;
  void clear_host_wait_input_ms_summary();
  static const int kHostWaitInputMsSummaryFieldNumber = 9;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_host_wait_input_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& host_wait_input_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_host_wait_input_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_host_wait_input_ms_summary();
  void set_allocated_host_wait_input_ms_summary(::tensorflow::profiler::StepSummary* host_wait_input_ms_summary);

  // .tensorflow.profiler.StepSummary host_to_device_ms_summary = 10;
  bool has_host_to_device_ms_summary() const;
  void clear_host_to_device_ms_summary();
  static const int kHostToDeviceMsSummaryFieldNumber = 10;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_host_to_device_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& host_to_device_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_host_to_device_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_host_to_device_ms_summary();
  void set_allocated_host_to_device_ms_summary(::tensorflow::profiler::StepSummary* host_to_device_ms_summary);

  // .tensorflow.profiler.StepSummary input_ms_summary = 11;
  bool has_input_ms_summary() const;
  void clear_input_ms_summary();
  static const int kInputMsSummaryFieldNumber = 11;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_input_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& input_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_input_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_input_ms_summary();
  void set_allocated_input_ms_summary(::tensorflow::profiler::StepSummary* input_ms_summary);

  // .tensorflow.profiler.StepSummary device_collectives_ms_summary = 12;
  bool has_device_collectives_ms_summary() const;
  void clear_device_collectives_ms_summary();
  static const int kDeviceCollectivesMsSummaryFieldNumber = 12;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_device_collectives_ms_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& device_collectives_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_device_collectives_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_device_collectives_ms_summary();
  void set_allocated_device_collectives_ms_summary(::tensorflow::profiler::StepSummary* device_collectives_ms_summary);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.GenericStepTimeBreakdown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tensorflow::profiler::StepSummary* unknown_time_ms_summary_;
  ::tensorflow::profiler::StepSummary* output_ms_summary_;
  ::tensorflow::profiler::StepSummary* device_compute_ms_summary_;
  ::tensorflow::profiler::StepSummary* device_to_device_ms_summary_;
  ::tensorflow::profiler::StepSummary* host_compute_ms_summary_;
  ::tensorflow::profiler::StepSummary* host_prepare_ms_summary_;
  ::tensorflow::profiler::StepSummary* host_compile_ms_summary_;
  ::tensorflow::profiler::StepSummary* host_wait_input_ms_summary_;
  ::tensorflow::profiler::StepSummary* host_to_device_ms_summary_;
  ::tensorflow::profiler::StepSummary* input_ms_summary_;
  ::tensorflow::profiler::StepSummary* device_collectives_ms_summary_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputPipelineAnalysisResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputPipelineAnalysisResult) */ {
 public:
  InputPipelineAnalysisResult();
  virtual ~InputPipelineAnalysisResult();

  InputPipelineAnalysisResult(const InputPipelineAnalysisResult& from);

  inline InputPipelineAnalysisResult& operator=(const InputPipelineAnalysisResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputPipelineAnalysisResult(InputPipelineAnalysisResult&& from) noexcept
    : InputPipelineAnalysisResult() {
    *this = ::std::move(from);
  }

  inline InputPipelineAnalysisResult& operator=(InputPipelineAnalysisResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputPipelineAnalysisResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputPipelineAnalysisResult* internal_default_instance() {
    return reinterpret_cast<const InputPipelineAnalysisResult*>(
               &_InputPipelineAnalysisResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(InputPipelineAnalysisResult* other);
  friend void swap(InputPipelineAnalysisResult& a, InputPipelineAnalysisResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputPipelineAnalysisResult* New() const final {
    return CreateMaybeMessage<InputPipelineAnalysisResult>(NULL);
  }

  InputPipelineAnalysisResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputPipelineAnalysisResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputPipelineAnalysisResult& from);
  void MergeFrom(const InputPipelineAnalysisResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputPipelineAnalysisResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any step_details = 4;
  int step_details_size() const;
  void clear_step_details();
  static const int kStepDetailsFieldNumber = 4;
  ::google::protobuf::Any* mutable_step_details(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_step_details();
  const ::google::protobuf::Any& step_details(int index) const;
  ::google::protobuf::Any* add_step_details();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      step_details() const;

  // repeated .tensorflow.profiler.InputOpDetails input_op_details = 6;
  int input_op_details_size() const;
  void clear_input_op_details();
  static const int kInputOpDetailsFieldNumber = 6;
  ::tensorflow::profiler::InputOpDetails* mutable_input_op_details(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails >*
      mutable_input_op_details();
  const ::tensorflow::profiler::InputOpDetails& input_op_details(int index) const;
  ::tensorflow::profiler::InputOpDetails* add_input_op_details();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails >&
      input_op_details() const;

  // string hardware_type = 9;
  void clear_hardware_type();
  static const int kHardwareTypeFieldNumber = 9;
  const ::std::string& hardware_type() const;
  void set_hardware_type(const ::std::string& value);
  #if LANG_CXX11
  void set_hardware_type(::std::string&& value);
  #endif
  void set_hardware_type(const char* value);
  void set_hardware_type(const char* value, size_t size);
  ::std::string* mutable_hardware_type();
  ::std::string* release_hardware_type();
  void set_allocated_hardware_type(::std::string* hardware_type);

  // .tensorflow.profiler.StepSummary step_time_summary = 2;
  bool has_step_time_summary() const;
  void clear_step_time_summary();
  static const int kStepTimeSummaryFieldNumber = 2;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_step_time_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& step_time_summary() const;
  ::tensorflow::profiler::StepSummary* release_step_time_summary();
  ::tensorflow::profiler::StepSummary* mutable_step_time_summary();
  void set_allocated_step_time_summary(::tensorflow::profiler::StepSummary* step_time_summary);

  // .tensorflow.profiler.StepSummary input_percent_summary = 3;
  bool has_input_percent_summary() const;
  void clear_input_percent_summary();
  static const int kInputPercentSummaryFieldNumber = 3;
  private:
  const ::tensorflow::profiler::StepSummary& _internal_input_percent_summary() const;
  public:
  const ::tensorflow::profiler::StepSummary& input_percent_summary() const;
  ::tensorflow::profiler::StepSummary* release_input_percent_summary();
  ::tensorflow::profiler::StepSummary* mutable_input_percent_summary();
  void set_allocated_input_percent_summary(::tensorflow::profiler::StepSummary* input_percent_summary);

  // .tensorflow.profiler.InputTimeBreakdown input_time_breakdown = 5;
  bool has_input_time_breakdown() const;
  void clear_input_time_breakdown();
  static const int kInputTimeBreakdownFieldNumber = 5;
  private:
  const ::tensorflow::profiler::InputTimeBreakdown& _internal_input_time_breakdown() const;
  public:
  const ::tensorflow::profiler::InputTimeBreakdown& input_time_breakdown() const;
  ::tensorflow::profiler::InputTimeBreakdown* release_input_time_breakdown();
  ::tensorflow::profiler::InputTimeBreakdown* mutable_input_time_breakdown();
  void set_allocated_input_time_breakdown(::tensorflow::profiler::InputTimeBreakdown* input_time_breakdown);

  // .tensorflow.profiler.InputPipelineAnalysisRecommendation recommendation = 7;
  bool has_recommendation() const;
  void clear_recommendation();
  static const int kRecommendationFieldNumber = 7;
  private:
  const ::tensorflow::profiler::InputPipelineAnalysisRecommendation& _internal_recommendation() const;
  public:
  const ::tensorflow::profiler::InputPipelineAnalysisRecommendation& recommendation() const;
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* release_recommendation();
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* mutable_recommendation();
  void set_allocated_recommendation(::tensorflow::profiler::InputPipelineAnalysisRecommendation* recommendation);

  // .google.protobuf.Any step_time_breakdown = 8;
  bool has_step_time_breakdown() const;
  void clear_step_time_breakdown();
  static const int kStepTimeBreakdownFieldNumber = 8;
  private:
  const ::google::protobuf::Any& _internal_step_time_breakdown() const;
  public:
  const ::google::protobuf::Any& step_time_breakdown() const;
  ::google::protobuf::Any* release_step_time_breakdown();
  ::google::protobuf::Any* mutable_step_time_breakdown();
  void set_allocated_step_time_breakdown(::google::protobuf::Any* step_time_breakdown);

  // .tensorflow.profiler.Diagnostics diagnostics = 12;
  bool has_diagnostics() const;
  void clear_diagnostics();
  static const int kDiagnosticsFieldNumber = 12;
  private:
  const ::tensorflow::profiler::Diagnostics& _internal_diagnostics() const;
  public:
  const ::tensorflow::profiler::Diagnostics& diagnostics() const;
  ::tensorflow::profiler::Diagnostics* release_diagnostics();
  ::tensorflow::profiler::Diagnostics* mutable_diagnostics();
  void set_allocated_diagnostics(::tensorflow::profiler::Diagnostics* diagnostics);

  // double input_percent = 11;
  void clear_input_percent();
  static const int kInputPercentFieldNumber = 11;
  double input_percent() const;
  void set_input_percent(double value);

  // double output_percent = 13;
  void clear_output_percent();
  static const int kOutputPercentFieldNumber = 13;
  double output_percent() const;
  void set_output_percent(double value);

  // double idle_percent = 14;
  void clear_idle_percent();
  static const int kIdlePercentFieldNumber = 14;
  double idle_percent() const;
  void set_idle_percent(double value);

  // double compute_percent = 15;
  void clear_compute_percent();
  static const int kComputePercentFieldNumber = 15;
  double compute_percent() const;
  void set_compute_percent(double value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputPipelineAnalysisResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > step_details_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails > input_op_details_;
  ::google::protobuf::internal::ArenaStringPtr hardware_type_;
  ::tensorflow::profiler::StepSummary* step_time_summary_;
  ::tensorflow::profiler::StepSummary* input_percent_summary_;
  ::tensorflow::profiler::InputTimeBreakdown* input_time_breakdown_;
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* recommendation_;
  ::google::protobuf::Any* step_time_breakdown_;
  ::tensorflow::profiler::Diagnostics* diagnostics_;
  double input_percent_;
  double output_percent_;
  double idle_percent_;
  double compute_percent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BottleneckAnalysis

// double input_percent = 7;
inline void BottleneckAnalysis::clear_input_percent() {
  input_percent_ = 0;
}
inline double BottleneckAnalysis::input_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.input_percent)
  return input_percent_;
}
inline void BottleneckAnalysis::set_input_percent(double value) {
  
  input_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.input_percent)
}

// double output_percent = 8;
inline void BottleneckAnalysis::clear_output_percent() {
  output_percent_ = 0;
}
inline double BottleneckAnalysis::output_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.output_percent)
  return output_percent_;
}
inline void BottleneckAnalysis::set_output_percent(double value) {
  
  output_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.output_percent)
}

// double idle_percent = 9;
inline void BottleneckAnalysis::clear_idle_percent() {
  idle_percent_ = 0;
}
inline double BottleneckAnalysis::idle_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.idle_percent)
  return idle_percent_;
}
inline void BottleneckAnalysis::set_idle_percent(double value) {
  
  idle_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.idle_percent)
}

// double compute_percent = 10;
inline void BottleneckAnalysis::clear_compute_percent() {
  compute_percent_ = 0;
}
inline double BottleneckAnalysis::compute_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.compute_percent)
  return compute_percent_;
}
inline void BottleneckAnalysis::set_compute_percent(double value) {
  
  compute_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.compute_percent)
}

// string input_classification = 1;
inline void BottleneckAnalysis::clear_input_classification() {
  input_classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BottleneckAnalysis::input_classification() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.input_classification)
  return input_classification_.GetNoArena();
}
inline void BottleneckAnalysis::set_input_classification(const ::std::string& value) {
  
  input_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.input_classification)
}
#if LANG_CXX11
inline void BottleneckAnalysis::set_input_classification(::std::string&& value) {
  
  input_classification_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.BottleneckAnalysis.input_classification)
}
#endif
inline void BottleneckAnalysis::set_input_classification(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.BottleneckAnalysis.input_classification)
}
inline void BottleneckAnalysis::set_input_classification(const char* value, size_t size) {
  
  input_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.BottleneckAnalysis.input_classification)
}
inline ::std::string* BottleneckAnalysis::mutable_input_classification() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.BottleneckAnalysis.input_classification)
  return input_classification_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BottleneckAnalysis::release_input_classification() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.BottleneckAnalysis.input_classification)
  
  return input_classification_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BottleneckAnalysis::set_allocated_input_classification(::std::string* input_classification) {
  if (input_classification != NULL) {
    
  } else {
    
  }
  input_classification_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_classification);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.BottleneckAnalysis.input_classification)
}

// string input_statement = 2;
inline void BottleneckAnalysis::clear_input_statement() {
  input_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BottleneckAnalysis::input_statement() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.input_statement)
  return input_statement_.GetNoArena();
}
inline void BottleneckAnalysis::set_input_statement(const ::std::string& value) {
  
  input_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.input_statement)
}
#if LANG_CXX11
inline void BottleneckAnalysis::set_input_statement(::std::string&& value) {
  
  input_statement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.BottleneckAnalysis.input_statement)
}
#endif
inline void BottleneckAnalysis::set_input_statement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.BottleneckAnalysis.input_statement)
}
inline void BottleneckAnalysis::set_input_statement(const char* value, size_t size) {
  
  input_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.BottleneckAnalysis.input_statement)
}
inline ::std::string* BottleneckAnalysis::mutable_input_statement() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.BottleneckAnalysis.input_statement)
  return input_statement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BottleneckAnalysis::release_input_statement() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.BottleneckAnalysis.input_statement)
  
  return input_statement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BottleneckAnalysis::set_allocated_input_statement(::std::string* input_statement) {
  if (input_statement != NULL) {
    
  } else {
    
  }
  input_statement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_statement);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.BottleneckAnalysis.input_statement)
}

// string kernel_launch_classification = 3;
inline void BottleneckAnalysis::clear_kernel_launch_classification() {
  kernel_launch_classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BottleneckAnalysis::kernel_launch_classification() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification)
  return kernel_launch_classification_.GetNoArena();
}
inline void BottleneckAnalysis::set_kernel_launch_classification(const ::std::string& value) {
  
  kernel_launch_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification)
}
#if LANG_CXX11
inline void BottleneckAnalysis::set_kernel_launch_classification(::std::string&& value) {
  
  kernel_launch_classification_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification)
}
#endif
inline void BottleneckAnalysis::set_kernel_launch_classification(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  kernel_launch_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification)
}
inline void BottleneckAnalysis::set_kernel_launch_classification(const char* value, size_t size) {
  
  kernel_launch_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification)
}
inline ::std::string* BottleneckAnalysis::mutable_kernel_launch_classification() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification)
  return kernel_launch_classification_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BottleneckAnalysis::release_kernel_launch_classification() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification)
  
  return kernel_launch_classification_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BottleneckAnalysis::set_allocated_kernel_launch_classification(::std::string* kernel_launch_classification) {
  if (kernel_launch_classification != NULL) {
    
  } else {
    
  }
  kernel_launch_classification_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kernel_launch_classification);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.BottleneckAnalysis.kernel_launch_classification)
}

// string kernel_launch_statement = 4;
inline void BottleneckAnalysis::clear_kernel_launch_statement() {
  kernel_launch_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BottleneckAnalysis::kernel_launch_statement() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement)
  return kernel_launch_statement_.GetNoArena();
}
inline void BottleneckAnalysis::set_kernel_launch_statement(const ::std::string& value) {
  
  kernel_launch_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement)
}
#if LANG_CXX11
inline void BottleneckAnalysis::set_kernel_launch_statement(::std::string&& value) {
  
  kernel_launch_statement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement)
}
#endif
inline void BottleneckAnalysis::set_kernel_launch_statement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  kernel_launch_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement)
}
inline void BottleneckAnalysis::set_kernel_launch_statement(const char* value, size_t size) {
  
  kernel_launch_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement)
}
inline ::std::string* BottleneckAnalysis::mutable_kernel_launch_statement() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement)
  return kernel_launch_statement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BottleneckAnalysis::release_kernel_launch_statement() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement)
  
  return kernel_launch_statement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BottleneckAnalysis::set_allocated_kernel_launch_statement(::std::string* kernel_launch_statement) {
  if (kernel_launch_statement != NULL) {
    
  } else {
    
  }
  kernel_launch_statement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kernel_launch_statement);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.BottleneckAnalysis.kernel_launch_statement)
}

// string all_other_classification = 5;
inline void BottleneckAnalysis::clear_all_other_classification() {
  all_other_classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BottleneckAnalysis::all_other_classification() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.all_other_classification)
  return all_other_classification_.GetNoArena();
}
inline void BottleneckAnalysis::set_all_other_classification(const ::std::string& value) {
  
  all_other_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.all_other_classification)
}
#if LANG_CXX11
inline void BottleneckAnalysis::set_all_other_classification(::std::string&& value) {
  
  all_other_classification_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.BottleneckAnalysis.all_other_classification)
}
#endif
inline void BottleneckAnalysis::set_all_other_classification(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  all_other_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.BottleneckAnalysis.all_other_classification)
}
inline void BottleneckAnalysis::set_all_other_classification(const char* value, size_t size) {
  
  all_other_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.BottleneckAnalysis.all_other_classification)
}
inline ::std::string* BottleneckAnalysis::mutable_all_other_classification() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.BottleneckAnalysis.all_other_classification)
  return all_other_classification_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BottleneckAnalysis::release_all_other_classification() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.BottleneckAnalysis.all_other_classification)
  
  return all_other_classification_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BottleneckAnalysis::set_allocated_all_other_classification(::std::string* all_other_classification) {
  if (all_other_classification != NULL) {
    
  } else {
    
  }
  all_other_classification_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), all_other_classification);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.BottleneckAnalysis.all_other_classification)
}

// string all_other_statement = 6;
inline void BottleneckAnalysis::clear_all_other_statement() {
  all_other_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BottleneckAnalysis::all_other_statement() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.all_other_statement)
  return all_other_statement_.GetNoArena();
}
inline void BottleneckAnalysis::set_all_other_statement(const ::std::string& value) {
  
  all_other_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.all_other_statement)
}
#if LANG_CXX11
inline void BottleneckAnalysis::set_all_other_statement(::std::string&& value) {
  
  all_other_statement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.BottleneckAnalysis.all_other_statement)
}
#endif
inline void BottleneckAnalysis::set_all_other_statement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  all_other_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.BottleneckAnalysis.all_other_statement)
}
inline void BottleneckAnalysis::set_all_other_statement(const char* value, size_t size) {
  
  all_other_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.BottleneckAnalysis.all_other_statement)
}
inline ::std::string* BottleneckAnalysis::mutable_all_other_statement() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.BottleneckAnalysis.all_other_statement)
  return all_other_statement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BottleneckAnalysis::release_all_other_statement() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.BottleneckAnalysis.all_other_statement)
  
  return all_other_statement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BottleneckAnalysis::set_allocated_all_other_statement(::std::string* all_other_statement) {
  if (all_other_statement != NULL) {
    
  } else {
    
  }
  all_other_statement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), all_other_statement);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.BottleneckAnalysis.all_other_statement)
}

// string device_collectives_classification = 11;
inline void BottleneckAnalysis::clear_device_collectives_classification() {
  device_collectives_classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BottleneckAnalysis::device_collectives_classification() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.device_collectives_classification)
  return device_collectives_classification_.GetNoArena();
}
inline void BottleneckAnalysis::set_device_collectives_classification(const ::std::string& value) {
  
  device_collectives_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.device_collectives_classification)
}
#if LANG_CXX11
inline void BottleneckAnalysis::set_device_collectives_classification(::std::string&& value) {
  
  device_collectives_classification_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.BottleneckAnalysis.device_collectives_classification)
}
#endif
inline void BottleneckAnalysis::set_device_collectives_classification(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_collectives_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.BottleneckAnalysis.device_collectives_classification)
}
inline void BottleneckAnalysis::set_device_collectives_classification(const char* value, size_t size) {
  
  device_collectives_classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.BottleneckAnalysis.device_collectives_classification)
}
inline ::std::string* BottleneckAnalysis::mutable_device_collectives_classification() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.BottleneckAnalysis.device_collectives_classification)
  return device_collectives_classification_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BottleneckAnalysis::release_device_collectives_classification() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.BottleneckAnalysis.device_collectives_classification)
  
  return device_collectives_classification_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BottleneckAnalysis::set_allocated_device_collectives_classification(::std::string* device_collectives_classification) {
  if (device_collectives_classification != NULL) {
    
  } else {
    
  }
  device_collectives_classification_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_collectives_classification);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.BottleneckAnalysis.device_collectives_classification)
}

// string device_collectives_statement = 12;
inline void BottleneckAnalysis::clear_device_collectives_statement() {
  device_collectives_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BottleneckAnalysis::device_collectives_statement() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.BottleneckAnalysis.device_collectives_statement)
  return device_collectives_statement_.GetNoArena();
}
inline void BottleneckAnalysis::set_device_collectives_statement(const ::std::string& value) {
  
  device_collectives_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.BottleneckAnalysis.device_collectives_statement)
}
#if LANG_CXX11
inline void BottleneckAnalysis::set_device_collectives_statement(::std::string&& value) {
  
  device_collectives_statement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.BottleneckAnalysis.device_collectives_statement)
}
#endif
inline void BottleneckAnalysis::set_device_collectives_statement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_collectives_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.BottleneckAnalysis.device_collectives_statement)
}
inline void BottleneckAnalysis::set_device_collectives_statement(const char* value, size_t size) {
  
  device_collectives_statement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.BottleneckAnalysis.device_collectives_statement)
}
inline ::std::string* BottleneckAnalysis::mutable_device_collectives_statement() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.BottleneckAnalysis.device_collectives_statement)
  return device_collectives_statement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BottleneckAnalysis::release_device_collectives_statement() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.BottleneckAnalysis.device_collectives_statement)
  
  return device_collectives_statement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BottleneckAnalysis::set_allocated_device_collectives_statement(::std::string* device_collectives_statement) {
  if (device_collectives_statement != NULL) {
    
  } else {
    
  }
  device_collectives_statement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_collectives_statement);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.BottleneckAnalysis.device_collectives_statement)
}

// -------------------------------------------------------------------

// StepSummary

// double average = 1;
inline void StepSummary::clear_average() {
  average_ = 0;
}
inline double StepSummary::average() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepSummary.average)
  return average_;
}
inline void StepSummary::set_average(double value) {
  
  average_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepSummary.average)
}

// double standard_deviation = 2;
inline void StepSummary::clear_standard_deviation() {
  standard_deviation_ = 0;
}
inline double StepSummary::standard_deviation() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepSummary.standard_deviation)
  return standard_deviation_;
}
inline void StepSummary::set_standard_deviation(double value) {
  
  standard_deviation_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepSummary.standard_deviation)
}

// double minimum = 3;
inline void StepSummary::clear_minimum() {
  minimum_ = 0;
}
inline double StepSummary::minimum() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepSummary.minimum)
  return minimum_;
}
inline void StepSummary::set_minimum(double value) {
  
  minimum_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepSummary.minimum)
}

// double maximum = 4;
inline void StepSummary::clear_maximum() {
  maximum_ = 0;
}
inline double StepSummary::maximum() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepSummary.maximum)
  return maximum_;
}
inline void StepSummary::set_maximum(double value) {
  
  maximum_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepSummary.maximum)
}

// -------------------------------------------------------------------

// PerGenericStepDetails

// int32 step_number = 1;
inline void PerGenericStepDetails::clear_step_number() {
  step_number_ = 0;
}
inline ::google::protobuf::int32 PerGenericStepDetails::step_number() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.step_number)
  return step_number_;
}
inline void PerGenericStepDetails::set_step_number(::google::protobuf::int32 value) {
  
  step_number_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.step_number)
}

// string step_name = 14;
inline void PerGenericStepDetails::clear_step_name() {
  step_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PerGenericStepDetails::step_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.step_name)
  return step_name_.GetNoArena();
}
inline void PerGenericStepDetails::set_step_name(const ::std::string& value) {
  
  step_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.step_name)
}
#if LANG_CXX11
inline void PerGenericStepDetails::set_step_name(::std::string&& value) {
  
  step_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.PerGenericStepDetails.step_name)
}
#endif
inline void PerGenericStepDetails::set_step_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  step_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.PerGenericStepDetails.step_name)
}
inline void PerGenericStepDetails::set_step_name(const char* value, size_t size) {
  
  step_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.PerGenericStepDetails.step_name)
}
inline ::std::string* PerGenericStepDetails::mutable_step_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.PerGenericStepDetails.step_name)
  return step_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PerGenericStepDetails::release_step_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.PerGenericStepDetails.step_name)
  
  return step_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerGenericStepDetails::set_allocated_step_name(::std::string* step_name) {
  if (step_name != NULL) {
    
  } else {
    
  }
  step_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), step_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.PerGenericStepDetails.step_name)
}

// double step_time_ms = 2;
inline void PerGenericStepDetails::clear_step_time_ms() {
  step_time_ms_ = 0;
}
inline double PerGenericStepDetails::step_time_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.step_time_ms)
  return step_time_ms_;
}
inline void PerGenericStepDetails::set_step_time_ms(double value) {
  
  step_time_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.step_time_ms)
}

// double unknown_time_ms = 3;
inline void PerGenericStepDetails::clear_unknown_time_ms() {
  unknown_time_ms_ = 0;
}
inline double PerGenericStepDetails::unknown_time_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.unknown_time_ms)
  return unknown_time_ms_;
}
inline void PerGenericStepDetails::set_unknown_time_ms(double value) {
  
  unknown_time_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.unknown_time_ms)
}

// double host_wait_input_ms = 11;
inline void PerGenericStepDetails::clear_host_wait_input_ms() {
  host_wait_input_ms_ = 0;
}
inline double PerGenericStepDetails::host_wait_input_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.host_wait_input_ms)
  return host_wait_input_ms_;
}
inline void PerGenericStepDetails::set_host_wait_input_ms(double value) {
  
  host_wait_input_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.host_wait_input_ms)
}

// double host_to_device_ms = 12;
inline void PerGenericStepDetails::clear_host_to_device_ms() {
  host_to_device_ms_ = 0;
}
inline double PerGenericStepDetails::host_to_device_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.host_to_device_ms)
  return host_to_device_ms_;
}
inline void PerGenericStepDetails::set_host_to_device_ms(double value) {
  
  host_to_device_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.host_to_device_ms)
}

// double output_ms = 5;
inline void PerGenericStepDetails::clear_output_ms() {
  output_ms_ = 0;
}
inline double PerGenericStepDetails::output_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.output_ms)
  return output_ms_;
}
inline void PerGenericStepDetails::set_output_ms(double value) {
  
  output_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.output_ms)
}

// double device_compute_ms = 6;
inline void PerGenericStepDetails::clear_device_compute_ms() {
  device_compute_ms_ = 0;
}
inline double PerGenericStepDetails::device_compute_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.device_compute_ms)
  return device_compute_ms_;
}
inline void PerGenericStepDetails::set_device_compute_ms(double value) {
  
  device_compute_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.device_compute_ms)
}

// double device_to_device_ms = 7;
inline void PerGenericStepDetails::clear_device_to_device_ms() {
  device_to_device_ms_ = 0;
}
inline double PerGenericStepDetails::device_to_device_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.device_to_device_ms)
  return device_to_device_ms_;
}
inline void PerGenericStepDetails::set_device_to_device_ms(double value) {
  
  device_to_device_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.device_to_device_ms)
}

// double device_collectives_ms = 13;
inline void PerGenericStepDetails::clear_device_collectives_ms() {
  device_collectives_ms_ = 0;
}
inline double PerGenericStepDetails::device_collectives_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.device_collectives_ms)
  return device_collectives_ms_;
}
inline void PerGenericStepDetails::set_device_collectives_ms(double value) {
  
  device_collectives_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.device_collectives_ms)
}

// double host_compute_ms = 8;
inline void PerGenericStepDetails::clear_host_compute_ms() {
  host_compute_ms_ = 0;
}
inline double PerGenericStepDetails::host_compute_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.host_compute_ms)
  return host_compute_ms_;
}
inline void PerGenericStepDetails::set_host_compute_ms(double value) {
  
  host_compute_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.host_compute_ms)
}

// double host_prepare_ms = 9;
inline void PerGenericStepDetails::clear_host_prepare_ms() {
  host_prepare_ms_ = 0;
}
inline double PerGenericStepDetails::host_prepare_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.host_prepare_ms)
  return host_prepare_ms_;
}
inline void PerGenericStepDetails::set_host_prepare_ms(double value) {
  
  host_prepare_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.host_prepare_ms)
}

// double host_compile_ms = 10;
inline void PerGenericStepDetails::clear_host_compile_ms() {
  host_compile_ms_ = 0;
}
inline double PerGenericStepDetails::host_compile_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.host_compile_ms)
  return host_compile_ms_;
}
inline void PerGenericStepDetails::set_host_compile_ms(double value) {
  
  host_compile_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.host_compile_ms)
}

// -------------------------------------------------------------------

// InputTimeBreakdown

// double demanded_file_read_us = 1;
inline void InputTimeBreakdown::clear_demanded_file_read_us() {
  demanded_file_read_us_ = 0;
}
inline double InputTimeBreakdown::demanded_file_read_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.demanded_file_read_us)
  return demanded_file_read_us_;
}
inline void InputTimeBreakdown::set_demanded_file_read_us(double value) {
  
  demanded_file_read_us_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.demanded_file_read_us)
}

// double advanced_file_read_us = 2;
inline void InputTimeBreakdown::clear_advanced_file_read_us() {
  advanced_file_read_us_ = 0;
}
inline double InputTimeBreakdown::advanced_file_read_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.advanced_file_read_us)
  return advanced_file_read_us_;
}
inline void InputTimeBreakdown::set_advanced_file_read_us(double value) {
  
  advanced_file_read_us_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.advanced_file_read_us)
}

// double preprocessing_us = 3;
inline void InputTimeBreakdown::clear_preprocessing_us() {
  preprocessing_us_ = 0;
}
inline double InputTimeBreakdown::preprocessing_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.preprocessing_us)
  return preprocessing_us_;
}
inline void InputTimeBreakdown::set_preprocessing_us(double value) {
  
  preprocessing_us_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.preprocessing_us)
}

// double enqueue_us = 4;
inline void InputTimeBreakdown::clear_enqueue_us() {
  enqueue_us_ = 0;
}
inline double InputTimeBreakdown::enqueue_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.enqueue_us)
  return enqueue_us_;
}
inline void InputTimeBreakdown::set_enqueue_us(double value) {
  
  enqueue_us_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.enqueue_us)
}

// double unclassified_non_enqueue_us = 5;
inline void InputTimeBreakdown::clear_unclassified_non_enqueue_us() {
  unclassified_non_enqueue_us_ = 0;
}
inline double InputTimeBreakdown::unclassified_non_enqueue_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.unclassified_non_enqueue_us)
  return unclassified_non_enqueue_us_;
}
inline void InputTimeBreakdown::set_unclassified_non_enqueue_us(double value) {
  
  unclassified_non_enqueue_us_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.unclassified_non_enqueue_us)
}

// -------------------------------------------------------------------

// InputOpDetails

// string op_name = 1;
inline void InputOpDetails::clear_op_name() {
  op_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputOpDetails::op_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.op_name)
  return op_name_.GetNoArena();
}
inline void InputOpDetails::set_op_name(const ::std::string& value) {
  
  op_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.op_name)
}
#if LANG_CXX11
inline void InputOpDetails::set_op_name(::std::string&& value) {
  
  op_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.InputOpDetails.op_name)
}
#endif
inline void InputOpDetails::set_op_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  op_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputOpDetails.op_name)
}
inline void InputOpDetails::set_op_name(const char* value, size_t size) {
  
  op_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputOpDetails.op_name)
}
inline ::std::string* InputOpDetails::mutable_op_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputOpDetails.op_name)
  return op_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputOpDetails::release_op_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputOpDetails.op_name)
  
  return op_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputOpDetails::set_allocated_op_name(::std::string* op_name) {
  if (op_name != NULL) {
    
  } else {
    
  }
  op_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputOpDetails.op_name)
}

// uint64 count = 2;
inline void InputOpDetails::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InputOpDetails::count() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.count)
  return count_;
}
inline void InputOpDetails::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.count)
}

// double time_in_ms = 3;
inline void InputOpDetails::clear_time_in_ms() {
  time_in_ms_ = 0;
}
inline double InputOpDetails::time_in_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.time_in_ms)
  return time_in_ms_;
}
inline void InputOpDetails::set_time_in_ms(double value) {
  
  time_in_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.time_in_ms)
}

// double time_in_percent = 4;
inline void InputOpDetails::clear_time_in_percent() {
  time_in_percent_ = 0;
}
inline double InputOpDetails::time_in_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.time_in_percent)
  return time_in_percent_;
}
inline void InputOpDetails::set_time_in_percent(double value) {
  
  time_in_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.time_in_percent)
}

// double self_time_in_ms = 5;
inline void InputOpDetails::clear_self_time_in_ms() {
  self_time_in_ms_ = 0;
}
inline double InputOpDetails::self_time_in_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.self_time_in_ms)
  return self_time_in_ms_;
}
inline void InputOpDetails::set_self_time_in_ms(double value) {
  
  self_time_in_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.self_time_in_ms)
}

// double self_time_in_percent = 6;
inline void InputOpDetails::clear_self_time_in_percent() {
  self_time_in_percent_ = 0;
}
inline double InputOpDetails::self_time_in_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.self_time_in_percent)
  return self_time_in_percent_;
}
inline void InputOpDetails::set_self_time_in_percent(double value) {
  
  self_time_in_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.self_time_in_percent)
}

// string category = 7;
inline void InputOpDetails::clear_category() {
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputOpDetails::category() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.category)
  return category_.GetNoArena();
}
inline void InputOpDetails::set_category(const ::std::string& value) {
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.category)
}
#if LANG_CXX11
inline void InputOpDetails::set_category(::std::string&& value) {
  
  category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.InputOpDetails.category)
}
#endif
inline void InputOpDetails::set_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputOpDetails.category)
}
inline void InputOpDetails::set_category(const char* value, size_t size) {
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputOpDetails.category)
}
inline ::std::string* InputOpDetails::mutable_category() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputOpDetails.category)
  return category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputOpDetails::release_category() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputOpDetails.category)
  
  return category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputOpDetails::set_allocated_category(::std::string* category) {
  if (category != NULL) {
    
  } else {
    
  }
  category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputOpDetails.category)
}

// -------------------------------------------------------------------

// InputPipelineAnalysisRecommendation

// repeated string details = 1;
inline int InputPipelineAnalysisRecommendation::details_size() const {
  return details_.size();
}
inline void InputPipelineAnalysisRecommendation::clear_details() {
  details_.Clear();
}
inline const ::std::string& InputPipelineAnalysisRecommendation::details(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return details_.Get(index);
}
inline ::std::string* InputPipelineAnalysisRecommendation::mutable_details(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return details_.Mutable(index);
}
inline void InputPipelineAnalysisRecommendation::set_details(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  details_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void InputPipelineAnalysisRecommendation::set_details(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  details_.Mutable(index)->assign(std::move(value));
}
#endif
inline void InputPipelineAnalysisRecommendation::set_details(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  details_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline void InputPipelineAnalysisRecommendation::set_details(int index, const char* value, size_t size) {
  details_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline ::std::string* InputPipelineAnalysisRecommendation::add_details() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return details_.Add();
}
inline void InputPipelineAnalysisRecommendation::add_details(const ::std::string& value) {
  details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
#if LANG_CXX11
inline void InputPipelineAnalysisRecommendation::add_details(::std::string&& value) {
  details_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
#endif
inline void InputPipelineAnalysisRecommendation::add_details(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline void InputPipelineAnalysisRecommendation::add_details(const char* value, size_t size) {
  details_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InputPipelineAnalysisRecommendation::details() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return details_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InputPipelineAnalysisRecommendation::mutable_details() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return &details_;
}

// .google.protobuf.Any bottleneck_analysis = 2;
inline bool InputPipelineAnalysisRecommendation::has_bottleneck_analysis() const {
  return this != internal_default_instance() && bottleneck_analysis_ != NULL;
}
inline const ::google::protobuf::Any& InputPipelineAnalysisRecommendation::_internal_bottleneck_analysis() const {
  return *bottleneck_analysis_;
}
inline const ::google::protobuf::Any& InputPipelineAnalysisRecommendation::bottleneck_analysis() const {
  const ::google::protobuf::Any* p = bottleneck_analysis_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisRecommendation.bottleneck_analysis)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* InputPipelineAnalysisRecommendation::release_bottleneck_analysis() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisRecommendation.bottleneck_analysis)
  
  ::google::protobuf::Any* temp = bottleneck_analysis_;
  bottleneck_analysis_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* InputPipelineAnalysisRecommendation::mutable_bottleneck_analysis() {
  
  if (bottleneck_analysis_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    bottleneck_analysis_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisRecommendation.bottleneck_analysis)
  return bottleneck_analysis_;
}
inline void InputPipelineAnalysisRecommendation::set_allocated_bottleneck_analysis(::google::protobuf::Any* bottleneck_analysis) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bottleneck_analysis_);
  }
  if (bottleneck_analysis) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bottleneck_analysis = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bottleneck_analysis, submessage_arena);
    }
    
  } else {
    
  }
  bottleneck_analysis_ = bottleneck_analysis;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisRecommendation.bottleneck_analysis)
}

// string summary_next_step = 3;
inline void InputPipelineAnalysisRecommendation::clear_summary_next_step() {
  summary_next_step_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputPipelineAnalysisRecommendation::summary_next_step() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step)
  return summary_next_step_.GetNoArena();
}
inline void InputPipelineAnalysisRecommendation::set_summary_next_step(const ::std::string& value) {
  
  summary_next_step_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step)
}
#if LANG_CXX11
inline void InputPipelineAnalysisRecommendation::set_summary_next_step(::std::string&& value) {
  
  summary_next_step_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step)
}
#endif
inline void InputPipelineAnalysisRecommendation::set_summary_next_step(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  summary_next_step_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step)
}
inline void InputPipelineAnalysisRecommendation::set_summary_next_step(const char* value, size_t size) {
  
  summary_next_step_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step)
}
inline ::std::string* InputPipelineAnalysisRecommendation::mutable_summary_next_step() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step)
  return summary_next_step_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputPipelineAnalysisRecommendation::release_summary_next_step() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step)
  
  return summary_next_step_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputPipelineAnalysisRecommendation::set_allocated_summary_next_step(::std::string* summary_next_step) {
  if (summary_next_step != NULL) {
    
  } else {
    
  }
  summary_next_step_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), summary_next_step);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisRecommendation.summary_next_step)
}

// -------------------------------------------------------------------

// GenericStepTimeBreakdown

// .tensorflow.profiler.StepSummary unknown_time_ms_summary = 1;
inline bool GenericStepTimeBreakdown::has_unknown_time_ms_summary() const {
  return this != internal_default_instance() && unknown_time_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_unknown_time_ms_summary() {
  if (GetArenaNoVirtual() == NULL && unknown_time_ms_summary_ != NULL) {
    delete unknown_time_ms_summary_;
  }
  unknown_time_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_unknown_time_ms_summary() const {
  return *unknown_time_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::unknown_time_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = unknown_time_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.unknown_time_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_unknown_time_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.unknown_time_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = unknown_time_ms_summary_;
  unknown_time_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_unknown_time_ms_summary() {
  
  if (unknown_time_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    unknown_time_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.unknown_time_ms_summary)
  return unknown_time_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_unknown_time_ms_summary(::tensorflow::profiler::StepSummary* unknown_time_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete unknown_time_ms_summary_;
  }
  if (unknown_time_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unknown_time_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unknown_time_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  unknown_time_ms_summary_ = unknown_time_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.unknown_time_ms_summary)
}

// .tensorflow.profiler.StepSummary host_wait_input_ms_summary = 9;
inline bool GenericStepTimeBreakdown::has_host_wait_input_ms_summary() const {
  return this != internal_default_instance() && host_wait_input_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_host_wait_input_ms_summary() {
  if (GetArenaNoVirtual() == NULL && host_wait_input_ms_summary_ != NULL) {
    delete host_wait_input_ms_summary_;
  }
  host_wait_input_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_host_wait_input_ms_summary() const {
  return *host_wait_input_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::host_wait_input_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = host_wait_input_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.host_wait_input_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_host_wait_input_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.host_wait_input_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = host_wait_input_ms_summary_;
  host_wait_input_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_host_wait_input_ms_summary() {
  
  if (host_wait_input_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    host_wait_input_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.host_wait_input_ms_summary)
  return host_wait_input_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_host_wait_input_ms_summary(::tensorflow::profiler::StepSummary* host_wait_input_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_wait_input_ms_summary_;
  }
  if (host_wait_input_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_wait_input_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_wait_input_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  host_wait_input_ms_summary_ = host_wait_input_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.host_wait_input_ms_summary)
}

// .tensorflow.profiler.StepSummary host_to_device_ms_summary = 10;
inline bool GenericStepTimeBreakdown::has_host_to_device_ms_summary() const {
  return this != internal_default_instance() && host_to_device_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_host_to_device_ms_summary() {
  if (GetArenaNoVirtual() == NULL && host_to_device_ms_summary_ != NULL) {
    delete host_to_device_ms_summary_;
  }
  host_to_device_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_host_to_device_ms_summary() const {
  return *host_to_device_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::host_to_device_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = host_to_device_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.host_to_device_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_host_to_device_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.host_to_device_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = host_to_device_ms_summary_;
  host_to_device_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_host_to_device_ms_summary() {
  
  if (host_to_device_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    host_to_device_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.host_to_device_ms_summary)
  return host_to_device_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_host_to_device_ms_summary(::tensorflow::profiler::StepSummary* host_to_device_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_to_device_ms_summary_;
  }
  if (host_to_device_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_to_device_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_to_device_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  host_to_device_ms_summary_ = host_to_device_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.host_to_device_ms_summary)
}

// .tensorflow.profiler.StepSummary input_ms_summary = 11;
inline bool GenericStepTimeBreakdown::has_input_ms_summary() const {
  return this != internal_default_instance() && input_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_input_ms_summary() {
  if (GetArenaNoVirtual() == NULL && input_ms_summary_ != NULL) {
    delete input_ms_summary_;
  }
  input_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_input_ms_summary() const {
  return *input_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::input_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = input_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.input_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_input_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.input_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = input_ms_summary_;
  input_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_input_ms_summary() {
  
  if (input_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    input_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.input_ms_summary)
  return input_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_input_ms_summary(::tensorflow::profiler::StepSummary* input_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_ms_summary_;
  }
  if (input_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  input_ms_summary_ = input_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.input_ms_summary)
}

// .tensorflow.profiler.StepSummary output_ms_summary = 3;
inline bool GenericStepTimeBreakdown::has_output_ms_summary() const {
  return this != internal_default_instance() && output_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_output_ms_summary() {
  if (GetArenaNoVirtual() == NULL && output_ms_summary_ != NULL) {
    delete output_ms_summary_;
  }
  output_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_output_ms_summary() const {
  return *output_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::output_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = output_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.output_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_output_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.output_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = output_ms_summary_;
  output_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_output_ms_summary() {
  
  if (output_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    output_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.output_ms_summary)
  return output_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_output_ms_summary(::tensorflow::profiler::StepSummary* output_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_ms_summary_;
  }
  if (output_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  output_ms_summary_ = output_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.output_ms_summary)
}

// .tensorflow.profiler.StepSummary device_compute_ms_summary = 4;
inline bool GenericStepTimeBreakdown::has_device_compute_ms_summary() const {
  return this != internal_default_instance() && device_compute_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_device_compute_ms_summary() {
  if (GetArenaNoVirtual() == NULL && device_compute_ms_summary_ != NULL) {
    delete device_compute_ms_summary_;
  }
  device_compute_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_device_compute_ms_summary() const {
  return *device_compute_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::device_compute_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = device_compute_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.device_compute_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_device_compute_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.device_compute_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = device_compute_ms_summary_;
  device_compute_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_device_compute_ms_summary() {
  
  if (device_compute_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    device_compute_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.device_compute_ms_summary)
  return device_compute_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_device_compute_ms_summary(::tensorflow::profiler::StepSummary* device_compute_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete device_compute_ms_summary_;
  }
  if (device_compute_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_compute_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_compute_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  device_compute_ms_summary_ = device_compute_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.device_compute_ms_summary)
}

// .tensorflow.profiler.StepSummary device_to_device_ms_summary = 5;
inline bool GenericStepTimeBreakdown::has_device_to_device_ms_summary() const {
  return this != internal_default_instance() && device_to_device_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_device_to_device_ms_summary() {
  if (GetArenaNoVirtual() == NULL && device_to_device_ms_summary_ != NULL) {
    delete device_to_device_ms_summary_;
  }
  device_to_device_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_device_to_device_ms_summary() const {
  return *device_to_device_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::device_to_device_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = device_to_device_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.device_to_device_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_device_to_device_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.device_to_device_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = device_to_device_ms_summary_;
  device_to_device_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_device_to_device_ms_summary() {
  
  if (device_to_device_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    device_to_device_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.device_to_device_ms_summary)
  return device_to_device_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_device_to_device_ms_summary(::tensorflow::profiler::StepSummary* device_to_device_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete device_to_device_ms_summary_;
  }
  if (device_to_device_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_to_device_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_to_device_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  device_to_device_ms_summary_ = device_to_device_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.device_to_device_ms_summary)
}

// .tensorflow.profiler.StepSummary device_collectives_ms_summary = 12;
inline bool GenericStepTimeBreakdown::has_device_collectives_ms_summary() const {
  return this != internal_default_instance() && device_collectives_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_device_collectives_ms_summary() {
  if (GetArenaNoVirtual() == NULL && device_collectives_ms_summary_ != NULL) {
    delete device_collectives_ms_summary_;
  }
  device_collectives_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_device_collectives_ms_summary() const {
  return *device_collectives_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::device_collectives_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = device_collectives_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.device_collectives_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_device_collectives_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.device_collectives_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = device_collectives_ms_summary_;
  device_collectives_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_device_collectives_ms_summary() {
  
  if (device_collectives_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    device_collectives_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.device_collectives_ms_summary)
  return device_collectives_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_device_collectives_ms_summary(::tensorflow::profiler::StepSummary* device_collectives_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete device_collectives_ms_summary_;
  }
  if (device_collectives_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_collectives_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_collectives_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  device_collectives_ms_summary_ = device_collectives_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.device_collectives_ms_summary)
}

// .tensorflow.profiler.StepSummary host_compute_ms_summary = 6;
inline bool GenericStepTimeBreakdown::has_host_compute_ms_summary() const {
  return this != internal_default_instance() && host_compute_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_host_compute_ms_summary() {
  if (GetArenaNoVirtual() == NULL && host_compute_ms_summary_ != NULL) {
    delete host_compute_ms_summary_;
  }
  host_compute_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_host_compute_ms_summary() const {
  return *host_compute_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::host_compute_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = host_compute_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.host_compute_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_host_compute_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.host_compute_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = host_compute_ms_summary_;
  host_compute_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_host_compute_ms_summary() {
  
  if (host_compute_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    host_compute_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.host_compute_ms_summary)
  return host_compute_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_host_compute_ms_summary(::tensorflow::profiler::StepSummary* host_compute_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_compute_ms_summary_;
  }
  if (host_compute_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_compute_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_compute_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  host_compute_ms_summary_ = host_compute_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.host_compute_ms_summary)
}

// .tensorflow.profiler.StepSummary host_prepare_ms_summary = 7;
inline bool GenericStepTimeBreakdown::has_host_prepare_ms_summary() const {
  return this != internal_default_instance() && host_prepare_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_host_prepare_ms_summary() {
  if (GetArenaNoVirtual() == NULL && host_prepare_ms_summary_ != NULL) {
    delete host_prepare_ms_summary_;
  }
  host_prepare_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_host_prepare_ms_summary() const {
  return *host_prepare_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::host_prepare_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = host_prepare_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.host_prepare_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_host_prepare_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.host_prepare_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = host_prepare_ms_summary_;
  host_prepare_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_host_prepare_ms_summary() {
  
  if (host_prepare_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    host_prepare_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.host_prepare_ms_summary)
  return host_prepare_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_host_prepare_ms_summary(::tensorflow::profiler::StepSummary* host_prepare_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_prepare_ms_summary_;
  }
  if (host_prepare_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_prepare_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_prepare_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  host_prepare_ms_summary_ = host_prepare_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.host_prepare_ms_summary)
}

// .tensorflow.profiler.StepSummary host_compile_ms_summary = 8;
inline bool GenericStepTimeBreakdown::has_host_compile_ms_summary() const {
  return this != internal_default_instance() && host_compile_ms_summary_ != NULL;
}
inline void GenericStepTimeBreakdown::clear_host_compile_ms_summary() {
  if (GetArenaNoVirtual() == NULL && host_compile_ms_summary_ != NULL) {
    delete host_compile_ms_summary_;
  }
  host_compile_ms_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_host_compile_ms_summary() const {
  return *host_compile_ms_summary_;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::host_compile_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = host_compile_ms_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.host_compile_ms_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_host_compile_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.host_compile_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = host_compile_ms_summary_;
  host_compile_ms_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_host_compile_ms_summary() {
  
  if (host_compile_ms_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    host_compile_ms_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.host_compile_ms_summary)
  return host_compile_ms_summary_;
}
inline void GenericStepTimeBreakdown::set_allocated_host_compile_ms_summary(::tensorflow::profiler::StepSummary* host_compile_ms_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_compile_ms_summary_;
  }
  if (host_compile_ms_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_compile_ms_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_compile_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  host_compile_ms_summary_ = host_compile_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.host_compile_ms_summary)
}

// -------------------------------------------------------------------

// InputPipelineAnalysisResult

// string hardware_type = 9;
inline void InputPipelineAnalysisResult::clear_hardware_type() {
  hardware_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputPipelineAnalysisResult::hardware_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
  return hardware_type_.GetNoArena();
}
inline void InputPipelineAnalysisResult::set_hardware_type(const ::std::string& value) {
  
  hardware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
}
#if LANG_CXX11
inline void InputPipelineAnalysisResult::set_hardware_type(::std::string&& value) {
  
  hardware_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
}
#endif
inline void InputPipelineAnalysisResult::set_hardware_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hardware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
}
inline void InputPipelineAnalysisResult::set_hardware_type(const char* value, size_t size) {
  
  hardware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
}
inline ::std::string* InputPipelineAnalysisResult::mutable_hardware_type() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
  return hardware_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputPipelineAnalysisResult::release_hardware_type() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
  
  return hardware_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputPipelineAnalysisResult::set_allocated_hardware_type(::std::string* hardware_type) {
  if (hardware_type != NULL) {
    
  } else {
    
  }
  hardware_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardware_type);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
}

// .tensorflow.profiler.StepSummary step_time_summary = 2;
inline bool InputPipelineAnalysisResult::has_step_time_summary() const {
  return this != internal_default_instance() && step_time_summary_ != NULL;
}
inline void InputPipelineAnalysisResult::clear_step_time_summary() {
  if (GetArenaNoVirtual() == NULL && step_time_summary_ != NULL) {
    delete step_time_summary_;
  }
  step_time_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& InputPipelineAnalysisResult::_internal_step_time_summary() const {
  return *step_time_summary_;
}
inline const ::tensorflow::profiler::StepSummary& InputPipelineAnalysisResult::step_time_summary() const {
  const ::tensorflow::profiler::StepSummary* p = step_time_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.step_time_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::release_step_time_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.step_time_summary)
  
  ::tensorflow::profiler::StepSummary* temp = step_time_summary_;
  step_time_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::mutable_step_time_summary() {
  
  if (step_time_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    step_time_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.step_time_summary)
  return step_time_summary_;
}
inline void InputPipelineAnalysisResult::set_allocated_step_time_summary(::tensorflow::profiler::StepSummary* step_time_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete step_time_summary_;
  }
  if (step_time_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      step_time_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, step_time_summary, submessage_arena);
    }
    
  } else {
    
  }
  step_time_summary_ = step_time_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.step_time_summary)
}

// .tensorflow.profiler.StepSummary input_percent_summary = 3;
inline bool InputPipelineAnalysisResult::has_input_percent_summary() const {
  return this != internal_default_instance() && input_percent_summary_ != NULL;
}
inline void InputPipelineAnalysisResult::clear_input_percent_summary() {
  if (GetArenaNoVirtual() == NULL && input_percent_summary_ != NULL) {
    delete input_percent_summary_;
  }
  input_percent_summary_ = NULL;
}
inline const ::tensorflow::profiler::StepSummary& InputPipelineAnalysisResult::_internal_input_percent_summary() const {
  return *input_percent_summary_;
}
inline const ::tensorflow::profiler::StepSummary& InputPipelineAnalysisResult::input_percent_summary() const {
  const ::tensorflow::profiler::StepSummary* p = input_percent_summary_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.input_percent_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::release_input_percent_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.input_percent_summary)
  
  ::tensorflow::profiler::StepSummary* temp = input_percent_summary_;
  input_percent_summary_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::mutable_input_percent_summary() {
  
  if (input_percent_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    input_percent_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.input_percent_summary)
  return input_percent_summary_;
}
inline void InputPipelineAnalysisResult::set_allocated_input_percent_summary(::tensorflow::profiler::StepSummary* input_percent_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_percent_summary_;
  }
  if (input_percent_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_percent_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_percent_summary, submessage_arena);
    }
    
  } else {
    
  }
  input_percent_summary_ = input_percent_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.input_percent_summary)
}

// double input_percent = 11;
inline void InputPipelineAnalysisResult::clear_input_percent() {
  input_percent_ = 0;
}
inline double InputPipelineAnalysisResult::input_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.input_percent)
  return input_percent_;
}
inline void InputPipelineAnalysisResult::set_input_percent(double value) {
  
  input_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisResult.input_percent)
}

// double output_percent = 13;
inline void InputPipelineAnalysisResult::clear_output_percent() {
  output_percent_ = 0;
}
inline double InputPipelineAnalysisResult::output_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.output_percent)
  return output_percent_;
}
inline void InputPipelineAnalysisResult::set_output_percent(double value) {
  
  output_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisResult.output_percent)
}

// double idle_percent = 14;
inline void InputPipelineAnalysisResult::clear_idle_percent() {
  idle_percent_ = 0;
}
inline double InputPipelineAnalysisResult::idle_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.idle_percent)
  return idle_percent_;
}
inline void InputPipelineAnalysisResult::set_idle_percent(double value) {
  
  idle_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisResult.idle_percent)
}

// double compute_percent = 15;
inline void InputPipelineAnalysisResult::clear_compute_percent() {
  compute_percent_ = 0;
}
inline double InputPipelineAnalysisResult::compute_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.compute_percent)
  return compute_percent_;
}
inline void InputPipelineAnalysisResult::set_compute_percent(double value) {
  
  compute_percent_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisResult.compute_percent)
}

// repeated .google.protobuf.Any step_details = 4;
inline int InputPipelineAnalysisResult::step_details_size() const {
  return step_details_.size();
}
inline ::google::protobuf::Any* InputPipelineAnalysisResult::mutable_step_details(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return step_details_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
InputPipelineAnalysisResult::mutable_step_details() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return &step_details_;
}
inline const ::google::protobuf::Any& InputPipelineAnalysisResult::step_details(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return step_details_.Get(index);
}
inline ::google::protobuf::Any* InputPipelineAnalysisResult::add_step_details() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return step_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
InputPipelineAnalysisResult::step_details() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return step_details_;
}

// .tensorflow.profiler.InputTimeBreakdown input_time_breakdown = 5;
inline bool InputPipelineAnalysisResult::has_input_time_breakdown() const {
  return this != internal_default_instance() && input_time_breakdown_ != NULL;
}
inline void InputPipelineAnalysisResult::clear_input_time_breakdown() {
  if (GetArenaNoVirtual() == NULL && input_time_breakdown_ != NULL) {
    delete input_time_breakdown_;
  }
  input_time_breakdown_ = NULL;
}
inline const ::tensorflow::profiler::InputTimeBreakdown& InputPipelineAnalysisResult::_internal_input_time_breakdown() const {
  return *input_time_breakdown_;
}
inline const ::tensorflow::profiler::InputTimeBreakdown& InputPipelineAnalysisResult::input_time_breakdown() const {
  const ::tensorflow::profiler::InputTimeBreakdown* p = input_time_breakdown_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.input_time_breakdown)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::InputTimeBreakdown*>(
      &::tensorflow::profiler::_InputTimeBreakdown_default_instance_);
}
inline ::tensorflow::profiler::InputTimeBreakdown* InputPipelineAnalysisResult::release_input_time_breakdown() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.input_time_breakdown)
  
  ::tensorflow::profiler::InputTimeBreakdown* temp = input_time_breakdown_;
  input_time_breakdown_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::InputTimeBreakdown* InputPipelineAnalysisResult::mutable_input_time_breakdown() {
  
  if (input_time_breakdown_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::InputTimeBreakdown>(GetArenaNoVirtual());
    input_time_breakdown_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.input_time_breakdown)
  return input_time_breakdown_;
}
inline void InputPipelineAnalysisResult::set_allocated_input_time_breakdown(::tensorflow::profiler::InputTimeBreakdown* input_time_breakdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_time_breakdown_;
  }
  if (input_time_breakdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_time_breakdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_time_breakdown, submessage_arena);
    }
    
  } else {
    
  }
  input_time_breakdown_ = input_time_breakdown;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.input_time_breakdown)
}

// repeated .tensorflow.profiler.InputOpDetails input_op_details = 6;
inline int InputPipelineAnalysisResult::input_op_details_size() const {
  return input_op_details_.size();
}
inline void InputPipelineAnalysisResult::clear_input_op_details() {
  input_op_details_.Clear();
}
inline ::tensorflow::profiler::InputOpDetails* InputPipelineAnalysisResult::mutable_input_op_details(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return input_op_details_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails >*
InputPipelineAnalysisResult::mutable_input_op_details() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return &input_op_details_;
}
inline const ::tensorflow::profiler::InputOpDetails& InputPipelineAnalysisResult::input_op_details(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return input_op_details_.Get(index);
}
inline ::tensorflow::profiler::InputOpDetails* InputPipelineAnalysisResult::add_input_op_details() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return input_op_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails >&
InputPipelineAnalysisResult::input_op_details() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return input_op_details_;
}

// .tensorflow.profiler.InputPipelineAnalysisRecommendation recommendation = 7;
inline bool InputPipelineAnalysisResult::has_recommendation() const {
  return this != internal_default_instance() && recommendation_ != NULL;
}
inline void InputPipelineAnalysisResult::clear_recommendation() {
  if (GetArenaNoVirtual() == NULL && recommendation_ != NULL) {
    delete recommendation_;
  }
  recommendation_ = NULL;
}
inline const ::tensorflow::profiler::InputPipelineAnalysisRecommendation& InputPipelineAnalysisResult::_internal_recommendation() const {
  return *recommendation_;
}
inline const ::tensorflow::profiler::InputPipelineAnalysisRecommendation& InputPipelineAnalysisResult::recommendation() const {
  const ::tensorflow::profiler::InputPipelineAnalysisRecommendation* p = recommendation_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.recommendation)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::InputPipelineAnalysisRecommendation*>(
      &::tensorflow::profiler::_InputPipelineAnalysisRecommendation_default_instance_);
}
inline ::tensorflow::profiler::InputPipelineAnalysisRecommendation* InputPipelineAnalysisResult::release_recommendation() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.recommendation)
  
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* temp = recommendation_;
  recommendation_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::InputPipelineAnalysisRecommendation* InputPipelineAnalysisResult::mutable_recommendation() {
  
  if (recommendation_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::InputPipelineAnalysisRecommendation>(GetArenaNoVirtual());
    recommendation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.recommendation)
  return recommendation_;
}
inline void InputPipelineAnalysisResult::set_allocated_recommendation(::tensorflow::profiler::InputPipelineAnalysisRecommendation* recommendation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete recommendation_;
  }
  if (recommendation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recommendation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recommendation, submessage_arena);
    }
    
  } else {
    
  }
  recommendation_ = recommendation;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.recommendation)
}

// .google.protobuf.Any step_time_breakdown = 8;
inline bool InputPipelineAnalysisResult::has_step_time_breakdown() const {
  return this != internal_default_instance() && step_time_breakdown_ != NULL;
}
inline const ::google::protobuf::Any& InputPipelineAnalysisResult::_internal_step_time_breakdown() const {
  return *step_time_breakdown_;
}
inline const ::google::protobuf::Any& InputPipelineAnalysisResult::step_time_breakdown() const {
  const ::google::protobuf::Any* p = step_time_breakdown_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.step_time_breakdown)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* InputPipelineAnalysisResult::release_step_time_breakdown() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.step_time_breakdown)
  
  ::google::protobuf::Any* temp = step_time_breakdown_;
  step_time_breakdown_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* InputPipelineAnalysisResult::mutable_step_time_breakdown() {
  
  if (step_time_breakdown_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    step_time_breakdown_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.step_time_breakdown)
  return step_time_breakdown_;
}
inline void InputPipelineAnalysisResult::set_allocated_step_time_breakdown(::google::protobuf::Any* step_time_breakdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(step_time_breakdown_);
  }
  if (step_time_breakdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      step_time_breakdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, step_time_breakdown, submessage_arena);
    }
    
  } else {
    
  }
  step_time_breakdown_ = step_time_breakdown;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.step_time_breakdown)
}

// .tensorflow.profiler.Diagnostics diagnostics = 12;
inline bool InputPipelineAnalysisResult::has_diagnostics() const {
  return this != internal_default_instance() && diagnostics_ != NULL;
}
inline const ::tensorflow::profiler::Diagnostics& InputPipelineAnalysisResult::_internal_diagnostics() const {
  return *diagnostics_;
}
inline const ::tensorflow::profiler::Diagnostics& InputPipelineAnalysisResult::diagnostics() const {
  const ::tensorflow::profiler::Diagnostics* p = diagnostics_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.diagnostics)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::Diagnostics*>(
      &::tensorflow::profiler::_Diagnostics_default_instance_);
}
inline ::tensorflow::profiler::Diagnostics* InputPipelineAnalysisResult::release_diagnostics() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.diagnostics)
  
  ::tensorflow::profiler::Diagnostics* temp = diagnostics_;
  diagnostics_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::Diagnostics* InputPipelineAnalysisResult::mutable_diagnostics() {
  
  if (diagnostics_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::Diagnostics>(GetArenaNoVirtual());
    diagnostics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.diagnostics)
  return diagnostics_;
}
inline void InputPipelineAnalysisResult::set_allocated_diagnostics(::tensorflow::profiler::Diagnostics* diagnostics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(diagnostics_);
  }
  if (diagnostics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      diagnostics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, diagnostics, submessage_arena);
    }
    
  } else {
    
  }
  diagnostics_ = diagnostics;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.diagnostics)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace profiler
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
