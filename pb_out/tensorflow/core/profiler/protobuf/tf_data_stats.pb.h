// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/tf_data_stats.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto 

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto
namespace tensorflow {
namespace profiler {
class CombinedTfDataStats;
class CombinedTfDataStatsDefaultTypeInternal;
extern CombinedTfDataStatsDefaultTypeInternal _CombinedTfDataStats_default_instance_;
class CombinedTfDataStats_TfDataStatsEntry_DoNotUse;
class CombinedTfDataStats_TfDataStatsEntry_DoNotUseDefaultTypeInternal;
extern CombinedTfDataStats_TfDataStatsEntry_DoNotUseDefaultTypeInternal _CombinedTfDataStats_TfDataStatsEntry_DoNotUse_default_instance_;
class InputPipelineMetadata;
class InputPipelineMetadataDefaultTypeInternal;
extern InputPipelineMetadataDefaultTypeInternal _InputPipelineMetadata_default_instance_;
class InputPipelineStat;
class InputPipelineStatDefaultTypeInternal;
extern InputPipelineStatDefaultTypeInternal _InputPipelineStat_default_instance_;
class InputPipelineStat_IteratorStatsEntry_DoNotUse;
class InputPipelineStat_IteratorStatsEntry_DoNotUseDefaultTypeInternal;
extern InputPipelineStat_IteratorStatsEntry_DoNotUseDefaultTypeInternal _InputPipelineStat_IteratorStatsEntry_DoNotUse_default_instance_;
class InputPipelineStats;
class InputPipelineStatsDefaultTypeInternal;
extern InputPipelineStatsDefaultTypeInternal _InputPipelineStats_default_instance_;
class IteratorMetadata;
class IteratorMetadataDefaultTypeInternal;
extern IteratorMetadataDefaultTypeInternal _IteratorMetadata_default_instance_;
class IteratorMetadata_ParamsEntry_DoNotUse;
class IteratorMetadata_ParamsEntry_DoNotUseDefaultTypeInternal;
extern IteratorMetadata_ParamsEntry_DoNotUseDefaultTypeInternal _IteratorMetadata_ParamsEntry_DoNotUse_default_instance_;
class IteratorStat;
class IteratorStatDefaultTypeInternal;
extern IteratorStatDefaultTypeInternal _IteratorStat_default_instance_;
class TfDataBottleneckAnalysis;
class TfDataBottleneckAnalysisDefaultTypeInternal;
extern TfDataBottleneckAnalysisDefaultTypeInternal _TfDataBottleneckAnalysis_default_instance_;
class TfDataStats;
class TfDataStatsDefaultTypeInternal;
extern TfDataStatsDefaultTypeInternal _TfDataStats_default_instance_;
class TfDataStats_InputPipelinesEntry_DoNotUse;
class TfDataStats_InputPipelinesEntry_DoNotUseDefaultTypeInternal;
extern TfDataStats_InputPipelinesEntry_DoNotUseDefaultTypeInternal _TfDataStats_InputPipelinesEntry_DoNotUse_default_instance_;
class TfDataStats_IteratorMetadataEntry_DoNotUse;
class TfDataStats_IteratorMetadataEntry_DoNotUseDefaultTypeInternal;
extern TfDataStats_IteratorMetadataEntry_DoNotUseDefaultTypeInternal _TfDataStats_IteratorMetadataEntry_DoNotUse_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::profiler::CombinedTfDataStats* Arena::CreateMaybeMessage<::tensorflow::profiler::CombinedTfDataStats>(Arena*);
template<> ::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse>(Arena*);
template<> ::tensorflow::profiler::InputPipelineMetadata* Arena::CreateMaybeMessage<::tensorflow::profiler::InputPipelineMetadata>(Arena*);
template<> ::tensorflow::profiler::InputPipelineStat* Arena::CreateMaybeMessage<::tensorflow::profiler::InputPipelineStat>(Arena*);
template<> ::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse>(Arena*);
template<> ::tensorflow::profiler::InputPipelineStats* Arena::CreateMaybeMessage<::tensorflow::profiler::InputPipelineStats>(Arena*);
template<> ::tensorflow::profiler::IteratorMetadata* Arena::CreateMaybeMessage<::tensorflow::profiler::IteratorMetadata>(Arena*);
template<> ::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse>(Arena*);
template<> ::tensorflow::profiler::IteratorStat* Arena::CreateMaybeMessage<::tensorflow::profiler::IteratorStat>(Arena*);
template<> ::tensorflow::profiler::TfDataBottleneckAnalysis* Arena::CreateMaybeMessage<::tensorflow::profiler::TfDataBottleneckAnalysis>(Arena*);
template<> ::tensorflow::profiler::TfDataStats* Arena::CreateMaybeMessage<::tensorflow::profiler::TfDataStats>(Arena*);
template<> ::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse>(Arena*);
template<> ::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace profiler {

enum InputPipelineMetadata_InputPipelineType {
  InputPipelineMetadata_InputPipelineType_HOST = 0,
  InputPipelineMetadata_InputPipelineType_DEVICE = 1,
  InputPipelineMetadata_InputPipelineType_InputPipelineMetadata_InputPipelineType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InputPipelineMetadata_InputPipelineType_InputPipelineMetadata_InputPipelineType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InputPipelineMetadata_InputPipelineType_IsValid(int value);
const InputPipelineMetadata_InputPipelineType InputPipelineMetadata_InputPipelineType_InputPipelineType_MIN = InputPipelineMetadata_InputPipelineType_HOST;
const InputPipelineMetadata_InputPipelineType InputPipelineMetadata_InputPipelineType_InputPipelineType_MAX = InputPipelineMetadata_InputPipelineType_DEVICE;
const int InputPipelineMetadata_InputPipelineType_InputPipelineType_ARRAYSIZE = InputPipelineMetadata_InputPipelineType_InputPipelineType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InputPipelineMetadata_InputPipelineType_descriptor();
inline const ::std::string& InputPipelineMetadata_InputPipelineType_Name(InputPipelineMetadata_InputPipelineType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InputPipelineMetadata_InputPipelineType_descriptor(), value);
}
inline bool InputPipelineMetadata_InputPipelineType_Parse(
    const ::std::string& name, InputPipelineMetadata_InputPipelineType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InputPipelineMetadata_InputPipelineType>(
    InputPipelineMetadata_InputPipelineType_descriptor(), name, value);
}
// ===================================================================

class IteratorStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.IteratorStat) */ {
 public:
  IteratorStat();
  virtual ~IteratorStat();

  IteratorStat(const IteratorStat& from);

  inline IteratorStat& operator=(const IteratorStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IteratorStat(IteratorStat&& from) noexcept
    : IteratorStat() {
    *this = ::std::move(from);
  }

  inline IteratorStat& operator=(IteratorStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IteratorStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IteratorStat* internal_default_instance() {
    return reinterpret_cast<const IteratorStat*>(
               &_IteratorStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(IteratorStat* other);
  friend void swap(IteratorStat& a, IteratorStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IteratorStat* New() const final {
    return CreateMaybeMessage<IteratorStat>(NULL);
  }

  IteratorStat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IteratorStat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IteratorStat& from);
  void MergeFrom(const IteratorStat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IteratorStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 start_time_ps = 2;
  void clear_start_time_ps();
  static const int kStartTimePsFieldNumber = 2;
  ::google::protobuf::int64 start_time_ps() const;
  void set_start_time_ps(::google::protobuf::int64 value);

  // int64 duration_ps = 3;
  void clear_duration_ps();
  static const int kDurationPsFieldNumber = 3;
  ::google::protobuf::int64 duration_ps() const;
  void set_duration_ps(::google::protobuf::int64 value);

  // int64 self_time_ps = 4;
  void clear_self_time_ps();
  static const int kSelfTimePsFieldNumber = 4;
  ::google::protobuf::int64 self_time_ps() const;
  void set_self_time_ps(::google::protobuf::int64 value);

  // int64 num_calls = 6;
  void clear_num_calls();
  static const int kNumCallsFieldNumber = 6;
  ::google::protobuf::int64 num_calls() const;
  void set_num_calls(::google::protobuf::int64 value);

  // bool is_blocking = 5;
  void clear_is_blocking();
  static const int kIsBlockingFieldNumber = 5;
  bool is_blocking() const;
  void set_is_blocking(bool value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.IteratorStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 start_time_ps_;
  ::google::protobuf::int64 duration_ps_;
  ::google::protobuf::int64 self_time_ps_;
  ::google::protobuf::int64 num_calls_;
  bool is_blocking_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IteratorMetadata_ParamsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<IteratorMetadata_ParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<IteratorMetadata_ParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  IteratorMetadata_ParamsEntry_DoNotUse();
  IteratorMetadata_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const IteratorMetadata_ParamsEntry_DoNotUse& other);
  static const IteratorMetadata_ParamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const IteratorMetadata_ParamsEntry_DoNotUse*>(&_IteratorMetadata_ParamsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class IteratorMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.IteratorMetadata) */ {
 public:
  IteratorMetadata();
  virtual ~IteratorMetadata();

  IteratorMetadata(const IteratorMetadata& from);

  inline IteratorMetadata& operator=(const IteratorMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IteratorMetadata(IteratorMetadata&& from) noexcept
    : IteratorMetadata() {
    *this = ::std::move(from);
  }

  inline IteratorMetadata& operator=(IteratorMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IteratorMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IteratorMetadata* internal_default_instance() {
    return reinterpret_cast<const IteratorMetadata*>(
               &_IteratorMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IteratorMetadata* other);
  friend void swap(IteratorMetadata& a, IteratorMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IteratorMetadata* New() const final {
    return CreateMaybeMessage<IteratorMetadata>(NULL);
  }

  IteratorMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IteratorMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IteratorMetadata& from);
  void MergeFrom(const IteratorMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IteratorMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> params = 5;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      params() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_params();

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string long_name = 6;
  void clear_long_name();
  static const int kLongNameFieldNumber = 6;
  const ::std::string& long_name() const;
  void set_long_name(const ::std::string& value);
  #if LANG_CXX11
  void set_long_name(::std::string&& value);
  #endif
  void set_long_name(const char* value);
  void set_long_name(const char* value, size_t size);
  ::std::string* mutable_long_name();
  ::std::string* release_long_name();
  void set_allocated_long_name(::std::string* long_name);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 parent_id = 2;
  void clear_parent_id();
  static const int kParentIdFieldNumber = 2;
  ::google::protobuf::int64 parent_id() const;
  void set_parent_id(::google::protobuf::int64 value);

  // bool is_async = 4;
  void clear_is_async();
  static const int kIsAsyncFieldNumber = 4;
  bool is_async() const;
  void set_is_async(bool value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.IteratorMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      IteratorMetadata_ParamsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > params_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr long_name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 parent_id_;
  bool is_async_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputPipelineStat_IteratorStatsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<InputPipelineStat_IteratorStatsEntry_DoNotUse, 
    ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<InputPipelineStat_IteratorStatsEntry_DoNotUse, 
    ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  InputPipelineStat_IteratorStatsEntry_DoNotUse();
  InputPipelineStat_IteratorStatsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InputPipelineStat_IteratorStatsEntry_DoNotUse& other);
  static const InputPipelineStat_IteratorStatsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InputPipelineStat_IteratorStatsEntry_DoNotUse*>(&_InputPipelineStat_IteratorStatsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class InputPipelineStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputPipelineStat) */ {
 public:
  InputPipelineStat();
  virtual ~InputPipelineStat();

  InputPipelineStat(const InputPipelineStat& from);

  inline InputPipelineStat& operator=(const InputPipelineStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputPipelineStat(InputPipelineStat&& from) noexcept
    : InputPipelineStat() {
    *this = ::std::move(from);
  }

  inline InputPipelineStat& operator=(InputPipelineStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputPipelineStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputPipelineStat* internal_default_instance() {
    return reinterpret_cast<const InputPipelineStat*>(
               &_InputPipelineStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(InputPipelineStat* other);
  friend void swap(InputPipelineStat& a, InputPipelineStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputPipelineStat* New() const final {
    return CreateMaybeMessage<InputPipelineStat>(NULL);
  }

  InputPipelineStat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputPipelineStat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputPipelineStat& from);
  void MergeFrom(const InputPipelineStat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputPipelineStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, .tensorflow.profiler.IteratorStat> iterator_stats = 1;
  int iterator_stats_size() const;
  void clear_iterator_stats();
  static const int kIteratorStatsFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >&
      iterator_stats() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >*
      mutable_iterator_stats();

  // int64 bottleneck_iterator_id = 2;
  void clear_bottleneck_iterator_id();
  static const int kBottleneckIteratorIdFieldNumber = 2;
  ::google::protobuf::int64 bottleneck_iterator_id() const;
  void set_bottleneck_iterator_id(::google::protobuf::int64 value);

  // int64 bottleneck_iterator_latency_ps = 3;
  void clear_bottleneck_iterator_latency_ps();
  static const int kBottleneckIteratorLatencyPsFieldNumber = 3;
  ::google::protobuf::int64 bottleneck_iterator_latency_ps() const;
  void set_bottleneck_iterator_latency_ps(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputPipelineStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      InputPipelineStat_IteratorStatsEntry_DoNotUse,
      ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > iterator_stats_;
  ::google::protobuf::int64 bottleneck_iterator_id_;
  ::google::protobuf::int64 bottleneck_iterator_latency_ps_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputPipelineMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputPipelineMetadata) */ {
 public:
  InputPipelineMetadata();
  virtual ~InputPipelineMetadata();

  InputPipelineMetadata(const InputPipelineMetadata& from);

  inline InputPipelineMetadata& operator=(const InputPipelineMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputPipelineMetadata(InputPipelineMetadata&& from) noexcept
    : InputPipelineMetadata() {
    *this = ::std::move(from);
  }

  inline InputPipelineMetadata& operator=(InputPipelineMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputPipelineMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputPipelineMetadata* internal_default_instance() {
    return reinterpret_cast<const InputPipelineMetadata*>(
               &_InputPipelineMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(InputPipelineMetadata* other);
  friend void swap(InputPipelineMetadata& a, InputPipelineMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputPipelineMetadata* New() const final {
    return CreateMaybeMessage<InputPipelineMetadata>(NULL);
  }

  InputPipelineMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputPipelineMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputPipelineMetadata& from);
  void MergeFrom(const InputPipelineMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputPipelineMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InputPipelineMetadata_InputPipelineType InputPipelineType;
  static const InputPipelineType HOST =
    InputPipelineMetadata_InputPipelineType_HOST;
  static const InputPipelineType DEVICE =
    InputPipelineMetadata_InputPipelineType_DEVICE;
  static inline bool InputPipelineType_IsValid(int value) {
    return InputPipelineMetadata_InputPipelineType_IsValid(value);
  }
  static const InputPipelineType InputPipelineType_MIN =
    InputPipelineMetadata_InputPipelineType_InputPipelineType_MIN;
  static const InputPipelineType InputPipelineType_MAX =
    InputPipelineMetadata_InputPipelineType_InputPipelineType_MAX;
  static const int InputPipelineType_ARRAYSIZE =
    InputPipelineMetadata_InputPipelineType_InputPipelineType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InputPipelineType_descriptor() {
    return InputPipelineMetadata_InputPipelineType_descriptor();
  }
  static inline const ::std::string& InputPipelineType_Name(InputPipelineType value) {
    return InputPipelineMetadata_InputPipelineType_Name(value);
  }
  static inline bool InputPipelineType_Parse(const ::std::string& name,
      InputPipelineType* value) {
    return InputPipelineMetadata_InputPipelineType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // .tensorflow.profiler.InputPipelineMetadata.InputPipelineType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::tensorflow::profiler::InputPipelineMetadata_InputPipelineType type() const;
  void set_type(::tensorflow::profiler::InputPipelineMetadata_InputPipelineType value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputPipelineMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 id_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputPipelineStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputPipelineStats) */ {
 public:
  InputPipelineStats();
  virtual ~InputPipelineStats();

  InputPipelineStats(const InputPipelineStats& from);

  inline InputPipelineStats& operator=(const InputPipelineStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputPipelineStats(InputPipelineStats&& from) noexcept
    : InputPipelineStats() {
    *this = ::std::move(from);
  }

  inline InputPipelineStats& operator=(InputPipelineStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputPipelineStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputPipelineStats* internal_default_instance() {
    return reinterpret_cast<const InputPipelineStats*>(
               &_InputPipelineStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(InputPipelineStats* other);
  friend void swap(InputPipelineStats& a, InputPipelineStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputPipelineStats* New() const final {
    return CreateMaybeMessage<InputPipelineStats>(NULL);
  }

  InputPipelineStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputPipelineStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputPipelineStats& from);
  void MergeFrom(const InputPipelineStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputPipelineStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensorflow.profiler.InputPipelineStat stats = 2;
  int stats_size() const;
  void clear_stats();
  static const int kStatsFieldNumber = 2;
  ::tensorflow::profiler::InputPipelineStat* mutable_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputPipelineStat >*
      mutable_stats();
  const ::tensorflow::profiler::InputPipelineStat& stats(int index) const;
  ::tensorflow::profiler::InputPipelineStat* add_stats();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputPipelineStat >&
      stats() const;

  // .tensorflow.profiler.InputPipelineMetadata metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  private:
  const ::tensorflow::profiler::InputPipelineMetadata& _internal_metadata() const;
  public:
  const ::tensorflow::profiler::InputPipelineMetadata& metadata() const;
  ::tensorflow::profiler::InputPipelineMetadata* release_metadata();
  ::tensorflow::profiler::InputPipelineMetadata* mutable_metadata();
  void set_allocated_metadata(::tensorflow::profiler::InputPipelineMetadata* metadata);

  // int64 avg_latency_ps = 3;
  void clear_avg_latency_ps();
  static const int kAvgLatencyPsFieldNumber = 3;
  ::google::protobuf::int64 avg_latency_ps() const;
  void set_avg_latency_ps(::google::protobuf::int64 value);

  // int64 min_latency_ps = 4;
  void clear_min_latency_ps();
  static const int kMinLatencyPsFieldNumber = 4;
  ::google::protobuf::int64 min_latency_ps() const;
  void set_min_latency_ps(::google::protobuf::int64 value);

  // int64 max_latency_ps = 5;
  void clear_max_latency_ps();
  static const int kMaxLatencyPsFieldNumber = 5;
  ::google::protobuf::int64 max_latency_ps() const;
  void set_max_latency_ps(::google::protobuf::int64 value);

  // int64 num_slow_calls = 6;
  void clear_num_slow_calls();
  static const int kNumSlowCallsFieldNumber = 6;
  ::google::protobuf::int64 num_slow_calls() const;
  void set_num_slow_calls(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputPipelineStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputPipelineStat > stats_;
  ::tensorflow::profiler::InputPipelineMetadata* metadata_;
  ::google::protobuf::int64 avg_latency_ps_;
  ::google::protobuf::int64 min_latency_ps_;
  ::google::protobuf::int64 max_latency_ps_;
  ::google::protobuf::int64 num_slow_calls_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TfDataStats_IteratorMetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TfDataStats_IteratorMetadataEntry_DoNotUse, 
    ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TfDataStats_IteratorMetadataEntry_DoNotUse, 
    ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TfDataStats_IteratorMetadataEntry_DoNotUse();
  TfDataStats_IteratorMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TfDataStats_IteratorMetadataEntry_DoNotUse& other);
  static const TfDataStats_IteratorMetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TfDataStats_IteratorMetadataEntry_DoNotUse*>(&_TfDataStats_IteratorMetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TfDataStats_InputPipelinesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TfDataStats_InputPipelinesEntry_DoNotUse, 
    ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TfDataStats_InputPipelinesEntry_DoNotUse, 
    ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TfDataStats_InputPipelinesEntry_DoNotUse();
  TfDataStats_InputPipelinesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TfDataStats_InputPipelinesEntry_DoNotUse& other);
  static const TfDataStats_InputPipelinesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TfDataStats_InputPipelinesEntry_DoNotUse*>(&_TfDataStats_InputPipelinesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TfDataStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.TfDataStats) */ {
 public:
  TfDataStats();
  virtual ~TfDataStats();

  TfDataStats(const TfDataStats& from);

  inline TfDataStats& operator=(const TfDataStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TfDataStats(TfDataStats&& from) noexcept
    : TfDataStats() {
    *this = ::std::move(from);
  }

  inline TfDataStats& operator=(TfDataStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TfDataStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TfDataStats* internal_default_instance() {
    return reinterpret_cast<const TfDataStats*>(
               &_TfDataStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(TfDataStats* other);
  friend void swap(TfDataStats& a, TfDataStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TfDataStats* New() const final {
    return CreateMaybeMessage<TfDataStats>(NULL);
  }

  TfDataStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TfDataStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TfDataStats& from);
  void MergeFrom(const TfDataStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TfDataStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, .tensorflow.profiler.InputPipelineStats> input_pipelines = 1;
  int input_pipelines_size() const;
  void clear_input_pipelines();
  static const int kInputPipelinesFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >&
      input_pipelines() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >*
      mutable_input_pipelines();

  // map<int64, .tensorflow.profiler.IteratorMetadata> iterator_metadata = 2;
  int iterator_metadata_size() const;
  void clear_iterator_metadata();
  static const int kIteratorMetadataFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >&
      iterator_metadata() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >*
      mutable_iterator_metadata();

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.TfDataStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      TfDataStats_InputPipelinesEntry_DoNotUse,
      ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > input_pipelines_;
  ::google::protobuf::internal::MapField<
      TfDataStats_IteratorMetadataEntry_DoNotUse,
      ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > iterator_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TfDataBottleneckAnalysis : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.TfDataBottleneckAnalysis) */ {
 public:
  TfDataBottleneckAnalysis();
  virtual ~TfDataBottleneckAnalysis();

  TfDataBottleneckAnalysis(const TfDataBottleneckAnalysis& from);

  inline TfDataBottleneckAnalysis& operator=(const TfDataBottleneckAnalysis& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TfDataBottleneckAnalysis(TfDataBottleneckAnalysis&& from) noexcept
    : TfDataBottleneckAnalysis() {
    *this = ::std::move(from);
  }

  inline TfDataBottleneckAnalysis& operator=(TfDataBottleneckAnalysis&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TfDataBottleneckAnalysis& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TfDataBottleneckAnalysis* internal_default_instance() {
    return reinterpret_cast<const TfDataBottleneckAnalysis*>(
               &_TfDataBottleneckAnalysis_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(TfDataBottleneckAnalysis* other);
  friend void swap(TfDataBottleneckAnalysis& a, TfDataBottleneckAnalysis& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TfDataBottleneckAnalysis* New() const final {
    return CreateMaybeMessage<TfDataBottleneckAnalysis>(NULL);
  }

  TfDataBottleneckAnalysis* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TfDataBottleneckAnalysis>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TfDataBottleneckAnalysis& from);
  void MergeFrom(const TfDataBottleneckAnalysis& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TfDataBottleneckAnalysis* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 1;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // string input_pipeline = 2;
  void clear_input_pipeline();
  static const int kInputPipelineFieldNumber = 2;
  const ::std::string& input_pipeline() const;
  void set_input_pipeline(const ::std::string& value);
  #if LANG_CXX11
  void set_input_pipeline(::std::string&& value);
  #endif
  void set_input_pipeline(const char* value);
  void set_input_pipeline(const char* value, size_t size);
  ::std::string* mutable_input_pipeline();
  ::std::string* release_input_pipeline();
  void set_allocated_input_pipeline(::std::string* input_pipeline);

  // string iterator_name = 4;
  void clear_iterator_name();
  static const int kIteratorNameFieldNumber = 4;
  const ::std::string& iterator_name() const;
  void set_iterator_name(const ::std::string& value);
  #if LANG_CXX11
  void set_iterator_name(::std::string&& value);
  #endif
  void set_iterator_name(const char* value);
  void set_iterator_name(const char* value, size_t size);
  ::std::string* mutable_iterator_name();
  ::std::string* release_iterator_name();
  void set_allocated_iterator_name(::std::string* iterator_name);

  // string iterator_long_name = 5;
  void clear_iterator_long_name();
  static const int kIteratorLongNameFieldNumber = 5;
  const ::std::string& iterator_long_name() const;
  void set_iterator_long_name(const ::std::string& value);
  #if LANG_CXX11
  void set_iterator_long_name(::std::string&& value);
  #endif
  void set_iterator_long_name(const char* value);
  void set_iterator_long_name(const char* value, size_t size);
  ::std::string* mutable_iterator_long_name();
  ::std::string* release_iterator_long_name();
  void set_allocated_iterator_long_name(::std::string* iterator_long_name);

  // string suggestion = 6;
  void clear_suggestion();
  static const int kSuggestionFieldNumber = 6;
  const ::std::string& suggestion() const;
  void set_suggestion(const ::std::string& value);
  #if LANG_CXX11
  void set_suggestion(::std::string&& value);
  #endif
  void set_suggestion(const char* value);
  void set_suggestion(const char* value, size_t size);
  ::std::string* mutable_suggestion();
  ::std::string* release_suggestion();
  void set_allocated_suggestion(::std::string* suggestion);

  // int64 max_latency_ps = 3;
  void clear_max_latency_ps();
  static const int kMaxLatencyPsFieldNumber = 3;
  ::google::protobuf::int64 max_latency_ps() const;
  void set_max_latency_ps(::google::protobuf::int64 value);

  // int64 iterator_latency_ps = 7;
  void clear_iterator_latency_ps();
  static const int kIteratorLatencyPsFieldNumber = 7;
  ::google::protobuf::int64 iterator_latency_ps() const;
  void set_iterator_latency_ps(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.TfDataBottleneckAnalysis)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr input_pipeline_;
  ::google::protobuf::internal::ArenaStringPtr iterator_name_;
  ::google::protobuf::internal::ArenaStringPtr iterator_long_name_;
  ::google::protobuf::internal::ArenaStringPtr suggestion_;
  ::google::protobuf::int64 max_latency_ps_;
  ::google::protobuf::int64 iterator_latency_ps_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombinedTfDataStats_TfDataStatsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<CombinedTfDataStats_TfDataStatsEntry_DoNotUse, 
    ::std::string, ::tensorflow::profiler::TfDataStats,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<CombinedTfDataStats_TfDataStatsEntry_DoNotUse, 
    ::std::string, ::tensorflow::profiler::TfDataStats,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  CombinedTfDataStats_TfDataStatsEntry_DoNotUse();
  CombinedTfDataStats_TfDataStatsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const CombinedTfDataStats_TfDataStatsEntry_DoNotUse& other);
  static const CombinedTfDataStats_TfDataStatsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CombinedTfDataStats_TfDataStatsEntry_DoNotUse*>(&_CombinedTfDataStats_TfDataStatsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class CombinedTfDataStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.CombinedTfDataStats) */ {
 public:
  CombinedTfDataStats();
  virtual ~CombinedTfDataStats();

  CombinedTfDataStats(const CombinedTfDataStats& from);

  inline CombinedTfDataStats& operator=(const CombinedTfDataStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CombinedTfDataStats(CombinedTfDataStats&& from) noexcept
    : CombinedTfDataStats() {
    *this = ::std::move(from);
  }

  inline CombinedTfDataStats& operator=(CombinedTfDataStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CombinedTfDataStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CombinedTfDataStats* internal_default_instance() {
    return reinterpret_cast<const CombinedTfDataStats*>(
               &_CombinedTfDataStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CombinedTfDataStats* other);
  friend void swap(CombinedTfDataStats& a, CombinedTfDataStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CombinedTfDataStats* New() const final {
    return CreateMaybeMessage<CombinedTfDataStats>(NULL);
  }

  CombinedTfDataStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CombinedTfDataStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CombinedTfDataStats& from);
  void MergeFrom(const CombinedTfDataStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CombinedTfDataStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .tensorflow.profiler.TfDataBottleneckAnalysis bottleneck_analysis = 1;
  int bottleneck_analysis_size() const;
  void clear_bottleneck_analysis();
  static const int kBottleneckAnalysisFieldNumber = 1;
  ::tensorflow::profiler::TfDataBottleneckAnalysis* mutable_bottleneck_analysis(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::TfDataBottleneckAnalysis >*
      mutable_bottleneck_analysis();
  const ::tensorflow::profiler::TfDataBottleneckAnalysis& bottleneck_analysis(int index) const;
  ::tensorflow::profiler::TfDataBottleneckAnalysis* add_bottleneck_analysis();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::TfDataBottleneckAnalysis >&
      bottleneck_analysis() const;

  // map<string, .tensorflow.profiler.TfDataStats> tf_data_stats = 2;
  int tf_data_stats_size() const;
  void clear_tf_data_stats();
  static const int kTfDataStatsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >&
      tf_data_stats() const;
  ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >*
      mutable_tf_data_stats();

  // string summary = 4;
  void clear_summary();
  static const int kSummaryFieldNumber = 4;
  const ::std::string& summary() const;
  void set_summary(const ::std::string& value);
  #if LANG_CXX11
  void set_summary(::std::string&& value);
  #endif
  void set_summary(const char* value);
  void set_summary(const char* value, size_t size);
  ::std::string* mutable_summary();
  ::std::string* release_summary();
  void set_allocated_summary(::std::string* summary);

  // bool is_input_bound = 3;
  void clear_is_input_bound();
  static const int kIsInputBoundFieldNumber = 3;
  bool is_input_bound() const;
  void set_is_input_bound(bool value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.CombinedTfDataStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::TfDataBottleneckAnalysis > bottleneck_analysis_;
  ::google::protobuf::internal::MapField<
      CombinedTfDataStats_TfDataStatsEntry_DoNotUse,
      ::std::string, ::tensorflow::profiler::TfDataStats,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > tf_data_stats_;
  ::google::protobuf::internal::ArenaStringPtr summary_;
  bool is_input_bound_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IteratorStat

// int64 id = 1;
inline void IteratorStat::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IteratorStat::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorStat.id)
  return id_;
}
inline void IteratorStat::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorStat.id)
}

// int64 start_time_ps = 2;
inline void IteratorStat::clear_start_time_ps() {
  start_time_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IteratorStat::start_time_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorStat.start_time_ps)
  return start_time_ps_;
}
inline void IteratorStat::set_start_time_ps(::google::protobuf::int64 value) {
  
  start_time_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorStat.start_time_ps)
}

// int64 duration_ps = 3;
inline void IteratorStat::clear_duration_ps() {
  duration_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IteratorStat::duration_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorStat.duration_ps)
  return duration_ps_;
}
inline void IteratorStat::set_duration_ps(::google::protobuf::int64 value) {
  
  duration_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorStat.duration_ps)
}

// int64 self_time_ps = 4;
inline void IteratorStat::clear_self_time_ps() {
  self_time_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IteratorStat::self_time_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorStat.self_time_ps)
  return self_time_ps_;
}
inline void IteratorStat::set_self_time_ps(::google::protobuf::int64 value) {
  
  self_time_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorStat.self_time_ps)
}

// bool is_blocking = 5;
inline void IteratorStat::clear_is_blocking() {
  is_blocking_ = false;
}
inline bool IteratorStat::is_blocking() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorStat.is_blocking)
  return is_blocking_;
}
inline void IteratorStat::set_is_blocking(bool value) {
  
  is_blocking_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorStat.is_blocking)
}

// int64 num_calls = 6;
inline void IteratorStat::clear_num_calls() {
  num_calls_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IteratorStat::num_calls() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorStat.num_calls)
  return num_calls_;
}
inline void IteratorStat::set_num_calls(::google::protobuf::int64 value) {
  
  num_calls_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorStat.num_calls)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// IteratorMetadata

// int64 id = 1;
inline void IteratorMetadata::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IteratorMetadata::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorMetadata.id)
  return id_;
}
inline void IteratorMetadata::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorMetadata.id)
}

// int64 parent_id = 2;
inline void IteratorMetadata::clear_parent_id() {
  parent_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IteratorMetadata::parent_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorMetadata.parent_id)
  return parent_id_;
}
inline void IteratorMetadata::set_parent_id(::google::protobuf::int64 value) {
  
  parent_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorMetadata.parent_id)
}

// string name = 3;
inline void IteratorMetadata::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IteratorMetadata::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorMetadata.name)
  return name_.GetNoArena();
}
inline void IteratorMetadata::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorMetadata.name)
}
#if LANG_CXX11
inline void IteratorMetadata::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.IteratorMetadata.name)
}
#endif
inline void IteratorMetadata::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.IteratorMetadata.name)
}
inline void IteratorMetadata::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.IteratorMetadata.name)
}
inline ::std::string* IteratorMetadata::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.IteratorMetadata.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IteratorMetadata::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.IteratorMetadata.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IteratorMetadata::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.IteratorMetadata.name)
}

// string long_name = 6;
inline void IteratorMetadata::clear_long_name() {
  long_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IteratorMetadata::long_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorMetadata.long_name)
  return long_name_.GetNoArena();
}
inline void IteratorMetadata::set_long_name(const ::std::string& value) {
  
  long_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorMetadata.long_name)
}
#if LANG_CXX11
inline void IteratorMetadata::set_long_name(::std::string&& value) {
  
  long_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.IteratorMetadata.long_name)
}
#endif
inline void IteratorMetadata::set_long_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  long_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.IteratorMetadata.long_name)
}
inline void IteratorMetadata::set_long_name(const char* value, size_t size) {
  
  long_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.IteratorMetadata.long_name)
}
inline ::std::string* IteratorMetadata::mutable_long_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.IteratorMetadata.long_name)
  return long_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IteratorMetadata::release_long_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.IteratorMetadata.long_name)
  
  return long_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IteratorMetadata::set_allocated_long_name(::std::string* long_name) {
  if (long_name != NULL) {
    
  } else {
    
  }
  long_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), long_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.IteratorMetadata.long_name)
}

// bool is_async = 4;
inline void IteratorMetadata::clear_is_async() {
  is_async_ = false;
}
inline bool IteratorMetadata::is_async() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.IteratorMetadata.is_async)
  return is_async_;
}
inline void IteratorMetadata::set_is_async(bool value) {
  
  is_async_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.IteratorMetadata.is_async)
}

// map<string, string> params = 5;
inline int IteratorMetadata::params_size() const {
  return params_.size();
}
inline void IteratorMetadata::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
IteratorMetadata::params() const {
  // @@protoc_insertion_point(field_map:tensorflow.profiler.IteratorMetadata.params)
  return params_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
IteratorMetadata::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.profiler.IteratorMetadata.params)
  return params_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InputPipelineStat

// int64 bottleneck_iterator_id = 2;
inline void InputPipelineStat::clear_bottleneck_iterator_id() {
  bottleneck_iterator_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputPipelineStat::bottleneck_iterator_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineStat.bottleneck_iterator_id)
  return bottleneck_iterator_id_;
}
inline void InputPipelineStat::set_bottleneck_iterator_id(::google::protobuf::int64 value) {
  
  bottleneck_iterator_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineStat.bottleneck_iterator_id)
}

// int64 bottleneck_iterator_latency_ps = 3;
inline void InputPipelineStat::clear_bottleneck_iterator_latency_ps() {
  bottleneck_iterator_latency_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputPipelineStat::bottleneck_iterator_latency_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineStat.bottleneck_iterator_latency_ps)
  return bottleneck_iterator_latency_ps_;
}
inline void InputPipelineStat::set_bottleneck_iterator_latency_ps(::google::protobuf::int64 value) {
  
  bottleneck_iterator_latency_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineStat.bottleneck_iterator_latency_ps)
}

// map<int64, .tensorflow.profiler.IteratorStat> iterator_stats = 1;
inline int InputPipelineStat::iterator_stats_size() const {
  return iterator_stats_.size();
}
inline void InputPipelineStat::clear_iterator_stats() {
  iterator_stats_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >&
InputPipelineStat::iterator_stats() const {
  // @@protoc_insertion_point(field_map:tensorflow.profiler.InputPipelineStat.iterator_stats)
  return iterator_stats_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >*
InputPipelineStat::mutable_iterator_stats() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.profiler.InputPipelineStat.iterator_stats)
  return iterator_stats_.MutableMap();
}

// -------------------------------------------------------------------

// InputPipelineMetadata

// int64 id = 1;
inline void InputPipelineMetadata::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputPipelineMetadata::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineMetadata.id)
  return id_;
}
inline void InputPipelineMetadata::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineMetadata.id)
}

// .tensorflow.profiler.InputPipelineMetadata.InputPipelineType type = 2;
inline void InputPipelineMetadata::clear_type() {
  type_ = 0;
}
inline ::tensorflow::profiler::InputPipelineMetadata_InputPipelineType InputPipelineMetadata::type() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineMetadata.type)
  return static_cast< ::tensorflow::profiler::InputPipelineMetadata_InputPipelineType >(type_);
}
inline void InputPipelineMetadata::set_type(::tensorflow::profiler::InputPipelineMetadata_InputPipelineType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineMetadata.type)
}

// string name = 4;
inline void InputPipelineMetadata::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputPipelineMetadata::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineMetadata.name)
  return name_.GetNoArena();
}
inline void InputPipelineMetadata::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineMetadata.name)
}
#if LANG_CXX11
inline void InputPipelineMetadata::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.InputPipelineMetadata.name)
}
#endif
inline void InputPipelineMetadata::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputPipelineMetadata.name)
}
inline void InputPipelineMetadata::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputPipelineMetadata.name)
}
inline ::std::string* InputPipelineMetadata::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineMetadata.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputPipelineMetadata::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineMetadata.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputPipelineMetadata::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineMetadata.name)
}

// -------------------------------------------------------------------

// InputPipelineStats

// .tensorflow.profiler.InputPipelineMetadata metadata = 1;
inline bool InputPipelineStats::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
inline void InputPipelineStats::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
}
inline const ::tensorflow::profiler::InputPipelineMetadata& InputPipelineStats::_internal_metadata() const {
  return *metadata_;
}
inline const ::tensorflow::profiler::InputPipelineMetadata& InputPipelineStats::metadata() const {
  const ::tensorflow::profiler::InputPipelineMetadata* p = metadata_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineStats.metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::InputPipelineMetadata*>(
      &::tensorflow::profiler::_InputPipelineMetadata_default_instance_);
}
inline ::tensorflow::profiler::InputPipelineMetadata* InputPipelineStats::release_metadata() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineStats.metadata)
  
  ::tensorflow::profiler::InputPipelineMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::InputPipelineMetadata* InputPipelineStats::mutable_metadata() {
  
  if (metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::InputPipelineMetadata>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineStats.metadata)
  return metadata_;
}
inline void InputPipelineStats::set_allocated_metadata(::tensorflow::profiler::InputPipelineMetadata* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete metadata_;
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineStats.metadata)
}

// int64 avg_latency_ps = 3;
inline void InputPipelineStats::clear_avg_latency_ps() {
  avg_latency_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputPipelineStats::avg_latency_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineStats.avg_latency_ps)
  return avg_latency_ps_;
}
inline void InputPipelineStats::set_avg_latency_ps(::google::protobuf::int64 value) {
  
  avg_latency_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineStats.avg_latency_ps)
}

// int64 min_latency_ps = 4;
inline void InputPipelineStats::clear_min_latency_ps() {
  min_latency_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputPipelineStats::min_latency_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineStats.min_latency_ps)
  return min_latency_ps_;
}
inline void InputPipelineStats::set_min_latency_ps(::google::protobuf::int64 value) {
  
  min_latency_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineStats.min_latency_ps)
}

// int64 max_latency_ps = 5;
inline void InputPipelineStats::clear_max_latency_ps() {
  max_latency_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputPipelineStats::max_latency_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineStats.max_latency_ps)
  return max_latency_ps_;
}
inline void InputPipelineStats::set_max_latency_ps(::google::protobuf::int64 value) {
  
  max_latency_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineStats.max_latency_ps)
}

// int64 num_slow_calls = 6;
inline void InputPipelineStats::clear_num_slow_calls() {
  num_slow_calls_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputPipelineStats::num_slow_calls() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineStats.num_slow_calls)
  return num_slow_calls_;
}
inline void InputPipelineStats::set_num_slow_calls(::google::protobuf::int64 value) {
  
  num_slow_calls_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineStats.num_slow_calls)
}

// repeated .tensorflow.profiler.InputPipelineStat stats = 2;
inline int InputPipelineStats::stats_size() const {
  return stats_.size();
}
inline void InputPipelineStats::clear_stats() {
  stats_.Clear();
}
inline ::tensorflow::profiler::InputPipelineStat* InputPipelineStats::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineStats.stats)
  return stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputPipelineStat >*
InputPipelineStats::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.InputPipelineStats.stats)
  return &stats_;
}
inline const ::tensorflow::profiler::InputPipelineStat& InputPipelineStats::stats(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineStats.stats)
  return stats_.Get(index);
}
inline ::tensorflow::profiler::InputPipelineStat* InputPipelineStats::add_stats() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineStats.stats)
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::InputPipelineStat >&
InputPipelineStats::stats() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.InputPipelineStats.stats)
  return stats_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TfDataStats

// map<int64, .tensorflow.profiler.IteratorMetadata> iterator_metadata = 2;
inline int TfDataStats::iterator_metadata_size() const {
  return iterator_metadata_.size();
}
inline void TfDataStats::clear_iterator_metadata() {
  iterator_metadata_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >&
TfDataStats::iterator_metadata() const {
  // @@protoc_insertion_point(field_map:tensorflow.profiler.TfDataStats.iterator_metadata)
  return iterator_metadata_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >*
TfDataStats::mutable_iterator_metadata() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.profiler.TfDataStats.iterator_metadata)
  return iterator_metadata_.MutableMap();
}

// map<int64, .tensorflow.profiler.InputPipelineStats> input_pipelines = 1;
inline int TfDataStats::input_pipelines_size() const {
  return input_pipelines_.size();
}
inline void TfDataStats::clear_input_pipelines() {
  input_pipelines_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >&
TfDataStats::input_pipelines() const {
  // @@protoc_insertion_point(field_map:tensorflow.profiler.TfDataStats.input_pipelines)
  return input_pipelines_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >*
TfDataStats::mutable_input_pipelines() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.profiler.TfDataStats.input_pipelines)
  return input_pipelines_.MutableMap();
}

// -------------------------------------------------------------------

// TfDataBottleneckAnalysis

// string host = 1;
inline void TfDataBottleneckAnalysis::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TfDataBottleneckAnalysis::host() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.TfDataBottleneckAnalysis.host)
  return host_.GetNoArena();
}
inline void TfDataBottleneckAnalysis::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.TfDataBottleneckAnalysis.host)
}
#if LANG_CXX11
inline void TfDataBottleneckAnalysis::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.TfDataBottleneckAnalysis.host)
}
#endif
inline void TfDataBottleneckAnalysis::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.TfDataBottleneckAnalysis.host)
}
inline void TfDataBottleneckAnalysis::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.TfDataBottleneckAnalysis.host)
}
inline ::std::string* TfDataBottleneckAnalysis::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.TfDataBottleneckAnalysis.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TfDataBottleneckAnalysis::release_host() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.TfDataBottleneckAnalysis.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TfDataBottleneckAnalysis::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.TfDataBottleneckAnalysis.host)
}

// string input_pipeline = 2;
inline void TfDataBottleneckAnalysis::clear_input_pipeline() {
  input_pipeline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TfDataBottleneckAnalysis::input_pipeline() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline)
  return input_pipeline_.GetNoArena();
}
inline void TfDataBottleneckAnalysis::set_input_pipeline(const ::std::string& value) {
  
  input_pipeline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline)
}
#if LANG_CXX11
inline void TfDataBottleneckAnalysis::set_input_pipeline(::std::string&& value) {
  
  input_pipeline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline)
}
#endif
inline void TfDataBottleneckAnalysis::set_input_pipeline(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_pipeline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline)
}
inline void TfDataBottleneckAnalysis::set_input_pipeline(const char* value, size_t size) {
  
  input_pipeline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline)
}
inline ::std::string* TfDataBottleneckAnalysis::mutable_input_pipeline() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline)
  return input_pipeline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TfDataBottleneckAnalysis::release_input_pipeline() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline)
  
  return input_pipeline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TfDataBottleneckAnalysis::set_allocated_input_pipeline(::std::string* input_pipeline) {
  if (input_pipeline != NULL) {
    
  } else {
    
  }
  input_pipeline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_pipeline);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline)
}

// int64 max_latency_ps = 3;
inline void TfDataBottleneckAnalysis::clear_max_latency_ps() {
  max_latency_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TfDataBottleneckAnalysis::max_latency_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.TfDataBottleneckAnalysis.max_latency_ps)
  return max_latency_ps_;
}
inline void TfDataBottleneckAnalysis::set_max_latency_ps(::google::protobuf::int64 value) {
  
  max_latency_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.TfDataBottleneckAnalysis.max_latency_ps)
}

// string iterator_name = 4;
inline void TfDataBottleneckAnalysis::clear_iterator_name() {
  iterator_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TfDataBottleneckAnalysis::iterator_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name)
  return iterator_name_.GetNoArena();
}
inline void TfDataBottleneckAnalysis::set_iterator_name(const ::std::string& value) {
  
  iterator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name)
}
#if LANG_CXX11
inline void TfDataBottleneckAnalysis::set_iterator_name(::std::string&& value) {
  
  iterator_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name)
}
#endif
inline void TfDataBottleneckAnalysis::set_iterator_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  iterator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name)
}
inline void TfDataBottleneckAnalysis::set_iterator_name(const char* value, size_t size) {
  
  iterator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name)
}
inline ::std::string* TfDataBottleneckAnalysis::mutable_iterator_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name)
  return iterator_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TfDataBottleneckAnalysis::release_iterator_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name)
  
  return iterator_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TfDataBottleneckAnalysis::set_allocated_iterator_name(::std::string* iterator_name) {
  if (iterator_name != NULL) {
    
  } else {
    
  }
  iterator_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iterator_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name)
}

// string iterator_long_name = 5;
inline void TfDataBottleneckAnalysis::clear_iterator_long_name() {
  iterator_long_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TfDataBottleneckAnalysis::iterator_long_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name)
  return iterator_long_name_.GetNoArena();
}
inline void TfDataBottleneckAnalysis::set_iterator_long_name(const ::std::string& value) {
  
  iterator_long_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name)
}
#if LANG_CXX11
inline void TfDataBottleneckAnalysis::set_iterator_long_name(::std::string&& value) {
  
  iterator_long_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name)
}
#endif
inline void TfDataBottleneckAnalysis::set_iterator_long_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  iterator_long_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name)
}
inline void TfDataBottleneckAnalysis::set_iterator_long_name(const char* value, size_t size) {
  
  iterator_long_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name)
}
inline ::std::string* TfDataBottleneckAnalysis::mutable_iterator_long_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name)
  return iterator_long_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TfDataBottleneckAnalysis::release_iterator_long_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name)
  
  return iterator_long_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TfDataBottleneckAnalysis::set_allocated_iterator_long_name(::std::string* iterator_long_name) {
  if (iterator_long_name != NULL) {
    
  } else {
    
  }
  iterator_long_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iterator_long_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name)
}

// int64 iterator_latency_ps = 7;
inline void TfDataBottleneckAnalysis::clear_iterator_latency_ps() {
  iterator_latency_ps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TfDataBottleneckAnalysis::iterator_latency_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_latency_ps)
  return iterator_latency_ps_;
}
inline void TfDataBottleneckAnalysis::set_iterator_latency_ps(::google::protobuf::int64 value) {
  
  iterator_latency_ps_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.TfDataBottleneckAnalysis.iterator_latency_ps)
}

// string suggestion = 6;
inline void TfDataBottleneckAnalysis::clear_suggestion() {
  suggestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TfDataBottleneckAnalysis::suggestion() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.TfDataBottleneckAnalysis.suggestion)
  return suggestion_.GetNoArena();
}
inline void TfDataBottleneckAnalysis::set_suggestion(const ::std::string& value) {
  
  suggestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.TfDataBottleneckAnalysis.suggestion)
}
#if LANG_CXX11
inline void TfDataBottleneckAnalysis::set_suggestion(::std::string&& value) {
  
  suggestion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.TfDataBottleneckAnalysis.suggestion)
}
#endif
inline void TfDataBottleneckAnalysis::set_suggestion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  suggestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.TfDataBottleneckAnalysis.suggestion)
}
inline void TfDataBottleneckAnalysis::set_suggestion(const char* value, size_t size) {
  
  suggestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.TfDataBottleneckAnalysis.suggestion)
}
inline ::std::string* TfDataBottleneckAnalysis::mutable_suggestion() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.TfDataBottleneckAnalysis.suggestion)
  return suggestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TfDataBottleneckAnalysis::release_suggestion() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.TfDataBottleneckAnalysis.suggestion)
  
  return suggestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TfDataBottleneckAnalysis::set_allocated_suggestion(::std::string* suggestion) {
  if (suggestion != NULL) {
    
  } else {
    
  }
  suggestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suggestion);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.TfDataBottleneckAnalysis.suggestion)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CombinedTfDataStats

// bool is_input_bound = 3;
inline void CombinedTfDataStats::clear_is_input_bound() {
  is_input_bound_ = false;
}
inline bool CombinedTfDataStats::is_input_bound() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CombinedTfDataStats.is_input_bound)
  return is_input_bound_;
}
inline void CombinedTfDataStats::set_is_input_bound(bool value) {
  
  is_input_bound_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.CombinedTfDataStats.is_input_bound)
}

// string summary = 4;
inline void CombinedTfDataStats::clear_summary() {
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CombinedTfDataStats::summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CombinedTfDataStats.summary)
  return summary_.GetNoArena();
}
inline void CombinedTfDataStats::set_summary(const ::std::string& value) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.CombinedTfDataStats.summary)
}
#if LANG_CXX11
inline void CombinedTfDataStats::set_summary(::std::string&& value) {
  
  summary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.CombinedTfDataStats.summary)
}
#endif
inline void CombinedTfDataStats::set_summary(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.CombinedTfDataStats.summary)
}
inline void CombinedTfDataStats::set_summary(const char* value, size_t size) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.CombinedTfDataStats.summary)
}
inline ::std::string* CombinedTfDataStats::mutable_summary() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.CombinedTfDataStats.summary)
  return summary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CombinedTfDataStats::release_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.CombinedTfDataStats.summary)
  
  return summary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CombinedTfDataStats::set_allocated_summary(::std::string* summary) {
  if (summary != NULL) {
    
  } else {
    
  }
  summary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), summary);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.CombinedTfDataStats.summary)
}

// repeated .tensorflow.profiler.TfDataBottleneckAnalysis bottleneck_analysis = 1;
inline int CombinedTfDataStats::bottleneck_analysis_size() const {
  return bottleneck_analysis_.size();
}
inline void CombinedTfDataStats::clear_bottleneck_analysis() {
  bottleneck_analysis_.Clear();
}
inline ::tensorflow::profiler::TfDataBottleneckAnalysis* CombinedTfDataStats::mutable_bottleneck_analysis(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.CombinedTfDataStats.bottleneck_analysis)
  return bottleneck_analysis_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::TfDataBottleneckAnalysis >*
CombinedTfDataStats::mutable_bottleneck_analysis() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.CombinedTfDataStats.bottleneck_analysis)
  return &bottleneck_analysis_;
}
inline const ::tensorflow::profiler::TfDataBottleneckAnalysis& CombinedTfDataStats::bottleneck_analysis(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.CombinedTfDataStats.bottleneck_analysis)
  return bottleneck_analysis_.Get(index);
}
inline ::tensorflow::profiler::TfDataBottleneckAnalysis* CombinedTfDataStats::add_bottleneck_analysis() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.CombinedTfDataStats.bottleneck_analysis)
  return bottleneck_analysis_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::TfDataBottleneckAnalysis >&
CombinedTfDataStats::bottleneck_analysis() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.CombinedTfDataStats.bottleneck_analysis)
  return bottleneck_analysis_;
}

// map<string, .tensorflow.profiler.TfDataStats> tf_data_stats = 2;
inline int CombinedTfDataStats::tf_data_stats_size() const {
  return tf_data_stats_.size();
}
inline void CombinedTfDataStats::clear_tf_data_stats() {
  tf_data_stats_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >&
CombinedTfDataStats::tf_data_stats() const {
  // @@protoc_insertion_point(field_map:tensorflow.profiler.CombinedTfDataStats.tf_data_stats)
  return tf_data_stats_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >*
CombinedTfDataStats::mutable_tf_data_stats() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.profiler.CombinedTfDataStats.tf_data_stats)
  return tf_data_stats_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace profiler
}  // namespace tensorflow

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tensorflow::profiler::InputPipelineMetadata_InputPipelineType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tensorflow::profiler::InputPipelineMetadata_InputPipelineType>() {
  return ::tensorflow::profiler::InputPipelineMetadata_InputPipelineType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto
