// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/memory_viewer_preprocess.proto

#include "tensorflow/core/profiler/protobuf/memory_viewer_preprocess.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BufferSpan;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HeapObject;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogicalBuffer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BufferAllocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PreprocessResult_LogicalBufferSpansEntry_DoNotUse;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto
namespace tensorflow {
namespace profiler {
class HeapObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeapObject>
      _instance;
  ::google::protobuf::int32 numbered_;
  ::google::protobuf::internal::ArenaStringPtr named_;
} _HeapObject_default_instance_;
class BufferSpanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BufferSpan>
      _instance;
} _BufferSpan_default_instance_;
class LogicalBufferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicalBuffer>
      _instance;
} _LogicalBuffer_default_instance_;
class BufferAllocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BufferAllocation>
      _instance;
} _BufferAllocation_default_instance_;
class PreprocessResult_LogicalBufferSpansEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PreprocessResult_LogicalBufferSpansEntry_DoNotUse>
      _instance;
} _PreprocessResult_LogicalBufferSpansEntry_DoNotUse_default_instance_;
class PreprocessResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PreprocessResult>
      _instance;
} _PreprocessResult_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto {
static void InitDefaultsHeapObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_HeapObject_default_instance_;
    new (ptr) ::tensorflow::profiler::HeapObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::HeapObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeapObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeapObject}, {}};

static void InitDefaultsBufferSpan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_BufferSpan_default_instance_;
    new (ptr) ::tensorflow::profiler::BufferSpan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::BufferSpan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BufferSpan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBufferSpan}, {}};

static void InitDefaultsLogicalBuffer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_LogicalBuffer_default_instance_;
    new (ptr) ::tensorflow::profiler::LogicalBuffer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::LogicalBuffer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogicalBuffer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogicalBuffer}, {}};

static void InitDefaultsBufferAllocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_BufferAllocation_default_instance_;
    new (ptr) ::tensorflow::profiler::BufferAllocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::BufferAllocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BufferAllocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBufferAllocation}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_LogicalBuffer.base,}};

static void InitDefaultsPreprocessResult_LogicalBufferSpansEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PreprocessResult_LogicalBufferSpansEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse();
  }
  ::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PreprocessResult_LogicalBufferSpansEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPreprocessResult_LogicalBufferSpansEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_BufferSpan.base,}};

static void InitDefaultsPreprocessResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PreprocessResult_default_instance_;
    new (ptr) ::tensorflow::profiler::PreprocessResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PreprocessResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PreprocessResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPreprocessResult}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_HeapObject.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_PreprocessResult_LogicalBufferSpansEntry_DoNotUse.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_BufferAllocation.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HeapObject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BufferSpan.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogicalBuffer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BufferAllocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PreprocessResult_LogicalBufferSpansEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PreprocessResult.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::tensorflow::profiler::HeapObjectDefaultTypeInternal, numbered_),
  offsetof(::tensorflow::profiler::HeapObjectDefaultTypeInternal, named_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, logical_buffer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, logical_buffer_size_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, unpadded_shape_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, instruction_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, shape_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, tf_op_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, op_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HeapObject, color_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferSpan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferSpan, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferSpan, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::LogicalBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::LogicalBuffer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::LogicalBuffer, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::LogicalBuffer, size_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::LogicalBuffer, hlo_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::LogicalBuffer, shape_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferAllocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferAllocation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferAllocation, size_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferAllocation, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferAllocation, logical_buffers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::BufferAllocation, common_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, heap_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, unpadded_heap_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, max_heap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, max_heap_by_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, logical_buffer_spans_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, max_heap_to_by_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, by_size_to_max_heap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, module_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, entry_computation_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, peak_heap_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, peak_unpadded_heap_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, peak_heap_size_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, entry_computation_parameters_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, non_reusable_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, maybe_live_out_mib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PreprocessResult, indefinite_lifetimes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::HeapObject)},
  { 17, -1, sizeof(::tensorflow::profiler::BufferSpan)},
  { 24, -1, sizeof(::tensorflow::profiler::LogicalBuffer)},
  { 34, -1, sizeof(::tensorflow::profiler::BufferAllocation)},
  { 44, 51, sizeof(::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse)},
  { 53, -1, sizeof(::tensorflow::profiler::PreprocessResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_HeapObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_BufferSpan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_LogicalBuffer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_BufferAllocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PreprocessResult_LogicalBufferSpansEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PreprocessResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/memory_viewer_preprocess.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n@tensorflow/core/profiler/protobuf/memo"
      "ry_viewer_preprocess.proto\022\023tensorflow.p"
      "rofiler\"\212\002\n\nHeapObject\022\022\n\010numbered\030\001 \001(\005"
      "H\000\022\017\n\005named\030\002 \001(\tH\000\022\r\n\005label\030\003 \001(\t\022\031\n\021lo"
      "gical_buffer_id\030\004 \001(\005\022\037\n\027logical_buffer_"
      "size_mib\030\005 \001(\001\022\032\n\022unpadded_shape_mib\030\006 \001"
      "(\001\022\030\n\020instruction_name\030\007 \001(\t\022\024\n\014shape_st"
      "ring\030\010 \001(\t\022\022\n\ntf_op_name\030\t \001(\t\022\022\n\ngroup_"
      "name\030\n \001(\t\022\017\n\007op_code\030\013 \001(\tB\007\n\005color\"*\n\n"
      "BufferSpan\022\r\n\005start\030\001 \001(\005\022\r\n\005limit\030\002 \001(\005"
      "\"c\n\rLogicalBuffer\022\n\n\002id\030\001 \001(\003\022\r\n\005shape\030\002"
      " \001(\t\022\020\n\010size_mib\030\003 \001(\001\022\020\n\010hlo_name\030\004 \001(\t"
      "\022\023\n\013shape_index\030\005 \003(\003\"\227\001\n\020BufferAllocati"
      "on\022\n\n\002id\030\001 \001(\003\022\020\n\010size_mib\030\002 \001(\001\022\022\n\nattr"
      "ibutes\030\003 \003(\t\022;\n\017logical_buffers\030\004 \003(\0132\"."
      "tensorflow.profiler.LogicalBuffer\022\024\n\014com"
      "mon_shape\030\005 \001(\t\"\326\005\n\020PreprocessResult\022\022\n\n"
      "heap_sizes\030\001 \003(\001\022\033\n\023unpadded_heap_sizes\030"
      "\002 \003(\001\0221\n\010max_heap\030\003 \003(\0132\037.tensorflow.pro"
      "filer.HeapObject\0229\n\020max_heap_by_size\030\004 \003"
      "(\0132\037.tensorflow.profiler.HeapObject\022[\n\024l"
      "ogical_buffer_spans\030\005 \003(\0132=.tensorflow.p"
      "rofiler.PreprocessResult.LogicalBufferSp"
      "ansEntry\022\033\n\023max_heap_to_by_size\030\006 \003(\005\022\033\n"
      "\023by_size_to_max_heap\030\007 \003(\005\022\023\n\013module_nam"
      "e\030\010 \001(\t\022\036\n\026entry_computation_name\030\t \001(\t\022"
      "\025\n\rpeak_heap_mib\030\n \001(\001\022\036\n\026peak_unpadded_"
      "heap_mib\030\013 \001(\001\022\037\n\027peak_heap_size_positio"
      "n\030\014 \001(\005\022(\n entry_computation_parameters_"
      "mib\030\r \001(\001\022\030\n\020non_reusable_mib\030\016 \001(\001\022\032\n\022m"
      "aybe_live_out_mib\030\017 \001(\001\022C\n\024indefinite_li"
      "fetimes\030\020 \003(\0132%.tensorflow.profiler.Buff"
      "erAllocation\032Z\n\027LogicalBufferSpansEntry\022"
      "\013\n\003key\030\001 \001(\005\022.\n\005value\030\002 \001(\0132\037.tensorflow"
      ".profiler.BufferSpan:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1392);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/memory_viewer_preprocess.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto
namespace tensorflow {
namespace profiler {

// ===================================================================

void HeapObject::InitAsDefaultInstance() {
  ::tensorflow::profiler::_HeapObject_default_instance_.numbered_ = 0;
  ::tensorflow::profiler::_HeapObject_default_instance_.named_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeapObject::kNumberedFieldNumber;
const int HeapObject::kNamedFieldNumber;
const int HeapObject::kLabelFieldNumber;
const int HeapObject::kLogicalBufferIdFieldNumber;
const int HeapObject::kLogicalBufferSizeMibFieldNumber;
const int HeapObject::kUnpaddedShapeMibFieldNumber;
const int HeapObject::kInstructionNameFieldNumber;
const int HeapObject::kShapeStringFieldNumber;
const int HeapObject::kTfOpNameFieldNumber;
const int HeapObject::kGroupNameFieldNumber;
const int HeapObject::kOpCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeapObject::HeapObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_HeapObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.HeapObject)
}
HeapObject::HeapObject(const HeapObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  instruction_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instruction_name().size() > 0) {
    instruction_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instruction_name_);
  }
  shape_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shape_string().size() > 0) {
    shape_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shape_string_);
  }
  tf_op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tf_op_name().size() > 0) {
    tf_op_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tf_op_name_);
  }
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  op_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_code().size() > 0) {
    op_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_code_);
  }
  ::memcpy(&logical_buffer_size_mib_, &from.logical_buffer_size_mib_,
    static_cast<size_t>(reinterpret_cast<char*>(&logical_buffer_id_) -
    reinterpret_cast<char*>(&logical_buffer_size_mib_)) + sizeof(logical_buffer_id_));
  clear_has_color();
  switch (from.color_case()) {
    case kNumbered: {
      set_numbered(from.numbered());
      break;
    }
    case kNamed: {
      set_named(from.named());
      break;
    }
    case COLOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.HeapObject)
}

void HeapObject::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instruction_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shape_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tf_op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logical_buffer_size_mib_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logical_buffer_id_) -
      reinterpret_cast<char*>(&logical_buffer_size_mib_)) + sizeof(logical_buffer_id_));
  clear_has_color();
}

HeapObject::~HeapObject() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.HeapObject)
  SharedDtor();
}

void HeapObject::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instruction_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shape_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tf_op_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_color()) {
    clear_color();
  }
}

void HeapObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeapObject::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeapObject& HeapObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_HeapObject.base);
  return *internal_default_instance();
}


void HeapObject::clear_color() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.profiler.HeapObject)
  switch (color_case()) {
    case kNumbered: {
      // No need to clear
      break;
    }
    case kNamed: {
      color_.named_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case COLOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = COLOR_NOT_SET;
}


void HeapObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.HeapObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instruction_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shape_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tf_op_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logical_buffer_size_mib_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logical_buffer_id_) -
      reinterpret_cast<char*>(&logical_buffer_size_mib_)) + sizeof(logical_buffer_id_));
  clear_color();
  _internal_metadata_.Clear();
}

bool HeapObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.HeapObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 numbered = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_.numbered_)));
          set_has_numbered();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string named = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_named()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->named().data(), static_cast<int>(this->named().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HeapObject.named"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HeapObject.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 logical_buffer_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logical_buffer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double logical_buffer_size_mib = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &logical_buffer_size_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double unpadded_shape_mib = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &unpadded_shape_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instruction_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instruction_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HeapObject.instruction_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shape_string = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shape_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shape_string().data(), static_cast<int>(this->shape_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HeapObject.shape_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tf_op_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tf_op_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tf_op_name().data(), static_cast<int>(this->tf_op_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HeapObject.tf_op_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HeapObject.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string op_code = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_code().data(), static_cast<int>(this->op_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HeapObject.op_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.HeapObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.HeapObject)
  return false;
#undef DO_
}

void HeapObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.HeapObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 numbered = 1;
  if (has_numbered()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numbered(), output);
  }

  // string named = 2;
  if (has_named()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->named().data(), static_cast<int>(this->named().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.named");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->named(), output);
  }

  // string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->label(), output);
  }

  // int32 logical_buffer_id = 4;
  if (this->logical_buffer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->logical_buffer_id(), output);
  }

  // double logical_buffer_size_mib = 5;
  if (this->logical_buffer_size_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->logical_buffer_size_mib(), output);
  }

  // double unpadded_shape_mib = 6;
  if (this->unpadded_shape_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->unpadded_shape_mib(), output);
  }

  // string instruction_name = 7;
  if (this->instruction_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.instruction_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->instruction_name(), output);
  }

  // string shape_string = 8;
  if (this->shape_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shape_string().data(), static_cast<int>(this->shape_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.shape_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->shape_string(), output);
  }

  // string tf_op_name = 9;
  if (this->tf_op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tf_op_name().data(), static_cast<int>(this->tf_op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.tf_op_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->tf_op_name(), output);
  }

  // string group_name = 10;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->group_name(), output);
  }

  // string op_code = 11;
  if (this->op_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_code().data(), static_cast<int>(this->op_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.op_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->op_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.HeapObject)
}

::google::protobuf::uint8* HeapObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.HeapObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 numbered = 1;
  if (has_numbered()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numbered(), target);
  }

  // string named = 2;
  if (has_named()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->named().data(), static_cast<int>(this->named().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.named");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->named(), target);
  }

  // string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->label(), target);
  }

  // int32 logical_buffer_id = 4;
  if (this->logical_buffer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->logical_buffer_id(), target);
  }

  // double logical_buffer_size_mib = 5;
  if (this->logical_buffer_size_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->logical_buffer_size_mib(), target);
  }

  // double unpadded_shape_mib = 6;
  if (this->unpadded_shape_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->unpadded_shape_mib(), target);
  }

  // string instruction_name = 7;
  if (this->instruction_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.instruction_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->instruction_name(), target);
  }

  // string shape_string = 8;
  if (this->shape_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shape_string().data(), static_cast<int>(this->shape_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.shape_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->shape_string(), target);
  }

  // string tf_op_name = 9;
  if (this->tf_op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tf_op_name().data(), static_cast<int>(this->tf_op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.tf_op_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->tf_op_name(), target);
  }

  // string group_name = 10;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->group_name(), target);
  }

  // string op_code = 11;
  if (this->op_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_code().data(), static_cast<int>(this->op_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HeapObject.op_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->op_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.HeapObject)
  return target;
}

size_t HeapObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.HeapObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string label = 3;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string instruction_name = 7;
  if (this->instruction_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instruction_name());
  }

  // string shape_string = 8;
  if (this->shape_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shape_string());
  }

  // string tf_op_name = 9;
  if (this->tf_op_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tf_op_name());
  }

  // string group_name = 10;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // string op_code = 11;
  if (this->op_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_code());
  }

  // double logical_buffer_size_mib = 5;
  if (this->logical_buffer_size_mib() != 0) {
    total_size += 1 + 8;
  }

  // double unpadded_shape_mib = 6;
  if (this->unpadded_shape_mib() != 0) {
    total_size += 1 + 8;
  }

  // int32 logical_buffer_id = 4;
  if (this->logical_buffer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logical_buffer_id());
  }

  switch (color_case()) {
    // int32 numbered = 1;
    case kNumbered: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numbered());
      break;
    }
    // string named = 2;
    case kNamed: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->named());
      break;
    }
    case COLOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeapObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.HeapObject)
  GOOGLE_DCHECK_NE(&from, this);
  const HeapObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeapObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.HeapObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.HeapObject)
    MergeFrom(*source);
  }
}

void HeapObject::MergeFrom(const HeapObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.HeapObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.instruction_name().size() > 0) {

    instruction_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instruction_name_);
  }
  if (from.shape_string().size() > 0) {

    shape_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shape_string_);
  }
  if (from.tf_op_name().size() > 0) {

    tf_op_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tf_op_name_);
  }
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.op_code().size() > 0) {

    op_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_code_);
  }
  if (from.logical_buffer_size_mib() != 0) {
    set_logical_buffer_size_mib(from.logical_buffer_size_mib());
  }
  if (from.unpadded_shape_mib() != 0) {
    set_unpadded_shape_mib(from.unpadded_shape_mib());
  }
  if (from.logical_buffer_id() != 0) {
    set_logical_buffer_id(from.logical_buffer_id());
  }
  switch (from.color_case()) {
    case kNumbered: {
      set_numbered(from.numbered());
      break;
    }
    case kNamed: {
      set_named(from.named());
      break;
    }
    case COLOR_NOT_SET: {
      break;
    }
  }
}

void HeapObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.HeapObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeapObject::CopyFrom(const HeapObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.HeapObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeapObject::IsInitialized() const {
  return true;
}

void HeapObject::Swap(HeapObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeapObject::InternalSwap(HeapObject* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instruction_name_.Swap(&other->instruction_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shape_string_.Swap(&other->shape_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tf_op_name_.Swap(&other->tf_op_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_name_.Swap(&other->group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  op_code_.Swap(&other->op_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(logical_buffer_size_mib_, other->logical_buffer_size_mib_);
  swap(unpadded_shape_mib_, other->unpadded_shape_mib_);
  swap(logical_buffer_id_, other->logical_buffer_id_);
  swap(color_, other->color_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeapObject::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BufferSpan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferSpan::kStartFieldNumber;
const int BufferSpan::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferSpan::BufferSpan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_BufferSpan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.BufferSpan)
}
BufferSpan::BufferSpan(const BufferSpan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&start_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.BufferSpan)
}

void BufferSpan::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&start_)) + sizeof(limit_));
}

BufferSpan::~BufferSpan() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.BufferSpan)
  SharedDtor();
}

void BufferSpan::SharedDtor() {
}

void BufferSpan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BufferSpan::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BufferSpan& BufferSpan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_BufferSpan.base);
  return *internal_default_instance();
}


void BufferSpan::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.BufferSpan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&start_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

bool BufferSpan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.BufferSpan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.BufferSpan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.BufferSpan)
  return false;
#undef DO_
}

void BufferSpan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.BufferSpan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 start = 1;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->start(), output);
  }

  // int32 limit = 2;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.BufferSpan)
}

::google::protobuf::uint8* BufferSpan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.BufferSpan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 start = 1;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->start(), target);
  }

  // int32 limit = 2;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.BufferSpan)
  return target;
}

size_t BufferSpan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.BufferSpan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 start = 1;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start());
  }

  // int32 limit = 2;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BufferSpan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.BufferSpan)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferSpan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferSpan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.BufferSpan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.BufferSpan)
    MergeFrom(*source);
  }
}

void BufferSpan::MergeFrom(const BufferSpan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.BufferSpan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void BufferSpan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.BufferSpan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferSpan::CopyFrom(const BufferSpan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.BufferSpan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferSpan::IsInitialized() const {
  return true;
}

void BufferSpan::Swap(BufferSpan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BufferSpan::InternalSwap(BufferSpan* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BufferSpan::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogicalBuffer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicalBuffer::kIdFieldNumber;
const int LogicalBuffer::kShapeFieldNumber;
const int LogicalBuffer::kSizeMibFieldNumber;
const int LogicalBuffer::kHloNameFieldNumber;
const int LogicalBuffer::kShapeIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicalBuffer::LogicalBuffer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_LogicalBuffer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.LogicalBuffer)
}
LogicalBuffer::LogicalBuffer(const LogicalBuffer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shape_index_(from.shape_index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shape().size() > 0) {
    shape_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shape_);
  }
  hlo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hlo_name().size() > 0) {
    hlo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hlo_name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_mib_) -
    reinterpret_cast<char*>(&id_)) + sizeof(size_mib_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.LogicalBuffer)
}

void LogicalBuffer::SharedCtor() {
  shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hlo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_mib_) -
      reinterpret_cast<char*>(&id_)) + sizeof(size_mib_));
}

LogicalBuffer::~LogicalBuffer() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.LogicalBuffer)
  SharedDtor();
}

void LogicalBuffer::SharedDtor() {
  shape_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hlo_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogicalBuffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogicalBuffer::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogicalBuffer& LogicalBuffer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_LogicalBuffer.base);
  return *internal_default_instance();
}


void LogicalBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.LogicalBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_index_.Clear();
  shape_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hlo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_mib_) -
      reinterpret_cast<char*>(&id_)) + sizeof(size_mib_));
  _internal_metadata_.Clear();
}

bool LogicalBuffer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.LogicalBuffer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shape()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shape().data(), static_cast<int>(this->shape().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.LogicalBuffer.shape"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double size_mib = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &size_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hlo_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hlo_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hlo_name().data(), static_cast<int>(this->hlo_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.LogicalBuffer.hlo_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 shape_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_shape_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 42u, input, this->mutable_shape_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.LogicalBuffer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.LogicalBuffer)
  return false;
#undef DO_
}

void LogicalBuffer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.LogicalBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string shape = 2;
  if (this->shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shape().data(), static_cast<int>(this->shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.LogicalBuffer.shape");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shape(), output);
  }

  // double size_mib = 3;
  if (this->size_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->size_mib(), output);
  }

  // string hlo_name = 4;
  if (this->hlo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hlo_name().data(), static_cast<int>(this->hlo_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.LogicalBuffer.hlo_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hlo_name(), output);
  }

  // repeated int64 shape_index = 5;
  if (this->shape_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _shape_index_cached_byte_size_));
  }
  for (int i = 0, n = this->shape_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->shape_index(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.LogicalBuffer)
}

::google::protobuf::uint8* LogicalBuffer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.LogicalBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string shape = 2;
  if (this->shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shape().data(), static_cast<int>(this->shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.LogicalBuffer.shape");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->shape(), target);
  }

  // double size_mib = 3;
  if (this->size_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->size_mib(), target);
  }

  // string hlo_name = 4;
  if (this->hlo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hlo_name().data(), static_cast<int>(this->hlo_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.LogicalBuffer.hlo_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->hlo_name(), target);
  }

  // repeated int64 shape_index = 5;
  if (this->shape_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _shape_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->shape_index_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.LogicalBuffer)
  return target;
}

size_t LogicalBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.LogicalBuffer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 shape_index = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->shape_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _shape_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string shape = 2;
  if (this->shape().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shape());
  }

  // string hlo_name = 4;
  if (this->hlo_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hlo_name());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // double size_mib = 3;
  if (this->size_mib() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogicalBuffer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.LogicalBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicalBuffer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicalBuffer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.LogicalBuffer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.LogicalBuffer)
    MergeFrom(*source);
  }
}

void LogicalBuffer::MergeFrom(const LogicalBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.LogicalBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_index_.MergeFrom(from.shape_index_);
  if (from.shape().size() > 0) {

    shape_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shape_);
  }
  if (from.hlo_name().size() > 0) {

    hlo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hlo_name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.size_mib() != 0) {
    set_size_mib(from.size_mib());
  }
}

void LogicalBuffer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.LogicalBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicalBuffer::CopyFrom(const LogicalBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.LogicalBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicalBuffer::IsInitialized() const {
  return true;
}

void LogicalBuffer::Swap(LogicalBuffer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicalBuffer::InternalSwap(LogicalBuffer* other) {
  using std::swap;
  shape_index_.InternalSwap(&other->shape_index_);
  shape_.Swap(&other->shape_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hlo_name_.Swap(&other->hlo_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(size_mib_, other->size_mib_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogicalBuffer::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BufferAllocation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferAllocation::kIdFieldNumber;
const int BufferAllocation::kSizeMibFieldNumber;
const int BufferAllocation::kAttributesFieldNumber;
const int BufferAllocation::kLogicalBuffersFieldNumber;
const int BufferAllocation::kCommonShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferAllocation::BufferAllocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_BufferAllocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.BufferAllocation)
}
BufferAllocation::BufferAllocation(const BufferAllocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attributes_(from.attributes_),
      logical_buffers_(from.logical_buffers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  common_shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.common_shape().size() > 0) {
    common_shape_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.common_shape_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_mib_) -
    reinterpret_cast<char*>(&id_)) + sizeof(size_mib_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.BufferAllocation)
}

void BufferAllocation::SharedCtor() {
  common_shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_mib_) -
      reinterpret_cast<char*>(&id_)) + sizeof(size_mib_));
}

BufferAllocation::~BufferAllocation() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.BufferAllocation)
  SharedDtor();
}

void BufferAllocation::SharedDtor() {
  common_shape_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BufferAllocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BufferAllocation::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BufferAllocation& BufferAllocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_BufferAllocation.base);
  return *internal_default_instance();
}


void BufferAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.BufferAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  logical_buffers_.Clear();
  common_shape_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_mib_) -
      reinterpret_cast<char*>(&id_)) + sizeof(size_mib_));
  _internal_metadata_.Clear();
}

bool BufferAllocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.BufferAllocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double size_mib = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &size_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string attributes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attributes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attributes(this->attributes_size() - 1).data(),
            static_cast<int>(this->attributes(this->attributes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BufferAllocation.attributes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.LogicalBuffer logical_buffers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_logical_buffers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string common_shape = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_common_shape()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->common_shape().data(), static_cast<int>(this->common_shape().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.BufferAllocation.common_shape"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.BufferAllocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.BufferAllocation)
  return false;
#undef DO_
}

void BufferAllocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.BufferAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // double size_mib = 2;
  if (this->size_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->size_mib(), output);
  }

  // repeated string attributes = 3;
  for (int i = 0, n = this->attributes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attributes(i).data(), static_cast<int>(this->attributes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BufferAllocation.attributes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->attributes(i), output);
  }

  // repeated .tensorflow.profiler.LogicalBuffer logical_buffers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logical_buffers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->logical_buffers(static_cast<int>(i)),
      output);
  }

  // string common_shape = 5;
  if (this->common_shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->common_shape().data(), static_cast<int>(this->common_shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BufferAllocation.common_shape");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->common_shape(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.BufferAllocation)
}

::google::protobuf::uint8* BufferAllocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.BufferAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // double size_mib = 2;
  if (this->size_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->size_mib(), target);
  }

  // repeated string attributes = 3;
  for (int i = 0, n = this->attributes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attributes(i).data(), static_cast<int>(this->attributes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BufferAllocation.attributes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->attributes(i), target);
  }

  // repeated .tensorflow.profiler.LogicalBuffer logical_buffers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logical_buffers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->logical_buffers(static_cast<int>(i)), deterministic, target);
  }

  // string common_shape = 5;
  if (this->common_shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->common_shape().data(), static_cast<int>(this->common_shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.BufferAllocation.common_shape");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->common_shape(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.BufferAllocation)
  return target;
}

size_t BufferAllocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.BufferAllocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string attributes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attributes_size());
  for (int i = 0, n = this->attributes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attributes(i));
  }

  // repeated .tensorflow.profiler.LogicalBuffer logical_buffers = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->logical_buffers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->logical_buffers(static_cast<int>(i)));
    }
  }

  // string common_shape = 5;
  if (this->common_shape().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->common_shape());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // double size_mib = 2;
  if (this->size_mib() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BufferAllocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.BufferAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferAllocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferAllocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.BufferAllocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.BufferAllocation)
    MergeFrom(*source);
  }
}

void BufferAllocation::MergeFrom(const BufferAllocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.BufferAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  logical_buffers_.MergeFrom(from.logical_buffers_);
  if (from.common_shape().size() > 0) {

    common_shape_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.common_shape_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.size_mib() != 0) {
    set_size_mib(from.size_mib());
  }
}

void BufferAllocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.BufferAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferAllocation::CopyFrom(const BufferAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.BufferAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferAllocation::IsInitialized() const {
  return true;
}

void BufferAllocation::Swap(BufferAllocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BufferAllocation::InternalSwap(BufferAllocation* other) {
  using std::swap;
  attributes_.InternalSwap(CastToBase(&other->attributes_));
  CastToBase(&logical_buffers_)->InternalSwap(CastToBase(&other->logical_buffers_));
  common_shape_.Swap(&other->common_shape_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(size_mib_, other->size_mib_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BufferAllocation::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PreprocessResult_LogicalBufferSpansEntry_DoNotUse::PreprocessResult_LogicalBufferSpansEntry_DoNotUse() {}
PreprocessResult_LogicalBufferSpansEntry_DoNotUse::PreprocessResult_LogicalBufferSpansEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PreprocessResult_LogicalBufferSpansEntry_DoNotUse::MergeFrom(const PreprocessResult_LogicalBufferSpansEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PreprocessResult_LogicalBufferSpansEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[4];
}
void PreprocessResult_LogicalBufferSpansEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PreprocessResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PreprocessResult::kHeapSizesFieldNumber;
const int PreprocessResult::kUnpaddedHeapSizesFieldNumber;
const int PreprocessResult::kMaxHeapFieldNumber;
const int PreprocessResult::kMaxHeapBySizeFieldNumber;
const int PreprocessResult::kLogicalBufferSpansFieldNumber;
const int PreprocessResult::kMaxHeapToBySizeFieldNumber;
const int PreprocessResult::kBySizeToMaxHeapFieldNumber;
const int PreprocessResult::kModuleNameFieldNumber;
const int PreprocessResult::kEntryComputationNameFieldNumber;
const int PreprocessResult::kPeakHeapMibFieldNumber;
const int PreprocessResult::kPeakUnpaddedHeapMibFieldNumber;
const int PreprocessResult::kPeakHeapSizePositionFieldNumber;
const int PreprocessResult::kEntryComputationParametersMibFieldNumber;
const int PreprocessResult::kNonReusableMibFieldNumber;
const int PreprocessResult::kMaybeLiveOutMibFieldNumber;
const int PreprocessResult::kIndefiniteLifetimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PreprocessResult::PreprocessResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_PreprocessResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PreprocessResult)
}
PreprocessResult::PreprocessResult(const PreprocessResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      heap_sizes_(from.heap_sizes_),
      unpadded_heap_sizes_(from.unpadded_heap_sizes_),
      max_heap_(from.max_heap_),
      max_heap_by_size_(from.max_heap_by_size_),
      max_heap_to_by_size_(from.max_heap_to_by_size_),
      by_size_to_max_heap_(from.by_size_to_max_heap_),
      indefinite_lifetimes_(from.indefinite_lifetimes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logical_buffer_spans_.MergeFrom(from.logical_buffer_spans_);
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.module_name().size() > 0) {
    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  entry_computation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entry_computation_name().size() > 0) {
    entry_computation_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_computation_name_);
  }
  ::memcpy(&peak_heap_mib_, &from.peak_heap_mib_,
    static_cast<size_t>(reinterpret_cast<char*>(&peak_heap_size_position_) -
    reinterpret_cast<char*>(&peak_heap_mib_)) + sizeof(peak_heap_size_position_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PreprocessResult)
}

void PreprocessResult::SharedCtor() {
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_computation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peak_heap_mib_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&peak_heap_size_position_) -
      reinterpret_cast<char*>(&peak_heap_mib_)) + sizeof(peak_heap_size_position_));
}

PreprocessResult::~PreprocessResult() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PreprocessResult)
  SharedDtor();
}

void PreprocessResult::SharedDtor() {
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_computation_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PreprocessResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PreprocessResult::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PreprocessResult& PreprocessResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::scc_info_PreprocessResult.base);
  return *internal_default_instance();
}


void PreprocessResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PreprocessResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heap_sizes_.Clear();
  unpadded_heap_sizes_.Clear();
  max_heap_.Clear();
  max_heap_by_size_.Clear();
  logical_buffer_spans_.Clear();
  max_heap_to_by_size_.Clear();
  by_size_to_max_heap_.Clear();
  indefinite_lifetimes_.Clear();
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_computation_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peak_heap_mib_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&peak_heap_size_position_) -
      reinterpret_cast<char*>(&peak_heap_mib_)) + sizeof(peak_heap_size_position_));
  _internal_metadata_.Clear();
}

bool PreprocessResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PreprocessResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double heap_sizes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_heap_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_heap_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double unpadded_heap_sizes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_unpadded_heap_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_unpadded_heap_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.HeapObject max_heap = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_max_heap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.HeapObject max_heap_by_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_max_heap_by_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .tensorflow.profiler.BufferSpan> logical_buffer_spans = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          PreprocessResult_LogicalBufferSpansEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PreprocessResult_LogicalBufferSpansEntry_DoNotUse,
              ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan > > parser(&logical_buffer_spans_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 max_heap_to_by_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_max_heap_to_by_size())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_max_heap_to_by_size())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 by_size_to_max_heap = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_by_size_to_max_heap())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_by_size_to_max_heap())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string module_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->module_name().data(), static_cast<int>(this->module_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.PreprocessResult.module_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entry_computation_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entry_computation_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entry_computation_name().data(), static_cast<int>(this->entry_computation_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.PreprocessResult.entry_computation_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double peak_heap_mib = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peak_heap_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double peak_unpadded_heap_mib = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peak_unpadded_heap_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 peak_heap_size_position = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peak_heap_size_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double entry_computation_parameters_mib = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &entry_computation_parameters_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double non_reusable_mib = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &non_reusable_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double maybe_live_out_mib = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maybe_live_out_mib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.BufferAllocation indefinite_lifetimes = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_indefinite_lifetimes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PreprocessResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PreprocessResult)
  return false;
#undef DO_
}

void PreprocessResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PreprocessResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double heap_sizes = 1;
  if (this->heap_sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _heap_sizes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->heap_sizes().data(), this->heap_sizes_size(), output);
  }

  // repeated double unpadded_heap_sizes = 2;
  if (this->unpadded_heap_sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unpadded_heap_sizes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->unpadded_heap_sizes().data(), this->unpadded_heap_sizes_size(), output);
  }

  // repeated .tensorflow.profiler.HeapObject max_heap = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->max_heap_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->max_heap(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.profiler.HeapObject max_heap_by_size = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->max_heap_by_size_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->max_heap_by_size(static_cast<int>(i)),
      output);
  }

  // map<int32, .tensorflow.profiler.BufferSpan> logical_buffer_spans = 5;
  if (!this->logical_buffer_spans().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->logical_buffer_spans().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->logical_buffer_spans().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::const_iterator
          it = this->logical_buffer_spans().begin();
          it != this->logical_buffer_spans().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PreprocessResult_LogicalBufferSpansEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(logical_buffer_spans_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::std::unique_ptr<PreprocessResult_LogicalBufferSpansEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::const_iterator
          it = this->logical_buffer_spans().begin();
          it != this->logical_buffer_spans().end(); ++it) {
        entry.reset(logical_buffer_spans_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  // repeated int32 max_heap_to_by_size = 6;
  if (this->max_heap_to_by_size_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _max_heap_to_by_size_cached_byte_size_));
  }
  for (int i = 0, n = this->max_heap_to_by_size_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->max_heap_to_by_size(i), output);
  }

  // repeated int32 by_size_to_max_heap = 7;
  if (this->by_size_to_max_heap_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _by_size_to_max_heap_cached_byte_size_));
  }
  for (int i = 0, n = this->by_size_to_max_heap_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->by_size_to_max_heap(i), output);
  }

  // string module_name = 8;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PreprocessResult.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->module_name(), output);
  }

  // string entry_computation_name = 9;
  if (this->entry_computation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entry_computation_name().data(), static_cast<int>(this->entry_computation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PreprocessResult.entry_computation_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->entry_computation_name(), output);
  }

  // double peak_heap_mib = 10;
  if (this->peak_heap_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->peak_heap_mib(), output);
  }

  // double peak_unpadded_heap_mib = 11;
  if (this->peak_unpadded_heap_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->peak_unpadded_heap_mib(), output);
  }

  // int32 peak_heap_size_position = 12;
  if (this->peak_heap_size_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->peak_heap_size_position(), output);
  }

  // double entry_computation_parameters_mib = 13;
  if (this->entry_computation_parameters_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->entry_computation_parameters_mib(), output);
  }

  // double non_reusable_mib = 14;
  if (this->non_reusable_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->non_reusable_mib(), output);
  }

  // double maybe_live_out_mib = 15;
  if (this->maybe_live_out_mib() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->maybe_live_out_mib(), output);
  }

  // repeated .tensorflow.profiler.BufferAllocation indefinite_lifetimes = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indefinite_lifetimes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->indefinite_lifetimes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PreprocessResult)
}

::google::protobuf::uint8* PreprocessResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PreprocessResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double heap_sizes = 1;
  if (this->heap_sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _heap_sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->heap_sizes_, target);
  }

  // repeated double unpadded_heap_sizes = 2;
  if (this->unpadded_heap_sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _unpadded_heap_sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->unpadded_heap_sizes_, target);
  }

  // repeated .tensorflow.profiler.HeapObject max_heap = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->max_heap_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->max_heap(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.profiler.HeapObject max_heap_by_size = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->max_heap_by_size_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->max_heap_by_size(static_cast<int>(i)), deterministic, target);
  }

  // map<int32, .tensorflow.profiler.BufferSpan> logical_buffer_spans = 5;
  if (!this->logical_buffer_spans().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->logical_buffer_spans().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->logical_buffer_spans().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::const_iterator
          it = this->logical_buffer_spans().begin();
          it != this->logical_buffer_spans().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PreprocessResult_LogicalBufferSpansEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(logical_buffer_spans_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<PreprocessResult_LogicalBufferSpansEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::const_iterator
          it = this->logical_buffer_spans().begin();
          it != this->logical_buffer_spans().end(); ++it) {
        entry.reset(logical_buffer_spans_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  // repeated int32 max_heap_to_by_size = 6;
  if (this->max_heap_to_by_size_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _max_heap_to_by_size_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->max_heap_to_by_size_, target);
  }

  // repeated int32 by_size_to_max_heap = 7;
  if (this->by_size_to_max_heap_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _by_size_to_max_heap_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->by_size_to_max_heap_, target);
  }

  // string module_name = 8;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PreprocessResult.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->module_name(), target);
  }

  // string entry_computation_name = 9;
  if (this->entry_computation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entry_computation_name().data(), static_cast<int>(this->entry_computation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.PreprocessResult.entry_computation_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entry_computation_name(), target);
  }

  // double peak_heap_mib = 10;
  if (this->peak_heap_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->peak_heap_mib(), target);
  }

  // double peak_unpadded_heap_mib = 11;
  if (this->peak_unpadded_heap_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->peak_unpadded_heap_mib(), target);
  }

  // int32 peak_heap_size_position = 12;
  if (this->peak_heap_size_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->peak_heap_size_position(), target);
  }

  // double entry_computation_parameters_mib = 13;
  if (this->entry_computation_parameters_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->entry_computation_parameters_mib(), target);
  }

  // double non_reusable_mib = 14;
  if (this->non_reusable_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->non_reusable_mib(), target);
  }

  // double maybe_live_out_mib = 15;
  if (this->maybe_live_out_mib() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->maybe_live_out_mib(), target);
  }

  // repeated .tensorflow.profiler.BufferAllocation indefinite_lifetimes = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indefinite_lifetimes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->indefinite_lifetimes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PreprocessResult)
  return target;
}

size_t PreprocessResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PreprocessResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double heap_sizes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->heap_sizes_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _heap_sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double unpadded_heap_sizes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->unpadded_heap_sizes_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unpadded_heap_sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .tensorflow.profiler.HeapObject max_heap = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->max_heap_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->max_heap(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.HeapObject max_heap_by_size = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->max_heap_by_size_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->max_heap_by_size(static_cast<int>(i)));
    }
  }

  // map<int32, .tensorflow.profiler.BufferSpan> logical_buffer_spans = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->logical_buffer_spans_size());
  {
    ::std::unique_ptr<PreprocessResult_LogicalBufferSpansEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::profiler::BufferSpan >::const_iterator
        it = this->logical_buffer_spans().begin();
        it != this->logical_buffer_spans().end(); ++it) {
      entry.reset(logical_buffer_spans_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated int32 max_heap_to_by_size = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->max_heap_to_by_size_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _max_heap_to_by_size_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 by_size_to_max_heap = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->by_size_to_max_heap_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _by_size_to_max_heap_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .tensorflow.profiler.BufferAllocation indefinite_lifetimes = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->indefinite_lifetimes_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->indefinite_lifetimes(static_cast<int>(i)));
    }
  }

  // string module_name = 8;
  if (this->module_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->module_name());
  }

  // string entry_computation_name = 9;
  if (this->entry_computation_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entry_computation_name());
  }

  // double peak_heap_mib = 10;
  if (this->peak_heap_mib() != 0) {
    total_size += 1 + 8;
  }

  // double peak_unpadded_heap_mib = 11;
  if (this->peak_unpadded_heap_mib() != 0) {
    total_size += 1 + 8;
  }

  // double entry_computation_parameters_mib = 13;
  if (this->entry_computation_parameters_mib() != 0) {
    total_size += 1 + 8;
  }

  // double non_reusable_mib = 14;
  if (this->non_reusable_mib() != 0) {
    total_size += 1 + 8;
  }

  // double maybe_live_out_mib = 15;
  if (this->maybe_live_out_mib() != 0) {
    total_size += 1 + 8;
  }

  // int32 peak_heap_size_position = 12;
  if (this->peak_heap_size_position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peak_heap_size_position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreprocessResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PreprocessResult)
  GOOGLE_DCHECK_NE(&from, this);
  const PreprocessResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PreprocessResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PreprocessResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PreprocessResult)
    MergeFrom(*source);
  }
}

void PreprocessResult::MergeFrom(const PreprocessResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PreprocessResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heap_sizes_.MergeFrom(from.heap_sizes_);
  unpadded_heap_sizes_.MergeFrom(from.unpadded_heap_sizes_);
  max_heap_.MergeFrom(from.max_heap_);
  max_heap_by_size_.MergeFrom(from.max_heap_by_size_);
  logical_buffer_spans_.MergeFrom(from.logical_buffer_spans_);
  max_heap_to_by_size_.MergeFrom(from.max_heap_to_by_size_);
  by_size_to_max_heap_.MergeFrom(from.by_size_to_max_heap_);
  indefinite_lifetimes_.MergeFrom(from.indefinite_lifetimes_);
  if (from.module_name().size() > 0) {

    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  if (from.entry_computation_name().size() > 0) {

    entry_computation_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_computation_name_);
  }
  if (from.peak_heap_mib() != 0) {
    set_peak_heap_mib(from.peak_heap_mib());
  }
  if (from.peak_unpadded_heap_mib() != 0) {
    set_peak_unpadded_heap_mib(from.peak_unpadded_heap_mib());
  }
  if (from.entry_computation_parameters_mib() != 0) {
    set_entry_computation_parameters_mib(from.entry_computation_parameters_mib());
  }
  if (from.non_reusable_mib() != 0) {
    set_non_reusable_mib(from.non_reusable_mib());
  }
  if (from.maybe_live_out_mib() != 0) {
    set_maybe_live_out_mib(from.maybe_live_out_mib());
  }
  if (from.peak_heap_size_position() != 0) {
    set_peak_heap_size_position(from.peak_heap_size_position());
  }
}

void PreprocessResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PreprocessResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreprocessResult::CopyFrom(const PreprocessResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PreprocessResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreprocessResult::IsInitialized() const {
  return true;
}

void PreprocessResult::Swap(PreprocessResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PreprocessResult::InternalSwap(PreprocessResult* other) {
  using std::swap;
  heap_sizes_.InternalSwap(&other->heap_sizes_);
  unpadded_heap_sizes_.InternalSwap(&other->unpadded_heap_sizes_);
  CastToBase(&max_heap_)->InternalSwap(CastToBase(&other->max_heap_));
  CastToBase(&max_heap_by_size_)->InternalSwap(CastToBase(&other->max_heap_by_size_));
  logical_buffer_spans_.Swap(&other->logical_buffer_spans_);
  max_heap_to_by_size_.InternalSwap(&other->max_heap_to_by_size_);
  by_size_to_max_heap_.InternalSwap(&other->by_size_to_max_heap_);
  CastToBase(&indefinite_lifetimes_)->InternalSwap(CastToBase(&other->indefinite_lifetimes_));
  module_name_.Swap(&other->module_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  entry_computation_name_.Swap(&other->entry_computation_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(peak_heap_mib_, other->peak_heap_mib_);
  swap(peak_unpadded_heap_mib_, other->peak_unpadded_heap_mib_);
  swap(entry_computation_parameters_mib_, other->entry_computation_parameters_mib_);
  swap(non_reusable_mib_, other->non_reusable_mib_);
  swap(maybe_live_out_mib_, other->maybe_live_out_mib_);
  swap(peak_heap_size_position_, other->peak_heap_size_position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PreprocessResult::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fviewer_5fpreprocess_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::HeapObject* Arena::CreateMaybeMessage< ::tensorflow::profiler::HeapObject >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::HeapObject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::BufferSpan* Arena::CreateMaybeMessage< ::tensorflow::profiler::BufferSpan >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::BufferSpan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::LogicalBuffer* Arena::CreateMaybeMessage< ::tensorflow::profiler::LogicalBuffer >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::LogicalBuffer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::BufferAllocation* Arena::CreateMaybeMessage< ::tensorflow::profiler::BufferAllocation >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::BufferAllocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PreprocessResult_LogicalBufferSpansEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PreprocessResult* Arena::CreateMaybeMessage< ::tensorflow::profiler::PreprocessResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PreprocessResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
