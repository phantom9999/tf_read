// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/tfstreamz.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto 

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto
namespace tensorflow {
namespace profiler {
namespace tfstreamz {
class PercentilePoint;
class PercentilePointDefaultTypeInternal;
extern PercentilePointDefaultTypeInternal _PercentilePoint_default_instance_;
class Percentiles;
class PercentilesDefaultTypeInternal;
extern PercentilesDefaultTypeInternal _Percentiles_default_instance_;
}  // namespace tfstreamz
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::profiler::tfstreamz::PercentilePoint* Arena::CreateMaybeMessage<::tensorflow::profiler::tfstreamz::PercentilePoint>(Arena*);
template<> ::tensorflow::profiler::tfstreamz::Percentiles* Arena::CreateMaybeMessage<::tensorflow::profiler::tfstreamz::Percentiles>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace profiler {
namespace tfstreamz {

enum UnitOfMeasure {
  NUMBER = 0,
  TIME = 1,
  BYTES = 2,
  UnitOfMeasure_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnitOfMeasure_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnitOfMeasure_IsValid(int value);
const UnitOfMeasure UnitOfMeasure_MIN = NUMBER;
const UnitOfMeasure UnitOfMeasure_MAX = BYTES;
const int UnitOfMeasure_ARRAYSIZE = UnitOfMeasure_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnitOfMeasure_descriptor();
inline const ::std::string& UnitOfMeasure_Name(UnitOfMeasure value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnitOfMeasure_descriptor(), value);
}
inline bool UnitOfMeasure_Parse(
    const ::std::string& name, UnitOfMeasure* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnitOfMeasure>(
    UnitOfMeasure_descriptor(), name, value);
}
// ===================================================================

class PercentilePoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.tfstreamz.PercentilePoint) */ {
 public:
  PercentilePoint();
  virtual ~PercentilePoint();

  PercentilePoint(const PercentilePoint& from);

  inline PercentilePoint& operator=(const PercentilePoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PercentilePoint(PercentilePoint&& from) noexcept
    : PercentilePoint() {
    *this = ::std::move(from);
  }

  inline PercentilePoint& operator=(PercentilePoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PercentilePoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PercentilePoint* internal_default_instance() {
    return reinterpret_cast<const PercentilePoint*>(
               &_PercentilePoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PercentilePoint* other);
  friend void swap(PercentilePoint& a, PercentilePoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PercentilePoint* New() const final {
    return CreateMaybeMessage<PercentilePoint>(NULL);
  }

  PercentilePoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PercentilePoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PercentilePoint& from);
  void MergeFrom(const PercentilePoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PercentilePoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double percentile = 1;
  void clear_percentile();
  static const int kPercentileFieldNumber = 1;
  double percentile() const;
  void set_percentile(double value);

  // double value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.tfstreamz.PercentilePoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double percentile_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Percentiles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.tfstreamz.Percentiles) */ {
 public:
  Percentiles();
  virtual ~Percentiles();

  Percentiles(const Percentiles& from);

  inline Percentiles& operator=(const Percentiles& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Percentiles(Percentiles&& from) noexcept
    : Percentiles() {
    *this = ::std::move(from);
  }

  inline Percentiles& operator=(Percentiles&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Percentiles& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Percentiles* internal_default_instance() {
    return reinterpret_cast<const Percentiles*>(
               &_Percentiles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Percentiles* other);
  friend void swap(Percentiles& a, Percentiles& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Percentiles* New() const final {
    return CreateMaybeMessage<Percentiles>(NULL);
  }

  Percentiles* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Percentiles>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Percentiles& from);
  void MergeFrom(const Percentiles& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Percentiles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensorflow.profiler.tfstreamz.PercentilePoint points = 11;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 11;
  ::tensorflow::profiler::tfstreamz::PercentilePoint* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::tfstreamz::PercentilePoint >*
      mutable_points();
  const ::tensorflow::profiler::tfstreamz::PercentilePoint& points(int index) const;
  ::tensorflow::profiler::tfstreamz::PercentilePoint* add_points();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::tfstreamz::PercentilePoint >&
      points() const;

  // uint64 start_nstime = 2;
  void clear_start_nstime();
  static const int kStartNstimeFieldNumber = 2;
  ::google::protobuf::uint64 start_nstime() const;
  void set_start_nstime(::google::protobuf::uint64 value);

  // uint64 end_nstime = 3;
  void clear_end_nstime();
  static const int kEndNstimeFieldNumber = 3;
  ::google::protobuf::uint64 end_nstime() const;
  void set_end_nstime(::google::protobuf::uint64 value);

  // double min_value = 4;
  void clear_min_value();
  static const int kMinValueFieldNumber = 4;
  double min_value() const;
  void set_min_value(double value);

  // double max_value = 5;
  void clear_max_value();
  static const int kMaxValueFieldNumber = 5;
  double max_value() const;
  void set_max_value(double value);

  // double mean = 6;
  void clear_mean();
  static const int kMeanFieldNumber = 6;
  double mean() const;
  void set_mean(double value);

  // double stddev = 7;
  void clear_stddev();
  static const int kStddevFieldNumber = 7;
  double stddev() const;
  void set_stddev(double value);

  // uint64 num_samples = 8;
  void clear_num_samples();
  static const int kNumSamplesFieldNumber = 8;
  ::google::protobuf::uint64 num_samples() const;
  void set_num_samples(::google::protobuf::uint64 value);

  // uint64 total_samples = 9;
  void clear_total_samples();
  static const int kTotalSamplesFieldNumber = 9;
  ::google::protobuf::uint64 total_samples() const;
  void set_total_samples(::google::protobuf::uint64 value);

  // double accumulator = 10;
  void clear_accumulator();
  static const int kAccumulatorFieldNumber = 10;
  double accumulator() const;
  void set_accumulator(double value);

  // .tensorflow.profiler.tfstreamz.UnitOfMeasure unit_of_measure = 1;
  void clear_unit_of_measure();
  static const int kUnitOfMeasureFieldNumber = 1;
  ::tensorflow::profiler::tfstreamz::UnitOfMeasure unit_of_measure() const;
  void set_unit_of_measure(::tensorflow::profiler::tfstreamz::UnitOfMeasure value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.tfstreamz.Percentiles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::tfstreamz::PercentilePoint > points_;
  ::google::protobuf::uint64 start_nstime_;
  ::google::protobuf::uint64 end_nstime_;
  double min_value_;
  double max_value_;
  double mean_;
  double stddev_;
  ::google::protobuf::uint64 num_samples_;
  ::google::protobuf::uint64 total_samples_;
  double accumulator_;
  int unit_of_measure_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PercentilePoint

// double percentile = 1;
inline void PercentilePoint::clear_percentile() {
  percentile_ = 0;
}
inline double PercentilePoint::percentile() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.PercentilePoint.percentile)
  return percentile_;
}
inline void PercentilePoint::set_percentile(double value) {
  
  percentile_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.PercentilePoint.percentile)
}

// double value = 2;
inline void PercentilePoint::clear_value() {
  value_ = 0;
}
inline double PercentilePoint::value() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.PercentilePoint.value)
  return value_;
}
inline void PercentilePoint::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.PercentilePoint.value)
}

// -------------------------------------------------------------------

// Percentiles

// .tensorflow.profiler.tfstreamz.UnitOfMeasure unit_of_measure = 1;
inline void Percentiles::clear_unit_of_measure() {
  unit_of_measure_ = 0;
}
inline ::tensorflow::profiler::tfstreamz::UnitOfMeasure Percentiles::unit_of_measure() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.unit_of_measure)
  return static_cast< ::tensorflow::profiler::tfstreamz::UnitOfMeasure >(unit_of_measure_);
}
inline void Percentiles::set_unit_of_measure(::tensorflow::profiler::tfstreamz::UnitOfMeasure value) {
  
  unit_of_measure_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.unit_of_measure)
}

// uint64 start_nstime = 2;
inline void Percentiles::clear_start_nstime() {
  start_nstime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Percentiles::start_nstime() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.start_nstime)
  return start_nstime_;
}
inline void Percentiles::set_start_nstime(::google::protobuf::uint64 value) {
  
  start_nstime_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.start_nstime)
}

// uint64 end_nstime = 3;
inline void Percentiles::clear_end_nstime() {
  end_nstime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Percentiles::end_nstime() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.end_nstime)
  return end_nstime_;
}
inline void Percentiles::set_end_nstime(::google::protobuf::uint64 value) {
  
  end_nstime_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.end_nstime)
}

// double min_value = 4;
inline void Percentiles::clear_min_value() {
  min_value_ = 0;
}
inline double Percentiles::min_value() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.min_value)
  return min_value_;
}
inline void Percentiles::set_min_value(double value) {
  
  min_value_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.min_value)
}

// double max_value = 5;
inline void Percentiles::clear_max_value() {
  max_value_ = 0;
}
inline double Percentiles::max_value() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.max_value)
  return max_value_;
}
inline void Percentiles::set_max_value(double value) {
  
  max_value_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.max_value)
}

// double mean = 6;
inline void Percentiles::clear_mean() {
  mean_ = 0;
}
inline double Percentiles::mean() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.mean)
  return mean_;
}
inline void Percentiles::set_mean(double value) {
  
  mean_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.mean)
}

// double stddev = 7;
inline void Percentiles::clear_stddev() {
  stddev_ = 0;
}
inline double Percentiles::stddev() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.stddev)
  return stddev_;
}
inline void Percentiles::set_stddev(double value) {
  
  stddev_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.stddev)
}

// uint64 num_samples = 8;
inline void Percentiles::clear_num_samples() {
  num_samples_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Percentiles::num_samples() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.num_samples)
  return num_samples_;
}
inline void Percentiles::set_num_samples(::google::protobuf::uint64 value) {
  
  num_samples_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.num_samples)
}

// uint64 total_samples = 9;
inline void Percentiles::clear_total_samples() {
  total_samples_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Percentiles::total_samples() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.total_samples)
  return total_samples_;
}
inline void Percentiles::set_total_samples(::google::protobuf::uint64 value) {
  
  total_samples_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.total_samples)
}

// double accumulator = 10;
inline void Percentiles::clear_accumulator() {
  accumulator_ = 0;
}
inline double Percentiles::accumulator() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.accumulator)
  return accumulator_;
}
inline void Percentiles::set_accumulator(double value) {
  
  accumulator_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.tfstreamz.Percentiles.accumulator)
}

// repeated .tensorflow.profiler.tfstreamz.PercentilePoint points = 11;
inline int Percentiles::points_size() const {
  return points_.size();
}
inline void Percentiles::clear_points() {
  points_.Clear();
}
inline ::tensorflow::profiler::tfstreamz::PercentilePoint* Percentiles::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.tfstreamz.Percentiles.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::tfstreamz::PercentilePoint >*
Percentiles::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.tfstreamz.Percentiles.points)
  return &points_;
}
inline const ::tensorflow::profiler::tfstreamz::PercentilePoint& Percentiles::points(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.tfstreamz.Percentiles.points)
  return points_.Get(index);
}
inline ::tensorflow::profiler::tfstreamz::PercentilePoint* Percentiles::add_points() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.tfstreamz.Percentiles.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::tfstreamz::PercentilePoint >&
Percentiles::points() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.tfstreamz.Percentiles.points)
  return points_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tfstreamz
}  // namespace profiler
}  // namespace tensorflow

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tensorflow::profiler::tfstreamz::UnitOfMeasure> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tensorflow::profiler::tfstreamz::UnitOfMeasure>() {
  return ::tensorflow::profiler::tfstreamz::UnitOfMeasure_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto
