// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/memory_profile.proto

#include "tensorflow/core/profiler/protobuf/memory_profile.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ActiveAllocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MemoryActivityMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MemoryAggregationStats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MemoryProfileSummary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MemoryProfileSnapshot;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_PerAllocatorMemoryProfile;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto
namespace tensorflow {
namespace profiler {
class MemoryAggregationStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryAggregationStats>
      _instance;
} _MemoryAggregationStats_default_instance_;
class MemoryActivityMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryActivityMetadata>
      _instance;
} _MemoryActivityMetadata_default_instance_;
class MemoryProfileSnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryProfileSnapshot>
      _instance;
} _MemoryProfileSnapshot_default_instance_;
class MemoryProfileSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryProfileSummary>
      _instance;
} _MemoryProfileSummary_default_instance_;
class ActiveAllocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActiveAllocation>
      _instance;
} _ActiveAllocation_default_instance_;
class PerAllocatorMemoryProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerAllocatorMemoryProfile>
      _instance;
} _PerAllocatorMemoryProfile_default_instance_;
class MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse>
      _instance;
} _MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse_default_instance_;
class MemoryProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryProfile>
      _instance;
} _MemoryProfile_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto {
static void InitDefaultsMemoryAggregationStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_MemoryAggregationStats_default_instance_;
    new (ptr) ::tensorflow::profiler::MemoryAggregationStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::MemoryAggregationStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemoryAggregationStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemoryAggregationStats}, {}};

static void InitDefaultsMemoryActivityMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_MemoryActivityMetadata_default_instance_;
    new (ptr) ::tensorflow::profiler::MemoryActivityMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::MemoryActivityMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemoryActivityMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemoryActivityMetadata}, {}};

static void InitDefaultsMemoryProfileSnapshot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_MemoryProfileSnapshot_default_instance_;
    new (ptr) ::tensorflow::profiler::MemoryProfileSnapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::MemoryProfileSnapshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MemoryProfileSnapshot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMemoryProfileSnapshot}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryAggregationStats.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryActivityMetadata.base,}};

static void InitDefaultsMemoryProfileSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_MemoryProfileSummary_default_instance_;
    new (ptr) ::tensorflow::profiler::MemoryProfileSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::MemoryProfileSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MemoryProfileSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMemoryProfileSummary}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryAggregationStats.base,}};

static void InitDefaultsActiveAllocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_ActiveAllocation_default_instance_;
    new (ptr) ::tensorflow::profiler::ActiveAllocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::ActiveAllocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActiveAllocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActiveAllocation}, {}};

static void InitDefaultsPerAllocatorMemoryProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PerAllocatorMemoryProfile_default_instance_;
    new (ptr) ::tensorflow::profiler::PerAllocatorMemoryProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PerAllocatorMemoryProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_PerAllocatorMemoryProfile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsPerAllocatorMemoryProfile}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfileSnapshot.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfileSummary.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_ActiveAllocation.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryActivityMetadata.base,}};

static void InitDefaultsMemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse();
  }
  ::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_PerAllocatorMemoryProfile.base,}};

static void InitDefaultsMemoryProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_MemoryProfile_default_instance_;
    new (ptr) ::tensorflow::profiler::MemoryProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::MemoryProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MemoryProfile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMemoryProfile}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryAggregationStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryActivityMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryProfileSnapshot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryProfileSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActiveAllocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PerAllocatorMemoryProfile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryProfile.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryAggregationStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryAggregationStats, stack_reserved_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryAggregationStats, heap_allocated_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryAggregationStats, free_memory_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryAggregationStats, fragmentation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryAggregationStats, peak_bytes_in_use_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, memory_activity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, requested_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, allocation_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, tf_op_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, step_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, region_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryActivityMetadata, tensor_shape_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSnapshot, time_offset_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSnapshot, aggregation_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSnapshot, activity_metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSummary, peak_bytes_usage_lifetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSummary, peak_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSummary, peak_stats_time_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfileSummary, memory_capacity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ActiveAllocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ActiveAllocation, snapshot_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ActiveAllocation, special_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::ActiveAllocation, num_occurrences_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerAllocatorMemoryProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerAllocatorMemoryProfile, memory_profile_snapshots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerAllocatorMemoryProfile, profile_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerAllocatorMemoryProfile, active_allocations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerAllocatorMemoryProfile, special_allocations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerAllocatorMemoryProfile, sampled_timeline_snapshots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile, memory_profile_per_allocator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile, num_hosts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile, memory_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::MemoryProfile, version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::MemoryAggregationStats)},
  { 10, -1, sizeof(::tensorflow::profiler::MemoryActivityMetadata)},
  { 24, -1, sizeof(::tensorflow::profiler::MemoryProfileSnapshot)},
  { 32, -1, sizeof(::tensorflow::profiler::MemoryProfileSummary)},
  { 41, -1, sizeof(::tensorflow::profiler::ActiveAllocation)},
  { 49, -1, sizeof(::tensorflow::profiler::PerAllocatorMemoryProfile)},
  { 59, 66, sizeof(::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse)},
  { 68, -1, sizeof(::tensorflow::profiler::MemoryProfile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_MemoryAggregationStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_MemoryActivityMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_MemoryProfileSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_MemoryProfileSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_ActiveAllocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PerAllocatorMemoryProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_MemoryProfile_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/memory_profile.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n6tensorflow/core/profiler/protobuf/memo"
      "ry_profile.proto\022\023tensorflow.profiler\"\241\001"
      "\n\026MemoryAggregationStats\022\034\n\024stack_reserv"
      "ed_bytes\030\001 \001(\003\022\034\n\024heap_allocated_bytes\030\002"
      " \001(\003\022\031\n\021free_memory_bytes\030\003 \001(\003\022\025\n\rfragm"
      "entation\030\004 \001(\001\022\031\n\021peak_bytes_in_use\030\005 \001("
      "\003\"\375\001\n\026MemoryActivityMetadata\022<\n\017memory_a"
      "ctivity\030\001 \001(\0162#.tensorflow.profiler.Memo"
      "ryActivity\022\027\n\017requested_bytes\030\002 \001(\003\022\030\n\020a"
      "llocation_bytes\030\003 \001(\003\022\017\n\007address\030\004 \001(\004\022\022"
      "\n\ntf_op_name\030\005 \001(\t\022\017\n\007step_id\030\006 \001(\003\022\023\n\013r"
      "egion_type\030\007 \001(\t\022\021\n\tdata_type\030\010 \001(\t\022\024\n\014t"
      "ensor_shape\030\t \001(\t\"\277\001\n\025MemoryProfileSnaps"
      "hot\022\026\n\016time_offset_ps\030\001 \001(\003\022F\n\021aggregati"
      "on_stats\030\002 \001(\0132+.tensorflow.profiler.Mem"
      "oryAggregationStats\022F\n\021activity_metadata"
      "\030\003 \001(\0132+.tensorflow.profiler.MemoryActiv"
      "ityMetadata\"\257\001\n\024MemoryProfileSummary\022!\n\031"
      "peak_bytes_usage_lifetime\030\001 \001(\003\022\?\n\npeak_"
      "stats\030\002 \001(\0132+.tensorflow.profiler.Memory"
      "AggregationStats\022\032\n\022peak_stats_time_ps\030\003"
      " \001(\003\022\027\n\017memory_capacity\030\004 \001(\003\"Z\n\020ActiveA"
      "llocation\022\026\n\016snapshot_index\030\001 \001(\003\022\025\n\rspe"
      "cial_index\030\002 \001(\003\022\027\n\017num_occurrences\030\003 \001("
      "\003\"\212\003\n\031PerAllocatorMemoryProfile\022L\n\030memor"
      "y_profile_snapshots\030\001 \003(\0132*.tensorflow.p"
      "rofiler.MemoryProfileSnapshot\022B\n\017profile"
      "_summary\030\002 \001(\0132).tensorflow.profiler.Mem"
      "oryProfileSummary\022A\n\022active_allocations\030"
      "\003 \003(\0132%.tensorflow.profiler.ActiveAlloca"
      "tion\022H\n\023special_allocations\030\004 \003(\0132+.tens"
      "orflow.profiler.MemoryActivityMetadata\022N"
      "\n\032sampled_timeline_snapshots\030\005 \003(\0132*.ten"
      "sorflow.profiler.MemoryProfileSnapshot\"\250"
      "\002\n\rMemoryProfile\022g\n\034memory_profile_per_a"
      "llocator\030\001 \003(\0132A.tensorflow.profiler.Mem"
      "oryProfile.MemoryProfilePerAllocatorEntr"
      "y\022\021\n\tnum_hosts\030\002 \001(\005\022\022\n\nmemory_ids\030\003 \003(\t"
      "\022\017\n\007version\030\005 \001(\005\032p\n\036MemoryProfilePerAll"
      "ocatorEntry\022\013\n\003key\030\001 \001(\t\022=\n\005value\030\002 \001(\0132"
      "..tensorflow.profiler.PerAllocatorMemory"
      "Profile:\0028\001J\004\010\004\020\005*h\n\016MemoryActivity\022\024\n\020U"
      "NKNOWN_ACTIVITY\020\000\022\016\n\nALLOCATION\020\001\022\020\n\014DEA"
      "LLOCATION\020\002\022\017\n\013RESERVATION\020\003\022\r\n\tEXPANSIO"
      "N\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1771);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/memory_profile.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto
namespace tensorflow {
namespace profiler {
const ::google::protobuf::EnumDescriptor* MemoryActivity_descriptor() {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_enum_descriptors[0];
}
bool MemoryActivity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MemoryAggregationStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryAggregationStats::kStackReservedBytesFieldNumber;
const int MemoryAggregationStats::kHeapAllocatedBytesFieldNumber;
const int MemoryAggregationStats::kFreeMemoryBytesFieldNumber;
const int MemoryAggregationStats::kFragmentationFieldNumber;
const int MemoryAggregationStats::kPeakBytesInUseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryAggregationStats::MemoryAggregationStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryAggregationStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.MemoryAggregationStats)
}
MemoryAggregationStats::MemoryAggregationStats(const MemoryAggregationStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stack_reserved_bytes_, &from.stack_reserved_bytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&peak_bytes_in_use_) -
    reinterpret_cast<char*>(&stack_reserved_bytes_)) + sizeof(peak_bytes_in_use_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.MemoryAggregationStats)
}

void MemoryAggregationStats::SharedCtor() {
  ::memset(&stack_reserved_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&peak_bytes_in_use_) -
      reinterpret_cast<char*>(&stack_reserved_bytes_)) + sizeof(peak_bytes_in_use_));
}

MemoryAggregationStats::~MemoryAggregationStats() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.MemoryAggregationStats)
  SharedDtor();
}

void MemoryAggregationStats::SharedDtor() {
}

void MemoryAggregationStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemoryAggregationStats::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemoryAggregationStats& MemoryAggregationStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryAggregationStats.base);
  return *internal_default_instance();
}


void MemoryAggregationStats::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.MemoryAggregationStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stack_reserved_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&peak_bytes_in_use_) -
      reinterpret_cast<char*>(&stack_reserved_bytes_)) + sizeof(peak_bytes_in_use_));
  _internal_metadata_.Clear();
}

bool MemoryAggregationStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.MemoryAggregationStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 stack_reserved_bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stack_reserved_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 heap_allocated_bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &heap_allocated_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 free_memory_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &free_memory_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fragmentation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fragmentation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 peak_bytes_in_use = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &peak_bytes_in_use_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.MemoryAggregationStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.MemoryAggregationStats)
  return false;
#undef DO_
}

void MemoryAggregationStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.MemoryAggregationStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 stack_reserved_bytes = 1;
  if (this->stack_reserved_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->stack_reserved_bytes(), output);
  }

  // int64 heap_allocated_bytes = 2;
  if (this->heap_allocated_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->heap_allocated_bytes(), output);
  }

  // int64 free_memory_bytes = 3;
  if (this->free_memory_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->free_memory_bytes(), output);
  }

  // double fragmentation = 4;
  if (this->fragmentation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->fragmentation(), output);
  }

  // int64 peak_bytes_in_use = 5;
  if (this->peak_bytes_in_use() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->peak_bytes_in_use(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.MemoryAggregationStats)
}

::google::protobuf::uint8* MemoryAggregationStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.MemoryAggregationStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 stack_reserved_bytes = 1;
  if (this->stack_reserved_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->stack_reserved_bytes(), target);
  }

  // int64 heap_allocated_bytes = 2;
  if (this->heap_allocated_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->heap_allocated_bytes(), target);
  }

  // int64 free_memory_bytes = 3;
  if (this->free_memory_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->free_memory_bytes(), target);
  }

  // double fragmentation = 4;
  if (this->fragmentation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->fragmentation(), target);
  }

  // int64 peak_bytes_in_use = 5;
  if (this->peak_bytes_in_use() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->peak_bytes_in_use(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.MemoryAggregationStats)
  return target;
}

size_t MemoryAggregationStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.MemoryAggregationStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 stack_reserved_bytes = 1;
  if (this->stack_reserved_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stack_reserved_bytes());
  }

  // int64 heap_allocated_bytes = 2;
  if (this->heap_allocated_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->heap_allocated_bytes());
  }

  // int64 free_memory_bytes = 3;
  if (this->free_memory_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->free_memory_bytes());
  }

  // double fragmentation = 4;
  if (this->fragmentation() != 0) {
    total_size += 1 + 8;
  }

  // int64 peak_bytes_in_use = 5;
  if (this->peak_bytes_in_use() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->peak_bytes_in_use());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryAggregationStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.MemoryAggregationStats)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryAggregationStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryAggregationStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.MemoryAggregationStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.MemoryAggregationStats)
    MergeFrom(*source);
  }
}

void MemoryAggregationStats::MergeFrom(const MemoryAggregationStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.MemoryAggregationStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stack_reserved_bytes() != 0) {
    set_stack_reserved_bytes(from.stack_reserved_bytes());
  }
  if (from.heap_allocated_bytes() != 0) {
    set_heap_allocated_bytes(from.heap_allocated_bytes());
  }
  if (from.free_memory_bytes() != 0) {
    set_free_memory_bytes(from.free_memory_bytes());
  }
  if (from.fragmentation() != 0) {
    set_fragmentation(from.fragmentation());
  }
  if (from.peak_bytes_in_use() != 0) {
    set_peak_bytes_in_use(from.peak_bytes_in_use());
  }
}

void MemoryAggregationStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.MemoryAggregationStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryAggregationStats::CopyFrom(const MemoryAggregationStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.MemoryAggregationStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryAggregationStats::IsInitialized() const {
  return true;
}

void MemoryAggregationStats::Swap(MemoryAggregationStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryAggregationStats::InternalSwap(MemoryAggregationStats* other) {
  using std::swap;
  swap(stack_reserved_bytes_, other->stack_reserved_bytes_);
  swap(heap_allocated_bytes_, other->heap_allocated_bytes_);
  swap(free_memory_bytes_, other->free_memory_bytes_);
  swap(fragmentation_, other->fragmentation_);
  swap(peak_bytes_in_use_, other->peak_bytes_in_use_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemoryAggregationStats::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemoryActivityMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryActivityMetadata::kMemoryActivityFieldNumber;
const int MemoryActivityMetadata::kRequestedBytesFieldNumber;
const int MemoryActivityMetadata::kAllocationBytesFieldNumber;
const int MemoryActivityMetadata::kAddressFieldNumber;
const int MemoryActivityMetadata::kTfOpNameFieldNumber;
const int MemoryActivityMetadata::kStepIdFieldNumber;
const int MemoryActivityMetadata::kRegionTypeFieldNumber;
const int MemoryActivityMetadata::kDataTypeFieldNumber;
const int MemoryActivityMetadata::kTensorShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryActivityMetadata::MemoryActivityMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryActivityMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.MemoryActivityMetadata)
}
MemoryActivityMetadata::MemoryActivityMetadata(const MemoryActivityMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tf_op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tf_op_name().size() > 0) {
    tf_op_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tf_op_name_);
  }
  region_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region_type().size() > 0) {
    region_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_type_);
  }
  data_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_type().size() > 0) {
    data_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_type_);
  }
  tensor_shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tensor_shape().size() > 0) {
    tensor_shape_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tensor_shape_);
  }
  ::memcpy(&requested_bytes_, &from.requested_bytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&memory_activity_) -
    reinterpret_cast<char*>(&requested_bytes_)) + sizeof(memory_activity_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.MemoryActivityMetadata)
}

void MemoryActivityMetadata::SharedCtor() {
  tf_op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tensor_shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&requested_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_activity_) -
      reinterpret_cast<char*>(&requested_bytes_)) + sizeof(memory_activity_));
}

MemoryActivityMetadata::~MemoryActivityMetadata() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.MemoryActivityMetadata)
  SharedDtor();
}

void MemoryActivityMetadata::SharedDtor() {
  tf_op_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tensor_shape_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MemoryActivityMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemoryActivityMetadata::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemoryActivityMetadata& MemoryActivityMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryActivityMetadata.base);
  return *internal_default_instance();
}


void MemoryActivityMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.MemoryActivityMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tf_op_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tensor_shape_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&requested_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_activity_) -
      reinterpret_cast<char*>(&requested_bytes_)) + sizeof(memory_activity_));
  _internal_metadata_.Clear();
}

bool MemoryActivityMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.MemoryActivityMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.profiler.MemoryActivity memory_activity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_memory_activity(static_cast< ::tensorflow::profiler::MemoryActivity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 requested_bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &requested_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 allocation_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &allocation_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tf_op_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tf_op_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tf_op_name().data(), static_cast<int>(this->tf_op_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.MemoryActivityMetadata.tf_op_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 step_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region_type().data(), static_cast<int>(this->region_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.MemoryActivityMetadata.region_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_type().data(), static_cast<int>(this->data_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.MemoryActivityMetadata.data_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tensor_shape = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tensor_shape()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tensor_shape().data(), static_cast<int>(this->tensor_shape().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.MemoryActivityMetadata.tensor_shape"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.MemoryActivityMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.MemoryActivityMetadata)
  return false;
#undef DO_
}

void MemoryActivityMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.MemoryActivityMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.MemoryActivity memory_activity = 1;
  if (this->memory_activity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->memory_activity(), output);
  }

  // int64 requested_bytes = 2;
  if (this->requested_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->requested_bytes(), output);
  }

  // int64 allocation_bytes = 3;
  if (this->allocation_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->allocation_bytes(), output);
  }

  // uint64 address = 4;
  if (this->address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->address(), output);
  }

  // string tf_op_name = 5;
  if (this->tf_op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tf_op_name().data(), static_cast<int>(this->tf_op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryActivityMetadata.tf_op_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tf_op_name(), output);
  }

  // int64 step_id = 6;
  if (this->step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->step_id(), output);
  }

  // string region_type = 7;
  if (this->region_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region_type().data(), static_cast<int>(this->region_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryActivityMetadata.region_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->region_type(), output);
  }

  // string data_type = 8;
  if (this->data_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_type().data(), static_cast<int>(this->data_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryActivityMetadata.data_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->data_type(), output);
  }

  // string tensor_shape = 9;
  if (this->tensor_shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensor_shape().data(), static_cast<int>(this->tensor_shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryActivityMetadata.tensor_shape");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->tensor_shape(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.MemoryActivityMetadata)
}

::google::protobuf::uint8* MemoryActivityMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.MemoryActivityMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.MemoryActivity memory_activity = 1;
  if (this->memory_activity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->memory_activity(), target);
  }

  // int64 requested_bytes = 2;
  if (this->requested_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->requested_bytes(), target);
  }

  // int64 allocation_bytes = 3;
  if (this->allocation_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->allocation_bytes(), target);
  }

  // uint64 address = 4;
  if (this->address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->address(), target);
  }

  // string tf_op_name = 5;
  if (this->tf_op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tf_op_name().data(), static_cast<int>(this->tf_op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryActivityMetadata.tf_op_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tf_op_name(), target);
  }

  // int64 step_id = 6;
  if (this->step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->step_id(), target);
  }

  // string region_type = 7;
  if (this->region_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region_type().data(), static_cast<int>(this->region_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryActivityMetadata.region_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->region_type(), target);
  }

  // string data_type = 8;
  if (this->data_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_type().data(), static_cast<int>(this->data_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryActivityMetadata.data_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->data_type(), target);
  }

  // string tensor_shape = 9;
  if (this->tensor_shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensor_shape().data(), static_cast<int>(this->tensor_shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryActivityMetadata.tensor_shape");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->tensor_shape(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.MemoryActivityMetadata)
  return target;
}

size_t MemoryActivityMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.MemoryActivityMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tf_op_name = 5;
  if (this->tf_op_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tf_op_name());
  }

  // string region_type = 7;
  if (this->region_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region_type());
  }

  // string data_type = 8;
  if (this->data_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_type());
  }

  // string tensor_shape = 9;
  if (this->tensor_shape().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tensor_shape());
  }

  // int64 requested_bytes = 2;
  if (this->requested_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->requested_bytes());
  }

  // int64 allocation_bytes = 3;
  if (this->allocation_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->allocation_bytes());
  }

  // uint64 address = 4;
  if (this->address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->address());
  }

  // int64 step_id = 6;
  if (this->step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step_id());
  }

  // .tensorflow.profiler.MemoryActivity memory_activity = 1;
  if (this->memory_activity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->memory_activity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryActivityMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.MemoryActivityMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryActivityMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryActivityMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.MemoryActivityMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.MemoryActivityMetadata)
    MergeFrom(*source);
  }
}

void MemoryActivityMetadata::MergeFrom(const MemoryActivityMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.MemoryActivityMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tf_op_name().size() > 0) {

    tf_op_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tf_op_name_);
  }
  if (from.region_type().size() > 0) {

    region_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_type_);
  }
  if (from.data_type().size() > 0) {

    data_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_type_);
  }
  if (from.tensor_shape().size() > 0) {

    tensor_shape_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tensor_shape_);
  }
  if (from.requested_bytes() != 0) {
    set_requested_bytes(from.requested_bytes());
  }
  if (from.allocation_bytes() != 0) {
    set_allocation_bytes(from.allocation_bytes());
  }
  if (from.address() != 0) {
    set_address(from.address());
  }
  if (from.step_id() != 0) {
    set_step_id(from.step_id());
  }
  if (from.memory_activity() != 0) {
    set_memory_activity(from.memory_activity());
  }
}

void MemoryActivityMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.MemoryActivityMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryActivityMetadata::CopyFrom(const MemoryActivityMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.MemoryActivityMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryActivityMetadata::IsInitialized() const {
  return true;
}

void MemoryActivityMetadata::Swap(MemoryActivityMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryActivityMetadata::InternalSwap(MemoryActivityMetadata* other) {
  using std::swap;
  tf_op_name_.Swap(&other->tf_op_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_type_.Swap(&other->region_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_type_.Swap(&other->data_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tensor_shape_.Swap(&other->tensor_shape_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requested_bytes_, other->requested_bytes_);
  swap(allocation_bytes_, other->allocation_bytes_);
  swap(address_, other->address_);
  swap(step_id_, other->step_id_);
  swap(memory_activity_, other->memory_activity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemoryActivityMetadata::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemoryProfileSnapshot::InitAsDefaultInstance() {
  ::tensorflow::profiler::_MemoryProfileSnapshot_default_instance_._instance.get_mutable()->aggregation_stats_ = const_cast< ::tensorflow::profiler::MemoryAggregationStats*>(
      ::tensorflow::profiler::MemoryAggregationStats::internal_default_instance());
  ::tensorflow::profiler::_MemoryProfileSnapshot_default_instance_._instance.get_mutable()->activity_metadata_ = const_cast< ::tensorflow::profiler::MemoryActivityMetadata*>(
      ::tensorflow::profiler::MemoryActivityMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryProfileSnapshot::kTimeOffsetPsFieldNumber;
const int MemoryProfileSnapshot::kAggregationStatsFieldNumber;
const int MemoryProfileSnapshot::kActivityMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryProfileSnapshot::MemoryProfileSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfileSnapshot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.MemoryProfileSnapshot)
}
MemoryProfileSnapshot::MemoryProfileSnapshot(const MemoryProfileSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_aggregation_stats()) {
    aggregation_stats_ = new ::tensorflow::profiler::MemoryAggregationStats(*from.aggregation_stats_);
  } else {
    aggregation_stats_ = NULL;
  }
  if (from.has_activity_metadata()) {
    activity_metadata_ = new ::tensorflow::profiler::MemoryActivityMetadata(*from.activity_metadata_);
  } else {
    activity_metadata_ = NULL;
  }
  time_offset_ps_ = from.time_offset_ps_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.MemoryProfileSnapshot)
}

void MemoryProfileSnapshot::SharedCtor() {
  ::memset(&aggregation_stats_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_offset_ps_) -
      reinterpret_cast<char*>(&aggregation_stats_)) + sizeof(time_offset_ps_));
}

MemoryProfileSnapshot::~MemoryProfileSnapshot() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.MemoryProfileSnapshot)
  SharedDtor();
}

void MemoryProfileSnapshot::SharedDtor() {
  if (this != internal_default_instance()) delete aggregation_stats_;
  if (this != internal_default_instance()) delete activity_metadata_;
}

void MemoryProfileSnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemoryProfileSnapshot::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemoryProfileSnapshot& MemoryProfileSnapshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfileSnapshot.base);
  return *internal_default_instance();
}


void MemoryProfileSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.MemoryProfileSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && aggregation_stats_ != NULL) {
    delete aggregation_stats_;
  }
  aggregation_stats_ = NULL;
  if (GetArenaNoVirtual() == NULL && activity_metadata_ != NULL) {
    delete activity_metadata_;
  }
  activity_metadata_ = NULL;
  time_offset_ps_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MemoryProfileSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.MemoryProfileSnapshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time_offset_ps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_offset_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.MemoryAggregationStats aggregation_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aggregation_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.MemoryActivityMetadata activity_metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_activity_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.MemoryProfileSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.MemoryProfileSnapshot)
  return false;
#undef DO_
}

void MemoryProfileSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.MemoryProfileSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time_offset_ps = 1;
  if (this->time_offset_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time_offset_ps(), output);
  }

  // .tensorflow.profiler.MemoryAggregationStats aggregation_stats = 2;
  if (this->has_aggregation_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_aggregation_stats(), output);
  }

  // .tensorflow.profiler.MemoryActivityMetadata activity_metadata = 3;
  if (this->has_activity_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_activity_metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.MemoryProfileSnapshot)
}

::google::protobuf::uint8* MemoryProfileSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.MemoryProfileSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time_offset_ps = 1;
  if (this->time_offset_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time_offset_ps(), target);
  }

  // .tensorflow.profiler.MemoryAggregationStats aggregation_stats = 2;
  if (this->has_aggregation_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_aggregation_stats(), deterministic, target);
  }

  // .tensorflow.profiler.MemoryActivityMetadata activity_metadata = 3;
  if (this->has_activity_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_activity_metadata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.MemoryProfileSnapshot)
  return target;
}

size_t MemoryProfileSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.MemoryProfileSnapshot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.profiler.MemoryAggregationStats aggregation_stats = 2;
  if (this->has_aggregation_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *aggregation_stats_);
  }

  // .tensorflow.profiler.MemoryActivityMetadata activity_metadata = 3;
  if (this->has_activity_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *activity_metadata_);
  }

  // int64 time_offset_ps = 1;
  if (this->time_offset_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_offset_ps());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryProfileSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.MemoryProfileSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryProfileSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryProfileSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.MemoryProfileSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.MemoryProfileSnapshot)
    MergeFrom(*source);
  }
}

void MemoryProfileSnapshot::MergeFrom(const MemoryProfileSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.MemoryProfileSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_aggregation_stats()) {
    mutable_aggregation_stats()->::tensorflow::profiler::MemoryAggregationStats::MergeFrom(from.aggregation_stats());
  }
  if (from.has_activity_metadata()) {
    mutable_activity_metadata()->::tensorflow::profiler::MemoryActivityMetadata::MergeFrom(from.activity_metadata());
  }
  if (from.time_offset_ps() != 0) {
    set_time_offset_ps(from.time_offset_ps());
  }
}

void MemoryProfileSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.MemoryProfileSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryProfileSnapshot::CopyFrom(const MemoryProfileSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.MemoryProfileSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryProfileSnapshot::IsInitialized() const {
  return true;
}

void MemoryProfileSnapshot::Swap(MemoryProfileSnapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryProfileSnapshot::InternalSwap(MemoryProfileSnapshot* other) {
  using std::swap;
  swap(aggregation_stats_, other->aggregation_stats_);
  swap(activity_metadata_, other->activity_metadata_);
  swap(time_offset_ps_, other->time_offset_ps_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemoryProfileSnapshot::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemoryProfileSummary::InitAsDefaultInstance() {
  ::tensorflow::profiler::_MemoryProfileSummary_default_instance_._instance.get_mutable()->peak_stats_ = const_cast< ::tensorflow::profiler::MemoryAggregationStats*>(
      ::tensorflow::profiler::MemoryAggregationStats::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryProfileSummary::kPeakBytesUsageLifetimeFieldNumber;
const int MemoryProfileSummary::kPeakStatsFieldNumber;
const int MemoryProfileSummary::kPeakStatsTimePsFieldNumber;
const int MemoryProfileSummary::kMemoryCapacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryProfileSummary::MemoryProfileSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfileSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.MemoryProfileSummary)
}
MemoryProfileSummary::MemoryProfileSummary(const MemoryProfileSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peak_stats()) {
    peak_stats_ = new ::tensorflow::profiler::MemoryAggregationStats(*from.peak_stats_);
  } else {
    peak_stats_ = NULL;
  }
  ::memcpy(&peak_bytes_usage_lifetime_, &from.peak_bytes_usage_lifetime_,
    static_cast<size_t>(reinterpret_cast<char*>(&memory_capacity_) -
    reinterpret_cast<char*>(&peak_bytes_usage_lifetime_)) + sizeof(memory_capacity_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.MemoryProfileSummary)
}

void MemoryProfileSummary::SharedCtor() {
  ::memset(&peak_stats_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_capacity_) -
      reinterpret_cast<char*>(&peak_stats_)) + sizeof(memory_capacity_));
}

MemoryProfileSummary::~MemoryProfileSummary() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.MemoryProfileSummary)
  SharedDtor();
}

void MemoryProfileSummary::SharedDtor() {
  if (this != internal_default_instance()) delete peak_stats_;
}

void MemoryProfileSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemoryProfileSummary::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemoryProfileSummary& MemoryProfileSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfileSummary.base);
  return *internal_default_instance();
}


void MemoryProfileSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.MemoryProfileSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && peak_stats_ != NULL) {
    delete peak_stats_;
  }
  peak_stats_ = NULL;
  ::memset(&peak_bytes_usage_lifetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_capacity_) -
      reinterpret_cast<char*>(&peak_bytes_usage_lifetime_)) + sizeof(memory_capacity_));
  _internal_metadata_.Clear();
}

bool MemoryProfileSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.MemoryProfileSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 peak_bytes_usage_lifetime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &peak_bytes_usage_lifetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.MemoryAggregationStats peak_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_peak_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 peak_stats_time_ps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &peak_stats_time_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 memory_capacity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &memory_capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.MemoryProfileSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.MemoryProfileSummary)
  return false;
#undef DO_
}

void MemoryProfileSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.MemoryProfileSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 peak_bytes_usage_lifetime = 1;
  if (this->peak_bytes_usage_lifetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->peak_bytes_usage_lifetime(), output);
  }

  // .tensorflow.profiler.MemoryAggregationStats peak_stats = 2;
  if (this->has_peak_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_peak_stats(), output);
  }

  // int64 peak_stats_time_ps = 3;
  if (this->peak_stats_time_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->peak_stats_time_ps(), output);
  }

  // int64 memory_capacity = 4;
  if (this->memory_capacity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->memory_capacity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.MemoryProfileSummary)
}

::google::protobuf::uint8* MemoryProfileSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.MemoryProfileSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 peak_bytes_usage_lifetime = 1;
  if (this->peak_bytes_usage_lifetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->peak_bytes_usage_lifetime(), target);
  }

  // .tensorflow.profiler.MemoryAggregationStats peak_stats = 2;
  if (this->has_peak_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_peak_stats(), deterministic, target);
  }

  // int64 peak_stats_time_ps = 3;
  if (this->peak_stats_time_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->peak_stats_time_ps(), target);
  }

  // int64 memory_capacity = 4;
  if (this->memory_capacity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->memory_capacity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.MemoryProfileSummary)
  return target;
}

size_t MemoryProfileSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.MemoryProfileSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.profiler.MemoryAggregationStats peak_stats = 2;
  if (this->has_peak_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *peak_stats_);
  }

  // int64 peak_bytes_usage_lifetime = 1;
  if (this->peak_bytes_usage_lifetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->peak_bytes_usage_lifetime());
  }

  // int64 peak_stats_time_ps = 3;
  if (this->peak_stats_time_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->peak_stats_time_ps());
  }

  // int64 memory_capacity = 4;
  if (this->memory_capacity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->memory_capacity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryProfileSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.MemoryProfileSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryProfileSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryProfileSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.MemoryProfileSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.MemoryProfileSummary)
    MergeFrom(*source);
  }
}

void MemoryProfileSummary::MergeFrom(const MemoryProfileSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.MemoryProfileSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peak_stats()) {
    mutable_peak_stats()->::tensorflow::profiler::MemoryAggregationStats::MergeFrom(from.peak_stats());
  }
  if (from.peak_bytes_usage_lifetime() != 0) {
    set_peak_bytes_usage_lifetime(from.peak_bytes_usage_lifetime());
  }
  if (from.peak_stats_time_ps() != 0) {
    set_peak_stats_time_ps(from.peak_stats_time_ps());
  }
  if (from.memory_capacity() != 0) {
    set_memory_capacity(from.memory_capacity());
  }
}

void MemoryProfileSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.MemoryProfileSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryProfileSummary::CopyFrom(const MemoryProfileSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.MemoryProfileSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryProfileSummary::IsInitialized() const {
  return true;
}

void MemoryProfileSummary::Swap(MemoryProfileSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryProfileSummary::InternalSwap(MemoryProfileSummary* other) {
  using std::swap;
  swap(peak_stats_, other->peak_stats_);
  swap(peak_bytes_usage_lifetime_, other->peak_bytes_usage_lifetime_);
  swap(peak_stats_time_ps_, other->peak_stats_time_ps_);
  swap(memory_capacity_, other->memory_capacity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemoryProfileSummary::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActiveAllocation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActiveAllocation::kSnapshotIndexFieldNumber;
const int ActiveAllocation::kSpecialIndexFieldNumber;
const int ActiveAllocation::kNumOccurrencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActiveAllocation::ActiveAllocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_ActiveAllocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.ActiveAllocation)
}
ActiveAllocation::ActiveAllocation(const ActiveAllocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&snapshot_index_, &from.snapshot_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_occurrences_) -
    reinterpret_cast<char*>(&snapshot_index_)) + sizeof(num_occurrences_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.ActiveAllocation)
}

void ActiveAllocation::SharedCtor() {
  ::memset(&snapshot_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_occurrences_) -
      reinterpret_cast<char*>(&snapshot_index_)) + sizeof(num_occurrences_));
}

ActiveAllocation::~ActiveAllocation() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.ActiveAllocation)
  SharedDtor();
}

void ActiveAllocation::SharedDtor() {
}

void ActiveAllocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActiveAllocation::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActiveAllocation& ActiveAllocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_ActiveAllocation.base);
  return *internal_default_instance();
}


void ActiveAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.ActiveAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&snapshot_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_occurrences_) -
      reinterpret_cast<char*>(&snapshot_index_)) + sizeof(num_occurrences_));
  _internal_metadata_.Clear();
}

bool ActiveAllocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.ActiveAllocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 snapshot_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &snapshot_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 special_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &special_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_occurrences = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_occurrences_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.ActiveAllocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.ActiveAllocation)
  return false;
#undef DO_
}

void ActiveAllocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.ActiveAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 snapshot_index = 1;
  if (this->snapshot_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->snapshot_index(), output);
  }

  // int64 special_index = 2;
  if (this->special_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->special_index(), output);
  }

  // int64 num_occurrences = 3;
  if (this->num_occurrences() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->num_occurrences(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.ActiveAllocation)
}

::google::protobuf::uint8* ActiveAllocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.ActiveAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 snapshot_index = 1;
  if (this->snapshot_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->snapshot_index(), target);
  }

  // int64 special_index = 2;
  if (this->special_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->special_index(), target);
  }

  // int64 num_occurrences = 3;
  if (this->num_occurrences() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->num_occurrences(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.ActiveAllocation)
  return target;
}

size_t ActiveAllocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.ActiveAllocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 snapshot_index = 1;
  if (this->snapshot_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->snapshot_index());
  }

  // int64 special_index = 2;
  if (this->special_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->special_index());
  }

  // int64 num_occurrences = 3;
  if (this->num_occurrences() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_occurrences());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActiveAllocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.ActiveAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  const ActiveAllocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActiveAllocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.ActiveAllocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.ActiveAllocation)
    MergeFrom(*source);
  }
}

void ActiveAllocation::MergeFrom(const ActiveAllocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.ActiveAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.snapshot_index() != 0) {
    set_snapshot_index(from.snapshot_index());
  }
  if (from.special_index() != 0) {
    set_special_index(from.special_index());
  }
  if (from.num_occurrences() != 0) {
    set_num_occurrences(from.num_occurrences());
  }
}

void ActiveAllocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.ActiveAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveAllocation::CopyFrom(const ActiveAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.ActiveAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveAllocation::IsInitialized() const {
  return true;
}

void ActiveAllocation::Swap(ActiveAllocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActiveAllocation::InternalSwap(ActiveAllocation* other) {
  using std::swap;
  swap(snapshot_index_, other->snapshot_index_);
  swap(special_index_, other->special_index_);
  swap(num_occurrences_, other->num_occurrences_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActiveAllocation::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PerAllocatorMemoryProfile::InitAsDefaultInstance() {
  ::tensorflow::profiler::_PerAllocatorMemoryProfile_default_instance_._instance.get_mutable()->profile_summary_ = const_cast< ::tensorflow::profiler::MemoryProfileSummary*>(
      ::tensorflow::profiler::MemoryProfileSummary::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerAllocatorMemoryProfile::kMemoryProfileSnapshotsFieldNumber;
const int PerAllocatorMemoryProfile::kProfileSummaryFieldNumber;
const int PerAllocatorMemoryProfile::kActiveAllocationsFieldNumber;
const int PerAllocatorMemoryProfile::kSpecialAllocationsFieldNumber;
const int PerAllocatorMemoryProfile::kSampledTimelineSnapshotsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerAllocatorMemoryProfile::PerAllocatorMemoryProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_PerAllocatorMemoryProfile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PerAllocatorMemoryProfile)
}
PerAllocatorMemoryProfile::PerAllocatorMemoryProfile(const PerAllocatorMemoryProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      memory_profile_snapshots_(from.memory_profile_snapshots_),
      active_allocations_(from.active_allocations_),
      special_allocations_(from.special_allocations_),
      sampled_timeline_snapshots_(from.sampled_timeline_snapshots_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_profile_summary()) {
    profile_summary_ = new ::tensorflow::profiler::MemoryProfileSummary(*from.profile_summary_);
  } else {
    profile_summary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PerAllocatorMemoryProfile)
}

void PerAllocatorMemoryProfile::SharedCtor() {
  profile_summary_ = NULL;
}

PerAllocatorMemoryProfile::~PerAllocatorMemoryProfile() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PerAllocatorMemoryProfile)
  SharedDtor();
}

void PerAllocatorMemoryProfile::SharedDtor() {
  if (this != internal_default_instance()) delete profile_summary_;
}

void PerAllocatorMemoryProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PerAllocatorMemoryProfile::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerAllocatorMemoryProfile& PerAllocatorMemoryProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_PerAllocatorMemoryProfile.base);
  return *internal_default_instance();
}


void PerAllocatorMemoryProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  memory_profile_snapshots_.Clear();
  active_allocations_.Clear();
  special_allocations_.Clear();
  sampled_timeline_snapshots_.Clear();
  if (GetArenaNoVirtual() == NULL && profile_summary_ != NULL) {
    delete profile_summary_;
  }
  profile_summary_ = NULL;
  _internal_metadata_.Clear();
}

bool PerAllocatorMemoryProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.profiler.MemoryProfileSnapshot memory_profile_snapshots = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_memory_profile_snapshots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.MemoryProfileSummary profile_summary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.ActiveAllocation active_allocations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_active_allocations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.MemoryActivityMetadata special_allocations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_special_allocations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.MemoryProfileSnapshot sampled_timeline_snapshots = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sampled_timeline_snapshots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PerAllocatorMemoryProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PerAllocatorMemoryProfile)
  return false;
#undef DO_
}

void PerAllocatorMemoryProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.MemoryProfileSnapshot memory_profile_snapshots = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->memory_profile_snapshots_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->memory_profile_snapshots(static_cast<int>(i)),
      output);
  }

  // .tensorflow.profiler.MemoryProfileSummary profile_summary = 2;
  if (this->has_profile_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_profile_summary(), output);
  }

  // repeated .tensorflow.profiler.ActiveAllocation active_allocations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->active_allocations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->active_allocations(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.profiler.MemoryActivityMetadata special_allocations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->special_allocations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->special_allocations(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.profiler.MemoryProfileSnapshot sampled_timeline_snapshots = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sampled_timeline_snapshots_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->sampled_timeline_snapshots(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PerAllocatorMemoryProfile)
}

::google::protobuf::uint8* PerAllocatorMemoryProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.MemoryProfileSnapshot memory_profile_snapshots = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->memory_profile_snapshots_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->memory_profile_snapshots(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.profiler.MemoryProfileSummary profile_summary = 2;
  if (this->has_profile_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_profile_summary(), deterministic, target);
  }

  // repeated .tensorflow.profiler.ActiveAllocation active_allocations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->active_allocations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->active_allocations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.profiler.MemoryActivityMetadata special_allocations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->special_allocations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->special_allocations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.profiler.MemoryProfileSnapshot sampled_timeline_snapshots = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sampled_timeline_snapshots_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->sampled_timeline_snapshots(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PerAllocatorMemoryProfile)
  return target;
}

size_t PerAllocatorMemoryProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.MemoryProfileSnapshot memory_profile_snapshots = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->memory_profile_snapshots_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->memory_profile_snapshots(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.ActiveAllocation active_allocations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->active_allocations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->active_allocations(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.MemoryActivityMetadata special_allocations = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->special_allocations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->special_allocations(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.MemoryProfileSnapshot sampled_timeline_snapshots = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->sampled_timeline_snapshots_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sampled_timeline_snapshots(static_cast<int>(i)));
    }
  }

  // .tensorflow.profiler.MemoryProfileSummary profile_summary = 2;
  if (this->has_profile_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_summary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PerAllocatorMemoryProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const PerAllocatorMemoryProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerAllocatorMemoryProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PerAllocatorMemoryProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PerAllocatorMemoryProfile)
    MergeFrom(*source);
  }
}

void PerAllocatorMemoryProfile::MergeFrom(const PerAllocatorMemoryProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memory_profile_snapshots_.MergeFrom(from.memory_profile_snapshots_);
  active_allocations_.MergeFrom(from.active_allocations_);
  special_allocations_.MergeFrom(from.special_allocations_);
  sampled_timeline_snapshots_.MergeFrom(from.sampled_timeline_snapshots_);
  if (from.has_profile_summary()) {
    mutable_profile_summary()->::tensorflow::profiler::MemoryProfileSummary::MergeFrom(from.profile_summary());
  }
}

void PerAllocatorMemoryProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerAllocatorMemoryProfile::CopyFrom(const PerAllocatorMemoryProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PerAllocatorMemoryProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerAllocatorMemoryProfile::IsInitialized() const {
  return true;
}

void PerAllocatorMemoryProfile::Swap(PerAllocatorMemoryProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerAllocatorMemoryProfile::InternalSwap(PerAllocatorMemoryProfile* other) {
  using std::swap;
  CastToBase(&memory_profile_snapshots_)->InternalSwap(CastToBase(&other->memory_profile_snapshots_));
  CastToBase(&active_allocations_)->InternalSwap(CastToBase(&other->active_allocations_));
  CastToBase(&special_allocations_)->InternalSwap(CastToBase(&other->special_allocations_));
  CastToBase(&sampled_timeline_snapshots_)->InternalSwap(CastToBase(&other->sampled_timeline_snapshots_));
  swap(profile_summary_, other->profile_summary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PerAllocatorMemoryProfile::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse() {}
MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse::MergeFrom(const MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[6];
}
void MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void MemoryProfile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryProfile::kMemoryProfilePerAllocatorFieldNumber;
const int MemoryProfile::kNumHostsFieldNumber;
const int MemoryProfile::kMemoryIdsFieldNumber;
const int MemoryProfile::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryProfile::MemoryProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.MemoryProfile)
}
MemoryProfile::MemoryProfile(const MemoryProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      memory_ids_(from.memory_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  memory_profile_per_allocator_.MergeFrom(from.memory_profile_per_allocator_);
  ::memcpy(&num_hosts_, &from.num_hosts_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&num_hosts_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.MemoryProfile)
}

void MemoryProfile::SharedCtor() {
  ::memset(&num_hosts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&num_hosts_)) + sizeof(version_));
}

MemoryProfile::~MemoryProfile() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.MemoryProfile)
  SharedDtor();
}

void MemoryProfile::SharedDtor() {
}

void MemoryProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemoryProfile::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemoryProfile& MemoryProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::scc_info_MemoryProfile.base);
  return *internal_default_instance();
}


void MemoryProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.MemoryProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  memory_profile_per_allocator_.Clear();
  memory_ids_.Clear();
  ::memset(&num_hosts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&num_hosts_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool MemoryProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.MemoryProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .tensorflow.profiler.PerAllocatorMemoryProfile> memory_profile_per_allocator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse,
              ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile > > parser(&memory_profile_per_allocator_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.MemoryProfile.MemoryProfilePerAllocatorEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_hosts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_hosts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string memory_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_memory_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->memory_ids(this->memory_ids_size() - 1).data(),
            static_cast<int>(this->memory_ids(this->memory_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.MemoryProfile.memory_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.MemoryProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.MemoryProfile)
  return false;
#undef DO_
}

void MemoryProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.MemoryProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.profiler.PerAllocatorMemoryProfile> memory_profile_per_allocator = 1;
  if (!this->memory_profile_per_allocator().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.MemoryProfile.MemoryProfilePerAllocatorEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->memory_profile_per_allocator().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->memory_profile_per_allocator().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::const_iterator
          it = this->memory_profile_per_allocator().begin();
          it != this->memory_profile_per_allocator().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(memory_profile_per_allocator_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::const_iterator
          it = this->memory_profile_per_allocator().begin();
          it != this->memory_profile_per_allocator().end(); ++it) {
        entry.reset(memory_profile_per_allocator_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // int32 num_hosts = 2;
  if (this->num_hosts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_hosts(), output);
  }

  // repeated string memory_ids = 3;
  for (int i = 0, n = this->memory_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memory_ids(i).data(), static_cast<int>(this->memory_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryProfile.memory_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->memory_ids(i), output);
  }

  // int32 version = 5;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.MemoryProfile)
}

::google::protobuf::uint8* MemoryProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.MemoryProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.profiler.PerAllocatorMemoryProfile> memory_profile_per_allocator = 1;
  if (!this->memory_profile_per_allocator().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.MemoryProfile.MemoryProfilePerAllocatorEntry.key");
      }
    };

    if (deterministic &&
        this->memory_profile_per_allocator().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->memory_profile_per_allocator().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::const_iterator
          it = this->memory_profile_per_allocator().begin();
          it != this->memory_profile_per_allocator().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(memory_profile_per_allocator_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::const_iterator
          it = this->memory_profile_per_allocator().begin();
          it != this->memory_profile_per_allocator().end(); ++it) {
        entry.reset(memory_profile_per_allocator_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // int32 num_hosts = 2;
  if (this->num_hosts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_hosts(), target);
  }

  // repeated string memory_ids = 3;
  for (int i = 0, n = this->memory_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memory_ids(i).data(), static_cast<int>(this->memory_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.MemoryProfile.memory_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->memory_ids(i), target);
  }

  // int32 version = 5;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.MemoryProfile)
  return target;
}

size_t MemoryProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.MemoryProfile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .tensorflow.profiler.PerAllocatorMemoryProfile> memory_profile_per_allocator = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->memory_profile_per_allocator_size());
  {
    ::std::unique_ptr<MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::PerAllocatorMemoryProfile >::const_iterator
        it = this->memory_profile_per_allocator().begin();
        it != this->memory_profile_per_allocator().end(); ++it) {
      entry.reset(memory_profile_per_allocator_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string memory_ids = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->memory_ids_size());
  for (int i = 0, n = this->memory_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->memory_ids(i));
  }

  // int32 num_hosts = 2;
  if (this->num_hosts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_hosts());
  }

  // int32 version = 5;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.MemoryProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.MemoryProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.MemoryProfile)
    MergeFrom(*source);
  }
}

void MemoryProfile::MergeFrom(const MemoryProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.MemoryProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memory_profile_per_allocator_.MergeFrom(from.memory_profile_per_allocator_);
  memory_ids_.MergeFrom(from.memory_ids_);
  if (from.num_hosts() != 0) {
    set_num_hosts(from.num_hosts());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void MemoryProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.MemoryProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryProfile::CopyFrom(const MemoryProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.MemoryProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryProfile::IsInitialized() const {
  return true;
}

void MemoryProfile::Swap(MemoryProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryProfile::InternalSwap(MemoryProfile* other) {
  using std::swap;
  memory_profile_per_allocator_.Swap(&other->memory_profile_per_allocator_);
  memory_ids_.InternalSwap(CastToBase(&other->memory_ids_));
  swap(num_hosts_, other->num_hosts_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemoryProfile::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fmemory_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::MemoryAggregationStats* Arena::CreateMaybeMessage< ::tensorflow::profiler::MemoryAggregationStats >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::MemoryAggregationStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::MemoryActivityMetadata* Arena::CreateMaybeMessage< ::tensorflow::profiler::MemoryActivityMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::MemoryActivityMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::MemoryProfileSnapshot* Arena::CreateMaybeMessage< ::tensorflow::profiler::MemoryProfileSnapshot >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::MemoryProfileSnapshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::MemoryProfileSummary* Arena::CreateMaybeMessage< ::tensorflow::profiler::MemoryProfileSummary >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::MemoryProfileSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::ActiveAllocation* Arena::CreateMaybeMessage< ::tensorflow::profiler::ActiveAllocation >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::ActiveAllocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PerAllocatorMemoryProfile* Arena::CreateMaybeMessage< ::tensorflow::profiler::PerAllocatorMemoryProfile >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PerAllocatorMemoryProfile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::MemoryProfile_MemoryProfilePerAllocatorEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::MemoryProfile* Arena::CreateMaybeMessage< ::tensorflow::profiler::MemoryProfile >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::MemoryProfile >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
