// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/overview_page.proto

#include "tensorflow/core/profiler/protobuf/overview_page.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Diagnostics;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_InputPipelineAnalysisResult;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OverviewPageHostDependentJobInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OverviewPageHostIndependentJobInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OverviewPageRunEnvironment_HostnamesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OverviewPageTip;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OverviewTfOp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OverviewPageAnalysis;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_OverviewPageRecommendation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_OverviewPageRunEnvironment;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto
namespace tensorflow {
namespace profiler {
class OverviewTfOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewTfOp>
      _instance;
} _OverviewTfOp_default_instance_;
class OverviewPageAnalysisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewPageAnalysis>
      _instance;
} _OverviewPageAnalysis_default_instance_;
class OverviewPageTipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewPageTip>
      _instance;
} _OverviewPageTip_default_instance_;
class GenericRecommendationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericRecommendation>
      _instance;
} _GenericRecommendation_default_instance_;
class OverviewPageRecommendationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewPageRecommendation>
      _instance;
} _OverviewPageRecommendation_default_instance_;
class OverviewPageHostIndependentJobInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewPageHostIndependentJobInfo>
      _instance;
} _OverviewPageHostIndependentJobInfo_default_instance_;
class OverviewPageHostDependentJobInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewPageHostDependentJobInfo>
      _instance;
} _OverviewPageHostDependentJobInfo_default_instance_;
class OverviewPageRunEnvironment_HostnamesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewPageRunEnvironment_HostnamesEntry_DoNotUse>
      _instance;
} _OverviewPageRunEnvironment_HostnamesEntry_DoNotUse_default_instance_;
class OverviewPageRunEnvironmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewPageRunEnvironment>
      _instance;
} _OverviewPageRunEnvironment_default_instance_;
class OverviewPageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverviewPage>
      _instance;
} _OverviewPage_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto {
static void InitDefaultsOverviewTfOp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewTfOp_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewTfOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OverviewTfOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OverviewTfOp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOverviewTfOp}, {}};

static void InitDefaultsOverviewPageAnalysis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewPageAnalysis_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewPageAnalysis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OverviewPageAnalysis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OverviewPageAnalysis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOverviewPageAnalysis}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewTfOp.base,}};

static void InitDefaultsOverviewPageTip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewPageTip_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewPageTip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OverviewPageTip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OverviewPageTip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOverviewPageTip}, {}};

static void InitDefaultsGenericRecommendation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_GenericRecommendation_default_instance_;
    new (ptr) ::tensorflow::profiler::GenericRecommendation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::GenericRecommendation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenericRecommendation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenericRecommendation}, {}};

static void InitDefaultsOverviewPageRecommendation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewPageRecommendation_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewPageRecommendation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OverviewPageRecommendation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OverviewPageRecommendation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOverviewPageRecommendation}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageTip.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsOverviewPageHostIndependentJobInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewPageHostIndependentJobInfo_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewPageHostIndependentJobInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OverviewPageHostIndependentJobInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OverviewPageHostIndependentJobInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOverviewPageHostIndependentJobInfo}, {}};

static void InitDefaultsOverviewPageHostDependentJobInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewPageHostDependentJobInfo_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewPageHostDependentJobInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OverviewPageHostDependentJobInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OverviewPageHostDependentJobInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOverviewPageHostDependentJobInfo}, {}};

static void InitDefaultsOverviewPageRunEnvironment_HostnamesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewPageRunEnvironment_HostnamesEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse();
  }
  ::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OverviewPageRunEnvironment_HostnamesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOverviewPageRunEnvironment_HostnamesEntry_DoNotUse}, {}};

static void InitDefaultsOverviewPageRunEnvironment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewPageRunEnvironment_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewPageRunEnvironment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OverviewPageRunEnvironment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_OverviewPageRunEnvironment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsOverviewPageRunEnvironment}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageRunEnvironment_HostnamesEntry_DoNotUse.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageHostIndependentJobInfo.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageHostDependentJobInfo.base,}};

static void InitDefaultsOverviewPage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OverviewPage_default_instance_;
    new (ptr) ::tensorflow::profiler::OverviewPage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OverviewPage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_OverviewPage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsOverviewPage}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageRunEnvironment.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::scc_info_InputPipelineAnalysisResult.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageAnalysis.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageRecommendation.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto::scc_info_Diagnostics.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewTfOp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewPageAnalysis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewPageTip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenericRecommendation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewPageRecommendation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewPageHostIndependentJobInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewPageHostDependentJobInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewPageRunEnvironment_HostnamesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewPageRunEnvironment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverviewPage.base);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewTfOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewTfOp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewTfOp, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewTfOp, self_time_fraction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewTfOp, cumulative_time_fraction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewTfOp, flop_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewTfOp, is_op_tensorcore_eligible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewTfOp, is_op_using_tensorcore_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, mxu_utilization_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, device_idle_time_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, host_idle_time_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, top_device_ops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, remark_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, remark_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, flop_rate_utilization_relative_to_roofline_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, memory_bw_utilization_relative_to_hw_limit_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, device_compute_16bit_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, device_compute_32bit_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, host_tf_op_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, device_tf_op_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, host_trace_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, host_op_time_eager_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, device_op_time_eager_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageAnalysis, device_op_time_outside_compilation_percent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageTip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageTip, link_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericRecommendation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericRecommendation, kernel_launch_bottleneck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericRecommendation, kernel_launch_statement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericRecommendation, all_other_bottleneck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericRecommendation, all_other_statement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericRecommendation, precision_statement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericRecommendation, device_collectives_bottleneck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::GenericRecommendation, device_collectives_statement_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, bottleneck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, statement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, input_tips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, output_statement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, eager_statement_html_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, outside_compilation_statement_html_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, tf_function_statement_html_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, host_tips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, device_tips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, documentation_tips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, recommendation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, faq_tips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRecommendation, inference_tips_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostIndependentJobInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostIndependentJobInfo, change_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostIndependentJobInfo, build_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostIndependentJobInfo, build_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostIndependentJobInfo, profile_duration_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostDependentJobInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostDependentJobInfo, host_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostDependentJobInfo, command_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostDependentJobInfo, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostDependentJobInfo, bns_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageHostDependentJobInfo, profile_time_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, host_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, task_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, hostnames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, device_core_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, per_core_batch_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, host_independent_job_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, host_dependent_job_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, replica_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPageRunEnvironment, num_cores_per_replica_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPage, run_environment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPage, input_analysis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPage, analysis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPage, recommendation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OverviewPage, diagnostics_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::OverviewTfOp)},
  { 12, -1, sizeof(::tensorflow::profiler::OverviewPageAnalysis)},
  { 33, -1, sizeof(::tensorflow::profiler::OverviewPageTip)},
  { 39, -1, sizeof(::tensorflow::profiler::GenericRecommendation)},
  { 51, -1, sizeof(::tensorflow::profiler::OverviewPageRecommendation)},
  { 69, -1, sizeof(::tensorflow::profiler::OverviewPageHostIndependentJobInfo)},
  { 78, -1, sizeof(::tensorflow::profiler::OverviewPageHostDependentJobInfo)},
  { 88, 95, sizeof(::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse)},
  { 97, -1, sizeof(::tensorflow::profiler::OverviewPageRunEnvironment)},
  { 112, -1, sizeof(::tensorflow::profiler::OverviewPage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewTfOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewPageAnalysis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewPageTip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_GenericRecommendation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewPageRecommendation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewPageHostIndependentJobInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewPageHostDependentJobInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewPageRunEnvironment_HostnamesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewPageRunEnvironment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OverviewPage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/overview_page.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5tensorflow/core/profiler/protobuf/over"
      "view_page.proto\022\023tensorflow.profiler\032\031go"
      "ogle/protobuf/any.proto\0323tensorflow/core"
      "/profiler/protobuf/diagnostics.proto\0326te"
      "nsorflow/core/profiler/protobuf/input_pi"
      "peline.proto\"\302\001\n\014OverviewTfOp\022\014\n\004name\030\001 "
      "\001(\t\022\020\n\010category\030\002 \001(\t\022\032\n\022self_time_fract"
      "ion\030\003 \001(\001\022 \n\030cumulative_time_fraction\030\004 "
      "\001(\001\022\021\n\tflop_rate\030\005 \001(\001\022!\n\031is_op_tensorco"
      "re_eligible\030\006 \001(\010\022\036\n\026is_op_using_tensorc"
      "ore\030\007 \001(\010\"\365\004\n\024OverviewPageAnalysis\022\037\n\027mx"
      "u_utilization_percent\030\001 \001(\001\022 \n\030device_id"
      "le_time_percent\030\002 \001(\001\022\036\n\026host_idle_time_"
      "percent\030\003 \001(\001\0229\n\016top_device_ops\030\004 \003(\0132!."
      "tensorflow.profiler.OverviewTfOp\022\023\n\013rema"
      "rk_text\030\005 \001(\t\022\024\n\014remark_color\030\006 \001(\t\022:\n2f"
      "lop_rate_utilization_relative_to_rooflin"
      "e_percent\030\007 \001(\001\022:\n2memory_bw_utilization"
      "_relative_to_hw_limit_percent\030\010 \001(\001\022$\n\034d"
      "evice_compute_16bit_percent\030\t \001(\001\022$\n\034dev"
      "ice_compute_32bit_percent\030\n \001(\001\022\032\n\022host_"
      "tf_op_percent\030\013 \001(\001\022\034\n\024device_tf_op_perc"
      "ent\030\014 \001(\001\022\030\n\020host_trace_level\030\r \001(\r\022\"\n\032h"
      "ost_op_time_eager_percent\030\016 \001(\001\022$\n\034devic"
      "e_op_time_eager_percent\030\017 \001(\001\0222\n*device_"
      "op_time_outside_compilation_percent\030\020 \001("
      "\001\"\037\n\017OverviewPageTip\022\014\n\004link\030\001 \001(\t\"\377\001\n\025G"
      "enericRecommendation\022 \n\030kernel_launch_bo"
      "ttleneck\030\001 \001(\t\022\037\n\027kernel_launch_statemen"
      "t\030\002 \001(\t\022\034\n\024all_other_bottleneck\030\003 \001(\t\022\033\n"
      "\023all_other_statement\030\004 \001(\t\022\033\n\023precision_"
      "statement\030\005 \001(\t\022%\n\035device_collectives_bo"
      "ttleneck\030\006 \001(\t\022$\n\034device_collectives_sta"
      "tement\030\007 \001(\t\"\337\004\n\032OverviewPageRecommendat"
      "ion\022\022\n\nbottleneck\030\001 \001(\t\022\021\n\tstatement\030\002 \001"
      "(\t\0228\n\ninput_tips\030\013 \003(\0132$.tensorflow.prof"
      "iler.OverviewPageTip\022\030\n\020output_statement"
      "\030\t \001(\t\022\034\n\024eager_statement_html\030\014 \001(\t\022*\n\""
      "outside_compilation_statement_html\030\r \001(\t"
      "\022\"\n\032tf_function_statement_html\030\n \001(\t\0227\n\t"
      "host_tips\030\003 \003(\0132$.tensorflow.profiler.Ov"
      "erviewPageTip\0229\n\013device_tips\030\004 \003(\0132$.ten"
      "sorflow.profiler.OverviewPageTip\022@\n\022docu"
      "mentation_tips\030\005 \003(\0132$.tensorflow.profil"
      "er.OverviewPageTip\022,\n\016recommendation\030\006 \001"
      "(\0132\024.google.protobuf.Any\0226\n\010faq_tips\030\007 \003"
      "(\0132$.tensorflow.profiler.OverviewPageTip"
      "\022<\n\016inference_tips\030\010 \003(\0132$.tensorflow.pr"
      "ofiler.OverviewPageTip\"\200\001\n\"OverviewPageH"
      "ostIndependentJobInfo\022\023\n\013change_list\030\001 \001"
      "(\003\022\022\n\nbuild_time\030\002 \001(\003\022\024\n\014build_target\030\003"
      " \001(\t\022\033\n\023profile_duration_ms\030\004 \001(\r\"\213\001\n Ov"
      "erviewPageHostDependentJobInfo\022\017\n\007host_i"
      "d\030\001 \001(\t\022\024\n\014command_line\030\002 \001(\t\022\022\n\nstart_t"
      "ime\030\003 \001(\003\022\023\n\013bns_address\030\004 \001(\t\022\027\n\017profil"
      "e_time_ns\030\005 \001(\004\"\200\004\n\032OverviewPageRunEnvir"
      "onment\022\022\n\nhost_count\030\001 \001(\005\022\022\n\ntask_count"
      "\030\002 \001(\005\022Q\n\thostnames\030\003 \003(\0132>.tensorflow.p"
      "rofiler.OverviewPageRunEnvironment.Hostn"
      "amesEntry\022\023\n\013device_type\030\004 \001(\t\022\031\n\021device"
      "_core_count\030\005 \001(\005\022\033\n\023per_core_batch_size"
      "\030\006 \001(\005\022Z\n\031host_independent_job_info\030\007 \001("
      "\01327.tensorflow.profiler.OverviewPageHost"
      "IndependentJobInfo\022V\n\027host_dependent_job"
      "_info\030\010 \003(\01325.tensorflow.profiler.Overvi"
      "ewPageHostDependentJobInfo\022\025\n\rreplica_co"
      "unt\030\t \001(\005\022\035\n\025num_cores_per_replica\030\n \001(\005"
      "\0320\n\016HostnamesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\010:\0028\001\"\361\002\n\014OverviewPage\022H\n\017run_envir"
      "onment\030\006 \001(\0132/.tensorflow.profiler.Overv"
      "iewPageRunEnvironment\022H\n\016input_analysis\030"
      "\002 \001(\01320.tensorflow.profiler.InputPipelin"
      "eAnalysisResult\022;\n\010analysis\030\003 \001(\0132).tens"
      "orflow.profiler.OverviewPageAnalysis\022G\n\016"
      "recommendation\030\004 \001(\0132/.tensorflow.profil"
      "er.OverviewPageRecommendation\0225\n\013diagnos"
      "tics\030\010 \001(\0132 .tensorflow.profiler.Diagnos"
      "ticsJ\004\010\001\020\002J\004\010\005\020\006J\004\010\007\020\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3110);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/overview_page.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto
namespace tensorflow {
namespace profiler {

// ===================================================================

void OverviewTfOp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverviewTfOp::kNameFieldNumber;
const int OverviewTfOp::kCategoryFieldNumber;
const int OverviewTfOp::kSelfTimeFractionFieldNumber;
const int OverviewTfOp::kCumulativeTimeFractionFieldNumber;
const int OverviewTfOp::kFlopRateFieldNumber;
const int OverviewTfOp::kIsOpTensorcoreEligibleFieldNumber;
const int OverviewTfOp::kIsOpUsingTensorcoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverviewTfOp::OverviewTfOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewTfOp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OverviewTfOp)
}
OverviewTfOp::OverviewTfOp(const OverviewTfOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.category().size() > 0) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  ::memcpy(&self_time_fraction_, &from.self_time_fraction_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_op_using_tensorcore_) -
    reinterpret_cast<char*>(&self_time_fraction_)) + sizeof(is_op_using_tensorcore_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OverviewTfOp)
}

void OverviewTfOp::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&self_time_fraction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_op_using_tensorcore_) -
      reinterpret_cast<char*>(&self_time_fraction_)) + sizeof(is_op_using_tensorcore_));
}

OverviewTfOp::~OverviewTfOp() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OverviewTfOp)
  SharedDtor();
}

void OverviewTfOp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OverviewTfOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OverviewTfOp::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverviewTfOp& OverviewTfOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewTfOp.base);
  return *internal_default_instance();
}


void OverviewTfOp::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OverviewTfOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&self_time_fraction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_op_using_tensorcore_) -
      reinterpret_cast<char*>(&self_time_fraction_)) + sizeof(is_op_using_tensorcore_));
  _internal_metadata_.Clear();
}

bool OverviewTfOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OverviewTfOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewTfOp.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string category = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewTfOp.category"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double self_time_fraction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &self_time_fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cumulative_time_fraction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cumulative_time_fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double flop_rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &flop_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_op_tensorcore_eligible = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_op_tensorcore_eligible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_op_using_tensorcore = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_op_using_tensorcore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OverviewTfOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OverviewTfOp)
  return false;
#undef DO_
}

void OverviewTfOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OverviewTfOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewTfOp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string category = 2;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewTfOp.category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->category(), output);
  }

  // double self_time_fraction = 3;
  if (this->self_time_fraction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->self_time_fraction(), output);
  }

  // double cumulative_time_fraction = 4;
  if (this->cumulative_time_fraction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->cumulative_time_fraction(), output);
  }

  // double flop_rate = 5;
  if (this->flop_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->flop_rate(), output);
  }

  // bool is_op_tensorcore_eligible = 6;
  if (this->is_op_tensorcore_eligible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_op_tensorcore_eligible(), output);
  }

  // bool is_op_using_tensorcore = 7;
  if (this->is_op_using_tensorcore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_op_using_tensorcore(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OverviewTfOp)
}

::google::protobuf::uint8* OverviewTfOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OverviewTfOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewTfOp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string category = 2;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewTfOp.category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->category(), target);
  }

  // double self_time_fraction = 3;
  if (this->self_time_fraction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->self_time_fraction(), target);
  }

  // double cumulative_time_fraction = 4;
  if (this->cumulative_time_fraction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->cumulative_time_fraction(), target);
  }

  // double flop_rate = 5;
  if (this->flop_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->flop_rate(), target);
  }

  // bool is_op_tensorcore_eligible = 6;
  if (this->is_op_tensorcore_eligible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_op_tensorcore_eligible(), target);
  }

  // bool is_op_using_tensorcore = 7;
  if (this->is_op_using_tensorcore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_op_using_tensorcore(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OverviewTfOp)
  return target;
}

size_t OverviewTfOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OverviewTfOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string category = 2;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->category());
  }

  // double self_time_fraction = 3;
  if (this->self_time_fraction() != 0) {
    total_size += 1 + 8;
  }

  // double cumulative_time_fraction = 4;
  if (this->cumulative_time_fraction() != 0) {
    total_size += 1 + 8;
  }

  // double flop_rate = 5;
  if (this->flop_rate() != 0) {
    total_size += 1 + 8;
  }

  // bool is_op_tensorcore_eligible = 6;
  if (this->is_op_tensorcore_eligible() != 0) {
    total_size += 1 + 1;
  }

  // bool is_op_using_tensorcore = 7;
  if (this->is_op_using_tensorcore() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverviewTfOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OverviewTfOp)
  GOOGLE_DCHECK_NE(&from, this);
  const OverviewTfOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverviewTfOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OverviewTfOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OverviewTfOp)
    MergeFrom(*source);
  }
}

void OverviewTfOp::MergeFrom(const OverviewTfOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OverviewTfOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.self_time_fraction() != 0) {
    set_self_time_fraction(from.self_time_fraction());
  }
  if (from.cumulative_time_fraction() != 0) {
    set_cumulative_time_fraction(from.cumulative_time_fraction());
  }
  if (from.flop_rate() != 0) {
    set_flop_rate(from.flop_rate());
  }
  if (from.is_op_tensorcore_eligible() != 0) {
    set_is_op_tensorcore_eligible(from.is_op_tensorcore_eligible());
  }
  if (from.is_op_using_tensorcore() != 0) {
    set_is_op_using_tensorcore(from.is_op_using_tensorcore());
  }
}

void OverviewTfOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OverviewTfOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverviewTfOp::CopyFrom(const OverviewTfOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OverviewTfOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverviewTfOp::IsInitialized() const {
  return true;
}

void OverviewTfOp::Swap(OverviewTfOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverviewTfOp::InternalSwap(OverviewTfOp* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  category_.Swap(&other->category_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(self_time_fraction_, other->self_time_fraction_);
  swap(cumulative_time_fraction_, other->cumulative_time_fraction_);
  swap(flop_rate_, other->flop_rate_);
  swap(is_op_tensorcore_eligible_, other->is_op_tensorcore_eligible_);
  swap(is_op_using_tensorcore_, other->is_op_using_tensorcore_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OverviewTfOp::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OverviewPageAnalysis::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverviewPageAnalysis::kMxuUtilizationPercentFieldNumber;
const int OverviewPageAnalysis::kDeviceIdleTimePercentFieldNumber;
const int OverviewPageAnalysis::kHostIdleTimePercentFieldNumber;
const int OverviewPageAnalysis::kTopDeviceOpsFieldNumber;
const int OverviewPageAnalysis::kRemarkTextFieldNumber;
const int OverviewPageAnalysis::kRemarkColorFieldNumber;
const int OverviewPageAnalysis::kFlopRateUtilizationRelativeToRooflinePercentFieldNumber;
const int OverviewPageAnalysis::kMemoryBwUtilizationRelativeToHwLimitPercentFieldNumber;
const int OverviewPageAnalysis::kDeviceCompute16BitPercentFieldNumber;
const int OverviewPageAnalysis::kDeviceCompute32BitPercentFieldNumber;
const int OverviewPageAnalysis::kHostTfOpPercentFieldNumber;
const int OverviewPageAnalysis::kDeviceTfOpPercentFieldNumber;
const int OverviewPageAnalysis::kHostTraceLevelFieldNumber;
const int OverviewPageAnalysis::kHostOpTimeEagerPercentFieldNumber;
const int OverviewPageAnalysis::kDeviceOpTimeEagerPercentFieldNumber;
const int OverviewPageAnalysis::kDeviceOpTimeOutsideCompilationPercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverviewPageAnalysis::OverviewPageAnalysis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageAnalysis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OverviewPageAnalysis)
}
OverviewPageAnalysis::OverviewPageAnalysis(const OverviewPageAnalysis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      top_device_ops_(from.top_device_ops_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remark_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark_text().size() > 0) {
    remark_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_text_);
  }
  remark_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark_color().size() > 0) {
    remark_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_color_);
  }
  ::memcpy(&mxu_utilization_percent_, &from.mxu_utilization_percent_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_trace_level_) -
    reinterpret_cast<char*>(&mxu_utilization_percent_)) + sizeof(host_trace_level_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OverviewPageAnalysis)
}

void OverviewPageAnalysis::SharedCtor() {
  remark_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mxu_utilization_percent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_trace_level_) -
      reinterpret_cast<char*>(&mxu_utilization_percent_)) + sizeof(host_trace_level_));
}

OverviewPageAnalysis::~OverviewPageAnalysis() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OverviewPageAnalysis)
  SharedDtor();
}

void OverviewPageAnalysis::SharedDtor() {
  remark_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OverviewPageAnalysis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OverviewPageAnalysis::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverviewPageAnalysis& OverviewPageAnalysis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageAnalysis.base);
  return *internal_default_instance();
}


void OverviewPageAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OverviewPageAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  top_device_ops_.Clear();
  remark_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mxu_utilization_percent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_trace_level_) -
      reinterpret_cast<char*>(&mxu_utilization_percent_)) + sizeof(host_trace_level_));
  _internal_metadata_.Clear();
}

bool OverviewPageAnalysis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OverviewPageAnalysis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double mxu_utilization_percent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mxu_utilization_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_idle_time_percent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_idle_time_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_idle_time_percent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_idle_time_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.OverviewTfOp top_device_ops = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_top_device_ops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark_text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark_text().data(), static_cast<int>(this->remark_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageAnalysis.remark_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark_color = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark_color().data(), static_cast<int>(this->remark_color().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageAnalysis.remark_color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double flop_rate_utilization_relative_to_roofline_percent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &flop_rate_utilization_relative_to_roofline_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double memory_bw_utilization_relative_to_hw_limit_percent = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &memory_bw_utilization_relative_to_hw_limit_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_compute_16bit_percent = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_compute_16bit_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_compute_32bit_percent = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_compute_32bit_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_tf_op_percent = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_tf_op_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_tf_op_percent = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_tf_op_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 host_trace_level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_trace_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_op_time_eager_percent = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_op_time_eager_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_op_time_eager_percent = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_op_time_eager_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_op_time_outside_compilation_percent = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_op_time_outside_compilation_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OverviewPageAnalysis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OverviewPageAnalysis)
  return false;
#undef DO_
}

void OverviewPageAnalysis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OverviewPageAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double mxu_utilization_percent = 1;
  if (this->mxu_utilization_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->mxu_utilization_percent(), output);
  }

  // double device_idle_time_percent = 2;
  if (this->device_idle_time_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->device_idle_time_percent(), output);
  }

  // double host_idle_time_percent = 3;
  if (this->host_idle_time_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->host_idle_time_percent(), output);
  }

  // repeated .tensorflow.profiler.OverviewTfOp top_device_ops = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->top_device_ops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->top_device_ops(static_cast<int>(i)),
      output);
  }

  // string remark_text = 5;
  if (this->remark_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_text().data(), static_cast<int>(this->remark_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageAnalysis.remark_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->remark_text(), output);
  }

  // string remark_color = 6;
  if (this->remark_color().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_color().data(), static_cast<int>(this->remark_color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageAnalysis.remark_color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->remark_color(), output);
  }

  // double flop_rate_utilization_relative_to_roofline_percent = 7;
  if (this->flop_rate_utilization_relative_to_roofline_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->flop_rate_utilization_relative_to_roofline_percent(), output);
  }

  // double memory_bw_utilization_relative_to_hw_limit_percent = 8;
  if (this->memory_bw_utilization_relative_to_hw_limit_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->memory_bw_utilization_relative_to_hw_limit_percent(), output);
  }

  // double device_compute_16bit_percent = 9;
  if (this->device_compute_16bit_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->device_compute_16bit_percent(), output);
  }

  // double device_compute_32bit_percent = 10;
  if (this->device_compute_32bit_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->device_compute_32bit_percent(), output);
  }

  // double host_tf_op_percent = 11;
  if (this->host_tf_op_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->host_tf_op_percent(), output);
  }

  // double device_tf_op_percent = 12;
  if (this->device_tf_op_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->device_tf_op_percent(), output);
  }

  // uint32 host_trace_level = 13;
  if (this->host_trace_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->host_trace_level(), output);
  }

  // double host_op_time_eager_percent = 14;
  if (this->host_op_time_eager_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->host_op_time_eager_percent(), output);
  }

  // double device_op_time_eager_percent = 15;
  if (this->device_op_time_eager_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->device_op_time_eager_percent(), output);
  }

  // double device_op_time_outside_compilation_percent = 16;
  if (this->device_op_time_outside_compilation_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->device_op_time_outside_compilation_percent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OverviewPageAnalysis)
}

::google::protobuf::uint8* OverviewPageAnalysis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OverviewPageAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double mxu_utilization_percent = 1;
  if (this->mxu_utilization_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->mxu_utilization_percent(), target);
  }

  // double device_idle_time_percent = 2;
  if (this->device_idle_time_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->device_idle_time_percent(), target);
  }

  // double host_idle_time_percent = 3;
  if (this->host_idle_time_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->host_idle_time_percent(), target);
  }

  // repeated .tensorflow.profiler.OverviewTfOp top_device_ops = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->top_device_ops_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->top_device_ops(static_cast<int>(i)), deterministic, target);
  }

  // string remark_text = 5;
  if (this->remark_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_text().data(), static_cast<int>(this->remark_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageAnalysis.remark_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->remark_text(), target);
  }

  // string remark_color = 6;
  if (this->remark_color().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_color().data(), static_cast<int>(this->remark_color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageAnalysis.remark_color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->remark_color(), target);
  }

  // double flop_rate_utilization_relative_to_roofline_percent = 7;
  if (this->flop_rate_utilization_relative_to_roofline_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->flop_rate_utilization_relative_to_roofline_percent(), target);
  }

  // double memory_bw_utilization_relative_to_hw_limit_percent = 8;
  if (this->memory_bw_utilization_relative_to_hw_limit_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->memory_bw_utilization_relative_to_hw_limit_percent(), target);
  }

  // double device_compute_16bit_percent = 9;
  if (this->device_compute_16bit_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->device_compute_16bit_percent(), target);
  }

  // double device_compute_32bit_percent = 10;
  if (this->device_compute_32bit_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->device_compute_32bit_percent(), target);
  }

  // double host_tf_op_percent = 11;
  if (this->host_tf_op_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->host_tf_op_percent(), target);
  }

  // double device_tf_op_percent = 12;
  if (this->device_tf_op_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->device_tf_op_percent(), target);
  }

  // uint32 host_trace_level = 13;
  if (this->host_trace_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->host_trace_level(), target);
  }

  // double host_op_time_eager_percent = 14;
  if (this->host_op_time_eager_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->host_op_time_eager_percent(), target);
  }

  // double device_op_time_eager_percent = 15;
  if (this->device_op_time_eager_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->device_op_time_eager_percent(), target);
  }

  // double device_op_time_outside_compilation_percent = 16;
  if (this->device_op_time_outside_compilation_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->device_op_time_outside_compilation_percent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OverviewPageAnalysis)
  return target;
}

size_t OverviewPageAnalysis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OverviewPageAnalysis)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.OverviewTfOp top_device_ops = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->top_device_ops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->top_device_ops(static_cast<int>(i)));
    }
  }

  // string remark_text = 5;
  if (this->remark_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark_text());
  }

  // string remark_color = 6;
  if (this->remark_color().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark_color());
  }

  // double mxu_utilization_percent = 1;
  if (this->mxu_utilization_percent() != 0) {
    total_size += 1 + 8;
  }

  // double device_idle_time_percent = 2;
  if (this->device_idle_time_percent() != 0) {
    total_size += 1 + 8;
  }

  // double host_idle_time_percent = 3;
  if (this->host_idle_time_percent() != 0) {
    total_size += 1 + 8;
  }

  // double flop_rate_utilization_relative_to_roofline_percent = 7;
  if (this->flop_rate_utilization_relative_to_roofline_percent() != 0) {
    total_size += 1 + 8;
  }

  // double memory_bw_utilization_relative_to_hw_limit_percent = 8;
  if (this->memory_bw_utilization_relative_to_hw_limit_percent() != 0) {
    total_size += 1 + 8;
  }

  // double device_compute_16bit_percent = 9;
  if (this->device_compute_16bit_percent() != 0) {
    total_size += 1 + 8;
  }

  // double device_compute_32bit_percent = 10;
  if (this->device_compute_32bit_percent() != 0) {
    total_size += 1 + 8;
  }

  // double host_tf_op_percent = 11;
  if (this->host_tf_op_percent() != 0) {
    total_size += 1 + 8;
  }

  // double device_tf_op_percent = 12;
  if (this->device_tf_op_percent() != 0) {
    total_size += 1 + 8;
  }

  // double host_op_time_eager_percent = 14;
  if (this->host_op_time_eager_percent() != 0) {
    total_size += 1 + 8;
  }

  // double device_op_time_eager_percent = 15;
  if (this->device_op_time_eager_percent() != 0) {
    total_size += 1 + 8;
  }

  // double device_op_time_outside_compilation_percent = 16;
  if (this->device_op_time_outside_compilation_percent() != 0) {
    total_size += 2 + 8;
  }

  // uint32 host_trace_level = 13;
  if (this->host_trace_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->host_trace_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverviewPageAnalysis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OverviewPageAnalysis)
  GOOGLE_DCHECK_NE(&from, this);
  const OverviewPageAnalysis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverviewPageAnalysis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OverviewPageAnalysis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OverviewPageAnalysis)
    MergeFrom(*source);
  }
}

void OverviewPageAnalysis::MergeFrom(const OverviewPageAnalysis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OverviewPageAnalysis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  top_device_ops_.MergeFrom(from.top_device_ops_);
  if (from.remark_text().size() > 0) {

    remark_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_text_);
  }
  if (from.remark_color().size() > 0) {

    remark_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_color_);
  }
  if (from.mxu_utilization_percent() != 0) {
    set_mxu_utilization_percent(from.mxu_utilization_percent());
  }
  if (from.device_idle_time_percent() != 0) {
    set_device_idle_time_percent(from.device_idle_time_percent());
  }
  if (from.host_idle_time_percent() != 0) {
    set_host_idle_time_percent(from.host_idle_time_percent());
  }
  if (from.flop_rate_utilization_relative_to_roofline_percent() != 0) {
    set_flop_rate_utilization_relative_to_roofline_percent(from.flop_rate_utilization_relative_to_roofline_percent());
  }
  if (from.memory_bw_utilization_relative_to_hw_limit_percent() != 0) {
    set_memory_bw_utilization_relative_to_hw_limit_percent(from.memory_bw_utilization_relative_to_hw_limit_percent());
  }
  if (from.device_compute_16bit_percent() != 0) {
    set_device_compute_16bit_percent(from.device_compute_16bit_percent());
  }
  if (from.device_compute_32bit_percent() != 0) {
    set_device_compute_32bit_percent(from.device_compute_32bit_percent());
  }
  if (from.host_tf_op_percent() != 0) {
    set_host_tf_op_percent(from.host_tf_op_percent());
  }
  if (from.device_tf_op_percent() != 0) {
    set_device_tf_op_percent(from.device_tf_op_percent());
  }
  if (from.host_op_time_eager_percent() != 0) {
    set_host_op_time_eager_percent(from.host_op_time_eager_percent());
  }
  if (from.device_op_time_eager_percent() != 0) {
    set_device_op_time_eager_percent(from.device_op_time_eager_percent());
  }
  if (from.device_op_time_outside_compilation_percent() != 0) {
    set_device_op_time_outside_compilation_percent(from.device_op_time_outside_compilation_percent());
  }
  if (from.host_trace_level() != 0) {
    set_host_trace_level(from.host_trace_level());
  }
}

void OverviewPageAnalysis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OverviewPageAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverviewPageAnalysis::CopyFrom(const OverviewPageAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OverviewPageAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverviewPageAnalysis::IsInitialized() const {
  return true;
}

void OverviewPageAnalysis::Swap(OverviewPageAnalysis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverviewPageAnalysis::InternalSwap(OverviewPageAnalysis* other) {
  using std::swap;
  CastToBase(&top_device_ops_)->InternalSwap(CastToBase(&other->top_device_ops_));
  remark_text_.Swap(&other->remark_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_color_.Swap(&other->remark_color_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mxu_utilization_percent_, other->mxu_utilization_percent_);
  swap(device_idle_time_percent_, other->device_idle_time_percent_);
  swap(host_idle_time_percent_, other->host_idle_time_percent_);
  swap(flop_rate_utilization_relative_to_roofline_percent_, other->flop_rate_utilization_relative_to_roofline_percent_);
  swap(memory_bw_utilization_relative_to_hw_limit_percent_, other->memory_bw_utilization_relative_to_hw_limit_percent_);
  swap(device_compute_16bit_percent_, other->device_compute_16bit_percent_);
  swap(device_compute_32bit_percent_, other->device_compute_32bit_percent_);
  swap(host_tf_op_percent_, other->host_tf_op_percent_);
  swap(device_tf_op_percent_, other->device_tf_op_percent_);
  swap(host_op_time_eager_percent_, other->host_op_time_eager_percent_);
  swap(device_op_time_eager_percent_, other->device_op_time_eager_percent_);
  swap(device_op_time_outside_compilation_percent_, other->device_op_time_outside_compilation_percent_);
  swap(host_trace_level_, other->host_trace_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OverviewPageAnalysis::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OverviewPageTip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverviewPageTip::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverviewPageTip::OverviewPageTip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageTip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OverviewPageTip)
}
OverviewPageTip::OverviewPageTip(const OverviewPageTip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link().size() > 0) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OverviewPageTip)
}

void OverviewPageTip::SharedCtor() {
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OverviewPageTip::~OverviewPageTip() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OverviewPageTip)
  SharedDtor();
}

void OverviewPageTip::SharedDtor() {
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OverviewPageTip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OverviewPageTip::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverviewPageTip& OverviewPageTip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageTip.base);
  return *internal_default_instance();
}


void OverviewPageTip::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OverviewPageTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OverviewPageTip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OverviewPageTip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string link = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link().data(), static_cast<int>(this->link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageTip.link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OverviewPageTip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OverviewPageTip)
  return false;
#undef DO_
}

void OverviewPageTip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OverviewPageTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string link = 1;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageTip.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->link(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OverviewPageTip)
}

::google::protobuf::uint8* OverviewPageTip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OverviewPageTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string link = 1;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageTip.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->link(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OverviewPageTip)
  return target;
}

size_t OverviewPageTip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OverviewPageTip)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string link = 1;
  if (this->link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverviewPageTip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OverviewPageTip)
  GOOGLE_DCHECK_NE(&from, this);
  const OverviewPageTip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverviewPageTip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OverviewPageTip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OverviewPageTip)
    MergeFrom(*source);
  }
}

void OverviewPageTip::MergeFrom(const OverviewPageTip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OverviewPageTip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.link().size() > 0) {

    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
}

void OverviewPageTip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OverviewPageTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverviewPageTip::CopyFrom(const OverviewPageTip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OverviewPageTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverviewPageTip::IsInitialized() const {
  return true;
}

void OverviewPageTip::Swap(OverviewPageTip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverviewPageTip::InternalSwap(OverviewPageTip* other) {
  using std::swap;
  link_.Swap(&other->link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OverviewPageTip::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenericRecommendation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericRecommendation::kKernelLaunchBottleneckFieldNumber;
const int GenericRecommendation::kKernelLaunchStatementFieldNumber;
const int GenericRecommendation::kAllOtherBottleneckFieldNumber;
const int GenericRecommendation::kAllOtherStatementFieldNumber;
const int GenericRecommendation::kPrecisionStatementFieldNumber;
const int GenericRecommendation::kDeviceCollectivesBottleneckFieldNumber;
const int GenericRecommendation::kDeviceCollectivesStatementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericRecommendation::GenericRecommendation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_GenericRecommendation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.GenericRecommendation)
}
GenericRecommendation::GenericRecommendation(const GenericRecommendation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kernel_launch_bottleneck_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kernel_launch_bottleneck().size() > 0) {
    kernel_launch_bottleneck_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_launch_bottleneck_);
  }
  kernel_launch_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kernel_launch_statement().size() > 0) {
    kernel_launch_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_launch_statement_);
  }
  all_other_bottleneck_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.all_other_bottleneck().size() > 0) {
    all_other_bottleneck_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.all_other_bottleneck_);
  }
  all_other_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.all_other_statement().size() > 0) {
    all_other_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.all_other_statement_);
  }
  precision_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.precision_statement().size() > 0) {
    precision_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.precision_statement_);
  }
  device_collectives_bottleneck_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_collectives_bottleneck().size() > 0) {
    device_collectives_bottleneck_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_collectives_bottleneck_);
  }
  device_collectives_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_collectives_statement().size() > 0) {
    device_collectives_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_collectives_statement_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.GenericRecommendation)
}

void GenericRecommendation::SharedCtor() {
  kernel_launch_bottleneck_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_bottleneck_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  precision_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_bottleneck_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenericRecommendation::~GenericRecommendation() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.GenericRecommendation)
  SharedDtor();
}

void GenericRecommendation::SharedDtor() {
  kernel_launch_bottleneck_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_bottleneck_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  precision_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_bottleneck_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenericRecommendation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenericRecommendation::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericRecommendation& GenericRecommendation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_GenericRecommendation.base);
  return *internal_default_instance();
}


void GenericRecommendation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.GenericRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kernel_launch_bottleneck_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_launch_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_bottleneck_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  all_other_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  precision_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_bottleneck_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_collectives_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenericRecommendation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.GenericRecommendation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string kernel_launch_bottleneck = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kernel_launch_bottleneck()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kernel_launch_bottleneck().data(), static_cast<int>(this->kernel_launch_bottleneck().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.GenericRecommendation.kernel_launch_bottleneck"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kernel_launch_statement = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kernel_launch_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kernel_launch_statement().data(), static_cast<int>(this->kernel_launch_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.GenericRecommendation.kernel_launch_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string all_other_bottleneck = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_all_other_bottleneck()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->all_other_bottleneck().data(), static_cast<int>(this->all_other_bottleneck().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.GenericRecommendation.all_other_bottleneck"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string all_other_statement = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_all_other_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->all_other_statement().data(), static_cast<int>(this->all_other_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.GenericRecommendation.all_other_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string precision_statement = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_precision_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->precision_statement().data(), static_cast<int>(this->precision_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.GenericRecommendation.precision_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_collectives_bottleneck = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_collectives_bottleneck()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_collectives_bottleneck().data(), static_cast<int>(this->device_collectives_bottleneck().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.GenericRecommendation.device_collectives_bottleneck"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_collectives_statement = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_collectives_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_collectives_statement().data(), static_cast<int>(this->device_collectives_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.GenericRecommendation.device_collectives_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.GenericRecommendation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.GenericRecommendation)
  return false;
#undef DO_
}

void GenericRecommendation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.GenericRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kernel_launch_bottleneck = 1;
  if (this->kernel_launch_bottleneck().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_launch_bottleneck().data(), static_cast<int>(this->kernel_launch_bottleneck().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.kernel_launch_bottleneck");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->kernel_launch_bottleneck(), output);
  }

  // string kernel_launch_statement = 2;
  if (this->kernel_launch_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_launch_statement().data(), static_cast<int>(this->kernel_launch_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.kernel_launch_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->kernel_launch_statement(), output);
  }

  // string all_other_bottleneck = 3;
  if (this->all_other_bottleneck().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_other_bottleneck().data(), static_cast<int>(this->all_other_bottleneck().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.all_other_bottleneck");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->all_other_bottleneck(), output);
  }

  // string all_other_statement = 4;
  if (this->all_other_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_other_statement().data(), static_cast<int>(this->all_other_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.all_other_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->all_other_statement(), output);
  }

  // string precision_statement = 5;
  if (this->precision_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->precision_statement().data(), static_cast<int>(this->precision_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.precision_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->precision_statement(), output);
  }

  // string device_collectives_bottleneck = 6;
  if (this->device_collectives_bottleneck().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_collectives_bottleneck().data(), static_cast<int>(this->device_collectives_bottleneck().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.device_collectives_bottleneck");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device_collectives_bottleneck(), output);
  }

  // string device_collectives_statement = 7;
  if (this->device_collectives_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_collectives_statement().data(), static_cast<int>(this->device_collectives_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.device_collectives_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->device_collectives_statement(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.GenericRecommendation)
}

::google::protobuf::uint8* GenericRecommendation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.GenericRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kernel_launch_bottleneck = 1;
  if (this->kernel_launch_bottleneck().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_launch_bottleneck().data(), static_cast<int>(this->kernel_launch_bottleneck().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.kernel_launch_bottleneck");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->kernel_launch_bottleneck(), target);
  }

  // string kernel_launch_statement = 2;
  if (this->kernel_launch_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_launch_statement().data(), static_cast<int>(this->kernel_launch_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.kernel_launch_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->kernel_launch_statement(), target);
  }

  // string all_other_bottleneck = 3;
  if (this->all_other_bottleneck().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_other_bottleneck().data(), static_cast<int>(this->all_other_bottleneck().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.all_other_bottleneck");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->all_other_bottleneck(), target);
  }

  // string all_other_statement = 4;
  if (this->all_other_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_other_statement().data(), static_cast<int>(this->all_other_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.all_other_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->all_other_statement(), target);
  }

  // string precision_statement = 5;
  if (this->precision_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->precision_statement().data(), static_cast<int>(this->precision_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.precision_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->precision_statement(), target);
  }

  // string device_collectives_bottleneck = 6;
  if (this->device_collectives_bottleneck().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_collectives_bottleneck().data(), static_cast<int>(this->device_collectives_bottleneck().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.device_collectives_bottleneck");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device_collectives_bottleneck(), target);
  }

  // string device_collectives_statement = 7;
  if (this->device_collectives_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_collectives_statement().data(), static_cast<int>(this->device_collectives_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.GenericRecommendation.device_collectives_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->device_collectives_statement(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.GenericRecommendation)
  return target;
}

size_t GenericRecommendation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.GenericRecommendation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string kernel_launch_bottleneck = 1;
  if (this->kernel_launch_bottleneck().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kernel_launch_bottleneck());
  }

  // string kernel_launch_statement = 2;
  if (this->kernel_launch_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kernel_launch_statement());
  }

  // string all_other_bottleneck = 3;
  if (this->all_other_bottleneck().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->all_other_bottleneck());
  }

  // string all_other_statement = 4;
  if (this->all_other_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->all_other_statement());
  }

  // string precision_statement = 5;
  if (this->precision_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->precision_statement());
  }

  // string device_collectives_bottleneck = 6;
  if (this->device_collectives_bottleneck().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_collectives_bottleneck());
  }

  // string device_collectives_statement = 7;
  if (this->device_collectives_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_collectives_statement());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericRecommendation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.GenericRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericRecommendation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericRecommendation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.GenericRecommendation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.GenericRecommendation)
    MergeFrom(*source);
  }
}

void GenericRecommendation::MergeFrom(const GenericRecommendation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.GenericRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kernel_launch_bottleneck().size() > 0) {

    kernel_launch_bottleneck_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_launch_bottleneck_);
  }
  if (from.kernel_launch_statement().size() > 0) {

    kernel_launch_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_launch_statement_);
  }
  if (from.all_other_bottleneck().size() > 0) {

    all_other_bottleneck_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.all_other_bottleneck_);
  }
  if (from.all_other_statement().size() > 0) {

    all_other_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.all_other_statement_);
  }
  if (from.precision_statement().size() > 0) {

    precision_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.precision_statement_);
  }
  if (from.device_collectives_bottleneck().size() > 0) {

    device_collectives_bottleneck_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_collectives_bottleneck_);
  }
  if (from.device_collectives_statement().size() > 0) {

    device_collectives_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_collectives_statement_);
  }
}

void GenericRecommendation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.GenericRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericRecommendation::CopyFrom(const GenericRecommendation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.GenericRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericRecommendation::IsInitialized() const {
  return true;
}

void GenericRecommendation::Swap(GenericRecommendation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericRecommendation::InternalSwap(GenericRecommendation* other) {
  using std::swap;
  kernel_launch_bottleneck_.Swap(&other->kernel_launch_bottleneck_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kernel_launch_statement_.Swap(&other->kernel_launch_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  all_other_bottleneck_.Swap(&other->all_other_bottleneck_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  all_other_statement_.Swap(&other->all_other_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  precision_statement_.Swap(&other->precision_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_collectives_bottleneck_.Swap(&other->device_collectives_bottleneck_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_collectives_statement_.Swap(&other->device_collectives_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenericRecommendation::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OverviewPageRecommendation::InitAsDefaultInstance() {
  ::tensorflow::profiler::_OverviewPageRecommendation_default_instance_._instance.get_mutable()->recommendation_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void OverviewPageRecommendation::clear_recommendation() {
  if (GetArenaNoVirtual() == NULL && recommendation_ != NULL) {
    delete recommendation_;
  }
  recommendation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverviewPageRecommendation::kBottleneckFieldNumber;
const int OverviewPageRecommendation::kStatementFieldNumber;
const int OverviewPageRecommendation::kInputTipsFieldNumber;
const int OverviewPageRecommendation::kOutputStatementFieldNumber;
const int OverviewPageRecommendation::kEagerStatementHtmlFieldNumber;
const int OverviewPageRecommendation::kOutsideCompilationStatementHtmlFieldNumber;
const int OverviewPageRecommendation::kTfFunctionStatementHtmlFieldNumber;
const int OverviewPageRecommendation::kHostTipsFieldNumber;
const int OverviewPageRecommendation::kDeviceTipsFieldNumber;
const int OverviewPageRecommendation::kDocumentationTipsFieldNumber;
const int OverviewPageRecommendation::kRecommendationFieldNumber;
const int OverviewPageRecommendation::kFaqTipsFieldNumber;
const int OverviewPageRecommendation::kInferenceTipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverviewPageRecommendation::OverviewPageRecommendation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageRecommendation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OverviewPageRecommendation)
}
OverviewPageRecommendation::OverviewPageRecommendation(const OverviewPageRecommendation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      host_tips_(from.host_tips_),
      device_tips_(from.device_tips_),
      documentation_tips_(from.documentation_tips_),
      faq_tips_(from.faq_tips_),
      inference_tips_(from.inference_tips_),
      input_tips_(from.input_tips_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bottleneck_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bottleneck().size() > 0) {
    bottleneck_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bottleneck_);
  }
  statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.statement().size() > 0) {
    statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statement_);
  }
  output_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_statement().size() > 0) {
    output_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_statement_);
  }
  tf_function_statement_html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tf_function_statement_html().size() > 0) {
    tf_function_statement_html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tf_function_statement_html_);
  }
  eager_statement_html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.eager_statement_html().size() > 0) {
    eager_statement_html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eager_statement_html_);
  }
  outside_compilation_statement_html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.outside_compilation_statement_html().size() > 0) {
    outside_compilation_statement_html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outside_compilation_statement_html_);
  }
  if (from.has_recommendation()) {
    recommendation_ = new ::google::protobuf::Any(*from.recommendation_);
  } else {
    recommendation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OverviewPageRecommendation)
}

void OverviewPageRecommendation::SharedCtor() {
  bottleneck_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tf_function_statement_html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eager_statement_html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outside_compilation_statement_html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recommendation_ = NULL;
}

OverviewPageRecommendation::~OverviewPageRecommendation() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OverviewPageRecommendation)
  SharedDtor();
}

void OverviewPageRecommendation::SharedDtor() {
  bottleneck_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tf_function_statement_html_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eager_statement_html_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outside_compilation_statement_html_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete recommendation_;
}

void OverviewPageRecommendation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OverviewPageRecommendation::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverviewPageRecommendation& OverviewPageRecommendation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageRecommendation.base);
  return *internal_default_instance();
}


void OverviewPageRecommendation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OverviewPageRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_tips_.Clear();
  device_tips_.Clear();
  documentation_tips_.Clear();
  faq_tips_.Clear();
  inference_tips_.Clear();
  input_tips_.Clear();
  bottleneck_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tf_function_statement_html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eager_statement_html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outside_compilation_statement_html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && recommendation_ != NULL) {
    delete recommendation_;
  }
  recommendation_ = NULL;
  _internal_metadata_.Clear();
}

bool OverviewPageRecommendation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OverviewPageRecommendation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bottleneck = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottleneck()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bottleneck().data(), static_cast<int>(this->bottleneck().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageRecommendation.bottleneck"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string statement = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->statement().data(), static_cast<int>(this->statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageRecommendation.statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.OverviewPageTip host_tips = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_host_tips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.OverviewPageTip device_tips = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_device_tips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.OverviewPageTip documentation_tips = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_documentation_tips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any recommendation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recommendation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.OverviewPageTip faq_tips = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_faq_tips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.OverviewPageTip inference_tips = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inference_tips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_statement = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_statement().data(), static_cast<int>(this->output_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageRecommendation.output_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tf_function_statement_html = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tf_function_statement_html()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tf_function_statement_html().data(), static_cast<int>(this->tf_function_statement_html().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageRecommendation.tf_function_statement_html"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.OverviewPageTip input_tips = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input_tips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string eager_statement_html = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eager_statement_html()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->eager_statement_html().data(), static_cast<int>(this->eager_statement_html().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageRecommendation.eager_statement_html"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string outside_compilation_statement_html = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outside_compilation_statement_html()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->outside_compilation_statement_html().data(), static_cast<int>(this->outside_compilation_statement_html().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageRecommendation.outside_compilation_statement_html"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OverviewPageRecommendation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OverviewPageRecommendation)
  return false;
#undef DO_
}

void OverviewPageRecommendation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OverviewPageRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bottleneck = 1;
  if (this->bottleneck().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bottleneck().data(), static_cast<int>(this->bottleneck().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.bottleneck");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bottleneck(), output);
  }

  // string statement = 2;
  if (this->statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statement().data(), static_cast<int>(this->statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->statement(), output);
  }

  // repeated .tensorflow.profiler.OverviewPageTip host_tips = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->host_tips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->host_tips(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.profiler.OverviewPageTip device_tips = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_tips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->device_tips(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.profiler.OverviewPageTip documentation_tips = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->documentation_tips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->documentation_tips(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Any recommendation = 6;
  if (this->has_recommendation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_recommendation(), output);
  }

  // repeated .tensorflow.profiler.OverviewPageTip faq_tips = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->faq_tips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->faq_tips(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.profiler.OverviewPageTip inference_tips = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inference_tips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->inference_tips(static_cast<int>(i)),
      output);
  }

  // string output_statement = 9;
  if (this->output_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_statement().data(), static_cast<int>(this->output_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.output_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->output_statement(), output);
  }

  // string tf_function_statement_html = 10;
  if (this->tf_function_statement_html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tf_function_statement_html().data(), static_cast<int>(this->tf_function_statement_html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.tf_function_statement_html");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->tf_function_statement_html(), output);
  }

  // repeated .tensorflow.profiler.OverviewPageTip input_tips = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_tips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->input_tips(static_cast<int>(i)),
      output);
  }

  // string eager_statement_html = 12;
  if (this->eager_statement_html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eager_statement_html().data(), static_cast<int>(this->eager_statement_html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.eager_statement_html");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->eager_statement_html(), output);
  }

  // string outside_compilation_statement_html = 13;
  if (this->outside_compilation_statement_html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outside_compilation_statement_html().data(), static_cast<int>(this->outside_compilation_statement_html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.outside_compilation_statement_html");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->outside_compilation_statement_html(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OverviewPageRecommendation)
}

::google::protobuf::uint8* OverviewPageRecommendation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OverviewPageRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bottleneck = 1;
  if (this->bottleneck().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bottleneck().data(), static_cast<int>(this->bottleneck().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.bottleneck");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bottleneck(), target);
  }

  // string statement = 2;
  if (this->statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statement().data(), static_cast<int>(this->statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->statement(), target);
  }

  // repeated .tensorflow.profiler.OverviewPageTip host_tips = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->host_tips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->host_tips(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.profiler.OverviewPageTip device_tips = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_tips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->device_tips(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.profiler.OverviewPageTip documentation_tips = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->documentation_tips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->documentation_tips(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Any recommendation = 6;
  if (this->has_recommendation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_recommendation(), deterministic, target);
  }

  // repeated .tensorflow.profiler.OverviewPageTip faq_tips = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->faq_tips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->faq_tips(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.profiler.OverviewPageTip inference_tips = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inference_tips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->inference_tips(static_cast<int>(i)), deterministic, target);
  }

  // string output_statement = 9;
  if (this->output_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_statement().data(), static_cast<int>(this->output_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.output_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->output_statement(), target);
  }

  // string tf_function_statement_html = 10;
  if (this->tf_function_statement_html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tf_function_statement_html().data(), static_cast<int>(this->tf_function_statement_html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.tf_function_statement_html");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->tf_function_statement_html(), target);
  }

  // repeated .tensorflow.profiler.OverviewPageTip input_tips = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_tips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->input_tips(static_cast<int>(i)), deterministic, target);
  }

  // string eager_statement_html = 12;
  if (this->eager_statement_html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eager_statement_html().data(), static_cast<int>(this->eager_statement_html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.eager_statement_html");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->eager_statement_html(), target);
  }

  // string outside_compilation_statement_html = 13;
  if (this->outside_compilation_statement_html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outside_compilation_statement_html().data(), static_cast<int>(this->outside_compilation_statement_html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRecommendation.outside_compilation_statement_html");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->outside_compilation_statement_html(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OverviewPageRecommendation)
  return target;
}

size_t OverviewPageRecommendation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OverviewPageRecommendation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.OverviewPageTip host_tips = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->host_tips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->host_tips(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.OverviewPageTip device_tips = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->device_tips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_tips(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.OverviewPageTip documentation_tips = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->documentation_tips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->documentation_tips(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.OverviewPageTip faq_tips = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->faq_tips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->faq_tips(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.OverviewPageTip inference_tips = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->inference_tips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inference_tips(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.profiler.OverviewPageTip input_tips = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->input_tips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_tips(static_cast<int>(i)));
    }
  }

  // string bottleneck = 1;
  if (this->bottleneck().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bottleneck());
  }

  // string statement = 2;
  if (this->statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statement());
  }

  // string output_statement = 9;
  if (this->output_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_statement());
  }

  // string tf_function_statement_html = 10;
  if (this->tf_function_statement_html().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tf_function_statement_html());
  }

  // string eager_statement_html = 12;
  if (this->eager_statement_html().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->eager_statement_html());
  }

  // string outside_compilation_statement_html = 13;
  if (this->outside_compilation_statement_html().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->outside_compilation_statement_html());
  }

  // .google.protobuf.Any recommendation = 6;
  if (this->has_recommendation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recommendation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverviewPageRecommendation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OverviewPageRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  const OverviewPageRecommendation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverviewPageRecommendation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OverviewPageRecommendation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OverviewPageRecommendation)
    MergeFrom(*source);
  }
}

void OverviewPageRecommendation::MergeFrom(const OverviewPageRecommendation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OverviewPageRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  host_tips_.MergeFrom(from.host_tips_);
  device_tips_.MergeFrom(from.device_tips_);
  documentation_tips_.MergeFrom(from.documentation_tips_);
  faq_tips_.MergeFrom(from.faq_tips_);
  inference_tips_.MergeFrom(from.inference_tips_);
  input_tips_.MergeFrom(from.input_tips_);
  if (from.bottleneck().size() > 0) {

    bottleneck_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bottleneck_);
  }
  if (from.statement().size() > 0) {

    statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statement_);
  }
  if (from.output_statement().size() > 0) {

    output_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_statement_);
  }
  if (from.tf_function_statement_html().size() > 0) {

    tf_function_statement_html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tf_function_statement_html_);
  }
  if (from.eager_statement_html().size() > 0) {

    eager_statement_html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eager_statement_html_);
  }
  if (from.outside_compilation_statement_html().size() > 0) {

    outside_compilation_statement_html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outside_compilation_statement_html_);
  }
  if (from.has_recommendation()) {
    mutable_recommendation()->::google::protobuf::Any::MergeFrom(from.recommendation());
  }
}

void OverviewPageRecommendation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OverviewPageRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverviewPageRecommendation::CopyFrom(const OverviewPageRecommendation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OverviewPageRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverviewPageRecommendation::IsInitialized() const {
  return true;
}

void OverviewPageRecommendation::Swap(OverviewPageRecommendation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverviewPageRecommendation::InternalSwap(OverviewPageRecommendation* other) {
  using std::swap;
  CastToBase(&host_tips_)->InternalSwap(CastToBase(&other->host_tips_));
  CastToBase(&device_tips_)->InternalSwap(CastToBase(&other->device_tips_));
  CastToBase(&documentation_tips_)->InternalSwap(CastToBase(&other->documentation_tips_));
  CastToBase(&faq_tips_)->InternalSwap(CastToBase(&other->faq_tips_));
  CastToBase(&inference_tips_)->InternalSwap(CastToBase(&other->inference_tips_));
  CastToBase(&input_tips_)->InternalSwap(CastToBase(&other->input_tips_));
  bottleneck_.Swap(&other->bottleneck_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  statement_.Swap(&other->statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_statement_.Swap(&other->output_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tf_function_statement_html_.Swap(&other->tf_function_statement_html_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  eager_statement_html_.Swap(&other->eager_statement_html_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  outside_compilation_statement_html_.Swap(&other->outside_compilation_statement_html_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(recommendation_, other->recommendation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OverviewPageRecommendation::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OverviewPageHostIndependentJobInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverviewPageHostIndependentJobInfo::kChangeListFieldNumber;
const int OverviewPageHostIndependentJobInfo::kBuildTimeFieldNumber;
const int OverviewPageHostIndependentJobInfo::kBuildTargetFieldNumber;
const int OverviewPageHostIndependentJobInfo::kProfileDurationMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverviewPageHostIndependentJobInfo::OverviewPageHostIndependentJobInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageHostIndependentJobInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
}
OverviewPageHostIndependentJobInfo::OverviewPageHostIndependentJobInfo(const OverviewPageHostIndependentJobInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_target().size() > 0) {
    build_target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_target_);
  }
  ::memcpy(&change_list_, &from.change_list_,
    static_cast<size_t>(reinterpret_cast<char*>(&profile_duration_ms_) -
    reinterpret_cast<char*>(&change_list_)) + sizeof(profile_duration_ms_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
}

void OverviewPageHostIndependentJobInfo::SharedCtor() {
  build_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&change_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_duration_ms_) -
      reinterpret_cast<char*>(&change_list_)) + sizeof(profile_duration_ms_));
}

OverviewPageHostIndependentJobInfo::~OverviewPageHostIndependentJobInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  SharedDtor();
}

void OverviewPageHostIndependentJobInfo::SharedDtor() {
  build_target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OverviewPageHostIndependentJobInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OverviewPageHostIndependentJobInfo::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverviewPageHostIndependentJobInfo& OverviewPageHostIndependentJobInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageHostIndependentJobInfo.base);
  return *internal_default_instance();
}


void OverviewPageHostIndependentJobInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  build_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&change_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_duration_ms_) -
      reinterpret_cast<char*>(&change_list_)) + sizeof(profile_duration_ms_));
  _internal_metadata_.Clear();
}

bool OverviewPageHostIndependentJobInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 change_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &change_list_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 build_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &build_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_target().data(), static_cast<int>(this->build_target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageHostIndependentJobInfo.build_target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 profile_duration_ms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &profile_duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  return false;
#undef DO_
}

void OverviewPageHostIndependentJobInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 change_list = 1;
  if (this->change_list() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->change_list(), output);
  }

  // int64 build_time = 2;
  if (this->build_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->build_time(), output);
  }

  // string build_target = 3;
  if (this->build_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_target().data(), static_cast<int>(this->build_target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageHostIndependentJobInfo.build_target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->build_target(), output);
  }

  // uint32 profile_duration_ms = 4;
  if (this->profile_duration_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->profile_duration_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
}

::google::protobuf::uint8* OverviewPageHostIndependentJobInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 change_list = 1;
  if (this->change_list() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->change_list(), target);
  }

  // int64 build_time = 2;
  if (this->build_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->build_time(), target);
  }

  // string build_target = 3;
  if (this->build_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_target().data(), static_cast<int>(this->build_target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageHostIndependentJobInfo.build_target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->build_target(), target);
  }

  // uint32 profile_duration_ms = 4;
  if (this->profile_duration_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->profile_duration_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  return target;
}

size_t OverviewPageHostIndependentJobInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string build_target = 3;
  if (this->build_target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_target());
  }

  // int64 change_list = 1;
  if (this->change_list() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->change_list());
  }

  // int64 build_time = 2;
  if (this->build_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->build_time());
  }

  // uint32 profile_duration_ms = 4;
  if (this->profile_duration_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->profile_duration_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverviewPageHostIndependentJobInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OverviewPageHostIndependentJobInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverviewPageHostIndependentJobInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
    MergeFrom(*source);
  }
}

void OverviewPageHostIndependentJobInfo::MergeFrom(const OverviewPageHostIndependentJobInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.build_target().size() > 0) {

    build_target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_target_);
  }
  if (from.change_list() != 0) {
    set_change_list(from.change_list());
  }
  if (from.build_time() != 0) {
    set_build_time(from.build_time());
  }
  if (from.profile_duration_ms() != 0) {
    set_profile_duration_ms(from.profile_duration_ms());
  }
}

void OverviewPageHostIndependentJobInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverviewPageHostIndependentJobInfo::CopyFrom(const OverviewPageHostIndependentJobInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OverviewPageHostIndependentJobInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverviewPageHostIndependentJobInfo::IsInitialized() const {
  return true;
}

void OverviewPageHostIndependentJobInfo::Swap(OverviewPageHostIndependentJobInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverviewPageHostIndependentJobInfo::InternalSwap(OverviewPageHostIndependentJobInfo* other) {
  using std::swap;
  build_target_.Swap(&other->build_target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(change_list_, other->change_list_);
  swap(build_time_, other->build_time_);
  swap(profile_duration_ms_, other->profile_duration_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OverviewPageHostIndependentJobInfo::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OverviewPageHostDependentJobInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverviewPageHostDependentJobInfo::kHostIdFieldNumber;
const int OverviewPageHostDependentJobInfo::kCommandLineFieldNumber;
const int OverviewPageHostDependentJobInfo::kStartTimeFieldNumber;
const int OverviewPageHostDependentJobInfo::kBnsAddressFieldNumber;
const int OverviewPageHostDependentJobInfo::kProfileTimeNsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverviewPageHostDependentJobInfo::OverviewPageHostDependentJobInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageHostDependentJobInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OverviewPageHostDependentJobInfo)
}
OverviewPageHostDependentJobInfo::OverviewPageHostDependentJobInfo(const OverviewPageHostDependentJobInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_id().size() > 0) {
    host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
  }
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command_line().size() > 0) {
    command_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line_);
  }
  bns_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bns_address().size() > 0) {
    bns_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bns_address_);
  }
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&profile_time_ns_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(profile_time_ns_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OverviewPageHostDependentJobInfo)
}

void OverviewPageHostDependentJobInfo::SharedCtor() {
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bns_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_time_ns_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(profile_time_ns_));
}

OverviewPageHostDependentJobInfo::~OverviewPageHostDependentJobInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  SharedDtor();
}

void OverviewPageHostDependentJobInfo::SharedDtor() {
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bns_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OverviewPageHostDependentJobInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OverviewPageHostDependentJobInfo::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverviewPageHostDependentJobInfo& OverviewPageHostDependentJobInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageHostDependentJobInfo.base);
  return *internal_default_instance();
}


void OverviewPageHostDependentJobInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bns_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_time_ns_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(profile_time_ns_));
  _internal_metadata_.Clear();
}

bool OverviewPageHostDependentJobInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_id().data(), static_cast<int>(this->host_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageHostDependentJobInfo.host_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string command_line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command_line().data(), static_cast<int>(this->command_line().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageHostDependentJobInfo.command_line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bns_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bns_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bns_address().data(), static_cast<int>(this->bns_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageHostDependentJobInfo.bns_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 profile_time_ns = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &profile_time_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  return false;
#undef DO_
}

void OverviewPageHostDependentJobInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_id = 1;
  if (this->host_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_id().data(), static_cast<int>(this->host_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageHostDependentJobInfo.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host_id(), output);
  }

  // string command_line = 2;
  if (this->command_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_line().data(), static_cast<int>(this->command_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageHostDependentJobInfo.command_line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command_line(), output);
  }

  // int64 start_time = 3;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_time(), output);
  }

  // string bns_address = 4;
  if (this->bns_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bns_address().data(), static_cast<int>(this->bns_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageHostDependentJobInfo.bns_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bns_address(), output);
  }

  // uint64 profile_time_ns = 5;
  if (this->profile_time_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->profile_time_ns(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OverviewPageHostDependentJobInfo)
}

::google::protobuf::uint8* OverviewPageHostDependentJobInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_id = 1;
  if (this->host_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_id().data(), static_cast<int>(this->host_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageHostDependentJobInfo.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host_id(), target);
  }

  // string command_line = 2;
  if (this->command_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_line().data(), static_cast<int>(this->command_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageHostDependentJobInfo.command_line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command_line(), target);
  }

  // int64 start_time = 3;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_time(), target);
  }

  // string bns_address = 4;
  if (this->bns_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bns_address().data(), static_cast<int>(this->bns_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageHostDependentJobInfo.bns_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bns_address(), target);
  }

  // uint64 profile_time_ns = 5;
  if (this->profile_time_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->profile_time_ns(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  return target;
}

size_t OverviewPageHostDependentJobInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host_id = 1;
  if (this->host_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_id());
  }

  // string command_line = 2;
  if (this->command_line().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command_line());
  }

  // string bns_address = 4;
  if (this->bns_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bns_address());
  }

  // int64 start_time = 3;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time());
  }

  // uint64 profile_time_ns = 5;
  if (this->profile_time_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->profile_time_ns());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverviewPageHostDependentJobInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OverviewPageHostDependentJobInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverviewPageHostDependentJobInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OverviewPageHostDependentJobInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OverviewPageHostDependentJobInfo)
    MergeFrom(*source);
  }
}

void OverviewPageHostDependentJobInfo::MergeFrom(const OverviewPageHostDependentJobInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_id().size() > 0) {

    host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
  }
  if (from.command_line().size() > 0) {

    command_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line_);
  }
  if (from.bns_address().size() > 0) {

    bns_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bns_address_);
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.profile_time_ns() != 0) {
    set_profile_time_ns(from.profile_time_ns());
  }
}

void OverviewPageHostDependentJobInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverviewPageHostDependentJobInfo::CopyFrom(const OverviewPageHostDependentJobInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OverviewPageHostDependentJobInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverviewPageHostDependentJobInfo::IsInitialized() const {
  return true;
}

void OverviewPageHostDependentJobInfo::Swap(OverviewPageHostDependentJobInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverviewPageHostDependentJobInfo::InternalSwap(OverviewPageHostDependentJobInfo* other) {
  using std::swap;
  host_id_.Swap(&other->host_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  command_line_.Swap(&other->command_line_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bns_address_.Swap(&other->bns_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_time_, other->start_time_);
  swap(profile_time_ns_, other->profile_time_ns_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OverviewPageHostDependentJobInfo::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

OverviewPageRunEnvironment_HostnamesEntry_DoNotUse::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse() {}
OverviewPageRunEnvironment_HostnamesEntry_DoNotUse::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void OverviewPageRunEnvironment_HostnamesEntry_DoNotUse::MergeFrom(const OverviewPageRunEnvironment_HostnamesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata OverviewPageRunEnvironment_HostnamesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[7];
}
void OverviewPageRunEnvironment_HostnamesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void OverviewPageRunEnvironment::InitAsDefaultInstance() {
  ::tensorflow::profiler::_OverviewPageRunEnvironment_default_instance_._instance.get_mutable()->host_independent_job_info_ = const_cast< ::tensorflow::profiler::OverviewPageHostIndependentJobInfo*>(
      ::tensorflow::profiler::OverviewPageHostIndependentJobInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverviewPageRunEnvironment::kHostCountFieldNumber;
const int OverviewPageRunEnvironment::kTaskCountFieldNumber;
const int OverviewPageRunEnvironment::kHostnamesFieldNumber;
const int OverviewPageRunEnvironment::kDeviceTypeFieldNumber;
const int OverviewPageRunEnvironment::kDeviceCoreCountFieldNumber;
const int OverviewPageRunEnvironment::kPerCoreBatchSizeFieldNumber;
const int OverviewPageRunEnvironment::kHostIndependentJobInfoFieldNumber;
const int OverviewPageRunEnvironment::kHostDependentJobInfoFieldNumber;
const int OverviewPageRunEnvironment::kReplicaCountFieldNumber;
const int OverviewPageRunEnvironment::kNumCoresPerReplicaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverviewPageRunEnvironment::OverviewPageRunEnvironment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageRunEnvironment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OverviewPageRunEnvironment)
}
OverviewPageRunEnvironment::OverviewPageRunEnvironment(const OverviewPageRunEnvironment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      host_dependent_job_info_(from.host_dependent_job_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostnames_.MergeFrom(from.hostnames_);
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.has_host_independent_job_info()) {
    host_independent_job_info_ = new ::tensorflow::profiler::OverviewPageHostIndependentJobInfo(*from.host_independent_job_info_);
  } else {
    host_independent_job_info_ = NULL;
  }
  ::memcpy(&host_count_, &from.host_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_cores_per_replica_) -
    reinterpret_cast<char*>(&host_count_)) + sizeof(num_cores_per_replica_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OverviewPageRunEnvironment)
}

void OverviewPageRunEnvironment::SharedCtor() {
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&host_independent_job_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_cores_per_replica_) -
      reinterpret_cast<char*>(&host_independent_job_info_)) + sizeof(num_cores_per_replica_));
}

OverviewPageRunEnvironment::~OverviewPageRunEnvironment() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OverviewPageRunEnvironment)
  SharedDtor();
}

void OverviewPageRunEnvironment::SharedDtor() {
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete host_independent_job_info_;
}

void OverviewPageRunEnvironment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OverviewPageRunEnvironment::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverviewPageRunEnvironment& OverviewPageRunEnvironment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPageRunEnvironment.base);
  return *internal_default_instance();
}


void OverviewPageRunEnvironment::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OverviewPageRunEnvironment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hostnames_.Clear();
  host_dependent_job_info_.Clear();
  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && host_independent_job_info_ != NULL) {
    delete host_independent_job_info_;
  }
  host_independent_job_info_ = NULL;
  ::memset(&host_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_cores_per_replica_) -
      reinterpret_cast<char*>(&host_count_)) + sizeof(num_cores_per_replica_));
  _internal_metadata_.Clear();
}

bool OverviewPageRunEnvironment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OverviewPageRunEnvironment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 host_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 task_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bool> hostnames = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          OverviewPageRunEnvironment_HostnamesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              OverviewPageRunEnvironment_HostnamesEntry_DoNotUse,
              ::std::string, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< ::std::string, bool > > parser(&hostnames_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageRunEnvironment.HostnamesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.OverviewPageRunEnvironment.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device_core_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_core_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 per_core_batch_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &per_core_batch_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.OverviewPageHostIndependentJobInfo host_independent_job_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_independent_job_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.OverviewPageHostDependentJobInfo host_dependent_job_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_host_dependent_job_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 replica_count = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replica_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_cores_per_replica = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_cores_per_replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OverviewPageRunEnvironment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OverviewPageRunEnvironment)
  return false;
#undef DO_
}

void OverviewPageRunEnvironment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OverviewPageRunEnvironment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 host_count = 1;
  if (this->host_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->host_count(), output);
  }

  // int32 task_count = 2;
  if (this->task_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_count(), output);
  }

  // map<string, bool> hostnames = 3;
  if (!this->hostnames().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.OverviewPageRunEnvironment.HostnamesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->hostnames().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->hostnames().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->hostnames().begin();
          it != this->hostnames().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OverviewPageRunEnvironment_HostnamesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hostnames_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<OverviewPageRunEnvironment_HostnamesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->hostnames().begin();
          it != this->hostnames().end(); ++it) {
        entry.reset(hostnames_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string device_type = 4;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRunEnvironment.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_type(), output);
  }

  // int32 device_core_count = 5;
  if (this->device_core_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->device_core_count(), output);
  }

  // int32 per_core_batch_size = 6;
  if (this->per_core_batch_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->per_core_batch_size(), output);
  }

  // .tensorflow.profiler.OverviewPageHostIndependentJobInfo host_independent_job_info = 7;
  if (this->has_host_independent_job_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_host_independent_job_info(), output);
  }

  // repeated .tensorflow.profiler.OverviewPageHostDependentJobInfo host_dependent_job_info = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->host_dependent_job_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->host_dependent_job_info(static_cast<int>(i)),
      output);
  }

  // int32 replica_count = 9;
  if (this->replica_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->replica_count(), output);
  }

  // int32 num_cores_per_replica = 10;
  if (this->num_cores_per_replica() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->num_cores_per_replica(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OverviewPageRunEnvironment)
}

::google::protobuf::uint8* OverviewPageRunEnvironment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OverviewPageRunEnvironment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 host_count = 1;
  if (this->host_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->host_count(), target);
  }

  // int32 task_count = 2;
  if (this->task_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_count(), target);
  }

  // map<string, bool> hostnames = 3;
  if (!this->hostnames().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.OverviewPageRunEnvironment.HostnamesEntry.key");
      }
    };

    if (deterministic &&
        this->hostnames().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->hostnames().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->hostnames().begin();
          it != this->hostnames().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OverviewPageRunEnvironment_HostnamesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hostnames_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<OverviewPageRunEnvironment_HostnamesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->hostnames().begin();
          it != this->hostnames().end(); ++it) {
        entry.reset(hostnames_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string device_type = 4;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.OverviewPageRunEnvironment.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_type(), target);
  }

  // int32 device_core_count = 5;
  if (this->device_core_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->device_core_count(), target);
  }

  // int32 per_core_batch_size = 6;
  if (this->per_core_batch_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->per_core_batch_size(), target);
  }

  // .tensorflow.profiler.OverviewPageHostIndependentJobInfo host_independent_job_info = 7;
  if (this->has_host_independent_job_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_host_independent_job_info(), deterministic, target);
  }

  // repeated .tensorflow.profiler.OverviewPageHostDependentJobInfo host_dependent_job_info = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->host_dependent_job_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->host_dependent_job_info(static_cast<int>(i)), deterministic, target);
  }

  // int32 replica_count = 9;
  if (this->replica_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->replica_count(), target);
  }

  // int32 num_cores_per_replica = 10;
  if (this->num_cores_per_replica() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->num_cores_per_replica(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OverviewPageRunEnvironment)
  return target;
}

size_t OverviewPageRunEnvironment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OverviewPageRunEnvironment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bool> hostnames = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hostnames_size());
  {
    ::std::unique_ptr<OverviewPageRunEnvironment_HostnamesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, bool >::const_iterator
        it = this->hostnames().begin();
        it != this->hostnames().end(); ++it) {
      entry.reset(hostnames_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .tensorflow.profiler.OverviewPageHostDependentJobInfo host_dependent_job_info = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->host_dependent_job_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->host_dependent_job_info(static_cast<int>(i)));
    }
  }

  // string device_type = 4;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // .tensorflow.profiler.OverviewPageHostIndependentJobInfo host_independent_job_info = 7;
  if (this->has_host_independent_job_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_independent_job_info_);
  }

  // int32 host_count = 1;
  if (this->host_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->host_count());
  }

  // int32 task_count = 2;
  if (this->task_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_count());
  }

  // int32 device_core_count = 5;
  if (this->device_core_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device_core_count());
  }

  // int32 per_core_batch_size = 6;
  if (this->per_core_batch_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->per_core_batch_size());
  }

  // int32 replica_count = 9;
  if (this->replica_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replica_count());
  }

  // int32 num_cores_per_replica = 10;
  if (this->num_cores_per_replica() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_cores_per_replica());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverviewPageRunEnvironment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OverviewPageRunEnvironment)
  GOOGLE_DCHECK_NE(&from, this);
  const OverviewPageRunEnvironment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverviewPageRunEnvironment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OverviewPageRunEnvironment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OverviewPageRunEnvironment)
    MergeFrom(*source);
  }
}

void OverviewPageRunEnvironment::MergeFrom(const OverviewPageRunEnvironment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OverviewPageRunEnvironment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hostnames_.MergeFrom(from.hostnames_);
  host_dependent_job_info_.MergeFrom(from.host_dependent_job_info_);
  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.has_host_independent_job_info()) {
    mutable_host_independent_job_info()->::tensorflow::profiler::OverviewPageHostIndependentJobInfo::MergeFrom(from.host_independent_job_info());
  }
  if (from.host_count() != 0) {
    set_host_count(from.host_count());
  }
  if (from.task_count() != 0) {
    set_task_count(from.task_count());
  }
  if (from.device_core_count() != 0) {
    set_device_core_count(from.device_core_count());
  }
  if (from.per_core_batch_size() != 0) {
    set_per_core_batch_size(from.per_core_batch_size());
  }
  if (from.replica_count() != 0) {
    set_replica_count(from.replica_count());
  }
  if (from.num_cores_per_replica() != 0) {
    set_num_cores_per_replica(from.num_cores_per_replica());
  }
}

void OverviewPageRunEnvironment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OverviewPageRunEnvironment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverviewPageRunEnvironment::CopyFrom(const OverviewPageRunEnvironment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OverviewPageRunEnvironment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverviewPageRunEnvironment::IsInitialized() const {
  return true;
}

void OverviewPageRunEnvironment::Swap(OverviewPageRunEnvironment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverviewPageRunEnvironment::InternalSwap(OverviewPageRunEnvironment* other) {
  using std::swap;
  hostnames_.Swap(&other->hostnames_);
  CastToBase(&host_dependent_job_info_)->InternalSwap(CastToBase(&other->host_dependent_job_info_));
  device_type_.Swap(&other->device_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(host_independent_job_info_, other->host_independent_job_info_);
  swap(host_count_, other->host_count_);
  swap(task_count_, other->task_count_);
  swap(device_core_count_, other->device_core_count_);
  swap(per_core_batch_size_, other->per_core_batch_size_);
  swap(replica_count_, other->replica_count_);
  swap(num_cores_per_replica_, other->num_cores_per_replica_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OverviewPageRunEnvironment::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OverviewPage::InitAsDefaultInstance() {
  ::tensorflow::profiler::_OverviewPage_default_instance_._instance.get_mutable()->run_environment_ = const_cast< ::tensorflow::profiler::OverviewPageRunEnvironment*>(
      ::tensorflow::profiler::OverviewPageRunEnvironment::internal_default_instance());
  ::tensorflow::profiler::_OverviewPage_default_instance_._instance.get_mutable()->input_analysis_ = const_cast< ::tensorflow::profiler::InputPipelineAnalysisResult*>(
      ::tensorflow::profiler::InputPipelineAnalysisResult::internal_default_instance());
  ::tensorflow::profiler::_OverviewPage_default_instance_._instance.get_mutable()->analysis_ = const_cast< ::tensorflow::profiler::OverviewPageAnalysis*>(
      ::tensorflow::profiler::OverviewPageAnalysis::internal_default_instance());
  ::tensorflow::profiler::_OverviewPage_default_instance_._instance.get_mutable()->recommendation_ = const_cast< ::tensorflow::profiler::OverviewPageRecommendation*>(
      ::tensorflow::profiler::OverviewPageRecommendation::internal_default_instance());
  ::tensorflow::profiler::_OverviewPage_default_instance_._instance.get_mutable()->diagnostics_ = const_cast< ::tensorflow::profiler::Diagnostics*>(
      ::tensorflow::profiler::Diagnostics::internal_default_instance());
}
void OverviewPage::clear_input_analysis() {
  if (GetArenaNoVirtual() == NULL && input_analysis_ != NULL) {
    delete input_analysis_;
  }
  input_analysis_ = NULL;
}
void OverviewPage::clear_diagnostics() {
  if (GetArenaNoVirtual() == NULL && diagnostics_ != NULL) {
    delete diagnostics_;
  }
  diagnostics_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverviewPage::kRunEnvironmentFieldNumber;
const int OverviewPage::kInputAnalysisFieldNumber;
const int OverviewPage::kAnalysisFieldNumber;
const int OverviewPage::kRecommendationFieldNumber;
const int OverviewPage::kDiagnosticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverviewPage::OverviewPage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OverviewPage)
}
OverviewPage::OverviewPage(const OverviewPage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input_analysis()) {
    input_analysis_ = new ::tensorflow::profiler::InputPipelineAnalysisResult(*from.input_analysis_);
  } else {
    input_analysis_ = NULL;
  }
  if (from.has_analysis()) {
    analysis_ = new ::tensorflow::profiler::OverviewPageAnalysis(*from.analysis_);
  } else {
    analysis_ = NULL;
  }
  if (from.has_recommendation()) {
    recommendation_ = new ::tensorflow::profiler::OverviewPageRecommendation(*from.recommendation_);
  } else {
    recommendation_ = NULL;
  }
  if (from.has_run_environment()) {
    run_environment_ = new ::tensorflow::profiler::OverviewPageRunEnvironment(*from.run_environment_);
  } else {
    run_environment_ = NULL;
  }
  if (from.has_diagnostics()) {
    diagnostics_ = new ::tensorflow::profiler::Diagnostics(*from.diagnostics_);
  } else {
    diagnostics_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OverviewPage)
}

void OverviewPage::SharedCtor() {
  ::memset(&input_analysis_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diagnostics_) -
      reinterpret_cast<char*>(&input_analysis_)) + sizeof(diagnostics_));
}

OverviewPage::~OverviewPage() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OverviewPage)
  SharedDtor();
}

void OverviewPage::SharedDtor() {
  if (this != internal_default_instance()) delete input_analysis_;
  if (this != internal_default_instance()) delete analysis_;
  if (this != internal_default_instance()) delete recommendation_;
  if (this != internal_default_instance()) delete run_environment_;
  if (this != internal_default_instance()) delete diagnostics_;
}

void OverviewPage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OverviewPage::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverviewPage& OverviewPage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::scc_info_OverviewPage.base);
  return *internal_default_instance();
}


void OverviewPage::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OverviewPage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && input_analysis_ != NULL) {
    delete input_analysis_;
  }
  input_analysis_ = NULL;
  if (GetArenaNoVirtual() == NULL && analysis_ != NULL) {
    delete analysis_;
  }
  analysis_ = NULL;
  if (GetArenaNoVirtual() == NULL && recommendation_ != NULL) {
    delete recommendation_;
  }
  recommendation_ = NULL;
  if (GetArenaNoVirtual() == NULL && run_environment_ != NULL) {
    delete run_environment_;
  }
  run_environment_ = NULL;
  if (GetArenaNoVirtual() == NULL && diagnostics_ != NULL) {
    delete diagnostics_;
  }
  diagnostics_ = NULL;
  _internal_metadata_.Clear();
}

bool OverviewPage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OverviewPage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.profiler.InputPipelineAnalysisResult input_analysis = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_analysis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.OverviewPageAnalysis analysis = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_analysis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.OverviewPageRecommendation recommendation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recommendation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.OverviewPageRunEnvironment run_environment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_environment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.Diagnostics diagnostics = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OverviewPage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OverviewPage)
  return false;
#undef DO_
}

void OverviewPage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OverviewPage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.InputPipelineAnalysisResult input_analysis = 2;
  if (this->has_input_analysis()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input_analysis(), output);
  }

  // .tensorflow.profiler.OverviewPageAnalysis analysis = 3;
  if (this->has_analysis()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_analysis(), output);
  }

  // .tensorflow.profiler.OverviewPageRecommendation recommendation = 4;
  if (this->has_recommendation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_recommendation(), output);
  }

  // .tensorflow.profiler.OverviewPageRunEnvironment run_environment = 6;
  if (this->has_run_environment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_run_environment(), output);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 8;
  if (this->has_diagnostics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_diagnostics(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OverviewPage)
}

::google::protobuf::uint8* OverviewPage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OverviewPage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.InputPipelineAnalysisResult input_analysis = 2;
  if (this->has_input_analysis()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input_analysis(), deterministic, target);
  }

  // .tensorflow.profiler.OverviewPageAnalysis analysis = 3;
  if (this->has_analysis()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_analysis(), deterministic, target);
  }

  // .tensorflow.profiler.OverviewPageRecommendation recommendation = 4;
  if (this->has_recommendation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_recommendation(), deterministic, target);
  }

  // .tensorflow.profiler.OverviewPageRunEnvironment run_environment = 6;
  if (this->has_run_environment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_run_environment(), deterministic, target);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 8;
  if (this->has_diagnostics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_diagnostics(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OverviewPage)
  return target;
}

size_t OverviewPage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OverviewPage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.profiler.InputPipelineAnalysisResult input_analysis = 2;
  if (this->has_input_analysis()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_analysis_);
  }

  // .tensorflow.profiler.OverviewPageAnalysis analysis = 3;
  if (this->has_analysis()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *analysis_);
  }

  // .tensorflow.profiler.OverviewPageRecommendation recommendation = 4;
  if (this->has_recommendation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recommendation_);
  }

  // .tensorflow.profiler.OverviewPageRunEnvironment run_environment = 6;
  if (this->has_run_environment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_environment_);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 8;
  if (this->has_diagnostics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *diagnostics_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverviewPage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OverviewPage)
  GOOGLE_DCHECK_NE(&from, this);
  const OverviewPage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverviewPage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OverviewPage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OverviewPage)
    MergeFrom(*source);
  }
}

void OverviewPage::MergeFrom(const OverviewPage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OverviewPage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input_analysis()) {
    mutable_input_analysis()->::tensorflow::profiler::InputPipelineAnalysisResult::MergeFrom(from.input_analysis());
  }
  if (from.has_analysis()) {
    mutable_analysis()->::tensorflow::profiler::OverviewPageAnalysis::MergeFrom(from.analysis());
  }
  if (from.has_recommendation()) {
    mutable_recommendation()->::tensorflow::profiler::OverviewPageRecommendation::MergeFrom(from.recommendation());
  }
  if (from.has_run_environment()) {
    mutable_run_environment()->::tensorflow::profiler::OverviewPageRunEnvironment::MergeFrom(from.run_environment());
  }
  if (from.has_diagnostics()) {
    mutable_diagnostics()->::tensorflow::profiler::Diagnostics::MergeFrom(from.diagnostics());
  }
}

void OverviewPage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OverviewPage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverviewPage::CopyFrom(const OverviewPage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OverviewPage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverviewPage::IsInitialized() const {
  return true;
}

void OverviewPage::Swap(OverviewPage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverviewPage::InternalSwap(OverviewPage* other) {
  using std::swap;
  swap(input_analysis_, other->input_analysis_);
  swap(analysis_, other->analysis_);
  swap(recommendation_, other->recommendation_);
  swap(run_environment_, other->run_environment_);
  swap(diagnostics_, other->diagnostics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OverviewPage::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2foverview_5fpage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewTfOp* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewTfOp >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewTfOp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewPageAnalysis* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewPageAnalysis >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewPageAnalysis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewPageTip* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewPageTip >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewPageTip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::GenericRecommendation* Arena::CreateMaybeMessage< ::tensorflow::profiler::GenericRecommendation >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::GenericRecommendation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewPageRecommendation* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewPageRecommendation >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewPageRecommendation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewPageHostIndependentJobInfo* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewPageHostIndependentJobInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewPageHostIndependentJobInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewPageHostDependentJobInfo* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewPageHostDependentJobInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewPageHostDependentJobInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewPageRunEnvironment_HostnamesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewPageRunEnvironment* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewPageRunEnvironment >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewPageRunEnvironment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OverviewPage* Arena::CreateMaybeMessage< ::tensorflow::profiler::OverviewPage >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OverviewPage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
