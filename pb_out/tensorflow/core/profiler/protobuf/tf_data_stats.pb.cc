// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/tf_data_stats.proto

#include "tensorflow/core/profiler/protobuf/tf_data_stats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InputPipelineMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IteratorMetadata_ParamsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IteratorStat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TfDataBottleneckAnalysis;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CombinedTfDataStats_TfDataStatsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputPipelineStat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputPipelineStat_IteratorStatsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IteratorMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TfDataStats_InputPipelinesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TfDataStats_IteratorMetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_InputPipelineStats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TfDataStats;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto
namespace tensorflow {
namespace profiler {
class IteratorStatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IteratorStat>
      _instance;
} _IteratorStat_default_instance_;
class IteratorMetadata_ParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IteratorMetadata_ParamsEntry_DoNotUse>
      _instance;
} _IteratorMetadata_ParamsEntry_DoNotUse_default_instance_;
class IteratorMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IteratorMetadata>
      _instance;
} _IteratorMetadata_default_instance_;
class InputPipelineStat_IteratorStatsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputPipelineStat_IteratorStatsEntry_DoNotUse>
      _instance;
} _InputPipelineStat_IteratorStatsEntry_DoNotUse_default_instance_;
class InputPipelineStatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputPipelineStat>
      _instance;
} _InputPipelineStat_default_instance_;
class InputPipelineMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputPipelineMetadata>
      _instance;
} _InputPipelineMetadata_default_instance_;
class InputPipelineStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputPipelineStats>
      _instance;
} _InputPipelineStats_default_instance_;
class TfDataStats_IteratorMetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TfDataStats_IteratorMetadataEntry_DoNotUse>
      _instance;
} _TfDataStats_IteratorMetadataEntry_DoNotUse_default_instance_;
class TfDataStats_InputPipelinesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TfDataStats_InputPipelinesEntry_DoNotUse>
      _instance;
} _TfDataStats_InputPipelinesEntry_DoNotUse_default_instance_;
class TfDataStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TfDataStats>
      _instance;
} _TfDataStats_default_instance_;
class TfDataBottleneckAnalysisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TfDataBottleneckAnalysis>
      _instance;
} _TfDataBottleneckAnalysis_default_instance_;
class CombinedTfDataStats_TfDataStatsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CombinedTfDataStats_TfDataStatsEntry_DoNotUse>
      _instance;
} _CombinedTfDataStats_TfDataStatsEntry_DoNotUse_default_instance_;
class CombinedTfDataStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CombinedTfDataStats>
      _instance;
} _CombinedTfDataStats_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto {
static void InitDefaultsIteratorStat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_IteratorStat_default_instance_;
    new (ptr) ::tensorflow::profiler::IteratorStat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::IteratorStat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IteratorStat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIteratorStat}, {}};

static void InitDefaultsIteratorMetadata_ParamsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_IteratorMetadata_ParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse();
  }
  ::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IteratorMetadata_ParamsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIteratorMetadata_ParamsEntry_DoNotUse}, {}};

static void InitDefaultsIteratorMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_IteratorMetadata_default_instance_;
    new (ptr) ::tensorflow::profiler::IteratorMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::IteratorMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IteratorMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIteratorMetadata}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_IteratorMetadata_ParamsEntry_DoNotUse.base,}};

static void InitDefaultsInputPipelineStat_IteratorStatsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_InputPipelineStat_IteratorStatsEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse();
  }
  ::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputPipelineStat_IteratorStatsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputPipelineStat_IteratorStatsEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_IteratorStat.base,}};

static void InitDefaultsInputPipelineStat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_InputPipelineStat_default_instance_;
    new (ptr) ::tensorflow::profiler::InputPipelineStat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::InputPipelineStat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputPipelineStat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputPipelineStat}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineStat_IteratorStatsEntry_DoNotUse.base,}};

static void InitDefaultsInputPipelineMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_InputPipelineMetadata_default_instance_;
    new (ptr) ::tensorflow::profiler::InputPipelineMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::InputPipelineMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InputPipelineMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInputPipelineMetadata}, {}};

static void InitDefaultsInputPipelineStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_InputPipelineStats_default_instance_;
    new (ptr) ::tensorflow::profiler::InputPipelineStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::InputPipelineStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InputPipelineStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInputPipelineStats}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineMetadata.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineStat.base,}};

static void InitDefaultsTfDataStats_IteratorMetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_TfDataStats_IteratorMetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse();
  }
  ::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TfDataStats_IteratorMetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTfDataStats_IteratorMetadataEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_IteratorMetadata.base,}};

static void InitDefaultsTfDataStats_InputPipelinesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_TfDataStats_InputPipelinesEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse();
  }
  ::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TfDataStats_InputPipelinesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTfDataStats_InputPipelinesEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineStats.base,}};

static void InitDefaultsTfDataStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_TfDataStats_default_instance_;
    new (ptr) ::tensorflow::profiler::TfDataStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::TfDataStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TfDataStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTfDataStats}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_TfDataStats_IteratorMetadataEntry_DoNotUse.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_TfDataStats_InputPipelinesEntry_DoNotUse.base,}};

static void InitDefaultsTfDataBottleneckAnalysis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_TfDataBottleneckAnalysis_default_instance_;
    new (ptr) ::tensorflow::profiler::TfDataBottleneckAnalysis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::TfDataBottleneckAnalysis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TfDataBottleneckAnalysis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTfDataBottleneckAnalysis}, {}};

static void InitDefaultsCombinedTfDataStats_TfDataStatsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_CombinedTfDataStats_TfDataStatsEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse();
  }
  ::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CombinedTfDataStats_TfDataStatsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCombinedTfDataStats_TfDataStatsEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_TfDataStats.base,}};

static void InitDefaultsCombinedTfDataStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_CombinedTfDataStats_default_instance_;
    new (ptr) ::tensorflow::profiler::CombinedTfDataStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::CombinedTfDataStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CombinedTfDataStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCombinedTfDataStats}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_TfDataBottleneckAnalysis.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_CombinedTfDataStats_TfDataStatsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_IteratorStat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IteratorMetadata_ParamsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IteratorMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputPipelineStat_IteratorStatsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputPipelineStat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputPipelineMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputPipelineStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TfDataStats_IteratorMetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TfDataStats_InputPipelinesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TfDataStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TfDataBottleneckAnalysis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CombinedTfDataStats_TfDataStatsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CombinedTfDataStats.base);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorStat, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorStat, start_time_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorStat, duration_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorStat, self_time_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorStat, is_blocking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorStat, num_calls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata, long_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata, is_async_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::IteratorMetadata, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStat, bottleneck_iterator_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStat, bottleneck_iterator_latency_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStat, iterator_stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineMetadata, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineMetadata, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineMetadata, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStats, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStats, avg_latency_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStats, min_latency_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStats, max_latency_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStats, num_slow_calls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::InputPipelineStats, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats, iterator_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataStats, input_pipelines_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataBottleneckAnalysis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataBottleneckAnalysis, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataBottleneckAnalysis, input_pipeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataBottleneckAnalysis, max_latency_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataBottleneckAnalysis, iterator_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataBottleneckAnalysis, iterator_long_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataBottleneckAnalysis, iterator_latency_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::TfDataBottleneckAnalysis, suggestion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats, is_input_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats, summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats, bottleneck_analysis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CombinedTfDataStats, tf_data_stats_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::IteratorStat)},
  { 11, 18, sizeof(::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse)},
  { 20, -1, sizeof(::tensorflow::profiler::IteratorMetadata)},
  { 31, 38, sizeof(::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse)},
  { 40, -1, sizeof(::tensorflow::profiler::InputPipelineStat)},
  { 48, -1, sizeof(::tensorflow::profiler::InputPipelineMetadata)},
  { 56, -1, sizeof(::tensorflow::profiler::InputPipelineStats)},
  { 67, 74, sizeof(::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse)},
  { 76, 83, sizeof(::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse)},
  { 85, -1, sizeof(::tensorflow::profiler::TfDataStats)},
  { 92, -1, sizeof(::tensorflow::profiler::TfDataBottleneckAnalysis)},
  { 104, 111, sizeof(::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse)},
  { 113, -1, sizeof(::tensorflow::profiler::CombinedTfDataStats)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_IteratorStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_IteratorMetadata_ParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_IteratorMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_InputPipelineStat_IteratorStatsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_InputPipelineStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_InputPipelineMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_InputPipelineStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_TfDataStats_IteratorMetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_TfDataStats_InputPipelinesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_TfDataStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_TfDataBottleneckAnalysis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_CombinedTfDataStats_TfDataStatsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_CombinedTfDataStats_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/tf_data_stats.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5tensorflow/core/profiler/protobuf/tf_d"
      "ata_stats.proto\022\023tensorflow.profiler\"\204\001\n"
      "\014IteratorStat\022\n\n\002id\030\001 \001(\003\022\025\n\rstart_time_"
      "ps\030\002 \001(\003\022\023\n\013duration_ps\030\003 \001(\003\022\024\n\014self_ti"
      "me_ps\030\004 \001(\003\022\023\n\013is_blocking\030\005 \001(\010\022\021\n\tnum_"
      "calls\030\006 \001(\003\"\326\001\n\020IteratorMetadata\022\n\n\002id\030\001"
      " \001(\003\022\021\n\tparent_id\030\002 \001(\003\022\014\n\004name\030\003 \001(\t\022\021\n"
      "\tlong_name\030\006 \001(\t\022\020\n\010is_async\030\004 \001(\010\022A\n\006pa"
      "rams\030\005 \003(\01321.tensorflow.profiler.Iterato"
      "rMetadata.ParamsEntry\032-\n\013ParamsEntry\022\013\n\003"
      "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\207\002\n\021InputPi"
      "pelineStat\022\036\n\026bottleneck_iterator_id\030\002 \001"
      "(\003\022&\n\036bottleneck_iterator_latency_ps\030\003 \001"
      "(\003\022Q\n\016iterator_stats\030\001 \003(\01329.tensorflow."
      "profiler.InputPipelineStat.IteratorStats"
      "Entry\032W\n\022IteratorStatsEntry\022\013\n\003key\030\001 \001(\003"
      "\0220\n\005value\030\002 \001(\0132!.tensorflow.profiler.It"
      "eratorStat:\0028\001\"\256\001\n\025InputPipelineMetadata"
      "\022\n\n\002id\030\001 \001(\003\022J\n\004type\030\002 \001(\0162<.tensorflow."
      "profiler.InputPipelineMetadata.InputPipe"
      "lineType\022\014\n\004name\030\004 \001(\t\")\n\021InputPipelineT"
      "ype\022\010\n\004HOST\020\000\022\n\n\006DEVICE\020\001J\004\010\003\020\004\"\351\001\n\022Inpu"
      "tPipelineStats\022<\n\010metadata\030\001 \001(\0132*.tenso"
      "rflow.profiler.InputPipelineMetadata\022\026\n\016"
      "avg_latency_ps\030\003 \001(\003\022\026\n\016min_latency_ps\030\004"
      " \001(\003\022\026\n\016max_latency_ps\030\005 \001(\003\022\026\n\016num_slow"
      "_calls\030\006 \001(\003\0225\n\005stats\030\002 \003(\0132&.tensorflow"
      ".profiler.InputPipelineStat\"\357\002\n\013TfDataSt"
      "ats\022Q\n\021iterator_metadata\030\002 \003(\01326.tensorf"
      "low.profiler.TfDataStats.IteratorMetadat"
      "aEntry\022M\n\017input_pipelines\030\001 \003(\01324.tensor"
      "flow.profiler.TfDataStats.InputPipelines"
      "Entry\032^\n\025IteratorMetadataEntry\022\013\n\003key\030\001 "
      "\001(\003\0224\n\005value\030\002 \001(\0132%.tensorflow.profiler"
      ".IteratorMetadata:\0028\001\032^\n\023InputPipelinesE"
      "ntry\022\013\n\003key\030\001 \001(\003\0226\n\005value\030\002 \001(\0132\'.tenso"
      "rflow.profiler.InputPipelineStats:\0028\001\"\274\001"
      "\n\030TfDataBottleneckAnalysis\022\014\n\004host\030\001 \001(\t"
      "\022\026\n\016input_pipeline\030\002 \001(\t\022\026\n\016max_latency_"
      "ps\030\003 \001(\003\022\025\n\riterator_name\030\004 \001(\t\022\032\n\022itera"
      "tor_long_name\030\005 \001(\t\022\033\n\023iterator_latency_"
      "ps\030\007 \001(\003\022\022\n\nsuggestion\030\006 \001(\t\"\262\002\n\023Combine"
      "dTfDataStats\022\026\n\016is_input_bound\030\003 \001(\010\022\017\n\007"
      "summary\030\004 \001(\t\022J\n\023bottleneck_analysis\030\001 \003"
      "(\0132-.tensorflow.profiler.TfDataBottlenec"
      "kAnalysis\022P\n\rtf_data_stats\030\002 \003(\01329.tenso"
      "rflow.profiler.CombinedTfDataStats.TfDat"
      "aStatsEntry\032T\n\020TfDataStatsEntry\022\013\n\003key\030\001"
      " \001(\t\022/\n\005value\030\002 \001(\0132 .tensorflow.profile"
      "r.TfDataStats:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1985);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/tf_data_stats.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto
namespace tensorflow {
namespace profiler {
const ::google::protobuf::EnumDescriptor* InputPipelineMetadata_InputPipelineType_descriptor() {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_enum_descriptors[0];
}
bool InputPipelineMetadata_InputPipelineType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InputPipelineMetadata_InputPipelineType InputPipelineMetadata::HOST;
const InputPipelineMetadata_InputPipelineType InputPipelineMetadata::DEVICE;
const InputPipelineMetadata_InputPipelineType InputPipelineMetadata::InputPipelineType_MIN;
const InputPipelineMetadata_InputPipelineType InputPipelineMetadata::InputPipelineType_MAX;
const int InputPipelineMetadata::InputPipelineType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void IteratorStat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IteratorStat::kIdFieldNumber;
const int IteratorStat::kStartTimePsFieldNumber;
const int IteratorStat::kDurationPsFieldNumber;
const int IteratorStat::kSelfTimePsFieldNumber;
const int IteratorStat::kIsBlockingFieldNumber;
const int IteratorStat::kNumCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IteratorStat::IteratorStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_IteratorStat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.IteratorStat)
}
IteratorStat::IteratorStat(const IteratorStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_blocking_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_blocking_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.IteratorStat)
}

void IteratorStat::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_blocking_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_blocking_));
}

IteratorStat::~IteratorStat() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.IteratorStat)
  SharedDtor();
}

void IteratorStat::SharedDtor() {
}

void IteratorStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IteratorStat::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IteratorStat& IteratorStat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_IteratorStat.base);
  return *internal_default_instance();
}


void IteratorStat::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.IteratorStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_blocking_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_blocking_));
  _internal_metadata_.Clear();
}

bool IteratorStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.IteratorStat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 start_time_ps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 duration_ps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duration_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 self_time_ps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &self_time_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_blocking = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_blocking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_calls = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_calls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.IteratorStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.IteratorStat)
  return false;
#undef DO_
}

void IteratorStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.IteratorStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // int64 start_time_ps = 2;
  if (this->start_time_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_time_ps(), output);
  }

  // int64 duration_ps = 3;
  if (this->duration_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->duration_ps(), output);
  }

  // int64 self_time_ps = 4;
  if (this->self_time_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->self_time_ps(), output);
  }

  // bool is_blocking = 5;
  if (this->is_blocking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_blocking(), output);
  }

  // int64 num_calls = 6;
  if (this->num_calls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->num_calls(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.IteratorStat)
}

::google::protobuf::uint8* IteratorStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.IteratorStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // int64 start_time_ps = 2;
  if (this->start_time_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start_time_ps(), target);
  }

  // int64 duration_ps = 3;
  if (this->duration_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->duration_ps(), target);
  }

  // int64 self_time_ps = 4;
  if (this->self_time_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->self_time_ps(), target);
  }

  // bool is_blocking = 5;
  if (this->is_blocking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_blocking(), target);
  }

  // int64 num_calls = 6;
  if (this->num_calls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->num_calls(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.IteratorStat)
  return target;
}

size_t IteratorStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.IteratorStat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 start_time_ps = 2;
  if (this->start_time_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time_ps());
  }

  // int64 duration_ps = 3;
  if (this->duration_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->duration_ps());
  }

  // int64 self_time_ps = 4;
  if (this->self_time_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->self_time_ps());
  }

  // int64 num_calls = 6;
  if (this->num_calls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_calls());
  }

  // bool is_blocking = 5;
  if (this->is_blocking() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IteratorStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.IteratorStat)
  GOOGLE_DCHECK_NE(&from, this);
  const IteratorStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IteratorStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.IteratorStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.IteratorStat)
    MergeFrom(*source);
  }
}

void IteratorStat::MergeFrom(const IteratorStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.IteratorStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.start_time_ps() != 0) {
    set_start_time_ps(from.start_time_ps());
  }
  if (from.duration_ps() != 0) {
    set_duration_ps(from.duration_ps());
  }
  if (from.self_time_ps() != 0) {
    set_self_time_ps(from.self_time_ps());
  }
  if (from.num_calls() != 0) {
    set_num_calls(from.num_calls());
  }
  if (from.is_blocking() != 0) {
    set_is_blocking(from.is_blocking());
  }
}

void IteratorStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.IteratorStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IteratorStat::CopyFrom(const IteratorStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.IteratorStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IteratorStat::IsInitialized() const {
  return true;
}

void IteratorStat::Swap(IteratorStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IteratorStat::InternalSwap(IteratorStat* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(start_time_ps_, other->start_time_ps_);
  swap(duration_ps_, other->duration_ps_);
  swap(self_time_ps_, other->self_time_ps_);
  swap(num_calls_, other->num_calls_);
  swap(is_blocking_, other->is_blocking_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IteratorStat::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

IteratorMetadata_ParamsEntry_DoNotUse::IteratorMetadata_ParamsEntry_DoNotUse() {}
IteratorMetadata_ParamsEntry_DoNotUse::IteratorMetadata_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void IteratorMetadata_ParamsEntry_DoNotUse::MergeFrom(const IteratorMetadata_ParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata IteratorMetadata_ParamsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[1];
}
void IteratorMetadata_ParamsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void IteratorMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IteratorMetadata::kIdFieldNumber;
const int IteratorMetadata::kParentIdFieldNumber;
const int IteratorMetadata::kNameFieldNumber;
const int IteratorMetadata::kLongNameFieldNumber;
const int IteratorMetadata::kIsAsyncFieldNumber;
const int IteratorMetadata::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IteratorMetadata::IteratorMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_IteratorMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.IteratorMetadata)
}
IteratorMetadata::IteratorMetadata(const IteratorMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  long_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.long_name().size() > 0) {
    long_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_async_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_async_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.IteratorMetadata)
}

void IteratorMetadata::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_async_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_async_));
}

IteratorMetadata::~IteratorMetadata() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.IteratorMetadata)
  SharedDtor();
}

void IteratorMetadata::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IteratorMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IteratorMetadata::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IteratorMetadata& IteratorMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_IteratorMetadata.base);
  return *internal_default_instance();
}


void IteratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.IteratorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_async_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_async_));
  _internal_metadata_.Clear();
}

bool IteratorMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.IteratorMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 parent_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.IteratorMetadata.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_async = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_async_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> params = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          IteratorMetadata_ParamsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              IteratorMetadata_ParamsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&params_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.IteratorMetadata.ParamsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.IteratorMetadata.ParamsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string long_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_long_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->long_name().data(), static_cast<int>(this->long_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.IteratorMetadata.long_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.IteratorMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.IteratorMetadata)
  return false;
#undef DO_
}

void IteratorMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.IteratorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // int64 parent_id = 2;
  if (this->parent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->parent_id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.IteratorMetadata.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // bool is_async = 4;
  if (this->is_async() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_async(), output);
  }

  // map<string, string> params = 5;
  if (!this->params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.IteratorMetadata.ParamsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.IteratorMetadata.ParamsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<IteratorMetadata_ParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<IteratorMetadata_ParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        entry.reset(params_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string long_name = 6;
  if (this->long_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_name().data(), static_cast<int>(this->long_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.IteratorMetadata.long_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->long_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.IteratorMetadata)
}

::google::protobuf::uint8* IteratorMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.IteratorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // int64 parent_id = 2;
  if (this->parent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->parent_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.IteratorMetadata.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // bool is_async = 4;
  if (this->is_async() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_async(), target);
  }

  // map<string, string> params = 5;
  if (!this->params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.IteratorMetadata.ParamsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.IteratorMetadata.ParamsEntry.value");
      }
    };

    if (deterministic &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<IteratorMetadata_ParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<IteratorMetadata_ParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        entry.reset(params_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string long_name = 6;
  if (this->long_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_name().data(), static_cast<int>(this->long_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.IteratorMetadata.long_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->long_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.IteratorMetadata)
  return target;
}

size_t IteratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.IteratorMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> params = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  {
    ::std::unique_ptr<IteratorMetadata_ParamsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string long_name = 6;
  if (this->long_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->long_name());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 parent_id = 2;
  if (this->parent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->parent_id());
  }

  // bool is_async = 4;
  if (this->is_async() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IteratorMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.IteratorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const IteratorMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IteratorMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.IteratorMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.IteratorMetadata)
    MergeFrom(*source);
  }
}

void IteratorMetadata::MergeFrom(const IteratorMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.IteratorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.long_name().size() > 0) {

    long_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.parent_id() != 0) {
    set_parent_id(from.parent_id());
  }
  if (from.is_async() != 0) {
    set_is_async(from.is_async());
  }
}

void IteratorMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.IteratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IteratorMetadata::CopyFrom(const IteratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.IteratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IteratorMetadata::IsInitialized() const {
  return true;
}

void IteratorMetadata::Swap(IteratorMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IteratorMetadata::InternalSwap(IteratorMetadata* other) {
  using std::swap;
  params_.Swap(&other->params_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  long_name_.Swap(&other->long_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(parent_id_, other->parent_id_);
  swap(is_async_, other->is_async_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IteratorMetadata::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

InputPipelineStat_IteratorStatsEntry_DoNotUse::InputPipelineStat_IteratorStatsEntry_DoNotUse() {}
InputPipelineStat_IteratorStatsEntry_DoNotUse::InputPipelineStat_IteratorStatsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void InputPipelineStat_IteratorStatsEntry_DoNotUse::MergeFrom(const InputPipelineStat_IteratorStatsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata InputPipelineStat_IteratorStatsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[3];
}
void InputPipelineStat_IteratorStatsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void InputPipelineStat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputPipelineStat::kBottleneckIteratorIdFieldNumber;
const int InputPipelineStat::kBottleneckIteratorLatencyPsFieldNumber;
const int InputPipelineStat::kIteratorStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputPipelineStat::InputPipelineStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineStat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.InputPipelineStat)
}
InputPipelineStat::InputPipelineStat(const InputPipelineStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iterator_stats_.MergeFrom(from.iterator_stats_);
  ::memcpy(&bottleneck_iterator_id_, &from.bottleneck_iterator_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&bottleneck_iterator_latency_ps_) -
    reinterpret_cast<char*>(&bottleneck_iterator_id_)) + sizeof(bottleneck_iterator_latency_ps_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.InputPipelineStat)
}

void InputPipelineStat::SharedCtor() {
  ::memset(&bottleneck_iterator_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottleneck_iterator_latency_ps_) -
      reinterpret_cast<char*>(&bottleneck_iterator_id_)) + sizeof(bottleneck_iterator_latency_ps_));
}

InputPipelineStat::~InputPipelineStat() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.InputPipelineStat)
  SharedDtor();
}

void InputPipelineStat::SharedDtor() {
}

void InputPipelineStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputPipelineStat::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputPipelineStat& InputPipelineStat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineStat.base);
  return *internal_default_instance();
}


void InputPipelineStat::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.InputPipelineStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iterator_stats_.Clear();
  ::memset(&bottleneck_iterator_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottleneck_iterator_latency_ps_) -
      reinterpret_cast<char*>(&bottleneck_iterator_id_)) + sizeof(bottleneck_iterator_latency_ps_));
  _internal_metadata_.Clear();
}

bool InputPipelineStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.InputPipelineStat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, .tensorflow.profiler.IteratorStat> iterator_stats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          InputPipelineStat_IteratorStatsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              InputPipelineStat_IteratorStatsEntry_DoNotUse,
              ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat > > parser(&iterator_stats_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bottleneck_iterator_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bottleneck_iterator_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bottleneck_iterator_latency_ps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bottleneck_iterator_latency_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.InputPipelineStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.InputPipelineStat)
  return false;
#undef DO_
}

void InputPipelineStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.InputPipelineStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .tensorflow.profiler.IteratorStat> iterator_stats = 1;
  if (!this->iterator_stats().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->iterator_stats().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->iterator_stats().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::const_iterator
          it = this->iterator_stats().begin();
          it != this->iterator_stats().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InputPipelineStat_IteratorStatsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(iterator_stats_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<InputPipelineStat_IteratorStatsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::const_iterator
          it = this->iterator_stats().begin();
          it != this->iterator_stats().end(); ++it) {
        entry.reset(iterator_stats_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // int64 bottleneck_iterator_id = 2;
  if (this->bottleneck_iterator_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bottleneck_iterator_id(), output);
  }

  // int64 bottleneck_iterator_latency_ps = 3;
  if (this->bottleneck_iterator_latency_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->bottleneck_iterator_latency_ps(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.InputPipelineStat)
}

::google::protobuf::uint8* InputPipelineStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.InputPipelineStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .tensorflow.profiler.IteratorStat> iterator_stats = 1;
  if (!this->iterator_stats().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->iterator_stats().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->iterator_stats().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::const_iterator
          it = this->iterator_stats().begin();
          it != this->iterator_stats().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InputPipelineStat_IteratorStatsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(iterator_stats_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<InputPipelineStat_IteratorStatsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::const_iterator
          it = this->iterator_stats().begin();
          it != this->iterator_stats().end(); ++it) {
        entry.reset(iterator_stats_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // int64 bottleneck_iterator_id = 2;
  if (this->bottleneck_iterator_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bottleneck_iterator_id(), target);
  }

  // int64 bottleneck_iterator_latency_ps = 3;
  if (this->bottleneck_iterator_latency_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->bottleneck_iterator_latency_ps(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.InputPipelineStat)
  return target;
}

size_t InputPipelineStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.InputPipelineStat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int64, .tensorflow.profiler.IteratorStat> iterator_stats = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->iterator_stats_size());
  {
    ::std::unique_ptr<InputPipelineStat_IteratorStatsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorStat >::const_iterator
        it = this->iterator_stats().begin();
        it != this->iterator_stats().end(); ++it) {
      entry.reset(iterator_stats_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int64 bottleneck_iterator_id = 2;
  if (this->bottleneck_iterator_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bottleneck_iterator_id());
  }

  // int64 bottleneck_iterator_latency_ps = 3;
  if (this->bottleneck_iterator_latency_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bottleneck_iterator_latency_ps());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputPipelineStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.InputPipelineStat)
  GOOGLE_DCHECK_NE(&from, this);
  const InputPipelineStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputPipelineStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.InputPipelineStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.InputPipelineStat)
    MergeFrom(*source);
  }
}

void InputPipelineStat::MergeFrom(const InputPipelineStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.InputPipelineStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  iterator_stats_.MergeFrom(from.iterator_stats_);
  if (from.bottleneck_iterator_id() != 0) {
    set_bottleneck_iterator_id(from.bottleneck_iterator_id());
  }
  if (from.bottleneck_iterator_latency_ps() != 0) {
    set_bottleneck_iterator_latency_ps(from.bottleneck_iterator_latency_ps());
  }
}

void InputPipelineStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.InputPipelineStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputPipelineStat::CopyFrom(const InputPipelineStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.InputPipelineStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputPipelineStat::IsInitialized() const {
  return true;
}

void InputPipelineStat::Swap(InputPipelineStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputPipelineStat::InternalSwap(InputPipelineStat* other) {
  using std::swap;
  iterator_stats_.Swap(&other->iterator_stats_);
  swap(bottleneck_iterator_id_, other->bottleneck_iterator_id_);
  swap(bottleneck_iterator_latency_ps_, other->bottleneck_iterator_latency_ps_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputPipelineStat::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputPipelineMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputPipelineMetadata::kIdFieldNumber;
const int InputPipelineMetadata::kTypeFieldNumber;
const int InputPipelineMetadata::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputPipelineMetadata::InputPipelineMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.InputPipelineMetadata)
}
InputPipelineMetadata::InputPipelineMetadata(const InputPipelineMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.InputPipelineMetadata)
}

void InputPipelineMetadata::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

InputPipelineMetadata::~InputPipelineMetadata() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.InputPipelineMetadata)
  SharedDtor();
}

void InputPipelineMetadata::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputPipelineMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputPipelineMetadata::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputPipelineMetadata& InputPipelineMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineMetadata.base);
  return *internal_default_instance();
}


void InputPipelineMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.InputPipelineMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool InputPipelineMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.InputPipelineMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.InputPipelineMetadata.InputPipelineType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::tensorflow::profiler::InputPipelineMetadata_InputPipelineType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.InputPipelineMetadata.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.InputPipelineMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.InputPipelineMetadata)
  return false;
#undef DO_
}

void InputPipelineMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.InputPipelineMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // .tensorflow.profiler.InputPipelineMetadata.InputPipelineType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputPipelineMetadata.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.InputPipelineMetadata)
}

::google::protobuf::uint8* InputPipelineMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.InputPipelineMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // .tensorflow.profiler.InputPipelineMetadata.InputPipelineType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.InputPipelineMetadata.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.InputPipelineMetadata)
  return target;
}

size_t InputPipelineMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.InputPipelineMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // .tensorflow.profiler.InputPipelineMetadata.InputPipelineType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputPipelineMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.InputPipelineMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const InputPipelineMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputPipelineMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.InputPipelineMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.InputPipelineMetadata)
    MergeFrom(*source);
  }
}

void InputPipelineMetadata::MergeFrom(const InputPipelineMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.InputPipelineMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void InputPipelineMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.InputPipelineMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputPipelineMetadata::CopyFrom(const InputPipelineMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.InputPipelineMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputPipelineMetadata::IsInitialized() const {
  return true;
}

void InputPipelineMetadata::Swap(InputPipelineMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputPipelineMetadata::InternalSwap(InputPipelineMetadata* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputPipelineMetadata::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputPipelineStats::InitAsDefaultInstance() {
  ::tensorflow::profiler::_InputPipelineStats_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::tensorflow::profiler::InputPipelineMetadata*>(
      ::tensorflow::profiler::InputPipelineMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputPipelineStats::kMetadataFieldNumber;
const int InputPipelineStats::kAvgLatencyPsFieldNumber;
const int InputPipelineStats::kMinLatencyPsFieldNumber;
const int InputPipelineStats::kMaxLatencyPsFieldNumber;
const int InputPipelineStats::kNumSlowCallsFieldNumber;
const int InputPipelineStats::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputPipelineStats::InputPipelineStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.InputPipelineStats)
}
InputPipelineStats::InputPipelineStats(const InputPipelineStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metadata()) {
    metadata_ = new ::tensorflow::profiler::InputPipelineMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  ::memcpy(&avg_latency_ps_, &from.avg_latency_ps_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_slow_calls_) -
    reinterpret_cast<char*>(&avg_latency_ps_)) + sizeof(num_slow_calls_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.InputPipelineStats)
}

void InputPipelineStats::SharedCtor() {
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_slow_calls_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(num_slow_calls_));
}

InputPipelineStats::~InputPipelineStats() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.InputPipelineStats)
  SharedDtor();
}

void InputPipelineStats::SharedDtor() {
  if (this != internal_default_instance()) delete metadata_;
}

void InputPipelineStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputPipelineStats::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputPipelineStats& InputPipelineStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_InputPipelineStats.base);
  return *internal_default_instance();
}


void InputPipelineStats::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.InputPipelineStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  ::memset(&avg_latency_ps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_slow_calls_) -
      reinterpret_cast<char*>(&avg_latency_ps_)) + sizeof(num_slow_calls_));
  _internal_metadata_.Clear();
}

bool InputPipelineStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.InputPipelineStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.profiler.InputPipelineMetadata metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.InputPipelineStat stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 avg_latency_ps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &avg_latency_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 min_latency_ps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &min_latency_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_latency_ps = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_latency_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_slow_calls = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_slow_calls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.InputPipelineStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.InputPipelineStats)
  return false;
#undef DO_
}

void InputPipelineStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.InputPipelineStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.InputPipelineMetadata metadata = 1;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_metadata(), output);
  }

  // repeated .tensorflow.profiler.InputPipelineStat stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stats(static_cast<int>(i)),
      output);
  }

  // int64 avg_latency_ps = 3;
  if (this->avg_latency_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->avg_latency_ps(), output);
  }

  // int64 min_latency_ps = 4;
  if (this->min_latency_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->min_latency_ps(), output);
  }

  // int64 max_latency_ps = 5;
  if (this->max_latency_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->max_latency_ps(), output);
  }

  // int64 num_slow_calls = 6;
  if (this->num_slow_calls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->num_slow_calls(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.InputPipelineStats)
}

::google::protobuf::uint8* InputPipelineStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.InputPipelineStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.InputPipelineMetadata metadata = 1;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_metadata(), deterministic, target);
  }

  // repeated .tensorflow.profiler.InputPipelineStat stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stats(static_cast<int>(i)), deterministic, target);
  }

  // int64 avg_latency_ps = 3;
  if (this->avg_latency_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->avg_latency_ps(), target);
  }

  // int64 min_latency_ps = 4;
  if (this->min_latency_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->min_latency_ps(), target);
  }

  // int64 max_latency_ps = 5;
  if (this->max_latency_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->max_latency_ps(), target);
  }

  // int64 num_slow_calls = 6;
  if (this->num_slow_calls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->num_slow_calls(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.InputPipelineStats)
  return target;
}

size_t InputPipelineStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.InputPipelineStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.InputPipelineStat stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  // .tensorflow.profiler.InputPipelineMetadata metadata = 1;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // int64 avg_latency_ps = 3;
  if (this->avg_latency_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->avg_latency_ps());
  }

  // int64 min_latency_ps = 4;
  if (this->min_latency_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->min_latency_ps());
  }

  // int64 max_latency_ps = 5;
  if (this->max_latency_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_latency_ps());
  }

  // int64 num_slow_calls = 6;
  if (this->num_slow_calls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_slow_calls());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputPipelineStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.InputPipelineStats)
  GOOGLE_DCHECK_NE(&from, this);
  const InputPipelineStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputPipelineStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.InputPipelineStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.InputPipelineStats)
    MergeFrom(*source);
  }
}

void InputPipelineStats::MergeFrom(const InputPipelineStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.InputPipelineStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  if (from.has_metadata()) {
    mutable_metadata()->::tensorflow::profiler::InputPipelineMetadata::MergeFrom(from.metadata());
  }
  if (from.avg_latency_ps() != 0) {
    set_avg_latency_ps(from.avg_latency_ps());
  }
  if (from.min_latency_ps() != 0) {
    set_min_latency_ps(from.min_latency_ps());
  }
  if (from.max_latency_ps() != 0) {
    set_max_latency_ps(from.max_latency_ps());
  }
  if (from.num_slow_calls() != 0) {
    set_num_slow_calls(from.num_slow_calls());
  }
}

void InputPipelineStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.InputPipelineStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputPipelineStats::CopyFrom(const InputPipelineStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.InputPipelineStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputPipelineStats::IsInitialized() const {
  return true;
}

void InputPipelineStats::Swap(InputPipelineStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputPipelineStats::InternalSwap(InputPipelineStats* other) {
  using std::swap;
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
  swap(metadata_, other->metadata_);
  swap(avg_latency_ps_, other->avg_latency_ps_);
  swap(min_latency_ps_, other->min_latency_ps_);
  swap(max_latency_ps_, other->max_latency_ps_);
  swap(num_slow_calls_, other->num_slow_calls_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputPipelineStats::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TfDataStats_IteratorMetadataEntry_DoNotUse::TfDataStats_IteratorMetadataEntry_DoNotUse() {}
TfDataStats_IteratorMetadataEntry_DoNotUse::TfDataStats_IteratorMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TfDataStats_IteratorMetadataEntry_DoNotUse::MergeFrom(const TfDataStats_IteratorMetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TfDataStats_IteratorMetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[7];
}
void TfDataStats_IteratorMetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TfDataStats_InputPipelinesEntry_DoNotUse::TfDataStats_InputPipelinesEntry_DoNotUse() {}
TfDataStats_InputPipelinesEntry_DoNotUse::TfDataStats_InputPipelinesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TfDataStats_InputPipelinesEntry_DoNotUse::MergeFrom(const TfDataStats_InputPipelinesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TfDataStats_InputPipelinesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[8];
}
void TfDataStats_InputPipelinesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TfDataStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfDataStats::kIteratorMetadataFieldNumber;
const int TfDataStats::kInputPipelinesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TfDataStats::TfDataStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_TfDataStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.TfDataStats)
}
TfDataStats::TfDataStats(const TfDataStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_pipelines_.MergeFrom(from.input_pipelines_);
  iterator_metadata_.MergeFrom(from.iterator_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.TfDataStats)
}

void TfDataStats::SharedCtor() {
}

TfDataStats::~TfDataStats() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.TfDataStats)
  SharedDtor();
}

void TfDataStats::SharedDtor() {
}

void TfDataStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TfDataStats::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TfDataStats& TfDataStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_TfDataStats.base);
  return *internal_default_instance();
}


void TfDataStats::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.TfDataStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_pipelines_.Clear();
  iterator_metadata_.Clear();
  _internal_metadata_.Clear();
}

bool TfDataStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.TfDataStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, .tensorflow.profiler.InputPipelineStats> input_pipelines = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          TfDataStats_InputPipelinesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TfDataStats_InputPipelinesEntry_DoNotUse,
              ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats > > parser(&input_pipelines_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, .tensorflow.profiler.IteratorMetadata> iterator_metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          TfDataStats_IteratorMetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TfDataStats_IteratorMetadataEntry_DoNotUse,
              ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata > > parser(&iterator_metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.TfDataStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.TfDataStats)
  return false;
#undef DO_
}

void TfDataStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.TfDataStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .tensorflow.profiler.InputPipelineStats> input_pipelines = 1;
  if (!this->input_pipelines().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->input_pipelines().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->input_pipelines().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::const_iterator
          it = this->input_pipelines().begin();
          it != this->input_pipelines().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TfDataStats_InputPipelinesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(input_pipelines_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<TfDataStats_InputPipelinesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::const_iterator
          it = this->input_pipelines().begin();
          it != this->input_pipelines().end(); ++it) {
        entry.reset(input_pipelines_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<int64, .tensorflow.profiler.IteratorMetadata> iterator_metadata = 2;
  if (!this->iterator_metadata().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->iterator_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->iterator_metadata().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::const_iterator
          it = this->iterator_metadata().begin();
          it != this->iterator_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TfDataStats_IteratorMetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(iterator_metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::std::unique_ptr<TfDataStats_IteratorMetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::const_iterator
          it = this->iterator_metadata().begin();
          it != this->iterator_metadata().end(); ++it) {
        entry.reset(iterator_metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.TfDataStats)
}

::google::protobuf::uint8* TfDataStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.TfDataStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .tensorflow.profiler.InputPipelineStats> input_pipelines = 1;
  if (!this->input_pipelines().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->input_pipelines().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->input_pipelines().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::const_iterator
          it = this->input_pipelines().begin();
          it != this->input_pipelines().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TfDataStats_InputPipelinesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(input_pipelines_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<TfDataStats_InputPipelinesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::const_iterator
          it = this->input_pipelines().begin();
          it != this->input_pipelines().end(); ++it) {
        entry.reset(input_pipelines_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<int64, .tensorflow.profiler.IteratorMetadata> iterator_metadata = 2;
  if (!this->iterator_metadata().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->iterator_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->iterator_metadata().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::const_iterator
          it = this->iterator_metadata().begin();
          it != this->iterator_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TfDataStats_IteratorMetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(iterator_metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<TfDataStats_IteratorMetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::const_iterator
          it = this->iterator_metadata().begin();
          it != this->iterator_metadata().end(); ++it) {
        entry.reset(iterator_metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.TfDataStats)
  return target;
}

size_t TfDataStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.TfDataStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int64, .tensorflow.profiler.InputPipelineStats> input_pipelines = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_pipelines_size());
  {
    ::std::unique_ptr<TfDataStats_InputPipelinesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::InputPipelineStats >::const_iterator
        it = this->input_pipelines().begin();
        it != this->input_pipelines().end(); ++it) {
      entry.reset(input_pipelines_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<int64, .tensorflow.profiler.IteratorMetadata> iterator_metadata = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->iterator_metadata_size());
  {
    ::std::unique_ptr<TfDataStats_IteratorMetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::profiler::IteratorMetadata >::const_iterator
        it = this->iterator_metadata().begin();
        it != this->iterator_metadata().end(); ++it) {
      entry.reset(iterator_metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfDataStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.TfDataStats)
  GOOGLE_DCHECK_NE(&from, this);
  const TfDataStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TfDataStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.TfDataStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.TfDataStats)
    MergeFrom(*source);
  }
}

void TfDataStats::MergeFrom(const TfDataStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.TfDataStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_pipelines_.MergeFrom(from.input_pipelines_);
  iterator_metadata_.MergeFrom(from.iterator_metadata_);
}

void TfDataStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.TfDataStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfDataStats::CopyFrom(const TfDataStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.TfDataStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfDataStats::IsInitialized() const {
  return true;
}

void TfDataStats::Swap(TfDataStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TfDataStats::InternalSwap(TfDataStats* other) {
  using std::swap;
  input_pipelines_.Swap(&other->input_pipelines_);
  iterator_metadata_.Swap(&other->iterator_metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TfDataStats::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TfDataBottleneckAnalysis::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfDataBottleneckAnalysis::kHostFieldNumber;
const int TfDataBottleneckAnalysis::kInputPipelineFieldNumber;
const int TfDataBottleneckAnalysis::kMaxLatencyPsFieldNumber;
const int TfDataBottleneckAnalysis::kIteratorNameFieldNumber;
const int TfDataBottleneckAnalysis::kIteratorLongNameFieldNumber;
const int TfDataBottleneckAnalysis::kIteratorLatencyPsFieldNumber;
const int TfDataBottleneckAnalysis::kSuggestionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TfDataBottleneckAnalysis::TfDataBottleneckAnalysis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_TfDataBottleneckAnalysis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.TfDataBottleneckAnalysis)
}
TfDataBottleneckAnalysis::TfDataBottleneckAnalysis(const TfDataBottleneckAnalysis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  input_pipeline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_pipeline().size() > 0) {
    input_pipeline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_pipeline_);
  }
  iterator_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iterator_name().size() > 0) {
    iterator_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iterator_name_);
  }
  iterator_long_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iterator_long_name().size() > 0) {
    iterator_long_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iterator_long_name_);
  }
  suggestion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suggestion().size() > 0) {
    suggestion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suggestion_);
  }
  ::memcpy(&max_latency_ps_, &from.max_latency_ps_,
    static_cast<size_t>(reinterpret_cast<char*>(&iterator_latency_ps_) -
    reinterpret_cast<char*>(&max_latency_ps_)) + sizeof(iterator_latency_ps_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.TfDataBottleneckAnalysis)
}

void TfDataBottleneckAnalysis::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_pipeline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iterator_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iterator_long_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suggestion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_latency_ps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iterator_latency_ps_) -
      reinterpret_cast<char*>(&max_latency_ps_)) + sizeof(iterator_latency_ps_));
}

TfDataBottleneckAnalysis::~TfDataBottleneckAnalysis() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.TfDataBottleneckAnalysis)
  SharedDtor();
}

void TfDataBottleneckAnalysis::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_pipeline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iterator_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iterator_long_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suggestion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TfDataBottleneckAnalysis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TfDataBottleneckAnalysis::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TfDataBottleneckAnalysis& TfDataBottleneckAnalysis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_TfDataBottleneckAnalysis.base);
  return *internal_default_instance();
}


void TfDataBottleneckAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_pipeline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iterator_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iterator_long_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suggestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_latency_ps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iterator_latency_ps_) -
      reinterpret_cast<char*>(&max_latency_ps_)) + sizeof(iterator_latency_ps_));
  _internal_metadata_.Clear();
}

bool TfDataBottleneckAnalysis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.TfDataBottleneckAnalysis.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input_pipeline = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_pipeline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_pipeline().data(), static_cast<int>(this->input_pipeline().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_latency_ps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_latency_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string iterator_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iterator_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iterator_name().data(), static_cast<int>(this->iterator_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string iterator_long_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iterator_long_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iterator_long_name().data(), static_cast<int>(this->iterator_long_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string suggestion = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suggestion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suggestion().data(), static_cast<int>(this->suggestion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.TfDataBottleneckAnalysis.suggestion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 iterator_latency_ps = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iterator_latency_ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.TfDataBottleneckAnalysis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.TfDataBottleneckAnalysis)
  return false;
#undef DO_
}

void TfDataBottleneckAnalysis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // string input_pipeline = 2;
  if (this->input_pipeline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_pipeline().data(), static_cast<int>(this->input_pipeline().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->input_pipeline(), output);
  }

  // int64 max_latency_ps = 3;
  if (this->max_latency_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->max_latency_ps(), output);
  }

  // string iterator_name = 4;
  if (this->iterator_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iterator_name().data(), static_cast<int>(this->iterator_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->iterator_name(), output);
  }

  // string iterator_long_name = 5;
  if (this->iterator_long_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iterator_long_name().data(), static_cast<int>(this->iterator_long_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->iterator_long_name(), output);
  }

  // string suggestion = 6;
  if (this->suggestion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suggestion().data(), static_cast<int>(this->suggestion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.suggestion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->suggestion(), output);
  }

  // int64 iterator_latency_ps = 7;
  if (this->iterator_latency_ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->iterator_latency_ps(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.TfDataBottleneckAnalysis)
}

::google::protobuf::uint8* TfDataBottleneckAnalysis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // string input_pipeline = 2;
  if (this->input_pipeline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_pipeline().data(), static_cast<int>(this->input_pipeline().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.input_pipeline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->input_pipeline(), target);
  }

  // int64 max_latency_ps = 3;
  if (this->max_latency_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->max_latency_ps(), target);
  }

  // string iterator_name = 4;
  if (this->iterator_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iterator_name().data(), static_cast<int>(this->iterator_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.iterator_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->iterator_name(), target);
  }

  // string iterator_long_name = 5;
  if (this->iterator_long_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iterator_long_name().data(), static_cast<int>(this->iterator_long_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.iterator_long_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->iterator_long_name(), target);
  }

  // string suggestion = 6;
  if (this->suggestion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suggestion().data(), static_cast<int>(this->suggestion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.TfDataBottleneckAnalysis.suggestion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->suggestion(), target);
  }

  // int64 iterator_latency_ps = 7;
  if (this->iterator_latency_ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->iterator_latency_ps(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.TfDataBottleneckAnalysis)
  return target;
}

size_t TfDataBottleneckAnalysis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // string input_pipeline = 2;
  if (this->input_pipeline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_pipeline());
  }

  // string iterator_name = 4;
  if (this->iterator_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iterator_name());
  }

  // string iterator_long_name = 5;
  if (this->iterator_long_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iterator_long_name());
  }

  // string suggestion = 6;
  if (this->suggestion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suggestion());
  }

  // int64 max_latency_ps = 3;
  if (this->max_latency_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_latency_ps());
  }

  // int64 iterator_latency_ps = 7;
  if (this->iterator_latency_ps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->iterator_latency_ps());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfDataBottleneckAnalysis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  GOOGLE_DCHECK_NE(&from, this);
  const TfDataBottleneckAnalysis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TfDataBottleneckAnalysis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.TfDataBottleneckAnalysis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.TfDataBottleneckAnalysis)
    MergeFrom(*source);
  }
}

void TfDataBottleneckAnalysis::MergeFrom(const TfDataBottleneckAnalysis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.input_pipeline().size() > 0) {

    input_pipeline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_pipeline_);
  }
  if (from.iterator_name().size() > 0) {

    iterator_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iterator_name_);
  }
  if (from.iterator_long_name().size() > 0) {

    iterator_long_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iterator_long_name_);
  }
  if (from.suggestion().size() > 0) {

    suggestion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suggestion_);
  }
  if (from.max_latency_ps() != 0) {
    set_max_latency_ps(from.max_latency_ps());
  }
  if (from.iterator_latency_ps() != 0) {
    set_iterator_latency_ps(from.iterator_latency_ps());
  }
}

void TfDataBottleneckAnalysis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfDataBottleneckAnalysis::CopyFrom(const TfDataBottleneckAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.TfDataBottleneckAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfDataBottleneckAnalysis::IsInitialized() const {
  return true;
}

void TfDataBottleneckAnalysis::Swap(TfDataBottleneckAnalysis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TfDataBottleneckAnalysis::InternalSwap(TfDataBottleneckAnalysis* other) {
  using std::swap;
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_pipeline_.Swap(&other->input_pipeline_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  iterator_name_.Swap(&other->iterator_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  iterator_long_name_.Swap(&other->iterator_long_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  suggestion_.Swap(&other->suggestion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_latency_ps_, other->max_latency_ps_);
  swap(iterator_latency_ps_, other->iterator_latency_ps_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TfDataBottleneckAnalysis::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

CombinedTfDataStats_TfDataStatsEntry_DoNotUse::CombinedTfDataStats_TfDataStatsEntry_DoNotUse() {}
CombinedTfDataStats_TfDataStatsEntry_DoNotUse::CombinedTfDataStats_TfDataStatsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CombinedTfDataStats_TfDataStatsEntry_DoNotUse::MergeFrom(const CombinedTfDataStats_TfDataStatsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CombinedTfDataStats_TfDataStatsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[11];
}
void CombinedTfDataStats_TfDataStatsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void CombinedTfDataStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CombinedTfDataStats::kIsInputBoundFieldNumber;
const int CombinedTfDataStats::kSummaryFieldNumber;
const int CombinedTfDataStats::kBottleneckAnalysisFieldNumber;
const int CombinedTfDataStats::kTfDataStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CombinedTfDataStats::CombinedTfDataStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_CombinedTfDataStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.CombinedTfDataStats)
}
CombinedTfDataStats::CombinedTfDataStats(const CombinedTfDataStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bottleneck_analysis_(from.bottleneck_analysis_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tf_data_stats_.MergeFrom(from.tf_data_stats_);
  summary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.summary().size() > 0) {
    summary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.summary_);
  }
  is_input_bound_ = from.is_input_bound_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.CombinedTfDataStats)
}

void CombinedTfDataStats::SharedCtor() {
  summary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_input_bound_ = false;
}

CombinedTfDataStats::~CombinedTfDataStats() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.CombinedTfDataStats)
  SharedDtor();
}

void CombinedTfDataStats::SharedDtor() {
  summary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CombinedTfDataStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CombinedTfDataStats::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CombinedTfDataStats& CombinedTfDataStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::scc_info_CombinedTfDataStats.base);
  return *internal_default_instance();
}


void CombinedTfDataStats::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.CombinedTfDataStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bottleneck_analysis_.Clear();
  tf_data_stats_.Clear();
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_input_bound_ = false;
  _internal_metadata_.Clear();
}

bool CombinedTfDataStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.CombinedTfDataStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.profiler.TfDataBottleneckAnalysis bottleneck_analysis = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bottleneck_analysis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .tensorflow.profiler.TfDataStats> tf_data_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          CombinedTfDataStats_TfDataStatsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CombinedTfDataStats_TfDataStatsEntry_DoNotUse,
              ::std::string, ::tensorflow::profiler::TfDataStats,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats > > parser(&tf_data_stats_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.CombinedTfDataStats.TfDataStatsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_input_bound = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_input_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string summary = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_summary()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->summary().data(), static_cast<int>(this->summary().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.CombinedTfDataStats.summary"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.CombinedTfDataStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.CombinedTfDataStats)
  return false;
#undef DO_
}

void CombinedTfDataStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.CombinedTfDataStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.TfDataBottleneckAnalysis bottleneck_analysis = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bottleneck_analysis_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->bottleneck_analysis(static_cast<int>(i)),
      output);
  }

  // map<string, .tensorflow.profiler.TfDataStats> tf_data_stats = 2;
  if (!this->tf_data_stats().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.CombinedTfDataStats.TfDataStatsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tf_data_stats().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tf_data_stats().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::const_iterator
          it = this->tf_data_stats().begin();
          it != this->tf_data_stats().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CombinedTfDataStats_TfDataStatsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tf_data_stats_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<CombinedTfDataStats_TfDataStatsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::const_iterator
          it = this->tf_data_stats().begin();
          it != this->tf_data_stats().end(); ++it) {
        entry.reset(tf_data_stats_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool is_input_bound = 3;
  if (this->is_input_bound() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_input_bound(), output);
  }

  // string summary = 4;
  if (this->summary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->summary().data(), static_cast<int>(this->summary().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.CombinedTfDataStats.summary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->summary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.CombinedTfDataStats)
}

::google::protobuf::uint8* CombinedTfDataStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.CombinedTfDataStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.TfDataBottleneckAnalysis bottleneck_analysis = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bottleneck_analysis_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->bottleneck_analysis(static_cast<int>(i)), deterministic, target);
  }

  // map<string, .tensorflow.profiler.TfDataStats> tf_data_stats = 2;
  if (!this->tf_data_stats().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.CombinedTfDataStats.TfDataStatsEntry.key");
      }
    };

    if (deterministic &&
        this->tf_data_stats().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tf_data_stats().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::const_iterator
          it = this->tf_data_stats().begin();
          it != this->tf_data_stats().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CombinedTfDataStats_TfDataStatsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tf_data_stats_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<CombinedTfDataStats_TfDataStatsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::const_iterator
          it = this->tf_data_stats().begin();
          it != this->tf_data_stats().end(); ++it) {
        entry.reset(tf_data_stats_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool is_input_bound = 3;
  if (this->is_input_bound() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_input_bound(), target);
  }

  // string summary = 4;
  if (this->summary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->summary().data(), static_cast<int>(this->summary().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.CombinedTfDataStats.summary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->summary(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.CombinedTfDataStats)
  return target;
}

size_t CombinedTfDataStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.CombinedTfDataStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.TfDataBottleneckAnalysis bottleneck_analysis = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bottleneck_analysis_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bottleneck_analysis(static_cast<int>(i)));
    }
  }

  // map<string, .tensorflow.profiler.TfDataStats> tf_data_stats = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tf_data_stats_size());
  {
    ::std::unique_ptr<CombinedTfDataStats_TfDataStatsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::profiler::TfDataStats >::const_iterator
        it = this->tf_data_stats().begin();
        it != this->tf_data_stats().end(); ++it) {
      entry.reset(tf_data_stats_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string summary = 4;
  if (this->summary().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->summary());
  }

  // bool is_input_bound = 3;
  if (this->is_input_bound() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CombinedTfDataStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.CombinedTfDataStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CombinedTfDataStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CombinedTfDataStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.CombinedTfDataStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.CombinedTfDataStats)
    MergeFrom(*source);
  }
}

void CombinedTfDataStats::MergeFrom(const CombinedTfDataStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.CombinedTfDataStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bottleneck_analysis_.MergeFrom(from.bottleneck_analysis_);
  tf_data_stats_.MergeFrom(from.tf_data_stats_);
  if (from.summary().size() > 0) {

    summary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.summary_);
  }
  if (from.is_input_bound() != 0) {
    set_is_input_bound(from.is_input_bound());
  }
}

void CombinedTfDataStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.CombinedTfDataStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CombinedTfDataStats::CopyFrom(const CombinedTfDataStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.CombinedTfDataStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CombinedTfDataStats::IsInitialized() const {
  return true;
}

void CombinedTfDataStats::Swap(CombinedTfDataStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CombinedTfDataStats::InternalSwap(CombinedTfDataStats* other) {
  using std::swap;
  CastToBase(&bottleneck_analysis_)->InternalSwap(CastToBase(&other->bottleneck_analysis_));
  tf_data_stats_.Swap(&other->tf_data_stats_);
  summary_.Swap(&other->summary_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_input_bound_, other->is_input_bound_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CombinedTfDataStats::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5fdata_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::IteratorStat* Arena::CreateMaybeMessage< ::tensorflow::profiler::IteratorStat >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::IteratorStat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::IteratorMetadata_ParamsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::IteratorMetadata* Arena::CreateMaybeMessage< ::tensorflow::profiler::IteratorMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::IteratorMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::InputPipelineStat_IteratorStatsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::InputPipelineStat* Arena::CreateMaybeMessage< ::tensorflow::profiler::InputPipelineStat >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::InputPipelineStat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::InputPipelineMetadata* Arena::CreateMaybeMessage< ::tensorflow::profiler::InputPipelineMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::InputPipelineMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::InputPipelineStats* Arena::CreateMaybeMessage< ::tensorflow::profiler::InputPipelineStats >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::InputPipelineStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::TfDataStats_IteratorMetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::TfDataStats_InputPipelinesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::TfDataStats* Arena::CreateMaybeMessage< ::tensorflow::profiler::TfDataStats >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::TfDataStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::TfDataBottleneckAnalysis* Arena::CreateMaybeMessage< ::tensorflow::profiler::TfDataBottleneckAnalysis >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::TfDataBottleneckAnalysis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::CombinedTfDataStats_TfDataStatsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::CombinedTfDataStats* Arena::CreateMaybeMessage< ::tensorflow::profiler::CombinedTfDataStats >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::CombinedTfDataStats >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
