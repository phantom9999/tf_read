// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/tfstreamz.proto

#include "tensorflow/core/profiler/protobuf/tfstreamz.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PercentilePoint;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto
namespace tensorflow {
namespace profiler {
namespace tfstreamz {
class PercentilePointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PercentilePoint>
      _instance;
} _PercentilePoint_default_instance_;
class PercentilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Percentiles>
      _instance;
} _Percentiles_default_instance_;
}  // namespace tfstreamz
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto {
static void InitDefaultsPercentilePoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::tfstreamz::_PercentilePoint_default_instance_;
    new (ptr) ::tensorflow::profiler::tfstreamz::PercentilePoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::tfstreamz::PercentilePoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PercentilePoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPercentilePoint}, {}};

static void InitDefaultsPercentiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::tfstreamz::_Percentiles_default_instance_;
    new (ptr) ::tensorflow::profiler::tfstreamz::Percentiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::tfstreamz::Percentiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Percentiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPercentiles}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::scc_info_PercentilePoint.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PercentilePoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Percentiles.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::PercentilePoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::PercentilePoint, percentile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::PercentilePoint, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, unit_of_measure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, start_nstime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, end_nstime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, min_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, max_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, mean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, stddev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, num_samples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, total_samples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, accumulator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::tfstreamz::Percentiles, points_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::tfstreamz::PercentilePoint)},
  { 7, -1, sizeof(::tensorflow::profiler::tfstreamz::Percentiles)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::tfstreamz::_PercentilePoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::tfstreamz::_Percentiles_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/tfstreamz.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n1tensorflow/core/profiler/protobuf/tfst"
      "reamz.proto\022\035tensorflow.profiler.tfstrea"
      "mz\"4\n\017PercentilePoint\022\022\n\npercentile\030\001 \001("
      "\001\022\r\n\005value\030\002 \001(\001\"\303\002\n\013Percentiles\022E\n\017unit"
      "_of_measure\030\001 \001(\0162,.tensorflow.profiler."
      "tfstreamz.UnitOfMeasure\022\024\n\014start_nstime\030"
      "\002 \001(\004\022\022\n\nend_nstime\030\003 \001(\004\022\021\n\tmin_value\030\004"
      " \001(\001\022\021\n\tmax_value\030\005 \001(\001\022\014\n\004mean\030\006 \001(\001\022\016\n"
      "\006stddev\030\007 \001(\001\022\023\n\013num_samples\030\010 \001(\004\022\025\n\rto"
      "tal_samples\030\t \001(\004\022\023\n\013accumulator\030\n \001(\001\022>"
      "\n\006points\030\013 \003(\0132..tensorflow.profiler.tfs"
      "treamz.PercentilePoint*0\n\rUnitOfMeasure\022"
      "\n\n\006NUMBER\020\000\022\010\n\004TIME\020\001\022\t\n\005BYTES\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 520);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/tfstreamz.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto
namespace tensorflow {
namespace profiler {
namespace tfstreamz {
const ::google::protobuf::EnumDescriptor* UnitOfMeasure_descriptor() {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::file_level_enum_descriptors[0];
}
bool UnitOfMeasure_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PercentilePoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PercentilePoint::kPercentileFieldNumber;
const int PercentilePoint::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PercentilePoint::PercentilePoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::scc_info_PercentilePoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.tfstreamz.PercentilePoint)
}
PercentilePoint::PercentilePoint(const PercentilePoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&percentile_, &from.percentile_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&percentile_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.tfstreamz.PercentilePoint)
}

void PercentilePoint::SharedCtor() {
  ::memset(&percentile_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&percentile_)) + sizeof(value_));
}

PercentilePoint::~PercentilePoint() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.tfstreamz.PercentilePoint)
  SharedDtor();
}

void PercentilePoint::SharedDtor() {
}

void PercentilePoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PercentilePoint::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PercentilePoint& PercentilePoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::scc_info_PercentilePoint.base);
  return *internal_default_instance();
}


void PercentilePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&percentile_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&percentile_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool PercentilePoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double percentile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &percentile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.tfstreamz.PercentilePoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.tfstreamz.PercentilePoint)
  return false;
#undef DO_
}

void PercentilePoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double percentile = 1;
  if (this->percentile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->percentile(), output);
  }

  // double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.tfstreamz.PercentilePoint)
}

::google::protobuf::uint8* PercentilePoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double percentile = 1;
  if (this->percentile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->percentile(), target);
  }

  // double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.tfstreamz.PercentilePoint)
  return target;
}

size_t PercentilePoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double percentile = 1;
  if (this->percentile() != 0) {
    total_size += 1 + 8;
  }

  // double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PercentilePoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  GOOGLE_DCHECK_NE(&from, this);
  const PercentilePoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PercentilePoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.tfstreamz.PercentilePoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.tfstreamz.PercentilePoint)
    MergeFrom(*source);
  }
}

void PercentilePoint::MergeFrom(const PercentilePoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.percentile() != 0) {
    set_percentile(from.percentile());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void PercentilePoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PercentilePoint::CopyFrom(const PercentilePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.tfstreamz.PercentilePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PercentilePoint::IsInitialized() const {
  return true;
}

void PercentilePoint::Swap(PercentilePoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PercentilePoint::InternalSwap(PercentilePoint* other) {
  using std::swap;
  swap(percentile_, other->percentile_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PercentilePoint::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Percentiles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Percentiles::kUnitOfMeasureFieldNumber;
const int Percentiles::kStartNstimeFieldNumber;
const int Percentiles::kEndNstimeFieldNumber;
const int Percentiles::kMinValueFieldNumber;
const int Percentiles::kMaxValueFieldNumber;
const int Percentiles::kMeanFieldNumber;
const int Percentiles::kStddevFieldNumber;
const int Percentiles::kNumSamplesFieldNumber;
const int Percentiles::kTotalSamplesFieldNumber;
const int Percentiles::kAccumulatorFieldNumber;
const int Percentiles::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Percentiles::Percentiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::scc_info_Percentiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.tfstreamz.Percentiles)
}
Percentiles::Percentiles(const Percentiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_nstime_, &from.start_nstime_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_of_measure_) -
    reinterpret_cast<char*>(&start_nstime_)) + sizeof(unit_of_measure_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.tfstreamz.Percentiles)
}

void Percentiles::SharedCtor() {
  ::memset(&start_nstime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_of_measure_) -
      reinterpret_cast<char*>(&start_nstime_)) + sizeof(unit_of_measure_));
}

Percentiles::~Percentiles() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.tfstreamz.Percentiles)
  SharedDtor();
}

void Percentiles::SharedDtor() {
}

void Percentiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Percentiles::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Percentiles& Percentiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::scc_info_Percentiles.base);
  return *internal_default_instance();
}


void Percentiles::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.tfstreamz.Percentiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  ::memset(&start_nstime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_of_measure_) -
      reinterpret_cast<char*>(&start_nstime_)) + sizeof(unit_of_measure_));
  _internal_metadata_.Clear();
}

bool Percentiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.tfstreamz.Percentiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.profiler.tfstreamz.UnitOfMeasure unit_of_measure = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_unit_of_measure(static_cast< ::tensorflow::profiler::tfstreamz::UnitOfMeasure >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_nstime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_nstime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 end_nstime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_nstime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double min_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double max_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double mean = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double stddev = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stddev_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_samples = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_samples_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_samples = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_samples_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double accumulator = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &accumulator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.tfstreamz.PercentilePoint points = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.tfstreamz.Percentiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.tfstreamz.Percentiles)
  return false;
#undef DO_
}

void Percentiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.tfstreamz.Percentiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.tfstreamz.UnitOfMeasure unit_of_measure = 1;
  if (this->unit_of_measure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->unit_of_measure(), output);
  }

  // uint64 start_nstime = 2;
  if (this->start_nstime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_nstime(), output);
  }

  // uint64 end_nstime = 3;
  if (this->end_nstime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->end_nstime(), output);
  }

  // double min_value = 4;
  if (this->min_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->min_value(), output);
  }

  // double max_value = 5;
  if (this->max_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->max_value(), output);
  }

  // double mean = 6;
  if (this->mean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->mean(), output);
  }

  // double stddev = 7;
  if (this->stddev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->stddev(), output);
  }

  // uint64 num_samples = 8;
  if (this->num_samples() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->num_samples(), output);
  }

  // uint64 total_samples = 9;
  if (this->total_samples() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->total_samples(), output);
  }

  // double accumulator = 10;
  if (this->accumulator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->accumulator(), output);
  }

  // repeated .tensorflow.profiler.tfstreamz.PercentilePoint points = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->points(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.tfstreamz.Percentiles)
}

::google::protobuf::uint8* Percentiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.tfstreamz.Percentiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.tfstreamz.UnitOfMeasure unit_of_measure = 1;
  if (this->unit_of_measure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->unit_of_measure(), target);
  }

  // uint64 start_nstime = 2;
  if (this->start_nstime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_nstime(), target);
  }

  // uint64 end_nstime = 3;
  if (this->end_nstime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->end_nstime(), target);
  }

  // double min_value = 4;
  if (this->min_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->min_value(), target);
  }

  // double max_value = 5;
  if (this->max_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->max_value(), target);
  }

  // double mean = 6;
  if (this->mean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->mean(), target);
  }

  // double stddev = 7;
  if (this->stddev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->stddev(), target);
  }

  // uint64 num_samples = 8;
  if (this->num_samples() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->num_samples(), target);
  }

  // uint64 total_samples = 9;
  if (this->total_samples() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->total_samples(), target);
  }

  // double accumulator = 10;
  if (this->accumulator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->accumulator(), target);
  }

  // repeated .tensorflow.profiler.tfstreamz.PercentilePoint points = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.tfstreamz.Percentiles)
  return target;
}

size_t Percentiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.tfstreamz.Percentiles)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.profiler.tfstreamz.PercentilePoint points = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // uint64 start_nstime = 2;
  if (this->start_nstime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_nstime());
  }

  // uint64 end_nstime = 3;
  if (this->end_nstime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end_nstime());
  }

  // double min_value = 4;
  if (this->min_value() != 0) {
    total_size += 1 + 8;
  }

  // double max_value = 5;
  if (this->max_value() != 0) {
    total_size += 1 + 8;
  }

  // double mean = 6;
  if (this->mean() != 0) {
    total_size += 1 + 8;
  }

  // double stddev = 7;
  if (this->stddev() != 0) {
    total_size += 1 + 8;
  }

  // uint64 num_samples = 8;
  if (this->num_samples() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_samples());
  }

  // uint64 total_samples = 9;
  if (this->total_samples() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_samples());
  }

  // double accumulator = 10;
  if (this->accumulator() != 0) {
    total_size += 1 + 8;
  }

  // .tensorflow.profiler.tfstreamz.UnitOfMeasure unit_of_measure = 1;
  if (this->unit_of_measure() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->unit_of_measure());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Percentiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.tfstreamz.Percentiles)
  GOOGLE_DCHECK_NE(&from, this);
  const Percentiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Percentiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.tfstreamz.Percentiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.tfstreamz.Percentiles)
    MergeFrom(*source);
  }
}

void Percentiles::MergeFrom(const Percentiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.tfstreamz.Percentiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.start_nstime() != 0) {
    set_start_nstime(from.start_nstime());
  }
  if (from.end_nstime() != 0) {
    set_end_nstime(from.end_nstime());
  }
  if (from.min_value() != 0) {
    set_min_value(from.min_value());
  }
  if (from.max_value() != 0) {
    set_max_value(from.max_value());
  }
  if (from.mean() != 0) {
    set_mean(from.mean());
  }
  if (from.stddev() != 0) {
    set_stddev(from.stddev());
  }
  if (from.num_samples() != 0) {
    set_num_samples(from.num_samples());
  }
  if (from.total_samples() != 0) {
    set_total_samples(from.total_samples());
  }
  if (from.accumulator() != 0) {
    set_accumulator(from.accumulator());
  }
  if (from.unit_of_measure() != 0) {
    set_unit_of_measure(from.unit_of_measure());
  }
}

void Percentiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.tfstreamz.Percentiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Percentiles::CopyFrom(const Percentiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.tfstreamz.Percentiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Percentiles::IsInitialized() const {
  return true;
}

void Percentiles::Swap(Percentiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Percentiles::InternalSwap(Percentiles* other) {
  using std::swap;
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  swap(start_nstime_, other->start_nstime_);
  swap(end_nstime_, other->end_nstime_);
  swap(min_value_, other->min_value_);
  swap(max_value_, other->max_value_);
  swap(mean_, other->mean_);
  swap(stddev_, other->stddev_);
  swap(num_samples_, other->num_samples_);
  swap(total_samples_, other->total_samples_);
  swap(accumulator_, other->accumulator_);
  swap(unit_of_measure_, other->unit_of_measure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Percentiles::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftfstreamz_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tfstreamz
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::tfstreamz::PercentilePoint* Arena::CreateMaybeMessage< ::tensorflow::profiler::tfstreamz::PercentilePoint >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::tfstreamz::PercentilePoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::tfstreamz::Percentiles* Arena::CreateMaybeMessage< ::tensorflow::profiler::tfstreamz::Percentiles >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::tfstreamz::Percentiles >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
