// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/pod_stats.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/core/profiler/protobuf/diagnostics.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto 

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto
namespace tensorflow {
namespace profiler {
class PodStatsDatabase;
class PodStatsDatabaseDefaultTypeInternal;
extern PodStatsDatabaseDefaultTypeInternal _PodStatsDatabase_default_instance_;
class PodStatsRecord;
class PodStatsRecordDefaultTypeInternal;
extern PodStatsRecordDefaultTypeInternal _PodStatsRecord_default_instance_;
class PodStatsRecord_StepBreakdownUsEntry_DoNotUse;
class PodStatsRecord_StepBreakdownUsEntry_DoNotUseDefaultTypeInternal;
extern PodStatsRecord_StepBreakdownUsEntry_DoNotUseDefaultTypeInternal _PodStatsRecord_StepBreakdownUsEntry_DoNotUse_default_instance_;
class StepBreakdownEvents;
class StepBreakdownEventsDefaultTypeInternal;
extern StepBreakdownEventsDefaultTypeInternal _StepBreakdownEvents_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::profiler::PodStatsDatabase* Arena::CreateMaybeMessage<::tensorflow::profiler::PodStatsDatabase>(Arena*);
template<> ::tensorflow::profiler::PodStatsRecord* Arena::CreateMaybeMessage<::tensorflow::profiler::PodStatsRecord>(Arena*);
template<> ::tensorflow::profiler::PodStatsRecord_StepBreakdownUsEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::profiler::PodStatsRecord_StepBreakdownUsEntry_DoNotUse>(Arena*);
template<> ::tensorflow::profiler::StepBreakdownEvents* Arena::CreateMaybeMessage<::tensorflow::profiler::StepBreakdownEvents>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace profiler {

// ===================================================================

class StepBreakdownEvents : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.StepBreakdownEvents) */ {
 public:
  StepBreakdownEvents();
  virtual ~StepBreakdownEvents();

  StepBreakdownEvents(const StepBreakdownEvents& from);

  inline StepBreakdownEvents& operator=(const StepBreakdownEvents& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StepBreakdownEvents(StepBreakdownEvents&& from) noexcept
    : StepBreakdownEvents() {
    *this = ::std::move(from);
  }

  inline StepBreakdownEvents& operator=(StepBreakdownEvents&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StepBreakdownEvents& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepBreakdownEvents* internal_default_instance() {
    return reinterpret_cast<const StepBreakdownEvents*>(
               &_StepBreakdownEvents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StepBreakdownEvents* other);
  friend void swap(StepBreakdownEvents& a, StepBreakdownEvents& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StepBreakdownEvents* New() const final {
    return CreateMaybeMessage<StepBreakdownEvents>(NULL);
  }

  StepBreakdownEvents* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StepBreakdownEvents>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StepBreakdownEvents& from);
  void MergeFrom(const StepBreakdownEvents& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepBreakdownEvents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.StepBreakdownEvents)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PodStatsDatabase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.PodStatsDatabase) */ {
 public:
  PodStatsDatabase();
  virtual ~PodStatsDatabase();

  PodStatsDatabase(const PodStatsDatabase& from);

  inline PodStatsDatabase& operator=(const PodStatsDatabase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PodStatsDatabase(PodStatsDatabase&& from) noexcept
    : PodStatsDatabase() {
    *this = ::std::move(from);
  }

  inline PodStatsDatabase& operator=(PodStatsDatabase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PodStatsDatabase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PodStatsDatabase* internal_default_instance() {
    return reinterpret_cast<const PodStatsDatabase*>(
               &_PodStatsDatabase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PodStatsDatabase* other);
  friend void swap(PodStatsDatabase& a, PodStatsDatabase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PodStatsDatabase* New() const final {
    return CreateMaybeMessage<PodStatsDatabase>(NULL);
  }

  PodStatsDatabase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PodStatsDatabase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PodStatsDatabase& from);
  void MergeFrom(const PodStatsDatabase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PodStatsDatabase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensorflow.profiler.PodStatsRecord pod_stats_record = 1;
  int pod_stats_record_size() const;
  void clear_pod_stats_record();
  static const int kPodStatsRecordFieldNumber = 1;
  ::tensorflow::profiler::PodStatsRecord* mutable_pod_stats_record(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::PodStatsRecord >*
      mutable_pod_stats_record();
  const ::tensorflow::profiler::PodStatsRecord& pod_stats_record(int index) const;
  ::tensorflow::profiler::PodStatsRecord* add_pod_stats_record();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::PodStatsRecord >&
      pod_stats_record() const;

  // repeated .tensorflow.profiler.StepBreakdownEvents step_breakdown_events = 4;
  int step_breakdown_events_size() const;
  void clear_step_breakdown_events();
  static const int kStepBreakdownEventsFieldNumber = 4;
  ::tensorflow::profiler::StepBreakdownEvents* mutable_step_breakdown_events(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::StepBreakdownEvents >*
      mutable_step_breakdown_events();
  const ::tensorflow::profiler::StepBreakdownEvents& step_breakdown_events(int index) const;
  ::tensorflow::profiler::StepBreakdownEvents* add_step_breakdown_events();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::StepBreakdownEvents >&
      step_breakdown_events() const;

  // .tensorflow.profiler.Diagnostics diagnostics = 3;
  bool has_diagnostics() const;
  void clear_diagnostics();
  static const int kDiagnosticsFieldNumber = 3;
  private:
  const ::tensorflow::profiler::Diagnostics& _internal_diagnostics() const;
  public:
  const ::tensorflow::profiler::Diagnostics& diagnostics() const;
  ::tensorflow::profiler::Diagnostics* release_diagnostics();
  ::tensorflow::profiler::Diagnostics* mutable_diagnostics();
  void set_allocated_diagnostics(::tensorflow::profiler::Diagnostics* diagnostics);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.PodStatsDatabase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::PodStatsRecord > pod_stats_record_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::StepBreakdownEvents > step_breakdown_events_;
  ::tensorflow::profiler::Diagnostics* diagnostics_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PodStatsRecord_StepBreakdownUsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PodStatsRecord_StepBreakdownUsEntry_DoNotUse, 
    ::google::protobuf::int32, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PodStatsRecord_StepBreakdownUsEntry_DoNotUse, 
    ::google::protobuf::int32, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > SuperType;
  PodStatsRecord_StepBreakdownUsEntry_DoNotUse();
  PodStatsRecord_StepBreakdownUsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PodStatsRecord_StepBreakdownUsEntry_DoNotUse& other);
  static const PodStatsRecord_StepBreakdownUsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PodStatsRecord_StepBreakdownUsEntry_DoNotUse*>(&_PodStatsRecord_StepBreakdownUsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PodStatsRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.PodStatsRecord) */ {
 public:
  PodStatsRecord();
  virtual ~PodStatsRecord();

  PodStatsRecord(const PodStatsRecord& from);

  inline PodStatsRecord& operator=(const PodStatsRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PodStatsRecord(PodStatsRecord&& from) noexcept
    : PodStatsRecord() {
    *this = ::std::move(from);
  }

  inline PodStatsRecord& operator=(PodStatsRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PodStatsRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PodStatsRecord* internal_default_instance() {
    return reinterpret_cast<const PodStatsRecord*>(
               &_PodStatsRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PodStatsRecord* other);
  friend void swap(PodStatsRecord& a, PodStatsRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PodStatsRecord* New() const final {
    return CreateMaybeMessage<PodStatsRecord>(NULL);
  }

  PodStatsRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PodStatsRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PodStatsRecord& from);
  void MergeFrom(const PodStatsRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PodStatsRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, double> step_breakdown_us = 19;
  int step_breakdown_us_size() const;
  void clear_step_breakdown_us();
  static const int kStepBreakdownUsFieldNumber = 19;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      step_breakdown_us() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_step_breakdown_us();

  // string host_name = 1;
  void clear_host_name();
  static const int kHostNameFieldNumber = 1;
  const ::std::string& host_name() const;
  void set_host_name(const ::std::string& value);
  #if LANG_CXX11
  void set_host_name(::std::string&& value);
  #endif
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  ::std::string* mutable_host_name();
  ::std::string* release_host_name();
  void set_allocated_host_name(::std::string* host_name);

  // string bottleneck = 14;
  void clear_bottleneck();
  static const int kBottleneckFieldNumber = 14;
  const ::std::string& bottleneck() const;
  void set_bottleneck(const ::std::string& value);
  #if LANG_CXX11
  void set_bottleneck(::std::string&& value);
  #endif
  void set_bottleneck(const char* value);
  void set_bottleneck(const char* value, size_t size);
  ::std::string* mutable_bottleneck();
  ::std::string* release_bottleneck();
  void set_allocated_bottleneck(::std::string* bottleneck);

  // int32 chip_id = 2;
  void clear_chip_id();
  static const int kChipIdFieldNumber = 2;
  ::google::protobuf::int32 chip_id() const;
  void set_chip_id(::google::protobuf::int32 value);

  // int32 node_id = 3;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 3;
  ::google::protobuf::int32 node_id() const;
  void set_node_id(::google::protobuf::int32 value);

  // double total_duration_us = 5;
  void clear_total_duration_us();
  static const int kTotalDurationUsFieldNumber = 5;
  double total_duration_us() const;
  void set_total_duration_us(double value);

  // uint32 step_num = 4;
  void clear_step_num();
  static const int kStepNumFieldNumber = 4;
  ::google::protobuf::uint32 step_num() const;
  void set_step_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.PodStatsRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PodStatsRecord_StepBreakdownUsEntry_DoNotUse,
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > step_breakdown_us_;
  ::google::protobuf::internal::ArenaStringPtr host_name_;
  ::google::protobuf::internal::ArenaStringPtr bottleneck_;
  ::google::protobuf::int32 chip_id_;
  ::google::protobuf::int32 node_id_;
  double total_duration_us_;
  ::google::protobuf::uint32 step_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StepBreakdownEvents

// int32 id = 1;
inline void StepBreakdownEvents::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 StepBreakdownEvents::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepBreakdownEvents.id)
  return id_;
}
inline void StepBreakdownEvents::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepBreakdownEvents.id)
}

// string name = 2;
inline void StepBreakdownEvents::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StepBreakdownEvents::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepBreakdownEvents.name)
  return name_.GetNoArena();
}
inline void StepBreakdownEvents::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepBreakdownEvents.name)
}
#if LANG_CXX11
inline void StepBreakdownEvents::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.StepBreakdownEvents.name)
}
#endif
inline void StepBreakdownEvents::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.StepBreakdownEvents.name)
}
inline void StepBreakdownEvents::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.StepBreakdownEvents.name)
}
inline ::std::string* StepBreakdownEvents::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.StepBreakdownEvents.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StepBreakdownEvents::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.StepBreakdownEvents.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StepBreakdownEvents::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.StepBreakdownEvents.name)
}

// -------------------------------------------------------------------

// PodStatsDatabase

// repeated .tensorflow.profiler.PodStatsRecord pod_stats_record = 1;
inline int PodStatsDatabase::pod_stats_record_size() const {
  return pod_stats_record_.size();
}
inline void PodStatsDatabase::clear_pod_stats_record() {
  pod_stats_record_.Clear();
}
inline ::tensorflow::profiler::PodStatsRecord* PodStatsDatabase::mutable_pod_stats_record(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.PodStatsDatabase.pod_stats_record)
  return pod_stats_record_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::PodStatsRecord >*
PodStatsDatabase::mutable_pod_stats_record() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.PodStatsDatabase.pod_stats_record)
  return &pod_stats_record_;
}
inline const ::tensorflow::profiler::PodStatsRecord& PodStatsDatabase::pod_stats_record(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsDatabase.pod_stats_record)
  return pod_stats_record_.Get(index);
}
inline ::tensorflow::profiler::PodStatsRecord* PodStatsDatabase::add_pod_stats_record() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.PodStatsDatabase.pod_stats_record)
  return pod_stats_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::PodStatsRecord >&
PodStatsDatabase::pod_stats_record() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.PodStatsDatabase.pod_stats_record)
  return pod_stats_record_;
}

// .tensorflow.profiler.Diagnostics diagnostics = 3;
inline bool PodStatsDatabase::has_diagnostics() const {
  return this != internal_default_instance() && diagnostics_ != NULL;
}
inline const ::tensorflow::profiler::Diagnostics& PodStatsDatabase::_internal_diagnostics() const {
  return *diagnostics_;
}
inline const ::tensorflow::profiler::Diagnostics& PodStatsDatabase::diagnostics() const {
  const ::tensorflow::profiler::Diagnostics* p = diagnostics_;
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsDatabase.diagnostics)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::profiler::Diagnostics*>(
      &::tensorflow::profiler::_Diagnostics_default_instance_);
}
inline ::tensorflow::profiler::Diagnostics* PodStatsDatabase::release_diagnostics() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.PodStatsDatabase.diagnostics)
  
  ::tensorflow::profiler::Diagnostics* temp = diagnostics_;
  diagnostics_ = NULL;
  return temp;
}
inline ::tensorflow::profiler::Diagnostics* PodStatsDatabase::mutable_diagnostics() {
  
  if (diagnostics_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::Diagnostics>(GetArenaNoVirtual());
    diagnostics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.PodStatsDatabase.diagnostics)
  return diagnostics_;
}
inline void PodStatsDatabase::set_allocated_diagnostics(::tensorflow::profiler::Diagnostics* diagnostics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(diagnostics_);
  }
  if (diagnostics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      diagnostics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, diagnostics, submessage_arena);
    }
    
  } else {
    
  }
  diagnostics_ = diagnostics;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.PodStatsDatabase.diagnostics)
}

// repeated .tensorflow.profiler.StepBreakdownEvents step_breakdown_events = 4;
inline int PodStatsDatabase::step_breakdown_events_size() const {
  return step_breakdown_events_.size();
}
inline void PodStatsDatabase::clear_step_breakdown_events() {
  step_breakdown_events_.Clear();
}
inline ::tensorflow::profiler::StepBreakdownEvents* PodStatsDatabase::mutable_step_breakdown_events(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.PodStatsDatabase.step_breakdown_events)
  return step_breakdown_events_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::StepBreakdownEvents >*
PodStatsDatabase::mutable_step_breakdown_events() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.PodStatsDatabase.step_breakdown_events)
  return &step_breakdown_events_;
}
inline const ::tensorflow::profiler::StepBreakdownEvents& PodStatsDatabase::step_breakdown_events(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsDatabase.step_breakdown_events)
  return step_breakdown_events_.Get(index);
}
inline ::tensorflow::profiler::StepBreakdownEvents* PodStatsDatabase::add_step_breakdown_events() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.PodStatsDatabase.step_breakdown_events)
  return step_breakdown_events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::profiler::StepBreakdownEvents >&
PodStatsDatabase::step_breakdown_events() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.PodStatsDatabase.step_breakdown_events)
  return step_breakdown_events_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PodStatsRecord

// string host_name = 1;
inline void PodStatsRecord::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PodStatsRecord::host_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsRecord.host_name)
  return host_name_.GetNoArena();
}
inline void PodStatsRecord::set_host_name(const ::std::string& value) {
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PodStatsRecord.host_name)
}
#if LANG_CXX11
inline void PodStatsRecord::set_host_name(::std::string&& value) {
  
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.PodStatsRecord.host_name)
}
#endif
inline void PodStatsRecord::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.PodStatsRecord.host_name)
}
inline void PodStatsRecord::set_host_name(const char* value, size_t size) {
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.PodStatsRecord.host_name)
}
inline ::std::string* PodStatsRecord::mutable_host_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.PodStatsRecord.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PodStatsRecord::release_host_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.PodStatsRecord.host_name)
  
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PodStatsRecord::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    
  } else {
    
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.PodStatsRecord.host_name)
}

// int32 chip_id = 2;
inline void PodStatsRecord::clear_chip_id() {
  chip_id_ = 0;
}
inline ::google::protobuf::int32 PodStatsRecord::chip_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsRecord.chip_id)
  return chip_id_;
}
inline void PodStatsRecord::set_chip_id(::google::protobuf::int32 value) {
  
  chip_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PodStatsRecord.chip_id)
}

// int32 node_id = 3;
inline void PodStatsRecord::clear_node_id() {
  node_id_ = 0;
}
inline ::google::protobuf::int32 PodStatsRecord::node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsRecord.node_id)
  return node_id_;
}
inline void PodStatsRecord::set_node_id(::google::protobuf::int32 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PodStatsRecord.node_id)
}

// uint32 step_num = 4;
inline void PodStatsRecord::clear_step_num() {
  step_num_ = 0u;
}
inline ::google::protobuf::uint32 PodStatsRecord::step_num() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsRecord.step_num)
  return step_num_;
}
inline void PodStatsRecord::set_step_num(::google::protobuf::uint32 value) {
  
  step_num_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PodStatsRecord.step_num)
}

// double total_duration_us = 5;
inline void PodStatsRecord::clear_total_duration_us() {
  total_duration_us_ = 0;
}
inline double PodStatsRecord::total_duration_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsRecord.total_duration_us)
  return total_duration_us_;
}
inline void PodStatsRecord::set_total_duration_us(double value) {
  
  total_duration_us_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PodStatsRecord.total_duration_us)
}

// map<int32, double> step_breakdown_us = 19;
inline int PodStatsRecord::step_breakdown_us_size() const {
  return step_breakdown_us_.size();
}
inline void PodStatsRecord::clear_step_breakdown_us() {
  step_breakdown_us_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
PodStatsRecord::step_breakdown_us() const {
  // @@protoc_insertion_point(field_map:tensorflow.profiler.PodStatsRecord.step_breakdown_us)
  return step_breakdown_us_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
PodStatsRecord::mutable_step_breakdown_us() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.profiler.PodStatsRecord.step_breakdown_us)
  return step_breakdown_us_.MutableMap();
}

// string bottleneck = 14;
inline void PodStatsRecord::clear_bottleneck() {
  bottleneck_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PodStatsRecord::bottleneck() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PodStatsRecord.bottleneck)
  return bottleneck_.GetNoArena();
}
inline void PodStatsRecord::set_bottleneck(const ::std::string& value) {
  
  bottleneck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PodStatsRecord.bottleneck)
}
#if LANG_CXX11
inline void PodStatsRecord::set_bottleneck(::std::string&& value) {
  
  bottleneck_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.PodStatsRecord.bottleneck)
}
#endif
inline void PodStatsRecord::set_bottleneck(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bottleneck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.PodStatsRecord.bottleneck)
}
inline void PodStatsRecord::set_bottleneck(const char* value, size_t size) {
  
  bottleneck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.PodStatsRecord.bottleneck)
}
inline ::std::string* PodStatsRecord::mutable_bottleneck() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.PodStatsRecord.bottleneck)
  return bottleneck_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PodStatsRecord::release_bottleneck() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.PodStatsRecord.bottleneck)
  
  return bottleneck_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PodStatsRecord::set_allocated_bottleneck(::std::string* bottleneck) {
  if (bottleneck != NULL) {
    
  } else {
    
  }
  bottleneck_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bottleneck);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.PodStatsRecord.bottleneck)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace profiler
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fpod_5fstats_2eproto
