// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/op_stats.proto

#include "tensorflow/core/profiler/protobuf/op_stats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Diagnostics;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KernelStatsDb;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_OpMetrics;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CoreDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HostDependentJobInfoResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HostIndependentJobInfoResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PerfEnv;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RunEnvironment_HostnamesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SystemTopology;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OpStats_CoreIdToDetailsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_RunEnvironment;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StepDatabaseResult;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5ffunction_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5ffunction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TfFunctionDb;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5ffunction_2eproto
namespace tensorflow {
namespace profiler {
class PerfEnvDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerfEnv>
      _instance;
} _PerfEnv_default_instance_;
class HostIndependentJobInfoResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostIndependentJobInfoResult>
      _instance;
} _HostIndependentJobInfoResult_default_instance_;
class HostDependentJobInfoResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostDependentJobInfoResult>
      _instance;
} _HostDependentJobInfoResult_default_instance_;
class SystemTopologyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemTopology>
      _instance;
} _SystemTopology_default_instance_;
class RunEnvironment_HostnamesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunEnvironment_HostnamesEntry_DoNotUse>
      _instance;
} _RunEnvironment_HostnamesEntry_DoNotUse_default_instance_;
class RunEnvironmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunEnvironment>
      _instance;
} _RunEnvironment_default_instance_;
class CoreDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoreDetails>
      _instance;
} _CoreDetails_default_instance_;
class OpStats_CoreIdToDetailsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpStats_CoreIdToDetailsEntry_DoNotUse>
      _instance;
} _OpStats_CoreIdToDetailsEntry_DoNotUse_default_instance_;
class OpStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpStats>
      _instance;
} _OpStats_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto {
static void InitDefaultsPerfEnv() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PerfEnv_default_instance_;
    new (ptr) ::tensorflow::profiler::PerfEnv();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PerfEnv::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PerfEnv =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPerfEnv}, {}};

static void InitDefaultsHostIndependentJobInfoResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_HostIndependentJobInfoResult_default_instance_;
    new (ptr) ::tensorflow::profiler::HostIndependentJobInfoResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::HostIndependentJobInfoResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HostIndependentJobInfoResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHostIndependentJobInfoResult}, {}};

static void InitDefaultsHostDependentJobInfoResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_HostDependentJobInfoResult_default_instance_;
    new (ptr) ::tensorflow::profiler::HostDependentJobInfoResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::HostDependentJobInfoResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HostDependentJobInfoResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHostDependentJobInfoResult}, {}};

static void InitDefaultsSystemTopology() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_SystemTopology_default_instance_;
    new (ptr) ::tensorflow::profiler::SystemTopology();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::SystemTopology::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemTopology =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemTopology}, {}};

static void InitDefaultsRunEnvironment_HostnamesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_RunEnvironment_HostnamesEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse();
  }
  ::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunEnvironment_HostnamesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunEnvironment_HostnamesEntry_DoNotUse}, {}};

static void InitDefaultsRunEnvironment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_RunEnvironment_default_instance_;
    new (ptr) ::tensorflow::profiler::RunEnvironment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::RunEnvironment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_RunEnvironment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRunEnvironment}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_RunEnvironment_HostnamesEntry_DoNotUse.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_HostIndependentJobInfoResult.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_HostDependentJobInfoResult.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_SystemTopology.base,}};

static void InitDefaultsCoreDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_CoreDetails_default_instance_;
    new (ptr) ::tensorflow::profiler::CoreDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::CoreDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CoreDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoreDetails}, {}};

static void InitDefaultsOpStats_CoreIdToDetailsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OpStats_CoreIdToDetailsEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse();
  }
  ::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OpStats_CoreIdToDetailsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOpStats_CoreIdToDetailsEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_CoreDetails.base,}};

static void InitDefaultsOpStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_OpStats_default_instance_;
    new (ptr) ::tensorflow::profiler::OpStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::OpStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_OpStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsOpStats}, {
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto::scc_info_OpMetrics.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_PerfEnv.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto::scc_info_StepDatabaseResult.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_RunEnvironment.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::scc_info_KernelStatsDb.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5ffunction_2eproto::scc_info_TfFunctionDb.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_OpStats_CoreIdToDetailsEntry_DoNotUse.base,
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto::scc_info_Diagnostics.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PerfEnv.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HostIndependentJobInfoResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HostDependentJobInfoResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemTopology.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunEnvironment_HostnamesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunEnvironment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoreDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpStats_CoreIdToDetailsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpStats.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerfEnv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerfEnv, peak_tera_flops_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerfEnv, peak_hbm_bw_giga_bytes_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::PerfEnv, ridge_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostIndependentJobInfoResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostIndependentJobInfoResult, change_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostIndependentJobInfoResult, build_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostIndependentJobInfoResult, build_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostIndependentJobInfoResult, profile_duration_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostDependentJobInfoResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostDependentJobInfoResult, host_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostDependentJobInfoResult, command_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostDependentJobInfoResult, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostDependentJobInfoResult, bns_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::HostDependentJobInfoResult, profile_time_ns_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::SystemTopology, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::SystemTopology, x_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::SystemTopology, y_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::SystemTopology, z_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::SystemTopology, num_expected_reduced_chips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, host_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, task_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, hostnames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, device_core_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, per_core_batch_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, host_independent_job_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, host_dependent_job_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, replica_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, num_cores_per_replica_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, topology_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::RunEnvironment, host_trace_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CoreDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CoreDetails, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CoreDetails, device_ordinal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CoreDetails, core_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CoreDetails, local_chip_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CoreDetails, global_chip_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::CoreDetails, global_core_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, host_op_metrics_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, device_op_metrics_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, hlo_metrics_db_complete_steps_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, perf_env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, step_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, run_environment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, kernel_stats_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, tf_function_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, core_id_to_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::profiler::OpStats, diagnostics_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::profiler::PerfEnv)},
  { 8, -1, sizeof(::tensorflow::profiler::HostIndependentJobInfoResult)},
  { 17, -1, sizeof(::tensorflow::profiler::HostDependentJobInfoResult)},
  { 27, -1, sizeof(::tensorflow::profiler::SystemTopology)},
  { 36, 43, sizeof(::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse)},
  { 45, -1, sizeof(::tensorflow::profiler::RunEnvironment)},
  { 62, -1, sizeof(::tensorflow::profiler::CoreDetails)},
  { 73, 80, sizeof(::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse)},
  { 82, -1, sizeof(::tensorflow::profiler::OpStats)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_PerfEnv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_HostIndependentJobInfoResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_HostDependentJobInfoResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_SystemTopology_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_RunEnvironment_HostnamesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_RunEnvironment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_CoreDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OpStats_CoreIdToDetailsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::profiler::_OpStats_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/protobuf/op_stats.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n0tensorflow/core/profiler/protobuf/op_s"
      "tats.proto\022\023tensorflow.profiler\0323tensorf"
      "low/core/profiler/protobuf/diagnostics.p"
      "roto\0324tensorflow/core/profiler/protobuf/"
      "kernel_stats.proto\0322tensorflow/core/prof"
      "iler/protobuf/op_metrics.proto\0320tensorfl"
      "ow/core/profiler/protobuf/steps_db.proto"
      "\0323tensorflow/core/profiler/protobuf/tf_f"
      "unction.proto\"m\n\007PerfEnv\022\"\n\032peak_tera_fl"
      "ops_per_second\030\001 \001(\001\022)\n!peak_hbm_bw_giga"
      "_bytes_per_second\030\002 \001(\001\022\023\n\013ridge_point\030\003"
      " \001(\001\"z\n\034HostIndependentJobInfoResult\022\023\n\013"
      "change_list\030\001 \001(\003\022\022\n\nbuild_time\030\002 \001(\003\022\024\n"
      "\014build_target\030\003 \001(\t\022\033\n\023profile_duration_"
      "ms\030\004 \001(\r\"\205\001\n\032HostDependentJobInfoResult\022"
      "\017\n\007host_id\030\001 \001(\t\022\024\n\014command_line\030\002 \001(\t\022\022"
      "\n\nstart_time\030\003 \001(\003\022\023\n\013bns_address\030\004 \001(\t\022"
      "\027\n\017profile_time_ns\030\005 \001(\004\"s\n\016SystemTopolo"
      "gy\022\023\n\013x_dimension\030\001 \001(\003\022\023\n\013y_dimension\030\002"
      " \001(\003\022\023\n\013z_dimension\030\003 \001(\003\022\"\n\032num_expecte"
      "d_reduced_chips\030\004 \001(\003\"\255\004\n\016RunEnvironment"
      "\022\022\n\nhost_count\030\001 \001(\005\022\022\n\ntask_count\030\002 \001(\005"
      "\022E\n\thostnames\030\003 \003(\01322.tensorflow.profile"
      "r.RunEnvironment.HostnamesEntry\022\023\n\013devic"
      "e_type\030\004 \001(\t\022\031\n\021device_core_count\030\005 \001(\005\022"
      "\033\n\023per_core_batch_size\030\006 \001(\005\022T\n\031host_ind"
      "ependent_job_info\030\007 \001(\01321.tensorflow.pro"
      "filer.HostIndependentJobInfoResult\022P\n\027ho"
      "st_dependent_job_info\030\010 \003(\0132/.tensorflow"
      ".profiler.HostDependentJobInfoResult\022\025\n\r"
      "replica_count\030\t \001(\005\022\035\n\025num_cores_per_rep"
      "lica\030\n \001(\005\0225\n\010topology\030\013 \001(\0132#.tensorflo"
      "w.profiler.SystemTopology\022\030\n\020host_trace_"
      "level\030\014 \001(\r\0320\n\016HostnamesEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\010:\0028\001\"\220\001\n\013CoreDetails\022\020\n"
      "\010hostname\030\001 \001(\t\022\026\n\016device_ordinal\030\002 \001(\r\022"
      "\020\n\010core_num\030\003 \001(\r\022\025\n\rlocal_chip_id\030\004 \001(\r"
      "\022\026\n\016global_chip_id\030\005 \001(\r\022\026\n\016global_core_"
      "id\030\006 \001(\r\"\333\005\n\007OpStats\022<\n\022host_op_metrics_"
      "db\030\001 \001(\0132 .tensorflow.profiler.OpMetrics"
      "Db\022>\n\024device_op_metrics_db\030\002 \001(\0132 .tenso"
      "rflow.profiler.OpMetricsDb\022L\n\"hlo_metric"
      "s_db_complete_steps_only\030\n \001(\0132 .tensorf"
      "low.profiler.OpMetricsDb\022.\n\010perf_env\030\003 \001"
      "(\0132\034.tensorflow.profiler.PerfEnv\0228\n\007step"
      "_db\030\004 \001(\0132\'.tensorflow.profiler.StepData"
      "baseResult\022<\n\017run_environment\030\005 \001(\0132#.te"
      "nsorflow.profiler.RunEnvironment\022;\n\017kern"
      "el_stats_db\030\006 \001(\0132\".tensorflow.profiler."
      "KernelStatsDb\0229\n\016tf_function_db\030\010 \001(\0132!."
      "tensorflow.profiler.TfFunctionDb\022M\n\022core"
      "_id_to_details\030\013 \003(\01321.tensorflow.profil"
      "er.OpStats.CoreIdToDetailsEntry\0225\n\013diagn"
      "ostics\030\t \001(\0132 .tensorflow.profiler.Diagn"
      "ostics\032X\n\024CoreIdToDetailsEntry\022\013\n\003key\030\001 "
      "\001(\r\022/\n\005value\030\002 \001(\0132 .tensorflow.profiler"
      ".CoreDetails:\0028\001J\004\010\007\020\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2270);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/protobuf/op_stats.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fdiagnostics_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fkernel_5fstats_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2ftf_5ffunction_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto
namespace tensorflow {
namespace profiler {

// ===================================================================

void PerfEnv::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerfEnv::kPeakTeraFlopsPerSecondFieldNumber;
const int PerfEnv::kPeakHbmBwGigaBytesPerSecondFieldNumber;
const int PerfEnv::kRidgePointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerfEnv::PerfEnv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_PerfEnv.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PerfEnv)
}
PerfEnv::PerfEnv(const PerfEnv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&peak_tera_flops_per_second_, &from.peak_tera_flops_per_second_,
    static_cast<size_t>(reinterpret_cast<char*>(&ridge_point_) -
    reinterpret_cast<char*>(&peak_tera_flops_per_second_)) + sizeof(ridge_point_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PerfEnv)
}

void PerfEnv::SharedCtor() {
  ::memset(&peak_tera_flops_per_second_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ridge_point_) -
      reinterpret_cast<char*>(&peak_tera_flops_per_second_)) + sizeof(ridge_point_));
}

PerfEnv::~PerfEnv() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PerfEnv)
  SharedDtor();
}

void PerfEnv::SharedDtor() {
}

void PerfEnv::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PerfEnv::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerfEnv& PerfEnv::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_PerfEnv.base);
  return *internal_default_instance();
}


void PerfEnv::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PerfEnv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&peak_tera_flops_per_second_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ridge_point_) -
      reinterpret_cast<char*>(&peak_tera_flops_per_second_)) + sizeof(ridge_point_));
  _internal_metadata_.Clear();
}

bool PerfEnv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.PerfEnv)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double peak_tera_flops_per_second = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peak_tera_flops_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double peak_hbm_bw_giga_bytes_per_second = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peak_hbm_bw_giga_bytes_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ridge_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ridge_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.PerfEnv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.PerfEnv)
  return false;
#undef DO_
}

void PerfEnv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.PerfEnv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double peak_tera_flops_per_second = 1;
  if (this->peak_tera_flops_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->peak_tera_flops_per_second(), output);
  }

  // double peak_hbm_bw_giga_bytes_per_second = 2;
  if (this->peak_hbm_bw_giga_bytes_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->peak_hbm_bw_giga_bytes_per_second(), output);
  }

  // double ridge_point = 3;
  if (this->ridge_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ridge_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.PerfEnv)
}

::google::protobuf::uint8* PerfEnv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PerfEnv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double peak_tera_flops_per_second = 1;
  if (this->peak_tera_flops_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->peak_tera_flops_per_second(), target);
  }

  // double peak_hbm_bw_giga_bytes_per_second = 2;
  if (this->peak_hbm_bw_giga_bytes_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->peak_hbm_bw_giga_bytes_per_second(), target);
  }

  // double ridge_point = 3;
  if (this->ridge_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->ridge_point(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PerfEnv)
  return target;
}

size_t PerfEnv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PerfEnv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double peak_tera_flops_per_second = 1;
  if (this->peak_tera_flops_per_second() != 0) {
    total_size += 1 + 8;
  }

  // double peak_hbm_bw_giga_bytes_per_second = 2;
  if (this->peak_hbm_bw_giga_bytes_per_second() != 0) {
    total_size += 1 + 8;
  }

  // double ridge_point = 3;
  if (this->ridge_point() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PerfEnv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PerfEnv)
  GOOGLE_DCHECK_NE(&from, this);
  const PerfEnv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerfEnv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PerfEnv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PerfEnv)
    MergeFrom(*source);
  }
}

void PerfEnv::MergeFrom(const PerfEnv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PerfEnv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.peak_tera_flops_per_second() != 0) {
    set_peak_tera_flops_per_second(from.peak_tera_flops_per_second());
  }
  if (from.peak_hbm_bw_giga_bytes_per_second() != 0) {
    set_peak_hbm_bw_giga_bytes_per_second(from.peak_hbm_bw_giga_bytes_per_second());
  }
  if (from.ridge_point() != 0) {
    set_ridge_point(from.ridge_point());
  }
}

void PerfEnv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PerfEnv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerfEnv::CopyFrom(const PerfEnv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PerfEnv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerfEnv::IsInitialized() const {
  return true;
}

void PerfEnv::Swap(PerfEnv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerfEnv::InternalSwap(PerfEnv* other) {
  using std::swap;
  swap(peak_tera_flops_per_second_, other->peak_tera_flops_per_second_);
  swap(peak_hbm_bw_giga_bytes_per_second_, other->peak_hbm_bw_giga_bytes_per_second_);
  swap(ridge_point_, other->ridge_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PerfEnv::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostIndependentJobInfoResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostIndependentJobInfoResult::kChangeListFieldNumber;
const int HostIndependentJobInfoResult::kBuildTimeFieldNumber;
const int HostIndependentJobInfoResult::kBuildTargetFieldNumber;
const int HostIndependentJobInfoResult::kProfileDurationMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostIndependentJobInfoResult::HostIndependentJobInfoResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_HostIndependentJobInfoResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.HostIndependentJobInfoResult)
}
HostIndependentJobInfoResult::HostIndependentJobInfoResult(const HostIndependentJobInfoResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_target().size() > 0) {
    build_target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_target_);
  }
  ::memcpy(&change_list_, &from.change_list_,
    static_cast<size_t>(reinterpret_cast<char*>(&profile_duration_ms_) -
    reinterpret_cast<char*>(&change_list_)) + sizeof(profile_duration_ms_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.HostIndependentJobInfoResult)
}

void HostIndependentJobInfoResult::SharedCtor() {
  build_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&change_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_duration_ms_) -
      reinterpret_cast<char*>(&change_list_)) + sizeof(profile_duration_ms_));
}

HostIndependentJobInfoResult::~HostIndependentJobInfoResult() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.HostIndependentJobInfoResult)
  SharedDtor();
}

void HostIndependentJobInfoResult::SharedDtor() {
  build_target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostIndependentJobInfoResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HostIndependentJobInfoResult::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostIndependentJobInfoResult& HostIndependentJobInfoResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_HostIndependentJobInfoResult.base);
  return *internal_default_instance();
}


void HostIndependentJobInfoResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.HostIndependentJobInfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  build_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&change_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_duration_ms_) -
      reinterpret_cast<char*>(&change_list_)) + sizeof(profile_duration_ms_));
  _internal_metadata_.Clear();
}

bool HostIndependentJobInfoResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.HostIndependentJobInfoResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 change_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &change_list_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 build_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &build_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_target().data(), static_cast<int>(this->build_target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HostIndependentJobInfoResult.build_target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 profile_duration_ms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &profile_duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.HostIndependentJobInfoResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.HostIndependentJobInfoResult)
  return false;
#undef DO_
}

void HostIndependentJobInfoResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.HostIndependentJobInfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 change_list = 1;
  if (this->change_list() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->change_list(), output);
  }

  // int64 build_time = 2;
  if (this->build_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->build_time(), output);
  }

  // string build_target = 3;
  if (this->build_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_target().data(), static_cast<int>(this->build_target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HostIndependentJobInfoResult.build_target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->build_target(), output);
  }

  // uint32 profile_duration_ms = 4;
  if (this->profile_duration_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->profile_duration_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.HostIndependentJobInfoResult)
}

::google::protobuf::uint8* HostIndependentJobInfoResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.HostIndependentJobInfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 change_list = 1;
  if (this->change_list() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->change_list(), target);
  }

  // int64 build_time = 2;
  if (this->build_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->build_time(), target);
  }

  // string build_target = 3;
  if (this->build_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_target().data(), static_cast<int>(this->build_target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HostIndependentJobInfoResult.build_target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->build_target(), target);
  }

  // uint32 profile_duration_ms = 4;
  if (this->profile_duration_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->profile_duration_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.HostIndependentJobInfoResult)
  return target;
}

size_t HostIndependentJobInfoResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.HostIndependentJobInfoResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string build_target = 3;
  if (this->build_target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_target());
  }

  // int64 change_list = 1;
  if (this->change_list() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->change_list());
  }

  // int64 build_time = 2;
  if (this->build_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->build_time());
  }

  // uint32 profile_duration_ms = 4;
  if (this->profile_duration_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->profile_duration_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HostIndependentJobInfoResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.HostIndependentJobInfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  const HostIndependentJobInfoResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostIndependentJobInfoResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.HostIndependentJobInfoResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.HostIndependentJobInfoResult)
    MergeFrom(*source);
  }
}

void HostIndependentJobInfoResult::MergeFrom(const HostIndependentJobInfoResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.HostIndependentJobInfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.build_target().size() > 0) {

    build_target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_target_);
  }
  if (from.change_list() != 0) {
    set_change_list(from.change_list());
  }
  if (from.build_time() != 0) {
    set_build_time(from.build_time());
  }
  if (from.profile_duration_ms() != 0) {
    set_profile_duration_ms(from.profile_duration_ms());
  }
}

void HostIndependentJobInfoResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.HostIndependentJobInfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostIndependentJobInfoResult::CopyFrom(const HostIndependentJobInfoResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.HostIndependentJobInfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostIndependentJobInfoResult::IsInitialized() const {
  return true;
}

void HostIndependentJobInfoResult::Swap(HostIndependentJobInfoResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostIndependentJobInfoResult::InternalSwap(HostIndependentJobInfoResult* other) {
  using std::swap;
  build_target_.Swap(&other->build_target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(change_list_, other->change_list_);
  swap(build_time_, other->build_time_);
  swap(profile_duration_ms_, other->profile_duration_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HostIndependentJobInfoResult::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostDependentJobInfoResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostDependentJobInfoResult::kHostIdFieldNumber;
const int HostDependentJobInfoResult::kCommandLineFieldNumber;
const int HostDependentJobInfoResult::kStartTimeFieldNumber;
const int HostDependentJobInfoResult::kBnsAddressFieldNumber;
const int HostDependentJobInfoResult::kProfileTimeNsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostDependentJobInfoResult::HostDependentJobInfoResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_HostDependentJobInfoResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.HostDependentJobInfoResult)
}
HostDependentJobInfoResult::HostDependentJobInfoResult(const HostDependentJobInfoResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_id().size() > 0) {
    host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
  }
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command_line().size() > 0) {
    command_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line_);
  }
  bns_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bns_address().size() > 0) {
    bns_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bns_address_);
  }
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&profile_time_ns_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(profile_time_ns_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.HostDependentJobInfoResult)
}

void HostDependentJobInfoResult::SharedCtor() {
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bns_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_time_ns_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(profile_time_ns_));
}

HostDependentJobInfoResult::~HostDependentJobInfoResult() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.HostDependentJobInfoResult)
  SharedDtor();
}

void HostDependentJobInfoResult::SharedDtor() {
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bns_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostDependentJobInfoResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HostDependentJobInfoResult::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostDependentJobInfoResult& HostDependentJobInfoResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_HostDependentJobInfoResult.base);
  return *internal_default_instance();
}


void HostDependentJobInfoResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.HostDependentJobInfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bns_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_time_ns_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(profile_time_ns_));
  _internal_metadata_.Clear();
}

bool HostDependentJobInfoResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.HostDependentJobInfoResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_id().data(), static_cast<int>(this->host_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HostDependentJobInfoResult.host_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string command_line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command_line().data(), static_cast<int>(this->command_line().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HostDependentJobInfoResult.command_line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bns_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bns_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bns_address().data(), static_cast<int>(this->bns_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.HostDependentJobInfoResult.bns_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 profile_time_ns = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &profile_time_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.HostDependentJobInfoResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.HostDependentJobInfoResult)
  return false;
#undef DO_
}

void HostDependentJobInfoResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.HostDependentJobInfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_id = 1;
  if (this->host_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_id().data(), static_cast<int>(this->host_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HostDependentJobInfoResult.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host_id(), output);
  }

  // string command_line = 2;
  if (this->command_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_line().data(), static_cast<int>(this->command_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HostDependentJobInfoResult.command_line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command_line(), output);
  }

  // int64 start_time = 3;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_time(), output);
  }

  // string bns_address = 4;
  if (this->bns_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bns_address().data(), static_cast<int>(this->bns_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HostDependentJobInfoResult.bns_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bns_address(), output);
  }

  // uint64 profile_time_ns = 5;
  if (this->profile_time_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->profile_time_ns(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.HostDependentJobInfoResult)
}

::google::protobuf::uint8* HostDependentJobInfoResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.HostDependentJobInfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_id = 1;
  if (this->host_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_id().data(), static_cast<int>(this->host_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HostDependentJobInfoResult.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host_id(), target);
  }

  // string command_line = 2;
  if (this->command_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_line().data(), static_cast<int>(this->command_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HostDependentJobInfoResult.command_line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command_line(), target);
  }

  // int64 start_time = 3;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_time(), target);
  }

  // string bns_address = 4;
  if (this->bns_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bns_address().data(), static_cast<int>(this->bns_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.HostDependentJobInfoResult.bns_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bns_address(), target);
  }

  // uint64 profile_time_ns = 5;
  if (this->profile_time_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->profile_time_ns(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.HostDependentJobInfoResult)
  return target;
}

size_t HostDependentJobInfoResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.HostDependentJobInfoResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host_id = 1;
  if (this->host_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_id());
  }

  // string command_line = 2;
  if (this->command_line().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command_line());
  }

  // string bns_address = 4;
  if (this->bns_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bns_address());
  }

  // int64 start_time = 3;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time());
  }

  // uint64 profile_time_ns = 5;
  if (this->profile_time_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->profile_time_ns());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HostDependentJobInfoResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.HostDependentJobInfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  const HostDependentJobInfoResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostDependentJobInfoResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.HostDependentJobInfoResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.HostDependentJobInfoResult)
    MergeFrom(*source);
  }
}

void HostDependentJobInfoResult::MergeFrom(const HostDependentJobInfoResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.HostDependentJobInfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_id().size() > 0) {

    host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
  }
  if (from.command_line().size() > 0) {

    command_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line_);
  }
  if (from.bns_address().size() > 0) {

    bns_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bns_address_);
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.profile_time_ns() != 0) {
    set_profile_time_ns(from.profile_time_ns());
  }
}

void HostDependentJobInfoResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.HostDependentJobInfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostDependentJobInfoResult::CopyFrom(const HostDependentJobInfoResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.HostDependentJobInfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostDependentJobInfoResult::IsInitialized() const {
  return true;
}

void HostDependentJobInfoResult::Swap(HostDependentJobInfoResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostDependentJobInfoResult::InternalSwap(HostDependentJobInfoResult* other) {
  using std::swap;
  host_id_.Swap(&other->host_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  command_line_.Swap(&other->command_line_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bns_address_.Swap(&other->bns_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_time_, other->start_time_);
  swap(profile_time_ns_, other->profile_time_ns_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HostDependentJobInfoResult::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemTopology::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemTopology::kXDimensionFieldNumber;
const int SystemTopology::kYDimensionFieldNumber;
const int SystemTopology::kZDimensionFieldNumber;
const int SystemTopology::kNumExpectedReducedChipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemTopology::SystemTopology()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_SystemTopology.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.SystemTopology)
}
SystemTopology::SystemTopology(const SystemTopology& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_dimension_, &from.x_dimension_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_expected_reduced_chips_) -
    reinterpret_cast<char*>(&x_dimension_)) + sizeof(num_expected_reduced_chips_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.SystemTopology)
}

void SystemTopology::SharedCtor() {
  ::memset(&x_dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_expected_reduced_chips_) -
      reinterpret_cast<char*>(&x_dimension_)) + sizeof(num_expected_reduced_chips_));
}

SystemTopology::~SystemTopology() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.SystemTopology)
  SharedDtor();
}

void SystemTopology::SharedDtor() {
}

void SystemTopology::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SystemTopology::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemTopology& SystemTopology::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_SystemTopology.base);
  return *internal_default_instance();
}


void SystemTopology::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.SystemTopology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_expected_reduced_chips_) -
      reinterpret_cast<char*>(&x_dimension_)) + sizeof(num_expected_reduced_chips_));
  _internal_metadata_.Clear();
}

bool SystemTopology::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.SystemTopology)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 x_dimension = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &x_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 y_dimension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &y_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 z_dimension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &z_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_expected_reduced_chips = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_expected_reduced_chips_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.SystemTopology)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.SystemTopology)
  return false;
#undef DO_
}

void SystemTopology::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.SystemTopology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 x_dimension = 1;
  if (this->x_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->x_dimension(), output);
  }

  // int64 y_dimension = 2;
  if (this->y_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->y_dimension(), output);
  }

  // int64 z_dimension = 3;
  if (this->z_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->z_dimension(), output);
  }

  // int64 num_expected_reduced_chips = 4;
  if (this->num_expected_reduced_chips() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->num_expected_reduced_chips(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.SystemTopology)
}

::google::protobuf::uint8* SystemTopology::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.SystemTopology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 x_dimension = 1;
  if (this->x_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->x_dimension(), target);
  }

  // int64 y_dimension = 2;
  if (this->y_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->y_dimension(), target);
  }

  // int64 z_dimension = 3;
  if (this->z_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->z_dimension(), target);
  }

  // int64 num_expected_reduced_chips = 4;
  if (this->num_expected_reduced_chips() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->num_expected_reduced_chips(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.SystemTopology)
  return target;
}

size_t SystemTopology::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.SystemTopology)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 x_dimension = 1;
  if (this->x_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->x_dimension());
  }

  // int64 y_dimension = 2;
  if (this->y_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->y_dimension());
  }

  // int64 z_dimension = 3;
  if (this->z_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->z_dimension());
  }

  // int64 num_expected_reduced_chips = 4;
  if (this->num_expected_reduced_chips() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_expected_reduced_chips());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemTopology::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.SystemTopology)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemTopology* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemTopology>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.SystemTopology)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.SystemTopology)
    MergeFrom(*source);
  }
}

void SystemTopology::MergeFrom(const SystemTopology& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.SystemTopology)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_dimension() != 0) {
    set_x_dimension(from.x_dimension());
  }
  if (from.y_dimension() != 0) {
    set_y_dimension(from.y_dimension());
  }
  if (from.z_dimension() != 0) {
    set_z_dimension(from.z_dimension());
  }
  if (from.num_expected_reduced_chips() != 0) {
    set_num_expected_reduced_chips(from.num_expected_reduced_chips());
  }
}

void SystemTopology::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.SystemTopology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemTopology::CopyFrom(const SystemTopology& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.SystemTopology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemTopology::IsInitialized() const {
  return true;
}

void SystemTopology::Swap(SystemTopology* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemTopology::InternalSwap(SystemTopology* other) {
  using std::swap;
  swap(x_dimension_, other->x_dimension_);
  swap(y_dimension_, other->y_dimension_);
  swap(z_dimension_, other->z_dimension_);
  swap(num_expected_reduced_chips_, other->num_expected_reduced_chips_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SystemTopology::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RunEnvironment_HostnamesEntry_DoNotUse::RunEnvironment_HostnamesEntry_DoNotUse() {}
RunEnvironment_HostnamesEntry_DoNotUse::RunEnvironment_HostnamesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RunEnvironment_HostnamesEntry_DoNotUse::MergeFrom(const RunEnvironment_HostnamesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RunEnvironment_HostnamesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[4];
}
void RunEnvironment_HostnamesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RunEnvironment::InitAsDefaultInstance() {
  ::tensorflow::profiler::_RunEnvironment_default_instance_._instance.get_mutable()->host_independent_job_info_ = const_cast< ::tensorflow::profiler::HostIndependentJobInfoResult*>(
      ::tensorflow::profiler::HostIndependentJobInfoResult::internal_default_instance());
  ::tensorflow::profiler::_RunEnvironment_default_instance_._instance.get_mutable()->topology_ = const_cast< ::tensorflow::profiler::SystemTopology*>(
      ::tensorflow::profiler::SystemTopology::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunEnvironment::kHostCountFieldNumber;
const int RunEnvironment::kTaskCountFieldNumber;
const int RunEnvironment::kHostnamesFieldNumber;
const int RunEnvironment::kDeviceTypeFieldNumber;
const int RunEnvironment::kDeviceCoreCountFieldNumber;
const int RunEnvironment::kPerCoreBatchSizeFieldNumber;
const int RunEnvironment::kHostIndependentJobInfoFieldNumber;
const int RunEnvironment::kHostDependentJobInfoFieldNumber;
const int RunEnvironment::kReplicaCountFieldNumber;
const int RunEnvironment::kNumCoresPerReplicaFieldNumber;
const int RunEnvironment::kTopologyFieldNumber;
const int RunEnvironment::kHostTraceLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunEnvironment::RunEnvironment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_RunEnvironment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.RunEnvironment)
}
RunEnvironment::RunEnvironment(const RunEnvironment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      host_dependent_job_info_(from.host_dependent_job_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostnames_.MergeFrom(from.hostnames_);
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.has_host_independent_job_info()) {
    host_independent_job_info_ = new ::tensorflow::profiler::HostIndependentJobInfoResult(*from.host_independent_job_info_);
  } else {
    host_independent_job_info_ = NULL;
  }
  if (from.has_topology()) {
    topology_ = new ::tensorflow::profiler::SystemTopology(*from.topology_);
  } else {
    topology_ = NULL;
  }
  ::memcpy(&host_count_, &from.host_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_trace_level_) -
    reinterpret_cast<char*>(&host_count_)) + sizeof(host_trace_level_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.RunEnvironment)
}

void RunEnvironment::SharedCtor() {
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&host_independent_job_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_trace_level_) -
      reinterpret_cast<char*>(&host_independent_job_info_)) + sizeof(host_trace_level_));
}

RunEnvironment::~RunEnvironment() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.RunEnvironment)
  SharedDtor();
}

void RunEnvironment::SharedDtor() {
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete host_independent_job_info_;
  if (this != internal_default_instance()) delete topology_;
}

void RunEnvironment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunEnvironment::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunEnvironment& RunEnvironment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_RunEnvironment.base);
  return *internal_default_instance();
}


void RunEnvironment::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.RunEnvironment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hostnames_.Clear();
  host_dependent_job_info_.Clear();
  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && host_independent_job_info_ != NULL) {
    delete host_independent_job_info_;
  }
  host_independent_job_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && topology_ != NULL) {
    delete topology_;
  }
  topology_ = NULL;
  ::memset(&host_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_trace_level_) -
      reinterpret_cast<char*>(&host_count_)) + sizeof(host_trace_level_));
  _internal_metadata_.Clear();
}

bool RunEnvironment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.RunEnvironment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 host_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 task_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bool> hostnames = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          RunEnvironment_HostnamesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RunEnvironment_HostnamesEntry_DoNotUse,
              ::std::string, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< ::std::string, bool > > parser(&hostnames_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.RunEnvironment.HostnamesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.RunEnvironment.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device_core_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_core_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 per_core_batch_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &per_core_batch_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.HostIndependentJobInfoResult host_independent_job_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_independent_job_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.profiler.HostDependentJobInfoResult host_dependent_job_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_host_dependent_job_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 replica_count = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replica_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_cores_per_replica = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_cores_per_replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.SystemTopology topology = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topology()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 host_trace_level = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_trace_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.RunEnvironment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.RunEnvironment)
  return false;
#undef DO_
}

void RunEnvironment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.RunEnvironment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 host_count = 1;
  if (this->host_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->host_count(), output);
  }

  // int32 task_count = 2;
  if (this->task_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_count(), output);
  }

  // map<string, bool> hostnames = 3;
  if (!this->hostnames().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.RunEnvironment.HostnamesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->hostnames().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->hostnames().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->hostnames().begin();
          it != this->hostnames().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RunEnvironment_HostnamesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hostnames_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RunEnvironment_HostnamesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->hostnames().begin();
          it != this->hostnames().end(); ++it) {
        entry.reset(hostnames_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string device_type = 4;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.RunEnvironment.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_type(), output);
  }

  // int32 device_core_count = 5;
  if (this->device_core_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->device_core_count(), output);
  }

  // int32 per_core_batch_size = 6;
  if (this->per_core_batch_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->per_core_batch_size(), output);
  }

  // .tensorflow.profiler.HostIndependentJobInfoResult host_independent_job_info = 7;
  if (this->has_host_independent_job_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_host_independent_job_info(), output);
  }

  // repeated .tensorflow.profiler.HostDependentJobInfoResult host_dependent_job_info = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->host_dependent_job_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->host_dependent_job_info(static_cast<int>(i)),
      output);
  }

  // int32 replica_count = 9;
  if (this->replica_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->replica_count(), output);
  }

  // int32 num_cores_per_replica = 10;
  if (this->num_cores_per_replica() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->num_cores_per_replica(), output);
  }

  // .tensorflow.profiler.SystemTopology topology = 11;
  if (this->has_topology()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_topology(), output);
  }

  // uint32 host_trace_level = 12;
  if (this->host_trace_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->host_trace_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.RunEnvironment)
}

::google::protobuf::uint8* RunEnvironment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.RunEnvironment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 host_count = 1;
  if (this->host_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->host_count(), target);
  }

  // int32 task_count = 2;
  if (this->task_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_count(), target);
  }

  // map<string, bool> hostnames = 3;
  if (!this->hostnames().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.profiler.RunEnvironment.HostnamesEntry.key");
      }
    };

    if (deterministic &&
        this->hostnames().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->hostnames().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->hostnames().begin();
          it != this->hostnames().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RunEnvironment_HostnamesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hostnames_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RunEnvironment_HostnamesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->hostnames().begin();
          it != this->hostnames().end(); ++it) {
        entry.reset(hostnames_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string device_type = 4;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.RunEnvironment.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_type(), target);
  }

  // int32 device_core_count = 5;
  if (this->device_core_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->device_core_count(), target);
  }

  // int32 per_core_batch_size = 6;
  if (this->per_core_batch_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->per_core_batch_size(), target);
  }

  // .tensorflow.profiler.HostIndependentJobInfoResult host_independent_job_info = 7;
  if (this->has_host_independent_job_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_host_independent_job_info(), deterministic, target);
  }

  // repeated .tensorflow.profiler.HostDependentJobInfoResult host_dependent_job_info = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->host_dependent_job_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->host_dependent_job_info(static_cast<int>(i)), deterministic, target);
  }

  // int32 replica_count = 9;
  if (this->replica_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->replica_count(), target);
  }

  // int32 num_cores_per_replica = 10;
  if (this->num_cores_per_replica() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->num_cores_per_replica(), target);
  }

  // .tensorflow.profiler.SystemTopology topology = 11;
  if (this->has_topology()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_topology(), deterministic, target);
  }

  // uint32 host_trace_level = 12;
  if (this->host_trace_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->host_trace_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.RunEnvironment)
  return target;
}

size_t RunEnvironment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.RunEnvironment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bool> hostnames = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hostnames_size());
  {
    ::std::unique_ptr<RunEnvironment_HostnamesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, bool >::const_iterator
        it = this->hostnames().begin();
        it != this->hostnames().end(); ++it) {
      entry.reset(hostnames_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .tensorflow.profiler.HostDependentJobInfoResult host_dependent_job_info = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->host_dependent_job_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->host_dependent_job_info(static_cast<int>(i)));
    }
  }

  // string device_type = 4;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // .tensorflow.profiler.HostIndependentJobInfoResult host_independent_job_info = 7;
  if (this->has_host_independent_job_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_independent_job_info_);
  }

  // .tensorflow.profiler.SystemTopology topology = 11;
  if (this->has_topology()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *topology_);
  }

  // int32 host_count = 1;
  if (this->host_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->host_count());
  }

  // int32 task_count = 2;
  if (this->task_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_count());
  }

  // int32 device_core_count = 5;
  if (this->device_core_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device_core_count());
  }

  // int32 per_core_batch_size = 6;
  if (this->per_core_batch_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->per_core_batch_size());
  }

  // int32 replica_count = 9;
  if (this->replica_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replica_count());
  }

  // int32 num_cores_per_replica = 10;
  if (this->num_cores_per_replica() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_cores_per_replica());
  }

  // uint32 host_trace_level = 12;
  if (this->host_trace_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->host_trace_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunEnvironment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.RunEnvironment)
  GOOGLE_DCHECK_NE(&from, this);
  const RunEnvironment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunEnvironment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.RunEnvironment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.RunEnvironment)
    MergeFrom(*source);
  }
}

void RunEnvironment::MergeFrom(const RunEnvironment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.RunEnvironment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hostnames_.MergeFrom(from.hostnames_);
  host_dependent_job_info_.MergeFrom(from.host_dependent_job_info_);
  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.has_host_independent_job_info()) {
    mutable_host_independent_job_info()->::tensorflow::profiler::HostIndependentJobInfoResult::MergeFrom(from.host_independent_job_info());
  }
  if (from.has_topology()) {
    mutable_topology()->::tensorflow::profiler::SystemTopology::MergeFrom(from.topology());
  }
  if (from.host_count() != 0) {
    set_host_count(from.host_count());
  }
  if (from.task_count() != 0) {
    set_task_count(from.task_count());
  }
  if (from.device_core_count() != 0) {
    set_device_core_count(from.device_core_count());
  }
  if (from.per_core_batch_size() != 0) {
    set_per_core_batch_size(from.per_core_batch_size());
  }
  if (from.replica_count() != 0) {
    set_replica_count(from.replica_count());
  }
  if (from.num_cores_per_replica() != 0) {
    set_num_cores_per_replica(from.num_cores_per_replica());
  }
  if (from.host_trace_level() != 0) {
    set_host_trace_level(from.host_trace_level());
  }
}

void RunEnvironment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.RunEnvironment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunEnvironment::CopyFrom(const RunEnvironment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.RunEnvironment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunEnvironment::IsInitialized() const {
  return true;
}

void RunEnvironment::Swap(RunEnvironment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunEnvironment::InternalSwap(RunEnvironment* other) {
  using std::swap;
  hostnames_.Swap(&other->hostnames_);
  CastToBase(&host_dependent_job_info_)->InternalSwap(CastToBase(&other->host_dependent_job_info_));
  device_type_.Swap(&other->device_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(host_independent_job_info_, other->host_independent_job_info_);
  swap(topology_, other->topology_);
  swap(host_count_, other->host_count_);
  swap(task_count_, other->task_count_);
  swap(device_core_count_, other->device_core_count_);
  swap(per_core_batch_size_, other->per_core_batch_size_);
  swap(replica_count_, other->replica_count_);
  swap(num_cores_per_replica_, other->num_cores_per_replica_);
  swap(host_trace_level_, other->host_trace_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunEnvironment::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoreDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoreDetails::kHostnameFieldNumber;
const int CoreDetails::kDeviceOrdinalFieldNumber;
const int CoreDetails::kCoreNumFieldNumber;
const int CoreDetails::kLocalChipIdFieldNumber;
const int CoreDetails::kGlobalChipIdFieldNumber;
const int CoreDetails::kGlobalCoreIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoreDetails::CoreDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_CoreDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.CoreDetails)
}
CoreDetails::CoreDetails(const CoreDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hostname().size() > 0) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  ::memcpy(&device_ordinal_, &from.device_ordinal_,
    static_cast<size_t>(reinterpret_cast<char*>(&global_core_id_) -
    reinterpret_cast<char*>(&device_ordinal_)) + sizeof(global_core_id_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.CoreDetails)
}

void CoreDetails::SharedCtor() {
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_ordinal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_core_id_) -
      reinterpret_cast<char*>(&device_ordinal_)) + sizeof(global_core_id_));
}

CoreDetails::~CoreDetails() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.CoreDetails)
  SharedDtor();
}

void CoreDetails::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CoreDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoreDetails::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoreDetails& CoreDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_CoreDetails.base);
  return *internal_default_instance();
}


void CoreDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.CoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_ordinal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_core_id_) -
      reinterpret_cast<char*>(&device_ordinal_)) + sizeof(global_core_id_));
  _internal_metadata_.Clear();
}

bool CoreDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.CoreDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hostname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.profiler.CoreDetails.hostname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_ordinal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 core_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &core_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_chip_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_chip_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 global_chip_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &global_chip_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 global_core_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &global_core_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.CoreDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.CoreDetails)
  return false;
#undef DO_
}

void CoreDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.CoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hostname = 1;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.CoreDetails.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hostname(), output);
  }

  // uint32 device_ordinal = 2;
  if (this->device_ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->device_ordinal(), output);
  }

  // uint32 core_num = 3;
  if (this->core_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->core_num(), output);
  }

  // uint32 local_chip_id = 4;
  if (this->local_chip_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->local_chip_id(), output);
  }

  // uint32 global_chip_id = 5;
  if (this->global_chip_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->global_chip_id(), output);
  }

  // uint32 global_core_id = 6;
  if (this->global_core_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->global_core_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.CoreDetails)
}

::google::protobuf::uint8* CoreDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.CoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hostname = 1;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.CoreDetails.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hostname(), target);
  }

  // uint32 device_ordinal = 2;
  if (this->device_ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->device_ordinal(), target);
  }

  // uint32 core_num = 3;
  if (this->core_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->core_num(), target);
  }

  // uint32 local_chip_id = 4;
  if (this->local_chip_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->local_chip_id(), target);
  }

  // uint32 global_chip_id = 5;
  if (this->global_chip_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->global_chip_id(), target);
  }

  // uint32 global_core_id = 6;
  if (this->global_core_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->global_core_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.CoreDetails)
  return target;
}

size_t CoreDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.CoreDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hostname = 1;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  // uint32 device_ordinal = 2;
  if (this->device_ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_ordinal());
  }

  // uint32 core_num = 3;
  if (this->core_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->core_num());
  }

  // uint32 local_chip_id = 4;
  if (this->local_chip_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_chip_id());
  }

  // uint32 global_chip_id = 5;
  if (this->global_chip_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_chip_id());
  }

  // uint32 global_core_id = 6;
  if (this->global_core_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_core_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoreDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.CoreDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CoreDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoreDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.CoreDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.CoreDetails)
    MergeFrom(*source);
  }
}

void CoreDetails::MergeFrom(const CoreDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.CoreDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hostname().size() > 0) {

    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  if (from.device_ordinal() != 0) {
    set_device_ordinal(from.device_ordinal());
  }
  if (from.core_num() != 0) {
    set_core_num(from.core_num());
  }
  if (from.local_chip_id() != 0) {
    set_local_chip_id(from.local_chip_id());
  }
  if (from.global_chip_id() != 0) {
    set_global_chip_id(from.global_chip_id());
  }
  if (from.global_core_id() != 0) {
    set_global_core_id(from.global_core_id());
  }
}

void CoreDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.CoreDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoreDetails::CopyFrom(const CoreDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.CoreDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoreDetails::IsInitialized() const {
  return true;
}

void CoreDetails::Swap(CoreDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoreDetails::InternalSwap(CoreDetails* other) {
  using std::swap;
  hostname_.Swap(&other->hostname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(device_ordinal_, other->device_ordinal_);
  swap(core_num_, other->core_num_);
  swap(local_chip_id_, other->local_chip_id_);
  swap(global_chip_id_, other->global_chip_id_);
  swap(global_core_id_, other->global_core_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoreDetails::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

OpStats_CoreIdToDetailsEntry_DoNotUse::OpStats_CoreIdToDetailsEntry_DoNotUse() {}
OpStats_CoreIdToDetailsEntry_DoNotUse::OpStats_CoreIdToDetailsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void OpStats_CoreIdToDetailsEntry_DoNotUse::MergeFrom(const OpStats_CoreIdToDetailsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata OpStats_CoreIdToDetailsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[7];
}
void OpStats_CoreIdToDetailsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void OpStats::InitAsDefaultInstance() {
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->host_op_metrics_db_ = const_cast< ::tensorflow::profiler::OpMetricsDb*>(
      ::tensorflow::profiler::OpMetricsDb::internal_default_instance());
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->device_op_metrics_db_ = const_cast< ::tensorflow::profiler::OpMetricsDb*>(
      ::tensorflow::profiler::OpMetricsDb::internal_default_instance());
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->hlo_metrics_db_complete_steps_only_ = const_cast< ::tensorflow::profiler::OpMetricsDb*>(
      ::tensorflow::profiler::OpMetricsDb::internal_default_instance());
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->perf_env_ = const_cast< ::tensorflow::profiler::PerfEnv*>(
      ::tensorflow::profiler::PerfEnv::internal_default_instance());
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->step_db_ = const_cast< ::tensorflow::profiler::StepDatabaseResult*>(
      ::tensorflow::profiler::StepDatabaseResult::internal_default_instance());
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->run_environment_ = const_cast< ::tensorflow::profiler::RunEnvironment*>(
      ::tensorflow::profiler::RunEnvironment::internal_default_instance());
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->kernel_stats_db_ = const_cast< ::tensorflow::profiler::KernelStatsDb*>(
      ::tensorflow::profiler::KernelStatsDb::internal_default_instance());
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->tf_function_db_ = const_cast< ::tensorflow::profiler::TfFunctionDb*>(
      ::tensorflow::profiler::TfFunctionDb::internal_default_instance());
  ::tensorflow::profiler::_OpStats_default_instance_._instance.get_mutable()->diagnostics_ = const_cast< ::tensorflow::profiler::Diagnostics*>(
      ::tensorflow::profiler::Diagnostics::internal_default_instance());
}
void OpStats::clear_host_op_metrics_db() {
  if (GetArenaNoVirtual() == NULL && host_op_metrics_db_ != NULL) {
    delete host_op_metrics_db_;
  }
  host_op_metrics_db_ = NULL;
}
void OpStats::clear_device_op_metrics_db() {
  if (GetArenaNoVirtual() == NULL && device_op_metrics_db_ != NULL) {
    delete device_op_metrics_db_;
  }
  device_op_metrics_db_ = NULL;
}
void OpStats::clear_hlo_metrics_db_complete_steps_only() {
  if (GetArenaNoVirtual() == NULL && hlo_metrics_db_complete_steps_only_ != NULL) {
    delete hlo_metrics_db_complete_steps_only_;
  }
  hlo_metrics_db_complete_steps_only_ = NULL;
}
void OpStats::clear_step_db() {
  if (GetArenaNoVirtual() == NULL && step_db_ != NULL) {
    delete step_db_;
  }
  step_db_ = NULL;
}
void OpStats::clear_kernel_stats_db() {
  if (GetArenaNoVirtual() == NULL && kernel_stats_db_ != NULL) {
    delete kernel_stats_db_;
  }
  kernel_stats_db_ = NULL;
}
void OpStats::clear_tf_function_db() {
  if (GetArenaNoVirtual() == NULL && tf_function_db_ != NULL) {
    delete tf_function_db_;
  }
  tf_function_db_ = NULL;
}
void OpStats::clear_diagnostics() {
  if (GetArenaNoVirtual() == NULL && diagnostics_ != NULL) {
    delete diagnostics_;
  }
  diagnostics_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpStats::kHostOpMetricsDbFieldNumber;
const int OpStats::kDeviceOpMetricsDbFieldNumber;
const int OpStats::kHloMetricsDbCompleteStepsOnlyFieldNumber;
const int OpStats::kPerfEnvFieldNumber;
const int OpStats::kStepDbFieldNumber;
const int OpStats::kRunEnvironmentFieldNumber;
const int OpStats::kKernelStatsDbFieldNumber;
const int OpStats::kTfFunctionDbFieldNumber;
const int OpStats::kCoreIdToDetailsFieldNumber;
const int OpStats::kDiagnosticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpStats::OpStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_OpStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.OpStats)
}
OpStats::OpStats(const OpStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  core_id_to_details_.MergeFrom(from.core_id_to_details_);
  if (from.has_host_op_metrics_db()) {
    host_op_metrics_db_ = new ::tensorflow::profiler::OpMetricsDb(*from.host_op_metrics_db_);
  } else {
    host_op_metrics_db_ = NULL;
  }
  if (from.has_device_op_metrics_db()) {
    device_op_metrics_db_ = new ::tensorflow::profiler::OpMetricsDb(*from.device_op_metrics_db_);
  } else {
    device_op_metrics_db_ = NULL;
  }
  if (from.has_perf_env()) {
    perf_env_ = new ::tensorflow::profiler::PerfEnv(*from.perf_env_);
  } else {
    perf_env_ = NULL;
  }
  if (from.has_step_db()) {
    step_db_ = new ::tensorflow::profiler::StepDatabaseResult(*from.step_db_);
  } else {
    step_db_ = NULL;
  }
  if (from.has_run_environment()) {
    run_environment_ = new ::tensorflow::profiler::RunEnvironment(*from.run_environment_);
  } else {
    run_environment_ = NULL;
  }
  if (from.has_kernel_stats_db()) {
    kernel_stats_db_ = new ::tensorflow::profiler::KernelStatsDb(*from.kernel_stats_db_);
  } else {
    kernel_stats_db_ = NULL;
  }
  if (from.has_tf_function_db()) {
    tf_function_db_ = new ::tensorflow::profiler::TfFunctionDb(*from.tf_function_db_);
  } else {
    tf_function_db_ = NULL;
  }
  if (from.has_diagnostics()) {
    diagnostics_ = new ::tensorflow::profiler::Diagnostics(*from.diagnostics_);
  } else {
    diagnostics_ = NULL;
  }
  if (from.has_hlo_metrics_db_complete_steps_only()) {
    hlo_metrics_db_complete_steps_only_ = new ::tensorflow::profiler::OpMetricsDb(*from.hlo_metrics_db_complete_steps_only_);
  } else {
    hlo_metrics_db_complete_steps_only_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.OpStats)
}

void OpStats::SharedCtor() {
  ::memset(&host_op_metrics_db_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hlo_metrics_db_complete_steps_only_) -
      reinterpret_cast<char*>(&host_op_metrics_db_)) + sizeof(hlo_metrics_db_complete_steps_only_));
}

OpStats::~OpStats() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.OpStats)
  SharedDtor();
}

void OpStats::SharedDtor() {
  if (this != internal_default_instance()) delete host_op_metrics_db_;
  if (this != internal_default_instance()) delete device_op_metrics_db_;
  if (this != internal_default_instance()) delete perf_env_;
  if (this != internal_default_instance()) delete step_db_;
  if (this != internal_default_instance()) delete run_environment_;
  if (this != internal_default_instance()) delete kernel_stats_db_;
  if (this != internal_default_instance()) delete tf_function_db_;
  if (this != internal_default_instance()) delete diagnostics_;
  if (this != internal_default_instance()) delete hlo_metrics_db_complete_steps_only_;
}

void OpStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpStats::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpStats& OpStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::scc_info_OpStats.base);
  return *internal_default_instance();
}


void OpStats::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.OpStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  core_id_to_details_.Clear();
  if (GetArenaNoVirtual() == NULL && host_op_metrics_db_ != NULL) {
    delete host_op_metrics_db_;
  }
  host_op_metrics_db_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_op_metrics_db_ != NULL) {
    delete device_op_metrics_db_;
  }
  device_op_metrics_db_ = NULL;
  if (GetArenaNoVirtual() == NULL && perf_env_ != NULL) {
    delete perf_env_;
  }
  perf_env_ = NULL;
  if (GetArenaNoVirtual() == NULL && step_db_ != NULL) {
    delete step_db_;
  }
  step_db_ = NULL;
  if (GetArenaNoVirtual() == NULL && run_environment_ != NULL) {
    delete run_environment_;
  }
  run_environment_ = NULL;
  if (GetArenaNoVirtual() == NULL && kernel_stats_db_ != NULL) {
    delete kernel_stats_db_;
  }
  kernel_stats_db_ = NULL;
  if (GetArenaNoVirtual() == NULL && tf_function_db_ != NULL) {
    delete tf_function_db_;
  }
  tf_function_db_ = NULL;
  if (GetArenaNoVirtual() == NULL && diagnostics_ != NULL) {
    delete diagnostics_;
  }
  diagnostics_ = NULL;
  if (GetArenaNoVirtual() == NULL && hlo_metrics_db_complete_steps_only_ != NULL) {
    delete hlo_metrics_db_complete_steps_only_;
  }
  hlo_metrics_db_complete_steps_only_ = NULL;
  _internal_metadata_.Clear();
}

bool OpStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.profiler.OpStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.profiler.OpMetricsDb host_op_metrics_db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_op_metrics_db()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.OpMetricsDb device_op_metrics_db = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_op_metrics_db()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.PerfEnv perf_env = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_perf_env()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.StepDatabaseResult step_db = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_step_db()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.RunEnvironment run_environment = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_environment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.KernelStatsDb kernel_stats_db = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kernel_stats_db()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.TfFunctionDb tf_function_db = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tf_function_db()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.Diagnostics diagnostics = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.profiler.OpMetricsDb hlo_metrics_db_complete_steps_only = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hlo_metrics_db_complete_steps_only()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .tensorflow.profiler.CoreDetails> core_id_to_details = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          OpStats_CoreIdToDetailsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              OpStats_CoreIdToDetailsEntry_DoNotUse,
              ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails > > parser(&core_id_to_details_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.profiler.OpStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.profiler.OpStats)
  return false;
#undef DO_
}

void OpStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.profiler.OpStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.OpMetricsDb host_op_metrics_db = 1;
  if (this->has_host_op_metrics_db()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_host_op_metrics_db(), output);
  }

  // .tensorflow.profiler.OpMetricsDb device_op_metrics_db = 2;
  if (this->has_device_op_metrics_db()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_device_op_metrics_db(), output);
  }

  // .tensorflow.profiler.PerfEnv perf_env = 3;
  if (this->has_perf_env()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_perf_env(), output);
  }

  // .tensorflow.profiler.StepDatabaseResult step_db = 4;
  if (this->has_step_db()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_step_db(), output);
  }

  // .tensorflow.profiler.RunEnvironment run_environment = 5;
  if (this->has_run_environment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_run_environment(), output);
  }

  // .tensorflow.profiler.KernelStatsDb kernel_stats_db = 6;
  if (this->has_kernel_stats_db()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_kernel_stats_db(), output);
  }

  // .tensorflow.profiler.TfFunctionDb tf_function_db = 8;
  if (this->has_tf_function_db()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_tf_function_db(), output);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 9;
  if (this->has_diagnostics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_diagnostics(), output);
  }

  // .tensorflow.profiler.OpMetricsDb hlo_metrics_db_complete_steps_only = 10;
  if (this->has_hlo_metrics_db_complete_steps_only()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_hlo_metrics_db_complete_steps_only(), output);
  }

  // map<uint32, .tensorflow.profiler.CoreDetails> core_id_to_details = 11;
  if (!this->core_id_to_details().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->core_id_to_details().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->core_id_to_details().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::const_iterator
          it = this->core_id_to_details().begin();
          it != this->core_id_to_details().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OpStats_CoreIdToDetailsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(core_id_to_details_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
      }
    } else {
      ::std::unique_ptr<OpStats_CoreIdToDetailsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::const_iterator
          it = this->core_id_to_details().begin();
          it != this->core_id_to_details().end(); ++it) {
        entry.reset(core_id_to_details_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.profiler.OpStats)
}

::google::protobuf::uint8* OpStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.OpStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.profiler.OpMetricsDb host_op_metrics_db = 1;
  if (this->has_host_op_metrics_db()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_host_op_metrics_db(), deterministic, target);
  }

  // .tensorflow.profiler.OpMetricsDb device_op_metrics_db = 2;
  if (this->has_device_op_metrics_db()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_device_op_metrics_db(), deterministic, target);
  }

  // .tensorflow.profiler.PerfEnv perf_env = 3;
  if (this->has_perf_env()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_perf_env(), deterministic, target);
  }

  // .tensorflow.profiler.StepDatabaseResult step_db = 4;
  if (this->has_step_db()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_step_db(), deterministic, target);
  }

  // .tensorflow.profiler.RunEnvironment run_environment = 5;
  if (this->has_run_environment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_run_environment(), deterministic, target);
  }

  // .tensorflow.profiler.KernelStatsDb kernel_stats_db = 6;
  if (this->has_kernel_stats_db()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_kernel_stats_db(), deterministic, target);
  }

  // .tensorflow.profiler.TfFunctionDb tf_function_db = 8;
  if (this->has_tf_function_db()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_tf_function_db(), deterministic, target);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 9;
  if (this->has_diagnostics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_diagnostics(), deterministic, target);
  }

  // .tensorflow.profiler.OpMetricsDb hlo_metrics_db_complete_steps_only = 10;
  if (this->has_hlo_metrics_db_complete_steps_only()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_hlo_metrics_db_complete_steps_only(), deterministic, target);
  }

  // map<uint32, .tensorflow.profiler.CoreDetails> core_id_to_details = 11;
  if (!this->core_id_to_details().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->core_id_to_details().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->core_id_to_details().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::const_iterator
          it = this->core_id_to_details().begin();
          it != this->core_id_to_details().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OpStats_CoreIdToDetailsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(core_id_to_details_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<OpStats_CoreIdToDetailsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::const_iterator
          it = this->core_id_to_details().begin();
          it != this->core_id_to_details().end(); ++it) {
        entry.reset(core_id_to_details_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.OpStats)
  return target;
}

size_t OpStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.OpStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .tensorflow.profiler.CoreDetails> core_id_to_details = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->core_id_to_details_size());
  {
    ::std::unique_ptr<OpStats_CoreIdToDetailsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::tensorflow::profiler::CoreDetails >::const_iterator
        it = this->core_id_to_details().begin();
        it != this->core_id_to_details().end(); ++it) {
      entry.reset(core_id_to_details_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .tensorflow.profiler.OpMetricsDb host_op_metrics_db = 1;
  if (this->has_host_op_metrics_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_op_metrics_db_);
  }

  // .tensorflow.profiler.OpMetricsDb device_op_metrics_db = 2;
  if (this->has_device_op_metrics_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_op_metrics_db_);
  }

  // .tensorflow.profiler.PerfEnv perf_env = 3;
  if (this->has_perf_env()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *perf_env_);
  }

  // .tensorflow.profiler.StepDatabaseResult step_db = 4;
  if (this->has_step_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *step_db_);
  }

  // .tensorflow.profiler.RunEnvironment run_environment = 5;
  if (this->has_run_environment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_environment_);
  }

  // .tensorflow.profiler.KernelStatsDb kernel_stats_db = 6;
  if (this->has_kernel_stats_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kernel_stats_db_);
  }

  // .tensorflow.profiler.TfFunctionDb tf_function_db = 8;
  if (this->has_tf_function_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tf_function_db_);
  }

  // .tensorflow.profiler.Diagnostics diagnostics = 9;
  if (this->has_diagnostics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *diagnostics_);
  }

  // .tensorflow.profiler.OpMetricsDb hlo_metrics_db_complete_steps_only = 10;
  if (this->has_hlo_metrics_db_complete_steps_only()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hlo_metrics_db_complete_steps_only_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.OpStats)
  GOOGLE_DCHECK_NE(&from, this);
  const OpStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.OpStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.OpStats)
    MergeFrom(*source);
  }
}

void OpStats::MergeFrom(const OpStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.OpStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  core_id_to_details_.MergeFrom(from.core_id_to_details_);
  if (from.has_host_op_metrics_db()) {
    mutable_host_op_metrics_db()->::tensorflow::profiler::OpMetricsDb::MergeFrom(from.host_op_metrics_db());
  }
  if (from.has_device_op_metrics_db()) {
    mutable_device_op_metrics_db()->::tensorflow::profiler::OpMetricsDb::MergeFrom(from.device_op_metrics_db());
  }
  if (from.has_perf_env()) {
    mutable_perf_env()->::tensorflow::profiler::PerfEnv::MergeFrom(from.perf_env());
  }
  if (from.has_step_db()) {
    mutable_step_db()->::tensorflow::profiler::StepDatabaseResult::MergeFrom(from.step_db());
  }
  if (from.has_run_environment()) {
    mutable_run_environment()->::tensorflow::profiler::RunEnvironment::MergeFrom(from.run_environment());
  }
  if (from.has_kernel_stats_db()) {
    mutable_kernel_stats_db()->::tensorflow::profiler::KernelStatsDb::MergeFrom(from.kernel_stats_db());
  }
  if (from.has_tf_function_db()) {
    mutable_tf_function_db()->::tensorflow::profiler::TfFunctionDb::MergeFrom(from.tf_function_db());
  }
  if (from.has_diagnostics()) {
    mutable_diagnostics()->::tensorflow::profiler::Diagnostics::MergeFrom(from.diagnostics());
  }
  if (from.has_hlo_metrics_db_complete_steps_only()) {
    mutable_hlo_metrics_db_complete_steps_only()->::tensorflow::profiler::OpMetricsDb::MergeFrom(from.hlo_metrics_db_complete_steps_only());
  }
}

void OpStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.OpStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpStats::CopyFrom(const OpStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.OpStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpStats::IsInitialized() const {
  return true;
}

void OpStats::Swap(OpStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpStats::InternalSwap(OpStats* other) {
  using std::swap;
  core_id_to_details_.Swap(&other->core_id_to_details_);
  swap(host_op_metrics_db_, other->host_op_metrics_db_);
  swap(device_op_metrics_db_, other->device_op_metrics_db_);
  swap(perf_env_, other->perf_env_);
  swap(step_db_, other->step_db_);
  swap(run_environment_, other->run_environment_);
  swap(kernel_stats_db_, other->kernel_stats_db_);
  swap(tf_function_db_, other->tf_function_db_);
  swap(diagnostics_, other->diagnostics_);
  swap(hlo_metrics_db_complete_steps_only_, other->hlo_metrics_db_complete_steps_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpStats::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fstats_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::PerfEnv* Arena::CreateMaybeMessage< ::tensorflow::profiler::PerfEnv >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PerfEnv >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::HostIndependentJobInfoResult* Arena::CreateMaybeMessage< ::tensorflow::profiler::HostIndependentJobInfoResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::HostIndependentJobInfoResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::HostDependentJobInfoResult* Arena::CreateMaybeMessage< ::tensorflow::profiler::HostDependentJobInfoResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::HostDependentJobInfoResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::SystemTopology* Arena::CreateMaybeMessage< ::tensorflow::profiler::SystemTopology >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::SystemTopology >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::RunEnvironment_HostnamesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::RunEnvironment* Arena::CreateMaybeMessage< ::tensorflow::profiler::RunEnvironment >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::RunEnvironment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::CoreDetails* Arena::CreateMaybeMessage< ::tensorflow::profiler::CoreDetails >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::CoreDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OpStats_CoreIdToDetailsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::profiler::OpStats* Arena::CreateMaybeMessage< ::tensorflow::profiler::OpStats >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::OpStats >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
