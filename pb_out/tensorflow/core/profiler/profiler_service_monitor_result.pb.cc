// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/profiler_service_monitor_result.proto

#include "tensorflow/core/profiler/profiler_service_monitor_result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace tensorflow {
class ProfilerServiceMonitorResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfilerServiceMonitorResult>
      _instance;
} _ProfilerServiceMonitorResult_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto {
static void InitDefaultsProfilerServiceMonitorResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ProfilerServiceMonitorResult_default_instance_;
    new (ptr) ::tensorflow::ProfilerServiceMonitorResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ProfilerServiceMonitorResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProfilerServiceMonitorResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfilerServiceMonitorResult}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProfilerServiceMonitorResult.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, response_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, device_idle_time_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, matrix_unit_utilization_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, step_time_ms_avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, step_time_ms_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, step_time_ms_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, infeed_percent_avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, infeed_percent_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ProfilerServiceMonitorResult, infeed_percent_max_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::ProfilerServiceMonitorResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ProfilerServiceMonitorResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/profiler/profiler_service_monitor_result.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n>tensorflow/core/profiler/profiler_serv"
      "ice_monitor_result.proto\022\ntensorflow\"\255\003\n"
      "\034ProfilerServiceMonitorResult\022L\n\rrespons"
      "e_type\030\001 \001(\01625.tensorflow.ProfilerServic"
      "eMonitorResult.ResponseType\022 \n\030device_id"
      "le_time_percent\030\002 \001(\001\022\'\n\037matrix_unit_uti"
      "lization_percent\030\003 \001(\001\022\030\n\020step_time_ms_a"
      "vg\030\004 \001(\001\022\030\n\020step_time_ms_min\030\005 \001(\001\022\030\n\020st"
      "ep_time_ms_max\030\006 \001(\001\022\032\n\022infeed_percent_a"
      "vg\030\007 \001(\001\022\032\n\022infeed_percent_min\030\010 \001(\001\022\032\n\022"
      "infeed_percent_max\030\t \001(\001\"R\n\014ResponseType"
      "\022\020\n\014EMPTY_RESULT\020\000\022\r\n\tUTIL_ONLY\020\001\022\r\n\tUTI"
      "L_IDLE\020\002\022\022\n\016UTIL_IDLE_STEP\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 516);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/profiler/profiler_service_monitor_result.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* ProfilerServiceMonitorResult_ResponseType_descriptor() {
  protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto::file_level_enum_descriptors[0];
}
bool ProfilerServiceMonitorResult_ResponseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult::EMPTY_RESULT;
const ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult::UTIL_ONLY;
const ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult::UTIL_IDLE;
const ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult::UTIL_IDLE_STEP;
const ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult::ResponseType_MIN;
const ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult::ResponseType_MAX;
const int ProfilerServiceMonitorResult::ResponseType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ProfilerServiceMonitorResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfilerServiceMonitorResult::kResponseTypeFieldNumber;
const int ProfilerServiceMonitorResult::kDeviceIdleTimePercentFieldNumber;
const int ProfilerServiceMonitorResult::kMatrixUnitUtilizationPercentFieldNumber;
const int ProfilerServiceMonitorResult::kStepTimeMsAvgFieldNumber;
const int ProfilerServiceMonitorResult::kStepTimeMsMinFieldNumber;
const int ProfilerServiceMonitorResult::kStepTimeMsMaxFieldNumber;
const int ProfilerServiceMonitorResult::kInfeedPercentAvgFieldNumber;
const int ProfilerServiceMonitorResult::kInfeedPercentMinFieldNumber;
const int ProfilerServiceMonitorResult::kInfeedPercentMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfilerServiceMonitorResult::ProfilerServiceMonitorResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto::scc_info_ProfilerServiceMonitorResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ProfilerServiceMonitorResult)
}
ProfilerServiceMonitorResult::ProfilerServiceMonitorResult(const ProfilerServiceMonitorResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&device_idle_time_percent_, &from.device_idle_time_percent_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_type_) -
    reinterpret_cast<char*>(&device_idle_time_percent_)) + sizeof(response_type_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ProfilerServiceMonitorResult)
}

void ProfilerServiceMonitorResult::SharedCtor() {
  ::memset(&device_idle_time_percent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_type_) -
      reinterpret_cast<char*>(&device_idle_time_percent_)) + sizeof(response_type_));
}

ProfilerServiceMonitorResult::~ProfilerServiceMonitorResult() {
  // @@protoc_insertion_point(destructor:tensorflow.ProfilerServiceMonitorResult)
  SharedDtor();
}

void ProfilerServiceMonitorResult::SharedDtor() {
}

void ProfilerServiceMonitorResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfilerServiceMonitorResult::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfilerServiceMonitorResult& ProfilerServiceMonitorResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto::scc_info_ProfilerServiceMonitorResult.base);
  return *internal_default_instance();
}


void ProfilerServiceMonitorResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ProfilerServiceMonitorResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&device_idle_time_percent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_type_) -
      reinterpret_cast<char*>(&device_idle_time_percent_)) + sizeof(response_type_));
  _internal_metadata_.Clear();
}

bool ProfilerServiceMonitorResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ProfilerServiceMonitorResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.ProfilerServiceMonitorResult.ResponseType response_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_type(static_cast< ::tensorflow::ProfilerServiceMonitorResult_ResponseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double device_idle_time_percent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &device_idle_time_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double matrix_unit_utilization_percent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &matrix_unit_utilization_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double step_time_ms_avg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &step_time_ms_avg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double step_time_ms_min = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &step_time_ms_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double step_time_ms_max = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &step_time_ms_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double infeed_percent_avg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &infeed_percent_avg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double infeed_percent_min = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &infeed_percent_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double infeed_percent_max = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &infeed_percent_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ProfilerServiceMonitorResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ProfilerServiceMonitorResult)
  return false;
#undef DO_
}

void ProfilerServiceMonitorResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ProfilerServiceMonitorResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.ProfilerServiceMonitorResult.ResponseType response_type = 1;
  if (this->response_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  // double device_idle_time_percent = 2;
  if (this->device_idle_time_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->device_idle_time_percent(), output);
  }

  // double matrix_unit_utilization_percent = 3;
  if (this->matrix_unit_utilization_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->matrix_unit_utilization_percent(), output);
  }

  // double step_time_ms_avg = 4;
  if (this->step_time_ms_avg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->step_time_ms_avg(), output);
  }

  // double step_time_ms_min = 5;
  if (this->step_time_ms_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->step_time_ms_min(), output);
  }

  // double step_time_ms_max = 6;
  if (this->step_time_ms_max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->step_time_ms_max(), output);
  }

  // double infeed_percent_avg = 7;
  if (this->infeed_percent_avg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->infeed_percent_avg(), output);
  }

  // double infeed_percent_min = 8;
  if (this->infeed_percent_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->infeed_percent_min(), output);
  }

  // double infeed_percent_max = 9;
  if (this->infeed_percent_max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->infeed_percent_max(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ProfilerServiceMonitorResult)
}

::google::protobuf::uint8* ProfilerServiceMonitorResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ProfilerServiceMonitorResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.ProfilerServiceMonitorResult.ResponseType response_type = 1;
  if (this->response_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  // double device_idle_time_percent = 2;
  if (this->device_idle_time_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->device_idle_time_percent(), target);
  }

  // double matrix_unit_utilization_percent = 3;
  if (this->matrix_unit_utilization_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->matrix_unit_utilization_percent(), target);
  }

  // double step_time_ms_avg = 4;
  if (this->step_time_ms_avg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->step_time_ms_avg(), target);
  }

  // double step_time_ms_min = 5;
  if (this->step_time_ms_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->step_time_ms_min(), target);
  }

  // double step_time_ms_max = 6;
  if (this->step_time_ms_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->step_time_ms_max(), target);
  }

  // double infeed_percent_avg = 7;
  if (this->infeed_percent_avg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->infeed_percent_avg(), target);
  }

  // double infeed_percent_min = 8;
  if (this->infeed_percent_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->infeed_percent_min(), target);
  }

  // double infeed_percent_max = 9;
  if (this->infeed_percent_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->infeed_percent_max(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ProfilerServiceMonitorResult)
  return target;
}

size_t ProfilerServiceMonitorResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ProfilerServiceMonitorResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double device_idle_time_percent = 2;
  if (this->device_idle_time_percent() != 0) {
    total_size += 1 + 8;
  }

  // double matrix_unit_utilization_percent = 3;
  if (this->matrix_unit_utilization_percent() != 0) {
    total_size += 1 + 8;
  }

  // double step_time_ms_avg = 4;
  if (this->step_time_ms_avg() != 0) {
    total_size += 1 + 8;
  }

  // double step_time_ms_min = 5;
  if (this->step_time_ms_min() != 0) {
    total_size += 1 + 8;
  }

  // double step_time_ms_max = 6;
  if (this->step_time_ms_max() != 0) {
    total_size += 1 + 8;
  }

  // double infeed_percent_avg = 7;
  if (this->infeed_percent_avg() != 0) {
    total_size += 1 + 8;
  }

  // double infeed_percent_min = 8;
  if (this->infeed_percent_min() != 0) {
    total_size += 1 + 8;
  }

  // double infeed_percent_max = 9;
  if (this->infeed_percent_max() != 0) {
    total_size += 1 + 8;
  }

  // .tensorflow.ProfilerServiceMonitorResult.ResponseType response_type = 1;
  if (this->response_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfilerServiceMonitorResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ProfilerServiceMonitorResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfilerServiceMonitorResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfilerServiceMonitorResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ProfilerServiceMonitorResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ProfilerServiceMonitorResult)
    MergeFrom(*source);
  }
}

void ProfilerServiceMonitorResult::MergeFrom(const ProfilerServiceMonitorResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ProfilerServiceMonitorResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_idle_time_percent() != 0) {
    set_device_idle_time_percent(from.device_idle_time_percent());
  }
  if (from.matrix_unit_utilization_percent() != 0) {
    set_matrix_unit_utilization_percent(from.matrix_unit_utilization_percent());
  }
  if (from.step_time_ms_avg() != 0) {
    set_step_time_ms_avg(from.step_time_ms_avg());
  }
  if (from.step_time_ms_min() != 0) {
    set_step_time_ms_min(from.step_time_ms_min());
  }
  if (from.step_time_ms_max() != 0) {
    set_step_time_ms_max(from.step_time_ms_max());
  }
  if (from.infeed_percent_avg() != 0) {
    set_infeed_percent_avg(from.infeed_percent_avg());
  }
  if (from.infeed_percent_min() != 0) {
    set_infeed_percent_min(from.infeed_percent_min());
  }
  if (from.infeed_percent_max() != 0) {
    set_infeed_percent_max(from.infeed_percent_max());
  }
  if (from.response_type() != 0) {
    set_response_type(from.response_type());
  }
}

void ProfilerServiceMonitorResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ProfilerServiceMonitorResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfilerServiceMonitorResult::CopyFrom(const ProfilerServiceMonitorResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ProfilerServiceMonitorResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfilerServiceMonitorResult::IsInitialized() const {
  return true;
}

void ProfilerServiceMonitorResult::Swap(ProfilerServiceMonitorResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfilerServiceMonitorResult::InternalSwap(ProfilerServiceMonitorResult* other) {
  using std::swap;
  swap(device_idle_time_percent_, other->device_idle_time_percent_);
  swap(matrix_unit_utilization_percent_, other->matrix_unit_utilization_percent_);
  swap(step_time_ms_avg_, other->step_time_ms_avg_);
  swap(step_time_ms_min_, other->step_time_ms_min_);
  swap(step_time_ms_max_, other->step_time_ms_max_);
  swap(infeed_percent_avg_, other->infeed_percent_avg_);
  swap(infeed_percent_min_, other->infeed_percent_min_);
  swap(infeed_percent_max_, other->infeed_percent_max_);
  swap(response_type_, other->response_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfilerServiceMonitorResult::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5fservice_5fmonitor_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ProfilerServiceMonitorResult* Arena::CreateMaybeMessage< ::tensorflow::ProfilerServiceMonitorResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ProfilerServiceMonitorResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
