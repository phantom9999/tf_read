// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/profiler_options.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprofiler_5foptions_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprofiler_5foptions_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5foptions_2eproto 

namespace protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5foptions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5foptions_2eproto
namespace tensorflow {
class ProfileOptions;
class ProfileOptionsDefaultTypeInternal;
extern ProfileOptionsDefaultTypeInternal _ProfileOptions_default_instance_;
class RemoteProfilerSessionManagerOptions;
class RemoteProfilerSessionManagerOptionsDefaultTypeInternal;
extern RemoteProfilerSessionManagerOptionsDefaultTypeInternal _RemoteProfilerSessionManagerOptions_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::ProfileOptions* Arena::CreateMaybeMessage<::tensorflow::ProfileOptions>(Arena*);
template<> ::tensorflow::RemoteProfilerSessionManagerOptions* Arena::CreateMaybeMessage<::tensorflow::RemoteProfilerSessionManagerOptions>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {

enum ProfileOptions_DeviceType {
  ProfileOptions_DeviceType_UNSPECIFIED = 0,
  ProfileOptions_DeviceType_CPU = 1,
  ProfileOptions_DeviceType_GPU = 2,
  ProfileOptions_DeviceType_TPU = 3,
  ProfileOptions_DeviceType_PLUGGABLE_DEVICE = 4,
  ProfileOptions_DeviceType_ProfileOptions_DeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProfileOptions_DeviceType_ProfileOptions_DeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProfileOptions_DeviceType_IsValid(int value);
const ProfileOptions_DeviceType ProfileOptions_DeviceType_DeviceType_MIN = ProfileOptions_DeviceType_UNSPECIFIED;
const ProfileOptions_DeviceType ProfileOptions_DeviceType_DeviceType_MAX = ProfileOptions_DeviceType_PLUGGABLE_DEVICE;
const int ProfileOptions_DeviceType_DeviceType_ARRAYSIZE = ProfileOptions_DeviceType_DeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProfileOptions_DeviceType_descriptor();
inline const ::std::string& ProfileOptions_DeviceType_Name(ProfileOptions_DeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProfileOptions_DeviceType_descriptor(), value);
}
inline bool ProfileOptions_DeviceType_Parse(
    const ::std::string& name, ProfileOptions_DeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProfileOptions_DeviceType>(
    ProfileOptions_DeviceType_descriptor(), name, value);
}
// ===================================================================

class ProfileOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.ProfileOptions) */ {
 public:
  ProfileOptions();
  virtual ~ProfileOptions();

  ProfileOptions(const ProfileOptions& from);

  inline ProfileOptions& operator=(const ProfileOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProfileOptions(ProfileOptions&& from) noexcept
    : ProfileOptions() {
    *this = ::std::move(from);
  }

  inline ProfileOptions& operator=(ProfileOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfileOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProfileOptions* internal_default_instance() {
    return reinterpret_cast<const ProfileOptions*>(
               &_ProfileOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProfileOptions* other);
  friend void swap(ProfileOptions& a, ProfileOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProfileOptions* New() const final {
    return CreateMaybeMessage<ProfileOptions>(NULL);
  }

  ProfileOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProfileOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProfileOptions& from);
  void MergeFrom(const ProfileOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProfileOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProfileOptions_DeviceType DeviceType;
  static const DeviceType UNSPECIFIED =
    ProfileOptions_DeviceType_UNSPECIFIED;
  static const DeviceType CPU =
    ProfileOptions_DeviceType_CPU;
  static const DeviceType GPU =
    ProfileOptions_DeviceType_GPU;
  static const DeviceType TPU =
    ProfileOptions_DeviceType_TPU;
  static const DeviceType PLUGGABLE_DEVICE =
    ProfileOptions_DeviceType_PLUGGABLE_DEVICE;
  static inline bool DeviceType_IsValid(int value) {
    return ProfileOptions_DeviceType_IsValid(value);
  }
  static const DeviceType DeviceType_MIN =
    ProfileOptions_DeviceType_DeviceType_MIN;
  static const DeviceType DeviceType_MAX =
    ProfileOptions_DeviceType_DeviceType_MAX;
  static const int DeviceType_ARRAYSIZE =
    ProfileOptions_DeviceType_DeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DeviceType_descriptor() {
    return ProfileOptions_DeviceType_descriptor();
  }
  static inline const ::std::string& DeviceType_Name(DeviceType value) {
    return ProfileOptions_DeviceType_Name(value);
  }
  static inline bool DeviceType_Parse(const ::std::string& name,
      DeviceType* value) {
    return ProfileOptions_DeviceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string repository_path = 10;
  void clear_repository_path();
  static const int kRepositoryPathFieldNumber = 10;
  const ::std::string& repository_path() const;
  void set_repository_path(const ::std::string& value);
  #if LANG_CXX11
  void set_repository_path(::std::string&& value);
  #endif
  void set_repository_path(const char* value);
  void set_repository_path(const char* value, size_t size);
  ::std::string* mutable_repository_path();
  ::std::string* release_repository_path();
  void set_allocated_repository_path(::std::string* repository_path);

  // uint32 host_tracer_level = 2;
  void clear_host_tracer_level();
  static const int kHostTracerLevelFieldNumber = 2;
  ::google::protobuf::uint32 host_tracer_level() const;
  void set_host_tracer_level(::google::protobuf::uint32 value);

  // uint32 device_tracer_level = 3;
  void clear_device_tracer_level();
  static const int kDeviceTracerLevelFieldNumber = 3;
  ::google::protobuf::uint32 device_tracer_level() const;
  void set_device_tracer_level(::google::protobuf::uint32 value);

  // uint32 python_tracer_level = 4;
  void clear_python_tracer_level();
  static const int kPythonTracerLevelFieldNumber = 4;
  ::google::protobuf::uint32 python_tracer_level() const;
  void set_python_tracer_level(::google::protobuf::uint32 value);

  // bool include_dataset_ops = 1;
  void clear_include_dataset_ops();
  static const int kIncludeDatasetOpsFieldNumber = 1;
  bool include_dataset_ops() const;
  void set_include_dataset_ops(bool value);

  // bool enable_hlo_proto = 7;
  void clear_enable_hlo_proto();
  static const int kEnableHloProtoFieldNumber = 7;
  bool enable_hlo_proto() const;
  void set_enable_hlo_proto(bool value);

  // uint32 version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // .tensorflow.ProfileOptions.DeviceType device_type = 6;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 6;
  ::tensorflow::ProfileOptions_DeviceType device_type() const;
  void set_device_type(::tensorflow::ProfileOptions_DeviceType value);

  // uint64 start_timestamp_ns = 8;
  void clear_start_timestamp_ns();
  static const int kStartTimestampNsFieldNumber = 8;
  ::google::protobuf::uint64 start_timestamp_ns() const;
  void set_start_timestamp_ns(::google::protobuf::uint64 value);

  // uint64 duration_ms = 9;
  void clear_duration_ms();
  static const int kDurationMsFieldNumber = 9;
  ::google::protobuf::uint64 duration_ms() const;
  void set_duration_ms(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.ProfileOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr repository_path_;
  ::google::protobuf::uint32 host_tracer_level_;
  ::google::protobuf::uint32 device_tracer_level_;
  ::google::protobuf::uint32 python_tracer_level_;
  bool include_dataset_ops_;
  bool enable_hlo_proto_;
  ::google::protobuf::uint32 version_;
  int device_type_;
  ::google::protobuf::uint64 start_timestamp_ns_;
  ::google::protobuf::uint64 duration_ms_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5foptions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteProfilerSessionManagerOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.RemoteProfilerSessionManagerOptions) */ {
 public:
  RemoteProfilerSessionManagerOptions();
  virtual ~RemoteProfilerSessionManagerOptions();

  RemoteProfilerSessionManagerOptions(const RemoteProfilerSessionManagerOptions& from);

  inline RemoteProfilerSessionManagerOptions& operator=(const RemoteProfilerSessionManagerOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteProfilerSessionManagerOptions(RemoteProfilerSessionManagerOptions&& from) noexcept
    : RemoteProfilerSessionManagerOptions() {
    *this = ::std::move(from);
  }

  inline RemoteProfilerSessionManagerOptions& operator=(RemoteProfilerSessionManagerOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteProfilerSessionManagerOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteProfilerSessionManagerOptions* internal_default_instance() {
    return reinterpret_cast<const RemoteProfilerSessionManagerOptions*>(
               &_RemoteProfilerSessionManagerOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RemoteProfilerSessionManagerOptions* other);
  friend void swap(RemoteProfilerSessionManagerOptions& a, RemoteProfilerSessionManagerOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteProfilerSessionManagerOptions* New() const final {
    return CreateMaybeMessage<RemoteProfilerSessionManagerOptions>(NULL);
  }

  RemoteProfilerSessionManagerOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteProfilerSessionManagerOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteProfilerSessionManagerOptions& from);
  void MergeFrom(const RemoteProfilerSessionManagerOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteProfilerSessionManagerOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string service_addresses = 2;
  int service_addresses_size() const;
  void clear_service_addresses();
  static const int kServiceAddressesFieldNumber = 2;
  const ::std::string& service_addresses(int index) const;
  ::std::string* mutable_service_addresses(int index);
  void set_service_addresses(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_service_addresses(int index, ::std::string&& value);
  #endif
  void set_service_addresses(int index, const char* value);
  void set_service_addresses(int index, const char* value, size_t size);
  ::std::string* add_service_addresses();
  void add_service_addresses(const ::std::string& value);
  #if LANG_CXX11
  void add_service_addresses(::std::string&& value);
  #endif
  void add_service_addresses(const char* value);
  void add_service_addresses(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& service_addresses() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_service_addresses();

  // .tensorflow.ProfileOptions profiler_options = 1;
  bool has_profiler_options() const;
  void clear_profiler_options();
  static const int kProfilerOptionsFieldNumber = 1;
  private:
  const ::tensorflow::ProfileOptions& _internal_profiler_options() const;
  public:
  const ::tensorflow::ProfileOptions& profiler_options() const;
  ::tensorflow::ProfileOptions* release_profiler_options();
  ::tensorflow::ProfileOptions* mutable_profiler_options();
  void set_allocated_profiler_options(::tensorflow::ProfileOptions* profiler_options);

  // uint64 session_creation_timestamp_ns = 3;
  void clear_session_creation_timestamp_ns();
  static const int kSessionCreationTimestampNsFieldNumber = 3;
  ::google::protobuf::uint64 session_creation_timestamp_ns() const;
  void set_session_creation_timestamp_ns(::google::protobuf::uint64 value);

  // uint64 max_session_duration_ms = 4;
  void clear_max_session_duration_ms();
  static const int kMaxSessionDurationMsFieldNumber = 4;
  ::google::protobuf::uint64 max_session_duration_ms() const;
  void set_max_session_duration_ms(::google::protobuf::uint64 value);

  // uint64 delay_ms = 5;
  void clear_delay_ms();
  static const int kDelayMsFieldNumber = 5;
  ::google::protobuf::uint64 delay_ms() const;
  void set_delay_ms(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.RemoteProfilerSessionManagerOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> service_addresses_;
  ::tensorflow::ProfileOptions* profiler_options_;
  ::google::protobuf::uint64 session_creation_timestamp_ns_;
  ::google::protobuf::uint64 max_session_duration_ms_;
  ::google::protobuf::uint64 delay_ms_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fprofiler_2fprofiler_5foptions_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProfileOptions

// uint32 version = 5;
inline void ProfileOptions::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 ProfileOptions::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.version)
  return version_;
}
inline void ProfileOptions::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.version)
}

// .tensorflow.ProfileOptions.DeviceType device_type = 6;
inline void ProfileOptions::clear_device_type() {
  device_type_ = 0;
}
inline ::tensorflow::ProfileOptions_DeviceType ProfileOptions::device_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.device_type)
  return static_cast< ::tensorflow::ProfileOptions_DeviceType >(device_type_);
}
inline void ProfileOptions::set_device_type(::tensorflow::ProfileOptions_DeviceType value) {
  
  device_type_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.device_type)
}

// bool include_dataset_ops = 1;
inline void ProfileOptions::clear_include_dataset_ops() {
  include_dataset_ops_ = false;
}
inline bool ProfileOptions::include_dataset_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.include_dataset_ops)
  return include_dataset_ops_;
}
inline void ProfileOptions::set_include_dataset_ops(bool value) {
  
  include_dataset_ops_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.include_dataset_ops)
}

// uint32 host_tracer_level = 2;
inline void ProfileOptions::clear_host_tracer_level() {
  host_tracer_level_ = 0u;
}
inline ::google::protobuf::uint32 ProfileOptions::host_tracer_level() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.host_tracer_level)
  return host_tracer_level_;
}
inline void ProfileOptions::set_host_tracer_level(::google::protobuf::uint32 value) {
  
  host_tracer_level_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.host_tracer_level)
}

// uint32 device_tracer_level = 3;
inline void ProfileOptions::clear_device_tracer_level() {
  device_tracer_level_ = 0u;
}
inline ::google::protobuf::uint32 ProfileOptions::device_tracer_level() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.device_tracer_level)
  return device_tracer_level_;
}
inline void ProfileOptions::set_device_tracer_level(::google::protobuf::uint32 value) {
  
  device_tracer_level_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.device_tracer_level)
}

// uint32 python_tracer_level = 4;
inline void ProfileOptions::clear_python_tracer_level() {
  python_tracer_level_ = 0u;
}
inline ::google::protobuf::uint32 ProfileOptions::python_tracer_level() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.python_tracer_level)
  return python_tracer_level_;
}
inline void ProfileOptions::set_python_tracer_level(::google::protobuf::uint32 value) {
  
  python_tracer_level_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.python_tracer_level)
}

// bool enable_hlo_proto = 7;
inline void ProfileOptions::clear_enable_hlo_proto() {
  enable_hlo_proto_ = false;
}
inline bool ProfileOptions::enable_hlo_proto() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.enable_hlo_proto)
  return enable_hlo_proto_;
}
inline void ProfileOptions::set_enable_hlo_proto(bool value) {
  
  enable_hlo_proto_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.enable_hlo_proto)
}

// uint64 start_timestamp_ns = 8;
inline void ProfileOptions::clear_start_timestamp_ns() {
  start_timestamp_ns_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ProfileOptions::start_timestamp_ns() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.start_timestamp_ns)
  return start_timestamp_ns_;
}
inline void ProfileOptions::set_start_timestamp_ns(::google::protobuf::uint64 value) {
  
  start_timestamp_ns_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.start_timestamp_ns)
}

// uint64 duration_ms = 9;
inline void ProfileOptions::clear_duration_ms() {
  duration_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ProfileOptions::duration_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.duration_ms)
  return duration_ms_;
}
inline void ProfileOptions::set_duration_ms(::google::protobuf::uint64 value) {
  
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.duration_ms)
}

// string repository_path = 10;
inline void ProfileOptions::clear_repository_path() {
  repository_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileOptions::repository_path() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.repository_path)
  return repository_path_.GetNoArena();
}
inline void ProfileOptions::set_repository_path(const ::std::string& value) {
  
  repository_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.repository_path)
}
#if LANG_CXX11
inline void ProfileOptions::set_repository_path(::std::string&& value) {
  
  repository_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.ProfileOptions.repository_path)
}
#endif
inline void ProfileOptions::set_repository_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  repository_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.ProfileOptions.repository_path)
}
inline void ProfileOptions::set_repository_path(const char* value, size_t size) {
  
  repository_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.ProfileOptions.repository_path)
}
inline ::std::string* ProfileOptions::mutable_repository_path() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileOptions.repository_path)
  return repository_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileOptions::release_repository_path() {
  // @@protoc_insertion_point(field_release:tensorflow.ProfileOptions.repository_path)
  
  return repository_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileOptions::set_allocated_repository_path(::std::string* repository_path) {
  if (repository_path != NULL) {
    
  } else {
    
  }
  repository_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), repository_path);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileOptions.repository_path)
}

// -------------------------------------------------------------------

// RemoteProfilerSessionManagerOptions

// .tensorflow.ProfileOptions profiler_options = 1;
inline bool RemoteProfilerSessionManagerOptions::has_profiler_options() const {
  return this != internal_default_instance() && profiler_options_ != NULL;
}
inline void RemoteProfilerSessionManagerOptions::clear_profiler_options() {
  if (GetArenaNoVirtual() == NULL && profiler_options_ != NULL) {
    delete profiler_options_;
  }
  profiler_options_ = NULL;
}
inline const ::tensorflow::ProfileOptions& RemoteProfilerSessionManagerOptions::_internal_profiler_options() const {
  return *profiler_options_;
}
inline const ::tensorflow::ProfileOptions& RemoteProfilerSessionManagerOptions::profiler_options() const {
  const ::tensorflow::ProfileOptions* p = profiler_options_;
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::ProfileOptions*>(
      &::tensorflow::_ProfileOptions_default_instance_);
}
inline ::tensorflow::ProfileOptions* RemoteProfilerSessionManagerOptions::release_profiler_options() {
  // @@protoc_insertion_point(field_release:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)
  
  ::tensorflow::ProfileOptions* temp = profiler_options_;
  profiler_options_ = NULL;
  return temp;
}
inline ::tensorflow::ProfileOptions* RemoteProfilerSessionManagerOptions::mutable_profiler_options() {
  
  if (profiler_options_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::ProfileOptions>(GetArenaNoVirtual());
    profiler_options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)
  return profiler_options_;
}
inline void RemoteProfilerSessionManagerOptions::set_allocated_profiler_options(::tensorflow::ProfileOptions* profiler_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete profiler_options_;
  }
  if (profiler_options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      profiler_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, profiler_options, submessage_arena);
    }
    
  } else {
    
  }
  profiler_options_ = profiler_options;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)
}

// repeated string service_addresses = 2;
inline int RemoteProfilerSessionManagerOptions::service_addresses_size() const {
  return service_addresses_.size();
}
inline void RemoteProfilerSessionManagerOptions::clear_service_addresses() {
  service_addresses_.Clear();
}
inline const ::std::string& RemoteProfilerSessionManagerOptions::service_addresses(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return service_addresses_.Get(index);
}
inline ::std::string* RemoteProfilerSessionManagerOptions::mutable_service_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return service_addresses_.Mutable(index);
}
inline void RemoteProfilerSessionManagerOptions::set_service_addresses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  service_addresses_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void RemoteProfilerSessionManagerOptions::set_service_addresses(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  service_addresses_.Mutable(index)->assign(std::move(value));
}
#endif
inline void RemoteProfilerSessionManagerOptions::set_service_addresses(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  service_addresses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
}
inline void RemoteProfilerSessionManagerOptions::set_service_addresses(int index, const char* value, size_t size) {
  service_addresses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
}
inline ::std::string* RemoteProfilerSessionManagerOptions::add_service_addresses() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return service_addresses_.Add();
}
inline void RemoteProfilerSessionManagerOptions::add_service_addresses(const ::std::string& value) {
  service_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
}
#if LANG_CXX11
inline void RemoteProfilerSessionManagerOptions::add_service_addresses(::std::string&& value) {
  service_addresses_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
}
#endif
inline void RemoteProfilerSessionManagerOptions::add_service_addresses(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  service_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
}
inline void RemoteProfilerSessionManagerOptions::add_service_addresses(const char* value, size_t size) {
  service_addresses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RemoteProfilerSessionManagerOptions::service_addresses() const {
  // @@protoc_insertion_point(field_list:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return service_addresses_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RemoteProfilerSessionManagerOptions::mutable_service_addresses() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return &service_addresses_;
}

// uint64 session_creation_timestamp_ns = 3;
inline void RemoteProfilerSessionManagerOptions::clear_session_creation_timestamp_ns() {
  session_creation_timestamp_ns_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RemoteProfilerSessionManagerOptions::session_creation_timestamp_ns() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.session_creation_timestamp_ns)
  return session_creation_timestamp_ns_;
}
inline void RemoteProfilerSessionManagerOptions::set_session_creation_timestamp_ns(::google::protobuf::uint64 value) {
  
  session_creation_timestamp_ns_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.session_creation_timestamp_ns)
}

// uint64 max_session_duration_ms = 4;
inline void RemoteProfilerSessionManagerOptions::clear_max_session_duration_ms() {
  max_session_duration_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RemoteProfilerSessionManagerOptions::max_session_duration_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.max_session_duration_ms)
  return max_session_duration_ms_;
}
inline void RemoteProfilerSessionManagerOptions::set_max_session_duration_ms(::google::protobuf::uint64 value) {
  
  max_session_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.max_session_duration_ms)
}

// uint64 delay_ms = 5;
inline void RemoteProfilerSessionManagerOptions::clear_delay_ms() {
  delay_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RemoteProfilerSessionManagerOptions::delay_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.delay_ms)
  return delay_ms_;
}
inline void RemoteProfilerSessionManagerOptions::set_delay_ms(::google::protobuf::uint64 value) {
  
  delay_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.delay_ms)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tensorflow::ProfileOptions_DeviceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tensorflow::ProfileOptions_DeviceType>() {
  return ::tensorflow::ProfileOptions_DeviceType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprofiler_5foptions_2eproto
