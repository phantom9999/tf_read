// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/snapshot.proto

#include "tensorflow/core/protobuf/snapshot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TensorProto;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TensorShapeProto;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TensorMetadata;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto
namespace tensorflow {
namespace data {
namespace experimental {
class SnapshotRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotRecord>
      _instance;
} _SnapshotRecord_default_instance_;
class SnapshotMetadataRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotMetadataRecord>
      _instance;
} _SnapshotMetadataRecord_default_instance_;
class TensorMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TensorMetadata>
      _instance;
} _TensorMetadata_default_instance_;
class SnapshotTensorMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotTensorMetadata>
      _instance;
} _SnapshotTensorMetadata_default_instance_;
}  // namespace experimental
}  // namespace data
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto {
static void InitDefaultsSnapshotRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::experimental::_SnapshotRecord_default_instance_;
    new (ptr) ::tensorflow::data::experimental::SnapshotRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::experimental::SnapshotRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SnapshotRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSnapshotRecord}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::scc_info_TensorProto.base,}};

static void InitDefaultsSnapshotMetadataRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::experimental::_SnapshotMetadataRecord_default_instance_;
    new (ptr) ::tensorflow::data::experimental::SnapshotMetadataRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::experimental::SnapshotMetadataRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SnapshotMetadataRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSnapshotMetadataRecord}, {}};

static void InitDefaultsTensorMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::experimental::_TensorMetadata_default_instance_;
    new (ptr) ::tensorflow::data::experimental::TensorMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::experimental::TensorMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TensorMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTensorMetadata}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::scc_info_TensorShapeProto.base,}};

static void InitDefaultsSnapshotTensorMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::experimental::_SnapshotTensorMetadata_default_instance_;
    new (ptr) ::tensorflow::data::experimental::SnapshotTensorMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::experimental::SnapshotTensorMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SnapshotTensorMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSnapshotTensorMetadata}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_TensorMetadata.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SnapshotRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SnapshotMetadataRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TensorMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SnapshotTensorMetadata.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotRecord, tensor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotMetadataRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotMetadataRecord, graph_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotMetadataRecord, run_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotMetadataRecord, creation_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotMetadataRecord, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotMetadataRecord, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotMetadataRecord, num_elements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotMetadataRecord, finalized_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::TensorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::TensorMetadata, tensor_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::TensorMetadata, tensor_size_bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotTensorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::experimental::SnapshotTensorMetadata, tensor_metadata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::data::experimental::SnapshotRecord)},
  { 6, -1, sizeof(::tensorflow::data::experimental::SnapshotMetadataRecord)},
  { 18, -1, sizeof(::tensorflow::data::experimental::TensorMetadata)},
  { 25, -1, sizeof(::tensorflow::data::experimental::SnapshotTensorMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::experimental::_SnapshotRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::experimental::_SnapshotMetadataRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::experimental::_TensorMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::experimental::_SnapshotTensorMetadata_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/protobuf/snapshot.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'tensorflow/core/protobuf/snapshot.prot"
      "o\022\034tensorflow.data.experimental\032&tensorf"
      "low/core/framework/tensor.proto\032,tensorf"
      "low/core/framework/tensor_shape.proto\032%t"
      "ensorflow/core/framework/types.proto\"9\n\016"
      "SnapshotRecord\022\'\n\006tensor\030\001 \003(\0132\027.tensorf"
      "low.TensorProto\"\270\001\n\026SnapshotMetadataReco"
      "rd\022\022\n\ngraph_hash\030\001 \001(\t\022\016\n\006run_id\030\002 \001(\t\022\032"
      "\n\022creation_timestamp\030\003 \001(\003\022\017\n\007version\030\004 "
      "\001(\003\022#\n\005dtype\030\005 \003(\0162\024.tensorflow.DataType"
      "\022\024\n\014num_elements\030\006 \001(\003\022\022\n\tfinalized\030\350\007 \001"
      "(\010\"_\n\016TensorMetadata\0222\n\014tensor_shape\030\002 \001"
      "(\0132\034.tensorflow.TensorShapeProto\022\031\n\021tens"
      "or_size_bytes\030\003 \001(\003\"_\n\026SnapshotTensorMet"
      "adata\022E\n\017tensor_metadata\030\001 \003(\0132,.tensorf"
      "low.data.experimental.TensorMetadataBWZU"
      "github.com/tensorflow/tensorflow/tensorf"
      "low/go/core/protobuf/for_core_protos_go_"
      "protob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 733);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/snapshot.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto
namespace tensorflow {
namespace data {
namespace experimental {

// ===================================================================

void SnapshotRecord::InitAsDefaultInstance() {
}
void SnapshotRecord::clear_tensor() {
  tensor_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotRecord::kTensorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotRecord::SnapshotRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_SnapshotRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.experimental.SnapshotRecord)
}
SnapshotRecord::SnapshotRecord(const SnapshotRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tensor_(from.tensor_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.experimental.SnapshotRecord)
}

void SnapshotRecord::SharedCtor() {
}

SnapshotRecord::~SnapshotRecord() {
  // @@protoc_insertion_point(destructor:tensorflow.data.experimental.SnapshotRecord)
  SharedDtor();
}

void SnapshotRecord::SharedDtor() {
}

void SnapshotRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SnapshotRecord::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotRecord& SnapshotRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_SnapshotRecord.base);
  return *internal_default_instance();
}


void SnapshotRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.experimental.SnapshotRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tensor_.Clear();
  _internal_metadata_.Clear();
}

bool SnapshotRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.experimental.SnapshotRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.TensorProto tensor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.experimental.SnapshotRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.experimental.SnapshotRecord)
  return false;
#undef DO_
}

void SnapshotRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.experimental.SnapshotRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TensorProto tensor = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tensor_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tensor(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.experimental.SnapshotRecord)
}

::google::protobuf::uint8* SnapshotRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.experimental.SnapshotRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TensorProto tensor = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tensor_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tensor(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.experimental.SnapshotRecord)
  return target;
}

size_t SnapshotRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.experimental.SnapshotRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.TensorProto tensor = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tensor_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tensor(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SnapshotRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.experimental.SnapshotRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.experimental.SnapshotRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.experimental.SnapshotRecord)
    MergeFrom(*source);
  }
}

void SnapshotRecord::MergeFrom(const SnapshotRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.experimental.SnapshotRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tensor_.MergeFrom(from.tensor_);
}

void SnapshotRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.experimental.SnapshotRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotRecord::CopyFrom(const SnapshotRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.experimental.SnapshotRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotRecord::IsInitialized() const {
  return true;
}

void SnapshotRecord::Swap(SnapshotRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotRecord::InternalSwap(SnapshotRecord* other) {
  using std::swap;
  CastToBase(&tensor_)->InternalSwap(CastToBase(&other->tensor_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SnapshotRecord::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotMetadataRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotMetadataRecord::kGraphHashFieldNumber;
const int SnapshotMetadataRecord::kRunIdFieldNumber;
const int SnapshotMetadataRecord::kCreationTimestampFieldNumber;
const int SnapshotMetadataRecord::kVersionFieldNumber;
const int SnapshotMetadataRecord::kDtypeFieldNumber;
const int SnapshotMetadataRecord::kNumElementsFieldNumber;
const int SnapshotMetadataRecord::kFinalizedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotMetadataRecord::SnapshotMetadataRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_SnapshotMetadataRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.experimental.SnapshotMetadataRecord)
}
SnapshotMetadataRecord::SnapshotMetadataRecord(const SnapshotMetadataRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dtype_(from.dtype_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  graph_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_hash().size() > 0) {
    graph_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_hash_);
  }
  run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.run_id().size() > 0) {
    run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_id_);
  }
  ::memcpy(&creation_timestamp_, &from.creation_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&finalized_) -
    reinterpret_cast<char*>(&creation_timestamp_)) + sizeof(finalized_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.experimental.SnapshotMetadataRecord)
}

void SnapshotMetadataRecord::SharedCtor() {
  graph_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&creation_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finalized_) -
      reinterpret_cast<char*>(&creation_timestamp_)) + sizeof(finalized_));
}

SnapshotMetadataRecord::~SnapshotMetadataRecord() {
  // @@protoc_insertion_point(destructor:tensorflow.data.experimental.SnapshotMetadataRecord)
  SharedDtor();
}

void SnapshotMetadataRecord::SharedDtor() {
  graph_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SnapshotMetadataRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SnapshotMetadataRecord::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotMetadataRecord& SnapshotMetadataRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_SnapshotMetadataRecord.base);
  return *internal_default_instance();
}


void SnapshotMetadataRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dtype_.Clear();
  graph_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&creation_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finalized_) -
      reinterpret_cast<char*>(&creation_timestamp_)) + sizeof(finalized_));
  _internal_metadata_.Clear();
}

bool SnapshotMetadataRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string graph_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_hash().data(), static_cast<int>(this->graph_hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.experimental.SnapshotMetadataRecord.graph_hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string run_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->run_id().data(), static_cast<int>(this->run_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.experimental.SnapshotMetadataRecord.run_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 creation_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &creation_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.DataType dtype = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_dtype(static_cast< ::tensorflow::DataType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_dtype(static_cast< ::tensorflow::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_elements = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_elements_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool finalized = 1000;
      case 1000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 8000 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finalized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.experimental.SnapshotMetadataRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.experimental.SnapshotMetadataRecord)
  return false;
#undef DO_
}

void SnapshotMetadataRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_hash = 1;
  if (this->graph_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_hash().data(), static_cast<int>(this->graph_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.experimental.SnapshotMetadataRecord.graph_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->graph_hash(), output);
  }

  // string run_id = 2;
  if (this->run_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->run_id().data(), static_cast<int>(this->run_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.experimental.SnapshotMetadataRecord.run_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->run_id(), output);
  }

  // int64 creation_timestamp = 3;
  if (this->creation_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->creation_timestamp(), output);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->version(), output);
  }

  // repeated .tensorflow.DataType dtype = 5;
  if (this->dtype_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_dtype_cached_byte_size_));
  }
  for (int i = 0, n = this->dtype_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->dtype(i), output);
  }

  // int64 num_elements = 6;
  if (this->num_elements() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->num_elements(), output);
  }

  // bool finalized = 1000;
  if (this->finalized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1000, this->finalized(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.experimental.SnapshotMetadataRecord)
}

::google::protobuf::uint8* SnapshotMetadataRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_hash = 1;
  if (this->graph_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_hash().data(), static_cast<int>(this->graph_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.experimental.SnapshotMetadataRecord.graph_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->graph_hash(), target);
  }

  // string run_id = 2;
  if (this->run_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->run_id().data(), static_cast<int>(this->run_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.experimental.SnapshotMetadataRecord.run_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->run_id(), target);
  }

  // int64 creation_timestamp = 3;
  if (this->creation_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->creation_timestamp(), target);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->version(), target);
  }

  // repeated .tensorflow.DataType dtype = 5;
  if (this->dtype_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _dtype_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->dtype_, target);
  }

  // int64 num_elements = 6;
  if (this->num_elements() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->num_elements(), target);
  }

  // bool finalized = 1000;
  if (this->finalized() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1000, this->finalized(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.experimental.SnapshotMetadataRecord)
  return target;
}

size_t SnapshotMetadataRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.DataType dtype = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->dtype_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->dtype(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dtype_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string graph_hash = 1;
  if (this->graph_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_hash());
  }

  // string run_id = 2;
  if (this->run_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->run_id());
  }

  // int64 creation_timestamp = 3;
  if (this->creation_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->creation_timestamp());
  }

  // int64 version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // int64 num_elements = 6;
  if (this->num_elements() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_elements());
  }

  // bool finalized = 1000;
  if (this->finalized() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SnapshotMetadataRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotMetadataRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotMetadataRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.experimental.SnapshotMetadataRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.experimental.SnapshotMetadataRecord)
    MergeFrom(*source);
  }
}

void SnapshotMetadataRecord::MergeFrom(const SnapshotMetadataRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dtype_.MergeFrom(from.dtype_);
  if (from.graph_hash().size() > 0) {

    graph_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_hash_);
  }
  if (from.run_id().size() > 0) {

    run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_id_);
  }
  if (from.creation_timestamp() != 0) {
    set_creation_timestamp(from.creation_timestamp());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.num_elements() != 0) {
    set_num_elements(from.num_elements());
  }
  if (from.finalized() != 0) {
    set_finalized(from.finalized());
  }
}

void SnapshotMetadataRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotMetadataRecord::CopyFrom(const SnapshotMetadataRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.experimental.SnapshotMetadataRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotMetadataRecord::IsInitialized() const {
  return true;
}

void SnapshotMetadataRecord::Swap(SnapshotMetadataRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotMetadataRecord::InternalSwap(SnapshotMetadataRecord* other) {
  using std::swap;
  dtype_.InternalSwap(&other->dtype_);
  graph_hash_.Swap(&other->graph_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  run_id_.Swap(&other->run_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(creation_timestamp_, other->creation_timestamp_);
  swap(version_, other->version_);
  swap(num_elements_, other->num_elements_);
  swap(finalized_, other->finalized_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SnapshotMetadataRecord::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TensorMetadata::InitAsDefaultInstance() {
  ::tensorflow::data::experimental::_TensorMetadata_default_instance_._instance.get_mutable()->tensor_shape_ = const_cast< ::tensorflow::TensorShapeProto*>(
      ::tensorflow::TensorShapeProto::internal_default_instance());
}
void TensorMetadata::clear_tensor_shape() {
  if (GetArenaNoVirtual() == NULL && tensor_shape_ != NULL) {
    delete tensor_shape_;
  }
  tensor_shape_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorMetadata::kTensorShapeFieldNumber;
const int TensorMetadata::kTensorSizeBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorMetadata::TensorMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_TensorMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.experimental.TensorMetadata)
}
TensorMetadata::TensorMetadata(const TensorMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tensor_shape()) {
    tensor_shape_ = new ::tensorflow::TensorShapeProto(*from.tensor_shape_);
  } else {
    tensor_shape_ = NULL;
  }
  tensor_size_bytes_ = from.tensor_size_bytes_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.experimental.TensorMetadata)
}

void TensorMetadata::SharedCtor() {
  ::memset(&tensor_shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tensor_size_bytes_) -
      reinterpret_cast<char*>(&tensor_shape_)) + sizeof(tensor_size_bytes_));
}

TensorMetadata::~TensorMetadata() {
  // @@protoc_insertion_point(destructor:tensorflow.data.experimental.TensorMetadata)
  SharedDtor();
}

void TensorMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete tensor_shape_;
}

void TensorMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TensorMetadata::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TensorMetadata& TensorMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_TensorMetadata.base);
  return *internal_default_instance();
}


void TensorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.experimental.TensorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tensor_shape_ != NULL) {
    delete tensor_shape_;
  }
  tensor_shape_ = NULL;
  tensor_size_bytes_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TensorMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.experimental.TensorMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.TensorShapeProto tensor_shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tensor_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 tensor_size_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tensor_size_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.experimental.TensorMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.experimental.TensorMetadata)
  return false;
#undef DO_
}

void TensorMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.experimental.TensorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TensorShapeProto tensor_shape = 2;
  if (this->has_tensor_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_tensor_shape(), output);
  }

  // int64 tensor_size_bytes = 3;
  if (this->tensor_size_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->tensor_size_bytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.experimental.TensorMetadata)
}

::google::protobuf::uint8* TensorMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.experimental.TensorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TensorShapeProto tensor_shape = 2;
  if (this->has_tensor_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_tensor_shape(), deterministic, target);
  }

  // int64 tensor_size_bytes = 3;
  if (this->tensor_size_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->tensor_size_bytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.experimental.TensorMetadata)
  return target;
}

size_t TensorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.experimental.TensorMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.TensorShapeProto tensor_shape = 2;
  if (this->has_tensor_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tensor_shape_);
  }

  // int64 tensor_size_bytes = 3;
  if (this->tensor_size_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tensor_size_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TensorMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.experimental.TensorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.experimental.TensorMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.experimental.TensorMetadata)
    MergeFrom(*source);
  }
}

void TensorMetadata::MergeFrom(const TensorMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.experimental.TensorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tensor_shape()) {
    mutable_tensor_shape()->::tensorflow::TensorShapeProto::MergeFrom(from.tensor_shape());
  }
  if (from.tensor_size_bytes() != 0) {
    set_tensor_size_bytes(from.tensor_size_bytes());
  }
}

void TensorMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.experimental.TensorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorMetadata::CopyFrom(const TensorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.experimental.TensorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorMetadata::IsInitialized() const {
  return true;
}

void TensorMetadata::Swap(TensorMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorMetadata::InternalSwap(TensorMetadata* other) {
  using std::swap;
  swap(tensor_shape_, other->tensor_shape_);
  swap(tensor_size_bytes_, other->tensor_size_bytes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TensorMetadata::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotTensorMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotTensorMetadata::kTensorMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotTensorMetadata::SnapshotTensorMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_SnapshotTensorMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.experimental.SnapshotTensorMetadata)
}
SnapshotTensorMetadata::SnapshotTensorMetadata(const SnapshotTensorMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tensor_metadata_(from.tensor_metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.experimental.SnapshotTensorMetadata)
}

void SnapshotTensorMetadata::SharedCtor() {
}

SnapshotTensorMetadata::~SnapshotTensorMetadata() {
  // @@protoc_insertion_point(destructor:tensorflow.data.experimental.SnapshotTensorMetadata)
  SharedDtor();
}

void SnapshotTensorMetadata::SharedDtor() {
}

void SnapshotTensorMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SnapshotTensorMetadata::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotTensorMetadata& SnapshotTensorMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::scc_info_SnapshotTensorMetadata.base);
  return *internal_default_instance();
}


void SnapshotTensorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tensor_metadata_.Clear();
  _internal_metadata_.Clear();
}

bool SnapshotTensorMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.data.experimental.TensorMetadata tensor_metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tensor_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.experimental.SnapshotTensorMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.experimental.SnapshotTensorMetadata)
  return false;
#undef DO_
}

void SnapshotTensorMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.data.experimental.TensorMetadata tensor_metadata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tensor_metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tensor_metadata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.experimental.SnapshotTensorMetadata)
}

::google::protobuf::uint8* SnapshotTensorMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.data.experimental.TensorMetadata tensor_metadata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tensor_metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tensor_metadata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.experimental.SnapshotTensorMetadata)
  return target;
}

size_t SnapshotTensorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.data.experimental.TensorMetadata tensor_metadata = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tensor_metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tensor_metadata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SnapshotTensorMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotTensorMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotTensorMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.experimental.SnapshotTensorMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.experimental.SnapshotTensorMetadata)
    MergeFrom(*source);
  }
}

void SnapshotTensorMetadata::MergeFrom(const SnapshotTensorMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tensor_metadata_.MergeFrom(from.tensor_metadata_);
}

void SnapshotTensorMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotTensorMetadata::CopyFrom(const SnapshotTensorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.experimental.SnapshotTensorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotTensorMetadata::IsInitialized() const {
  return true;
}

void SnapshotTensorMetadata::Swap(SnapshotTensorMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotTensorMetadata::InternalSwap(SnapshotTensorMetadata* other) {
  using std::swap;
  CastToBase(&tensor_metadata_)->InternalSwap(CastToBase(&other->tensor_metadata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SnapshotTensorMetadata::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace experimental
}  // namespace data
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::experimental::SnapshotRecord* Arena::CreateMaybeMessage< ::tensorflow::data::experimental::SnapshotRecord >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::experimental::SnapshotRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::experimental::SnapshotMetadataRecord* Arena::CreateMaybeMessage< ::tensorflow::data::experimental::SnapshotMetadataRecord >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::experimental::SnapshotMetadataRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::experimental::TensorMetadata* Arena::CreateMaybeMessage< ::tensorflow::data::experimental::TensorMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::experimental::TensorMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::experimental::SnapshotTensorMetadata* Arena::CreateMaybeMessage< ::tensorflow::data::experimental::SnapshotTensorMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::data::experimental::SnapshotTensorMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
