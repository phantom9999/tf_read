// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/device_filters.proto

#include "tensorflow/core/protobuf/device_filters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskDeviceFilters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JobDeviceFilters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JobDeviceFilters_TasksEntry_DoNotUse;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto
namespace tensorflow {
class TaskDeviceFiltersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskDeviceFilters>
      _instance;
} _TaskDeviceFilters_default_instance_;
class JobDeviceFilters_TasksEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobDeviceFilters_TasksEntry_DoNotUse>
      _instance;
} _JobDeviceFilters_TasksEntry_DoNotUse_default_instance_;
class JobDeviceFiltersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobDeviceFilters>
      _instance;
} _JobDeviceFilters_default_instance_;
class ClusterDeviceFiltersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterDeviceFilters>
      _instance;
} _ClusterDeviceFilters_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto {
static void InitDefaultsTaskDeviceFilters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TaskDeviceFilters_default_instance_;
    new (ptr) ::tensorflow::TaskDeviceFilters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TaskDeviceFilters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskDeviceFilters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskDeviceFilters}, {}};

static void InitDefaultsJobDeviceFilters_TasksEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_JobDeviceFilters_TasksEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse();
  }
  ::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JobDeviceFilters_TasksEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJobDeviceFilters_TasksEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_TaskDeviceFilters.base,}};

static void InitDefaultsJobDeviceFilters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_JobDeviceFilters_default_instance_;
    new (ptr) ::tensorflow::JobDeviceFilters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::JobDeviceFilters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JobDeviceFilters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJobDeviceFilters}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_JobDeviceFilters_TasksEntry_DoNotUse.base,}};

static void InitDefaultsClusterDeviceFilters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ClusterDeviceFilters_default_instance_;
    new (ptr) ::tensorflow::ClusterDeviceFilters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ClusterDeviceFilters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClusterDeviceFilters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClusterDeviceFilters}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_JobDeviceFilters.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TaskDeviceFilters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JobDeviceFilters_TasksEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JobDeviceFilters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterDeviceFilters.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TaskDeviceFilters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TaskDeviceFilters, device_filters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::JobDeviceFilters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::JobDeviceFilters, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::JobDeviceFilters, tasks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ClusterDeviceFilters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ClusterDeviceFilters, jobs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::TaskDeviceFilters)},
  { 6, 13, sizeof(::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse)},
  { 15, -1, sizeof(::tensorflow::JobDeviceFilters)},
  { 22, -1, sizeof(::tensorflow::ClusterDeviceFilters)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TaskDeviceFilters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_JobDeviceFilters_TasksEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_JobDeviceFilters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ClusterDeviceFilters_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/protobuf/device_filters.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n-tensorflow/core/protobuf/device_filter"
      "s.proto\022\ntensorflow\"+\n\021TaskDeviceFilters"
      "\022\026\n\016device_filters\030\001 \003(\t\"\245\001\n\020JobDeviceFi"
      "lters\022\014\n\004name\030\001 \001(\t\0226\n\005tasks\030\002 \003(\0132\'.ten"
      "sorflow.JobDeviceFilters.TasksEntry\032K\n\nT"
      "asksEntry\022\013\n\003key\030\001 \001(\005\022,\n\005value\030\002 \001(\0132\035."
      "tensorflow.TaskDeviceFilters:\0028\001\"B\n\024Clus"
      "terDeviceFilters\022*\n\004jobs\030\001 \003(\0132\034.tensorf"
      "low.JobDeviceFiltersB\215\001\n\032org.tensorflow."
      "distruntimeB\023DeviceFiltersProtosP\001ZUgith"
      "ub.com/tensorflow/tensorflow/tensorflow/"
      "go/core/protobuf/for_core_protos_go_prot"
      "o\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 492);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/device_filters.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto
namespace tensorflow {

// ===================================================================

void TaskDeviceFilters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskDeviceFilters::kDeviceFiltersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskDeviceFilters::TaskDeviceFilters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_TaskDeviceFilters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TaskDeviceFilters)
}
TaskDeviceFilters::TaskDeviceFilters(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  device_filters_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_TaskDeviceFilters.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TaskDeviceFilters)
}
TaskDeviceFilters::TaskDeviceFilters(const TaskDeviceFilters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_filters_(from.device_filters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.TaskDeviceFilters)
}

void TaskDeviceFilters::SharedCtor() {
}

TaskDeviceFilters::~TaskDeviceFilters() {
  // @@protoc_insertion_point(destructor:tensorflow.TaskDeviceFilters)
  SharedDtor();
}

void TaskDeviceFilters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TaskDeviceFilters::ArenaDtor(void* object) {
  TaskDeviceFilters* _this = reinterpret_cast< TaskDeviceFilters* >(object);
  (void)_this;
}
void TaskDeviceFilters::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TaskDeviceFilters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TaskDeviceFilters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskDeviceFilters& TaskDeviceFilters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_TaskDeviceFilters.base);
  return *internal_default_instance();
}


void TaskDeviceFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TaskDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_filters_.Clear();
  _internal_metadata_.Clear();
}

bool TaskDeviceFilters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TaskDeviceFilters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string device_filters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_device_filters()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_filters(this->device_filters_size() - 1).data(),
            static_cast<int>(this->device_filters(this->device_filters_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.TaskDeviceFilters.device_filters"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TaskDeviceFilters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TaskDeviceFilters)
  return false;
#undef DO_
}

void TaskDeviceFilters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TaskDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string device_filters = 1;
  for (int i = 0, n = this->device_filters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_filters(i).data(), static_cast<int>(this->device_filters(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TaskDeviceFilters.device_filters");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->device_filters(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TaskDeviceFilters)
}

::google::protobuf::uint8* TaskDeviceFilters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TaskDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string device_filters = 1;
  for (int i = 0, n = this->device_filters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_filters(i).data(), static_cast<int>(this->device_filters(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TaskDeviceFilters.device_filters");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->device_filters(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TaskDeviceFilters)
  return target;
}

size_t TaskDeviceFilters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TaskDeviceFilters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string device_filters = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->device_filters_size());
  for (int i = 0, n = this->device_filters_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->device_filters(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskDeviceFilters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TaskDeviceFilters)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskDeviceFilters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskDeviceFilters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TaskDeviceFilters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TaskDeviceFilters)
    MergeFrom(*source);
  }
}

void TaskDeviceFilters::MergeFrom(const TaskDeviceFilters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TaskDeviceFilters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_filters_.MergeFrom(from.device_filters_);
}

void TaskDeviceFilters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TaskDeviceFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskDeviceFilters::CopyFrom(const TaskDeviceFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TaskDeviceFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskDeviceFilters::IsInitialized() const {
  return true;
}

void TaskDeviceFilters::Swap(TaskDeviceFilters* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TaskDeviceFilters* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TaskDeviceFilters::UnsafeArenaSwap(TaskDeviceFilters* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TaskDeviceFilters::InternalSwap(TaskDeviceFilters* other) {
  using std::swap;
  device_filters_.InternalSwap(CastToBase(&other->device_filters_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskDeviceFilters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

JobDeviceFilters_TasksEntry_DoNotUse::JobDeviceFilters_TasksEntry_DoNotUse() {}
JobDeviceFilters_TasksEntry_DoNotUse::JobDeviceFilters_TasksEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void JobDeviceFilters_TasksEntry_DoNotUse::MergeFrom(const JobDeviceFilters_TasksEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata JobDeviceFilters_TasksEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::file_level_metadata[1];
}
void JobDeviceFilters_TasksEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void JobDeviceFilters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobDeviceFilters::kNameFieldNumber;
const int JobDeviceFilters::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobDeviceFilters::JobDeviceFilters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_JobDeviceFilters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.JobDeviceFilters)
}
JobDeviceFilters::JobDeviceFilters(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  tasks_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_JobDeviceFilters.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.JobDeviceFilters)
}
JobDeviceFilters::JobDeviceFilters(const JobDeviceFilters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tasks_.MergeFrom(from.tasks_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.JobDeviceFilters)
}

void JobDeviceFilters::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

JobDeviceFilters::~JobDeviceFilters() {
  // @@protoc_insertion_point(destructor:tensorflow.JobDeviceFilters)
  SharedDtor();
}

void JobDeviceFilters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JobDeviceFilters::ArenaDtor(void* object) {
  JobDeviceFilters* _this = reinterpret_cast< JobDeviceFilters* >(object);
  (void)_this;
}
void JobDeviceFilters::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void JobDeviceFilters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JobDeviceFilters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobDeviceFilters& JobDeviceFilters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_JobDeviceFilters.base);
  return *internal_default_instance();
}


void JobDeviceFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.JobDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasks_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool JobDeviceFilters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.JobDeviceFilters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.JobDeviceFilters.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .tensorflow.TaskDeviceFilters> tasks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          JobDeviceFilters_TasksEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              JobDeviceFilters_TasksEntry_DoNotUse,
              ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters > > parser(&tasks_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.JobDeviceFilters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.JobDeviceFilters)
  return false;
#undef DO_
}

void JobDeviceFilters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.JobDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.JobDeviceFilters.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // map<int32, .tensorflow.TaskDeviceFilters> tasks = 2;
  if (!this->tasks().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->tasks().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tasks().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::const_iterator
          it = this->tasks().begin();
          it != this->tasks().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<JobDeviceFilters_TasksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tasks_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<JobDeviceFilters_TasksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::const_iterator
          it = this->tasks().begin();
          it != this->tasks().end(); ++it) {
        entry.reset(tasks_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.JobDeviceFilters)
}

::google::protobuf::uint8* JobDeviceFilters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.JobDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.JobDeviceFilters.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // map<int32, .tensorflow.TaskDeviceFilters> tasks = 2;
  if (!this->tasks().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->tasks().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tasks().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::const_iterator
          it = this->tasks().begin();
          it != this->tasks().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<JobDeviceFilters_TasksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tasks_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<JobDeviceFilters_TasksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::const_iterator
          it = this->tasks().begin();
          it != this->tasks().end(); ++it) {
        entry.reset(tasks_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.JobDeviceFilters)
  return target;
}

size_t JobDeviceFilters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.JobDeviceFilters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, .tensorflow.TaskDeviceFilters> tasks = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tasks_size());
  {
    ::std::unique_ptr<JobDeviceFilters_TasksEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::TaskDeviceFilters >::const_iterator
        it = this->tasks().begin();
        it != this->tasks().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(tasks_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobDeviceFilters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.JobDeviceFilters)
  GOOGLE_DCHECK_NE(&from, this);
  const JobDeviceFilters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobDeviceFilters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.JobDeviceFilters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.JobDeviceFilters)
    MergeFrom(*source);
  }
}

void JobDeviceFilters::MergeFrom(const JobDeviceFilters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.JobDeviceFilters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasks_.MergeFrom(from.tasks_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void JobDeviceFilters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.JobDeviceFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDeviceFilters::CopyFrom(const JobDeviceFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.JobDeviceFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDeviceFilters::IsInitialized() const {
  return true;
}

void JobDeviceFilters::Swap(JobDeviceFilters* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    JobDeviceFilters* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void JobDeviceFilters::UnsafeArenaSwap(JobDeviceFilters* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void JobDeviceFilters::InternalSwap(JobDeviceFilters* other) {
  using std::swap;
  tasks_.Swap(&other->tasks_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JobDeviceFilters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterDeviceFilters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterDeviceFilters::kJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterDeviceFilters::ClusterDeviceFilters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_ClusterDeviceFilters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ClusterDeviceFilters)
}
ClusterDeviceFilters::ClusterDeviceFilters(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  jobs_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_ClusterDeviceFilters.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ClusterDeviceFilters)
}
ClusterDeviceFilters::ClusterDeviceFilters(const ClusterDeviceFilters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jobs_(from.jobs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ClusterDeviceFilters)
}

void ClusterDeviceFilters::SharedCtor() {
}

ClusterDeviceFilters::~ClusterDeviceFilters() {
  // @@protoc_insertion_point(destructor:tensorflow.ClusterDeviceFilters)
  SharedDtor();
}

void ClusterDeviceFilters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ClusterDeviceFilters::ArenaDtor(void* object) {
  ClusterDeviceFilters* _this = reinterpret_cast< ClusterDeviceFilters* >(object);
  (void)_this;
}
void ClusterDeviceFilters::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ClusterDeviceFilters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterDeviceFilters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterDeviceFilters& ClusterDeviceFilters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::scc_info_ClusterDeviceFilters.base);
  return *internal_default_instance();
}


void ClusterDeviceFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ClusterDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jobs_.Clear();
  _internal_metadata_.Clear();
}

bool ClusterDeviceFilters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ClusterDeviceFilters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.JobDeviceFilters jobs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ClusterDeviceFilters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ClusterDeviceFilters)
  return false;
#undef DO_
}

void ClusterDeviceFilters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ClusterDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.JobDeviceFilters jobs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->jobs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ClusterDeviceFilters)
}

::google::protobuf::uint8* ClusterDeviceFilters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ClusterDeviceFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.JobDeviceFilters jobs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->jobs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ClusterDeviceFilters)
  return target;
}

size_t ClusterDeviceFilters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ClusterDeviceFilters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.JobDeviceFilters jobs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jobs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterDeviceFilters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ClusterDeviceFilters)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterDeviceFilters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterDeviceFilters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ClusterDeviceFilters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ClusterDeviceFilters)
    MergeFrom(*source);
  }
}

void ClusterDeviceFilters::MergeFrom(const ClusterDeviceFilters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ClusterDeviceFilters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jobs_.MergeFrom(from.jobs_);
}

void ClusterDeviceFilters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ClusterDeviceFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterDeviceFilters::CopyFrom(const ClusterDeviceFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ClusterDeviceFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterDeviceFilters::IsInitialized() const {
  return true;
}

void ClusterDeviceFilters::Swap(ClusterDeviceFilters* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ClusterDeviceFilters* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ClusterDeviceFilters::UnsafeArenaSwap(ClusterDeviceFilters* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ClusterDeviceFilters::InternalSwap(ClusterDeviceFilters* other) {
  using std::swap;
  CastToBase(&jobs_)->InternalSwap(CastToBase(&other->jobs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterDeviceFilters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5ffilters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TaskDeviceFilters* Arena::CreateMaybeMessage< ::tensorflow::TaskDeviceFilters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::TaskDeviceFilters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::JobDeviceFilters_TasksEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::JobDeviceFilters* Arena::CreateMaybeMessage< ::tensorflow::JobDeviceFilters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::JobDeviceFilters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ClusterDeviceFilters* Arena::CreateMaybeMessage< ::tensorflow::ClusterDeviceFilters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ClusterDeviceFilters >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
