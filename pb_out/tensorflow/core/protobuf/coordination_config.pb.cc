// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/coordination_config.proto

#include "tensorflow/core/protobuf/coordination_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace tensorflow {
class CoordinationServiceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationServiceConfig>
      _instance;
} _CoordinationServiceConfig_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fconfig_2eproto {
static void InitDefaultsCoordinationServiceConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CoordinationServiceConfig_default_instance_;
    new (ptr) ::tensorflow::CoordinationServiceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CoordinationServiceConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CoordinationServiceConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoordinationServiceConfig}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationServiceConfig.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, service_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, service_leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, enable_health_check_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, cluster_register_timeout_in_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, heartbeat_timeout_in_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, coordinated_jobs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, shutdown_barrier_timeout_in_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, agent_destruction_without_shutdown_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::CoordinationServiceConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CoordinationServiceConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/protobuf/coordination_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2tensorflow/core/protobuf/coordination_"
      "config.proto\022\ntensorflow\"\235\002\n\031Coordinatio"
      "nServiceConfig\022\024\n\014service_type\030\001 \001(\t\022\026\n\016"
      "service_leader\030\002 \001(\t\022\033\n\023enable_health_ch"
      "eck\030\003 \001(\010\022&\n\036cluster_register_timeout_in"
      "_ms\030\004 \001(\003\022\037\n\027heartbeat_timeout_in_ms\030\005 \001"
      "(\003\022\030\n\020coordinated_jobs\030\006 \003(\t\022&\n\036shutdown"
      "_barrier_timeout_in_ms\030\007 \001(\003\022*\n\"agent_de"
      "struction_without_shutdown\030\010 \001(\010BWZUgith"
      "ub.com/tensorflow/tensorflow/tensorflow/"
      "go/core/protobuf/for_core_protos_go_prot"
      "ob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 449);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/coordination_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fconfig_2eproto
namespace tensorflow {

// ===================================================================

void CoordinationServiceConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationServiceConfig::kServiceTypeFieldNumber;
const int CoordinationServiceConfig::kServiceLeaderFieldNumber;
const int CoordinationServiceConfig::kEnableHealthCheckFieldNumber;
const int CoordinationServiceConfig::kClusterRegisterTimeoutInMsFieldNumber;
const int CoordinationServiceConfig::kHeartbeatTimeoutInMsFieldNumber;
const int CoordinationServiceConfig::kCoordinatedJobsFieldNumber;
const int CoordinationServiceConfig::kShutdownBarrierTimeoutInMsFieldNumber;
const int CoordinationServiceConfig::kAgentDestructionWithoutShutdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationServiceConfig::CoordinationServiceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fconfig_2eproto::scc_info_CoordinationServiceConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CoordinationServiceConfig)
}
CoordinationServiceConfig::CoordinationServiceConfig(const CoordinationServiceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      coordinated_jobs_(from.coordinated_jobs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_type().size() > 0) {
    service_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_type_);
  }
  service_leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_leader().size() > 0) {
    service_leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_leader_);
  }
  ::memcpy(&cluster_register_timeout_in_ms_, &from.cluster_register_timeout_in_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&agent_destruction_without_shutdown_) -
    reinterpret_cast<char*>(&cluster_register_timeout_in_ms_)) + sizeof(agent_destruction_without_shutdown_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CoordinationServiceConfig)
}

void CoordinationServiceConfig::SharedCtor() {
  service_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_register_timeout_in_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&agent_destruction_without_shutdown_) -
      reinterpret_cast<char*>(&cluster_register_timeout_in_ms_)) + sizeof(agent_destruction_without_shutdown_));
}

CoordinationServiceConfig::~CoordinationServiceConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.CoordinationServiceConfig)
  SharedDtor();
}

void CoordinationServiceConfig::SharedDtor() {
  service_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_leader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CoordinationServiceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoordinationServiceConfig::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoordinationServiceConfig& CoordinationServiceConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fconfig_2eproto::scc_info_CoordinationServiceConfig.base);
  return *internal_default_instance();
}


void CoordinationServiceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CoordinationServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coordinated_jobs_.Clear();
  service_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_leader_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_register_timeout_in_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&agent_destruction_without_shutdown_) -
      reinterpret_cast<char*>(&cluster_register_timeout_in_ms_)) + sizeof(agent_destruction_without_shutdown_));
  _internal_metadata_.Clear();
}

bool CoordinationServiceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CoordinationServiceConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_type().data(), static_cast<int>(this->service_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CoordinationServiceConfig.service_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_leader = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_leader()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_leader().data(), static_cast<int>(this->service_leader().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CoordinationServiceConfig.service_leader"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_health_check = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_health_check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 cluster_register_timeout_in_ms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cluster_register_timeout_in_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 heartbeat_timeout_in_ms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &heartbeat_timeout_in_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string coordinated_jobs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_coordinated_jobs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coordinated_jobs(this->coordinated_jobs_size() - 1).data(),
            static_cast<int>(this->coordinated_jobs(this->coordinated_jobs_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CoordinationServiceConfig.coordinated_jobs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 shutdown_barrier_timeout_in_ms = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shutdown_barrier_timeout_in_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool agent_destruction_without_shutdown = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agent_destruction_without_shutdown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CoordinationServiceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CoordinationServiceConfig)
  return false;
#undef DO_
}

void CoordinationServiceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CoordinationServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_type = 1;
  if (this->service_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_type().data(), static_cast<int>(this->service_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CoordinationServiceConfig.service_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_type(), output);
  }

  // string service_leader = 2;
  if (this->service_leader().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_leader().data(), static_cast<int>(this->service_leader().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CoordinationServiceConfig.service_leader");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service_leader(), output);
  }

  // bool enable_health_check = 3;
  if (this->enable_health_check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable_health_check(), output);
  }

  // int64 cluster_register_timeout_in_ms = 4;
  if (this->cluster_register_timeout_in_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->cluster_register_timeout_in_ms(), output);
  }

  // int64 heartbeat_timeout_in_ms = 5;
  if (this->heartbeat_timeout_in_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->heartbeat_timeout_in_ms(), output);
  }

  // repeated string coordinated_jobs = 6;
  for (int i = 0, n = this->coordinated_jobs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coordinated_jobs(i).data(), static_cast<int>(this->coordinated_jobs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CoordinationServiceConfig.coordinated_jobs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->coordinated_jobs(i), output);
  }

  // int64 shutdown_barrier_timeout_in_ms = 7;
  if (this->shutdown_barrier_timeout_in_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->shutdown_barrier_timeout_in_ms(), output);
  }

  // bool agent_destruction_without_shutdown = 8;
  if (this->agent_destruction_without_shutdown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->agent_destruction_without_shutdown(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CoordinationServiceConfig)
}

::google::protobuf::uint8* CoordinationServiceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CoordinationServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_type = 1;
  if (this->service_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_type().data(), static_cast<int>(this->service_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CoordinationServiceConfig.service_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_type(), target);
  }

  // string service_leader = 2;
  if (this->service_leader().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_leader().data(), static_cast<int>(this->service_leader().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CoordinationServiceConfig.service_leader");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service_leader(), target);
  }

  // bool enable_health_check = 3;
  if (this->enable_health_check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable_health_check(), target);
  }

  // int64 cluster_register_timeout_in_ms = 4;
  if (this->cluster_register_timeout_in_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->cluster_register_timeout_in_ms(), target);
  }

  // int64 heartbeat_timeout_in_ms = 5;
  if (this->heartbeat_timeout_in_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->heartbeat_timeout_in_ms(), target);
  }

  // repeated string coordinated_jobs = 6;
  for (int i = 0, n = this->coordinated_jobs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coordinated_jobs(i).data(), static_cast<int>(this->coordinated_jobs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CoordinationServiceConfig.coordinated_jobs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->coordinated_jobs(i), target);
  }

  // int64 shutdown_barrier_timeout_in_ms = 7;
  if (this->shutdown_barrier_timeout_in_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->shutdown_barrier_timeout_in_ms(), target);
  }

  // bool agent_destruction_without_shutdown = 8;
  if (this->agent_destruction_without_shutdown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->agent_destruction_without_shutdown(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CoordinationServiceConfig)
  return target;
}

size_t CoordinationServiceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CoordinationServiceConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string coordinated_jobs = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->coordinated_jobs_size());
  for (int i = 0, n = this->coordinated_jobs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->coordinated_jobs(i));
  }

  // string service_type = 1;
  if (this->service_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_type());
  }

  // string service_leader = 2;
  if (this->service_leader().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_leader());
  }

  // int64 cluster_register_timeout_in_ms = 4;
  if (this->cluster_register_timeout_in_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cluster_register_timeout_in_ms());
  }

  // int64 heartbeat_timeout_in_ms = 5;
  if (this->heartbeat_timeout_in_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->heartbeat_timeout_in_ms());
  }

  // int64 shutdown_barrier_timeout_in_ms = 7;
  if (this->shutdown_barrier_timeout_in_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shutdown_barrier_timeout_in_ms());
  }

  // bool enable_health_check = 3;
  if (this->enable_health_check() != 0) {
    total_size += 1 + 1;
  }

  // bool agent_destruction_without_shutdown = 8;
  if (this->agent_destruction_without_shutdown() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationServiceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CoordinationServiceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationServiceConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoordinationServiceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CoordinationServiceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CoordinationServiceConfig)
    MergeFrom(*source);
  }
}

void CoordinationServiceConfig::MergeFrom(const CoordinationServiceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CoordinationServiceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coordinated_jobs_.MergeFrom(from.coordinated_jobs_);
  if (from.service_type().size() > 0) {

    service_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_type_);
  }
  if (from.service_leader().size() > 0) {

    service_leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_leader_);
  }
  if (from.cluster_register_timeout_in_ms() != 0) {
    set_cluster_register_timeout_in_ms(from.cluster_register_timeout_in_ms());
  }
  if (from.heartbeat_timeout_in_ms() != 0) {
    set_heartbeat_timeout_in_ms(from.heartbeat_timeout_in_ms());
  }
  if (from.shutdown_barrier_timeout_in_ms() != 0) {
    set_shutdown_barrier_timeout_in_ms(from.shutdown_barrier_timeout_in_ms());
  }
  if (from.enable_health_check() != 0) {
    set_enable_health_check(from.enable_health_check());
  }
  if (from.agent_destruction_without_shutdown() != 0) {
    set_agent_destruction_without_shutdown(from.agent_destruction_without_shutdown());
  }
}

void CoordinationServiceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CoordinationServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationServiceConfig::CopyFrom(const CoordinationServiceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CoordinationServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationServiceConfig::IsInitialized() const {
  return true;
}

void CoordinationServiceConfig::Swap(CoordinationServiceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationServiceConfig::InternalSwap(CoordinationServiceConfig* other) {
  using std::swap;
  coordinated_jobs_.InternalSwap(CastToBase(&other->coordinated_jobs_));
  service_type_.Swap(&other->service_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_leader_.Swap(&other->service_leader_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cluster_register_timeout_in_ms_, other->cluster_register_timeout_in_ms_);
  swap(heartbeat_timeout_in_ms_, other->heartbeat_timeout_in_ms_);
  swap(shutdown_barrier_timeout_in_ms_, other->shutdown_barrier_timeout_in_ms_);
  swap(enable_health_check_, other->enable_health_check_);
  swap(agent_destruction_without_shutdown_, other->agent_destruction_without_shutdown_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoordinationServiceConfig::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CoordinationServiceConfig* Arena::CreateMaybeMessage< ::tensorflow::CoordinationServiceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::CoordinationServiceConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
