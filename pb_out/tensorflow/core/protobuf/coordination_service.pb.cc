// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/coordination_service.proto

#include "tensorflow/core/protobuf/coordination_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GlobalTopologyProto;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAttributes;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CoordinatedTask;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyValueEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CoordinationServiceError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TfDeviceList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_XlaDeviceList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CoordinationServiceDeviceInfo;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto
namespace tensorflow {
class CoordinatedTaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinatedTask>
      _instance;
} _CoordinatedTask_default_instance_;
class CoordinationServiceErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationServiceError>
      _instance;
} _CoordinationServiceError_default_instance_;
class TfDeviceListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TfDeviceList>
      _instance;
} _TfDeviceList_default_instance_;
class XlaDeviceListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaDeviceList>
      _instance;
} _XlaDeviceList_default_instance_;
class CoordinationServiceDeviceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationServiceDeviceInfo>
      _instance;
  const ::tensorflow::TfDeviceList* tf_;
  const ::tensorflow::XlaDeviceList* xla_;
} _CoordinationServiceDeviceInfo_default_instance_;
class RegisterTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterTaskRequest>
      _instance;
} _RegisterTaskRequest_default_instance_;
class RegisterTaskResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterTaskResponse>
      _instance;
} _RegisterTaskResponse_default_instance_;
class HeartbeatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRequest>
      _instance;
} _HeartbeatRequest_default_instance_;
class HeartbeatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatResponse>
      _instance;
} _HeartbeatResponse_default_instance_;
class WaitForAllTasksRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitForAllTasksRequest>
      _instance;
} _WaitForAllTasksRequest_default_instance_;
class WaitForAllTasksResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitForAllTasksResponse>
      _instance;
} _WaitForAllTasksResponse_default_instance_;
class ShutdownTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShutdownTaskRequest>
      _instance;
} _ShutdownTaskRequest_default_instance_;
class ShutdownTaskResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShutdownTaskResponse>
      _instance;
} _ShutdownTaskResponse_default_instance_;
class ResetTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetTaskRequest>
      _instance;
} _ResetTaskRequest_default_instance_;
class ResetTaskResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetTaskResponse>
      _instance;
} _ResetTaskResponse_default_instance_;
class ReportErrorToTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportErrorToTaskRequest>
      _instance;
} _ReportErrorToTaskRequest_default_instance_;
class ReportErrorToTaskResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportErrorToTaskResponse>
      _instance;
} _ReportErrorToTaskResponse_default_instance_;
class ReportErrorToServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportErrorToServiceRequest>
      _instance;
} _ReportErrorToServiceRequest_default_instance_;
class ReportErrorToServiceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportErrorToServiceResponse>
      _instance;
} _ReportErrorToServiceResponse_default_instance_;
class KeyValueEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValueEntry>
      _instance;
} _KeyValueEntry_default_instance_;
class InsertKeyValueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertKeyValueRequest>
      _instance;
} _InsertKeyValueRequest_default_instance_;
class InsertKeyValueResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertKeyValueResponse>
      _instance;
} _InsertKeyValueResponse_default_instance_;
class GetKeyValueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetKeyValueRequest>
      _instance;
} _GetKeyValueRequest_default_instance_;
class GetKeyValueResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetKeyValueResponse>
      _instance;
} _GetKeyValueResponse_default_instance_;
class DeleteKeyValueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteKeyValueRequest>
      _instance;
} _DeleteKeyValueRequest_default_instance_;
class DeleteKeyValueResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteKeyValueResponse>
      _instance;
} _DeleteKeyValueResponse_default_instance_;
class BarrierRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BarrierRequest>
      _instance;
} _BarrierRequest_default_instance_;
class BarrierResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BarrierResponse>
      _instance;
} _BarrierResponse_default_instance_;
class CancelBarrierRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelBarrierRequest>
      _instance;
} _CancelBarrierRequest_default_instance_;
class CancelBarrierResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelBarrierResponse>
      _instance;
} _CancelBarrierResponse_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto {
static void InitDefaultsCoordinatedTask() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CoordinatedTask_default_instance_;
    new (ptr) ::tensorflow::CoordinatedTask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CoordinatedTask::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CoordinatedTask =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoordinatedTask}, {}};

static void InitDefaultsCoordinationServiceError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CoordinationServiceError_default_instance_;
    new (ptr) ::tensorflow::CoordinationServiceError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CoordinationServiceError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CoordinationServiceError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCoordinationServiceError}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsTfDeviceList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TfDeviceList_default_instance_;
    new (ptr) ::tensorflow::TfDeviceList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TfDeviceList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TfDeviceList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTfDeviceList}, {
      &protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::scc_info_DeviceAttributes.base,}};

static void InitDefaultsXlaDeviceList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaDeviceList_default_instance_;
    new (ptr) ::tensorflow::XlaDeviceList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaDeviceList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_XlaDeviceList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsXlaDeviceList}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_GlobalTopologyProto.base,}};

static void InitDefaultsCoordinationServiceDeviceInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CoordinationServiceDeviceInfo_default_instance_;
    new (ptr) ::tensorflow::CoordinationServiceDeviceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CoordinationServiceDeviceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CoordinationServiceDeviceInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCoordinationServiceDeviceInfo}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_TfDeviceList.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_XlaDeviceList.base,}};

static void InitDefaultsRegisterTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RegisterTaskRequest_default_instance_;
    new (ptr) ::tensorflow::RegisterTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RegisterTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegisterTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegisterTaskRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsRegisterTaskResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RegisterTaskResponse_default_instance_;
    new (ptr) ::tensorflow::RegisterTaskResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RegisterTaskResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterTaskResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterTaskResponse}, {}};

static void InitDefaultsHeartbeatRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_HeartbeatRequest_default_instance_;
    new (ptr) ::tensorflow::HeartbeatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::HeartbeatRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HeartbeatRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHeartbeatRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsHeartbeatResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_HeartbeatResponse_default_instance_;
    new (ptr) ::tensorflow::HeartbeatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::HeartbeatResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartbeatResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartbeatResponse}, {}};

static void InitDefaultsWaitForAllTasksRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_WaitForAllTasksRequest_default_instance_;
    new (ptr) ::tensorflow::WaitForAllTasksRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::WaitForAllTasksRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WaitForAllTasksRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWaitForAllTasksRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinationServiceDeviceInfo.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsWaitForAllTasksResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_WaitForAllTasksResponse_default_instance_;
    new (ptr) ::tensorflow::WaitForAllTasksResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::WaitForAllTasksResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WaitForAllTasksResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWaitForAllTasksResponse}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinationServiceDeviceInfo.base,}};

static void InitDefaultsShutdownTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ShutdownTaskRequest_default_instance_;
    new (ptr) ::tensorflow::ShutdownTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ShutdownTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShutdownTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShutdownTaskRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsShutdownTaskResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ShutdownTaskResponse_default_instance_;
    new (ptr) ::tensorflow::ShutdownTaskResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ShutdownTaskResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShutdownTaskResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShutdownTaskResponse}, {}};

static void InitDefaultsResetTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ResetTaskRequest_default_instance_;
    new (ptr) ::tensorflow::ResetTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ResetTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResetTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResetTaskRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsResetTaskResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ResetTaskResponse_default_instance_;
    new (ptr) ::tensorflow::ResetTaskResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ResetTaskResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetTaskResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetTaskResponse}, {}};

static void InitDefaultsReportErrorToTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ReportErrorToTaskRequest_default_instance_;
    new (ptr) ::tensorflow::ReportErrorToTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ReportErrorToTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReportErrorToTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReportErrorToTaskRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinationServiceError.base,}};

static void InitDefaultsReportErrorToTaskResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ReportErrorToTaskResponse_default_instance_;
    new (ptr) ::tensorflow::ReportErrorToTaskResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ReportErrorToTaskResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportErrorToTaskResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportErrorToTaskResponse}, {}};

static void InitDefaultsReportErrorToServiceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ReportErrorToServiceRequest_default_instance_;
    new (ptr) ::tensorflow::ReportErrorToServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ReportErrorToServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReportErrorToServiceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReportErrorToServiceRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsReportErrorToServiceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ReportErrorToServiceResponse_default_instance_;
    new (ptr) ::tensorflow::ReportErrorToServiceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ReportErrorToServiceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportErrorToServiceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportErrorToServiceResponse}, {}};

static void InitDefaultsKeyValueEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_KeyValueEntry_default_instance_;
    new (ptr) ::tensorflow::KeyValueEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::KeyValueEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyValueEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyValueEntry}, {}};

static void InitDefaultsInsertKeyValueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_InsertKeyValueRequest_default_instance_;
    new (ptr) ::tensorflow::InsertKeyValueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::InsertKeyValueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InsertKeyValueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInsertKeyValueRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_KeyValueEntry.base,}};

static void InitDefaultsInsertKeyValueResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_InsertKeyValueResponse_default_instance_;
    new (ptr) ::tensorflow::InsertKeyValueResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::InsertKeyValueResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InsertKeyValueResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInsertKeyValueResponse}, {}};

static void InitDefaultsGetKeyValueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GetKeyValueRequest_default_instance_;
    new (ptr) ::tensorflow::GetKeyValueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GetKeyValueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetKeyValueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetKeyValueRequest}, {}};

static void InitDefaultsGetKeyValueResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GetKeyValueResponse_default_instance_;
    new (ptr) ::tensorflow::GetKeyValueResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GetKeyValueResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetKeyValueResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetKeyValueResponse}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_KeyValueEntry.base,}};

static void InitDefaultsDeleteKeyValueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DeleteKeyValueRequest_default_instance_;
    new (ptr) ::tensorflow::DeleteKeyValueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DeleteKeyValueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteKeyValueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteKeyValueRequest}, {}};

static void InitDefaultsDeleteKeyValueResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DeleteKeyValueResponse_default_instance_;
    new (ptr) ::tensorflow::DeleteKeyValueResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DeleteKeyValueResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteKeyValueResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteKeyValueResponse}, {}};

static void InitDefaultsBarrierRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_BarrierRequest_default_instance_;
    new (ptr) ::tensorflow::BarrierRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::BarrierRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BarrierRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBarrierRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsBarrierResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_BarrierResponse_default_instance_;
    new (ptr) ::tensorflow::BarrierResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::BarrierResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BarrierResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBarrierResponse}, {}};

static void InitDefaultsCancelBarrierRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CancelBarrierRequest_default_instance_;
    new (ptr) ::tensorflow::CancelBarrierRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CancelBarrierRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CancelBarrierRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCancelBarrierRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base,}};

static void InitDefaultsCancelBarrierResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CancelBarrierResponse_default_instance_;
    new (ptr) ::tensorflow::CancelBarrierResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CancelBarrierResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CancelBarrierResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancelBarrierResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinatedTask.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationServiceError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TfDeviceList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XlaDeviceList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationServiceDeviceInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterTaskResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartbeatRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartbeatResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitForAllTasksRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitForAllTasksResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShutdownTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShutdownTaskResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetTaskResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportErrorToTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportErrorToTaskResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportErrorToServiceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportErrorToServiceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyValueEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertKeyValueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertKeyValueResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetKeyValueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetKeyValueResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteKeyValueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteKeyValueResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BarrierRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BarrierResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelBarrierRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelBarrierResponse.base);
}

::google::protobuf::Metadata file_level_metadata[30];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinatedTask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinatedTask, job_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinatedTask, task_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceError, is_reported_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceError, source_task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TfDeviceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TfDeviceList, devices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaDeviceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaDeviceList, devices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceDeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceDeviceInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::tensorflow::CoordinationServiceDeviceInfoDefaultTypeInternal, tf_),
  offsetof(::tensorflow::CoordinationServiceDeviceInfoDefaultTypeInternal, xla_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CoordinationServiceDeviceInfo, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterTaskRequest, incarnation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterTaskRequest, source_task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterTaskResponse, leader_incarnation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::HeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::HeartbeatRequest, incarnation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::HeartbeatRequest, source_task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::HeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::HeartbeatResponse, leader_incarnation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::WaitForAllTasksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::WaitForAllTasksRequest, local_device_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::WaitForAllTasksRequest, source_task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::WaitForAllTasksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::WaitForAllTasksResponse, leader_incarnation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::WaitForAllTasksResponse, cluster_device_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ShutdownTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ShutdownTaskRequest, source_task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ShutdownTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ResetTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ResetTaskRequest, source_task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ResetTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToTaskRequest, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToTaskRequest, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToTaskRequest, error_payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToServiceRequest, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToServiceRequest, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToServiceRequest, error_origin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ReportErrorToServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::KeyValueEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::KeyValueEntry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::KeyValueEntry, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::InsertKeyValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::InsertKeyValueRequest, kv_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::InsertKeyValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetKeyValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetKeyValueRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetKeyValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetKeyValueResponse, kv_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeleteKeyValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeleteKeyValueRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeleteKeyValueRequest, is_directory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeleteKeyValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::BarrierRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::BarrierRequest, barrier_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::BarrierRequest, barrier_timeout_in_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::BarrierRequest, tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::BarrierRequest, source_task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::BarrierResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CancelBarrierRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CancelBarrierRequest, barrier_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CancelBarrierRequest, source_task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CancelBarrierResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::CoordinatedTask)},
  { 7, -1, sizeof(::tensorflow::CoordinationServiceError)},
  { 14, -1, sizeof(::tensorflow::TfDeviceList)},
  { 20, -1, sizeof(::tensorflow::XlaDeviceList)},
  { 26, -1, sizeof(::tensorflow::CoordinationServiceDeviceInfo)},
  { 34, -1, sizeof(::tensorflow::RegisterTaskRequest)},
  { 41, -1, sizeof(::tensorflow::RegisterTaskResponse)},
  { 47, -1, sizeof(::tensorflow::HeartbeatRequest)},
  { 54, -1, sizeof(::tensorflow::HeartbeatResponse)},
  { 60, -1, sizeof(::tensorflow::WaitForAllTasksRequest)},
  { 67, -1, sizeof(::tensorflow::WaitForAllTasksResponse)},
  { 74, -1, sizeof(::tensorflow::ShutdownTaskRequest)},
  { 80, -1, sizeof(::tensorflow::ShutdownTaskResponse)},
  { 85, -1, sizeof(::tensorflow::ResetTaskRequest)},
  { 91, -1, sizeof(::tensorflow::ResetTaskResponse)},
  { 96, -1, sizeof(::tensorflow::ReportErrorToTaskRequest)},
  { 104, -1, sizeof(::tensorflow::ReportErrorToTaskResponse)},
  { 109, -1, sizeof(::tensorflow::ReportErrorToServiceRequest)},
  { 117, -1, sizeof(::tensorflow::ReportErrorToServiceResponse)},
  { 122, -1, sizeof(::tensorflow::KeyValueEntry)},
  { 129, -1, sizeof(::tensorflow::InsertKeyValueRequest)},
  { 135, -1, sizeof(::tensorflow::InsertKeyValueResponse)},
  { 140, -1, sizeof(::tensorflow::GetKeyValueRequest)},
  { 146, -1, sizeof(::tensorflow::GetKeyValueResponse)},
  { 152, -1, sizeof(::tensorflow::DeleteKeyValueRequest)},
  { 159, -1, sizeof(::tensorflow::DeleteKeyValueResponse)},
  { 164, -1, sizeof(::tensorflow::BarrierRequest)},
  { 173, -1, sizeof(::tensorflow::BarrierResponse)},
  { 178, -1, sizeof(::tensorflow::CancelBarrierRequest)},
  { 185, -1, sizeof(::tensorflow::CancelBarrierResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CoordinatedTask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CoordinationServiceError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TfDeviceList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaDeviceList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CoordinationServiceDeviceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RegisterTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RegisterTaskResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_HeartbeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_HeartbeatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_WaitForAllTasksRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_WaitForAllTasksResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ShutdownTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ShutdownTaskResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ResetTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ResetTaskResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ReportErrorToTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ReportErrorToTaskResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ReportErrorToServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ReportErrorToServiceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_KeyValueEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_InsertKeyValueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_InsertKeyValueResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_GetKeyValueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_GetKeyValueResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DeleteKeyValueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DeleteKeyValueResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_BarrierRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_BarrierResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CancelBarrierRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CancelBarrierResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/protobuf/coordination_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n3tensorflow/core/protobuf/coordination_"
      "service.proto\022\ntensorflow\0327tensorflow/co"
      "mpiler/xla/pjrt/distributed/protocol.pro"
      "to\0321tensorflow/core/framework/device_att"
      "ributes.proto\"4\n\017CoordinatedTask\022\020\n\010job_"
      "name\030\001 \001(\t\022\017\n\007task_id\030\002 \001(\005\"s\n\030Coordinat"
      "ionServiceError\022\031\n\021is_reported_error\030\003 \001"
      "(\010\0220\n\013source_task\030\004 \001(\0132\033.tensorflow.Coo"
      "rdinatedTaskJ\004\010\001\020\002J\004\010\002\020\003\"=\n\014TfDeviceList"
      "\022-\n\007devices\030\001 \003(\0132\034.tensorflow.DeviceAtt"
      "ributes\":\n\rXlaDeviceList\022)\n\007devices\030\001 \001("
      "\0132\030.xla.GlobalTopologyProto\"y\n\035Coordinat"
      "ionServiceDeviceInfo\022&\n\002tf\030\001 \001(\0132\030.tenso"
      "rflow.TfDeviceListH\000\022(\n\003xla\030\002 \001(\0132\031.tens"
      "orflow.XlaDeviceListH\000B\006\n\004type\"n\n\023Regist"
      "erTaskRequest\022\023\n\013incarnation\030\003 \001(\006\0220\n\013so"
      "urce_task\030\005 \001(\0132\033.tensorflow.Coordinated"
      "TaskJ\004\010\001\020\002J\004\010\002\020\003J\004\010\004\020\005\"2\n\024RegisterTaskRe"
      "sponse\022\032\n\022leader_incarnation\030\001 \001(\006\"e\n\020He"
      "artbeatRequest\022\023\n\013incarnation\030\003 \001(\006\0220\n\013s"
      "ource_task\030\004 \001(\0132\033.tensorflow.Coordinate"
      "dTaskJ\004\010\001\020\002J\004\010\002\020\003\"/\n\021HeartbeatResponse\022\032"
      "\n\022leader_incarnation\030\001 \001(\006\"\242\001\n\026WaitForAl"
      "lTasksRequest\022D\n\021local_device_info\030\004 \001(\013"
      "2).tensorflow.CoordinationServiceDeviceI"
      "nfo\0220\n\013source_task\030\005 \001(\0132\033.tensorflow.Co"
      "ordinatedTaskJ\004\010\001\020\002J\004\010\002\020\003J\004\010\003\020\004\"\203\001\n\027Wait"
      "ForAllTasksResponse\022\032\n\022leader_incarnatio"
      "n\030\001 \001(\006\022F\n\023cluster_device_info\030\003 \001(\0132).t"
      "ensorflow.CoordinationServiceDeviceInfoJ"
      "\004\010\002\020\003\"G\n\023ShutdownTaskRequest\0220\n\013source_t"
      "ask\030\001 \001(\0132\033.tensorflow.CoordinatedTask\"\026"
      "\n\024ShutdownTaskResponse\"D\n\020ResetTaskReque"
      "st\0220\n\013source_task\030\001 \001(\0132\033.tensorflow.Coo"
      "rdinatedTask\"\023\n\021ResetTaskResponse\"\216\001\n\030Re"
      "portErrorToTaskRequest\022\022\n\nerror_code\030\001 \001"
      "(\005\022\025\n\rerror_message\030\002 \001(\t\022;\n\rerror_paylo"
      "ad\030\005 \001(\0132$.tensorflow.CoordinationServic"
      "eErrorJ\004\010\003\020\004J\004\010\004\020\005\"\033\n\031ReportErrorToTaskR"
      "esponse\"\207\001\n\033ReportErrorToServiceRequest\022"
      "\022\n\nerror_code\030\001 \001(\005\022\025\n\rerror_message\030\002 \001"
      "(\t\0221\n\014error_origin\030\005 \001(\0132\033.tensorflow.Co"
      "ordinatedTaskJ\004\010\003\020\004J\004\010\004\020\005\"\036\n\034ReportError"
      "ToServiceResponse\"+\n\rKeyValueEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\">\n\025InsertKeyValue"
      "Request\022%\n\002kv\030\001 \001(\0132\031.tensorflow.KeyValu"
      "eEntry\"\030\n\026InsertKeyValueResponse\"!\n\022GetK"
      "eyValueRequest\022\013\n\003key\030\001 \001(\t\"<\n\023GetKeyVal"
      "ueResponse\022%\n\002kv\030\001 \001(\0132\031.tensorflow.KeyV"
      "alueEntry\":\n\025DeleteKeyValueRequest\022\013\n\003ke"
      "y\030\001 \001(\t\022\024\n\014is_directory\030\002 \001(\010\"\030\n\026DeleteK"
      "eyValueResponse\"\241\001\n\016BarrierRequest\022\022\n\nba"
      "rrier_id\030\001 \001(\t\022\035\n\025barrier_timeout_in_ms\030"
      "\002 \001(\003\022*\n\005tasks\030\003 \003(\0132\033.tensorflow.Coordi"
      "natedTask\0220\n\013source_task\030\004 \001(\0132\033.tensorf"
      "low.CoordinatedTask\"\021\n\017BarrierResponse\"\\"
      "\n\024CancelBarrierRequest\022\022\n\nbarrier_id\030\001 \001"
      "(\t\0220\n\013source_task\030\002 \001(\0132\033.tensorflow.Coo"
      "rdinatedTask\"\027\n\025CancelBarrierResponse2\224\010"
      "\n\023CoordinationService\022Q\n\014RegisterTask\022\037."
      "tensorflow.RegisterTaskRequest\032 .tensorf"
      "low.RegisterTaskResponse\022H\n\tHeartbeat\022\034."
      "tensorflow.HeartbeatRequest\032\035.tensorflow"
      ".HeartbeatResponse\022Z\n\017WaitForAllTasks\022\"."
      "tensorflow.WaitForAllTasksRequest\032#.tens"
      "orflow.WaitForAllTasksResponse\022Q\n\014Shutdo"
      "wnTask\022\037.tensorflow.ShutdownTaskRequest\032"
      " .tensorflow.ShutdownTaskResponse\022H\n\tRes"
      "etTask\022\034.tensorflow.ResetTaskRequest\032\035.t"
      "ensorflow.ResetTaskResponse\022`\n\021ReportErr"
      "orToTask\022$.tensorflow.ReportErrorToTaskR"
      "equest\032%.tensorflow.ReportErrorToTaskRes"
      "ponse\022i\n\024ReportErrorToService\022\'.tensorfl"
      "ow.ReportErrorToServiceRequest\032(.tensorf"
      "low.ReportErrorToServiceResponse\022W\n\016Inse"
      "rtKeyValue\022!.tensorflow.InsertKeyValueRe"
      "quest\032\".tensorflow.InsertKeyValueRespons"
      "e\022N\n\013GetKeyValue\022\036.tensorflow.GetKeyValu"
      "eRequest\032\037.tensorflow.GetKeyValueRespons"
      "e\022W\n\016DeleteKeyValue\022!.tensorflow.DeleteK"
      "eyValueRequest\032\".tensorflow.DeleteKeyVal"
      "ueResponse\022B\n\007Barrier\022\032.tensorflow.Barri"
      "erRequest\032\033.tensorflow.BarrierResponse\022T"
      "\n\rCancelBarrier\022 .tensorflow.CancelBarri"
      "erRequest\032!.tensorflow.CancelBarrierResp"
      "onseBWZUgithub.com/tensorflow/tensorflow"
      "/tensorflow/go/core/protobuf/for_core_pr"
      "otos_go_protob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3501);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/coordination_service.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto
namespace tensorflow {

// ===================================================================

void CoordinatedTask::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinatedTask::kJobNameFieldNumber;
const int CoordinatedTask::kTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinatedTask::CoordinatedTask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CoordinatedTask)
}
CoordinatedTask::CoordinatedTask(const CoordinatedTask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_name().size() > 0) {
    job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_name_);
  }
  task_id_ = from.task_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.CoordinatedTask)
}

void CoordinatedTask::SharedCtor() {
  job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_ = 0;
}

CoordinatedTask::~CoordinatedTask() {
  // @@protoc_insertion_point(destructor:tensorflow.CoordinatedTask)
  SharedDtor();
}

void CoordinatedTask::SharedDtor() {
  job_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CoordinatedTask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoordinatedTask::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoordinatedTask& CoordinatedTask::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinatedTask.base);
  return *internal_default_instance();
}


void CoordinatedTask::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CoordinatedTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_ = 0;
  _internal_metadata_.Clear();
}

bool CoordinatedTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CoordinatedTask)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string job_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_name().data(), static_cast<int>(this->job_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CoordinatedTask.job_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 task_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CoordinatedTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CoordinatedTask)
  return false;
#undef DO_
}

void CoordinatedTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CoordinatedTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string job_name = 1;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), static_cast<int>(this->job_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CoordinatedTask.job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->job_name(), output);
  }

  // int32 task_id = 2;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CoordinatedTask)
}

::google::protobuf::uint8* CoordinatedTask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CoordinatedTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string job_name = 1;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), static_cast<int>(this->job_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CoordinatedTask.job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->job_name(), target);
  }

  // int32 task_id = 2;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CoordinatedTask)
  return target;
}

size_t CoordinatedTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CoordinatedTask)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string job_name = 1;
  if (this->job_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_name());
  }

  // int32 task_id = 2;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinatedTask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CoordinatedTask)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinatedTask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoordinatedTask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CoordinatedTask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CoordinatedTask)
    MergeFrom(*source);
  }
}

void CoordinatedTask::MergeFrom(const CoordinatedTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CoordinatedTask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_name().size() > 0) {

    job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_name_);
  }
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
}

void CoordinatedTask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CoordinatedTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinatedTask::CopyFrom(const CoordinatedTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CoordinatedTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinatedTask::IsInitialized() const {
  return true;
}

void CoordinatedTask::Swap(CoordinatedTask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinatedTask::InternalSwap(CoordinatedTask* other) {
  using std::swap;
  job_name_.Swap(&other->job_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(task_id_, other->task_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoordinatedTask::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoordinationServiceError::InitAsDefaultInstance() {
  ::tensorflow::_CoordinationServiceError_default_instance_._instance.get_mutable()->source_task_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationServiceError::kIsReportedErrorFieldNumber;
const int CoordinationServiceError::kSourceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationServiceError::CoordinationServiceError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinationServiceError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CoordinationServiceError)
}
CoordinationServiceError::CoordinationServiceError(const CoordinationServiceError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_task()) {
    source_task_ = new ::tensorflow::CoordinatedTask(*from.source_task_);
  } else {
    source_task_ = NULL;
  }
  is_reported_error_ = from.is_reported_error_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.CoordinationServiceError)
}

void CoordinationServiceError::SharedCtor() {
  ::memset(&source_task_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_reported_error_) -
      reinterpret_cast<char*>(&source_task_)) + sizeof(is_reported_error_));
}

CoordinationServiceError::~CoordinationServiceError() {
  // @@protoc_insertion_point(destructor:tensorflow.CoordinationServiceError)
  SharedDtor();
}

void CoordinationServiceError::SharedDtor() {
  if (this != internal_default_instance()) delete source_task_;
}

void CoordinationServiceError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoordinationServiceError::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoordinationServiceError& CoordinationServiceError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinationServiceError.base);
  return *internal_default_instance();
}


void CoordinationServiceError::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CoordinationServiceError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_task_ != NULL) {
    delete source_task_;
  }
  source_task_ = NULL;
  is_reported_error_ = false;
  _internal_metadata_.Clear();
}

bool CoordinationServiceError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CoordinationServiceError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_reported_error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_reported_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinatedTask source_task = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CoordinationServiceError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CoordinationServiceError)
  return false;
#undef DO_
}

void CoordinationServiceError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CoordinationServiceError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_reported_error = 3;
  if (this->is_reported_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_reported_error(), output);
  }

  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_source_task(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CoordinationServiceError)
}

::google::protobuf::uint8* CoordinationServiceError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CoordinationServiceError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_reported_error = 3;
  if (this->is_reported_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_reported_error(), target);
  }

  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_source_task(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CoordinationServiceError)
  return target;
}

size_t CoordinationServiceError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CoordinationServiceError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_task_);
  }

  // bool is_reported_error = 3;
  if (this->is_reported_error() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationServiceError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CoordinationServiceError)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationServiceError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoordinationServiceError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CoordinationServiceError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CoordinationServiceError)
    MergeFrom(*source);
  }
}

void CoordinationServiceError::MergeFrom(const CoordinationServiceError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CoordinationServiceError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_task()) {
    mutable_source_task()->::tensorflow::CoordinatedTask::MergeFrom(from.source_task());
  }
  if (from.is_reported_error() != 0) {
    set_is_reported_error(from.is_reported_error());
  }
}

void CoordinationServiceError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CoordinationServiceError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationServiceError::CopyFrom(const CoordinationServiceError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CoordinationServiceError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationServiceError::IsInitialized() const {
  return true;
}

void CoordinationServiceError::Swap(CoordinationServiceError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationServiceError::InternalSwap(CoordinationServiceError* other) {
  using std::swap;
  swap(source_task_, other->source_task_);
  swap(is_reported_error_, other->is_reported_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoordinationServiceError::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TfDeviceList::InitAsDefaultInstance() {
}
void TfDeviceList::clear_devices() {
  devices_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfDeviceList::kDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TfDeviceList::TfDeviceList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_TfDeviceList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TfDeviceList)
}
TfDeviceList::TfDeviceList(const TfDeviceList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devices_(from.devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.TfDeviceList)
}

void TfDeviceList::SharedCtor() {
}

TfDeviceList::~TfDeviceList() {
  // @@protoc_insertion_point(destructor:tensorflow.TfDeviceList)
  SharedDtor();
}

void TfDeviceList::SharedDtor() {
}

void TfDeviceList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TfDeviceList::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TfDeviceList& TfDeviceList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_TfDeviceList.base);
  return *internal_default_instance();
}


void TfDeviceList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TfDeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  _internal_metadata_.Clear();
}

bool TfDeviceList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TfDeviceList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.DeviceAttributes devices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TfDeviceList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TfDeviceList)
  return false;
#undef DO_
}

void TfDeviceList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TfDeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.DeviceAttributes devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->devices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TfDeviceList)
}

::google::protobuf::uint8* TfDeviceList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TfDeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.DeviceAttributes devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->devices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TfDeviceList)
  return target;
}

size_t TfDeviceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TfDeviceList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.DeviceAttributes devices = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfDeviceList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TfDeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  const TfDeviceList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TfDeviceList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TfDeviceList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TfDeviceList)
    MergeFrom(*source);
  }
}

void TfDeviceList::MergeFrom(const TfDeviceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TfDeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
}

void TfDeviceList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TfDeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfDeviceList::CopyFrom(const TfDeviceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TfDeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfDeviceList::IsInitialized() const {
  return true;
}

void TfDeviceList::Swap(TfDeviceList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TfDeviceList::InternalSwap(TfDeviceList* other) {
  using std::swap;
  CastToBase(&devices_)->InternalSwap(CastToBase(&other->devices_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TfDeviceList::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XlaDeviceList::InitAsDefaultInstance() {
  ::tensorflow::_XlaDeviceList_default_instance_._instance.get_mutable()->devices_ = const_cast< ::xla::GlobalTopologyProto*>(
      ::xla::GlobalTopologyProto::internal_default_instance());
}
void XlaDeviceList::clear_devices() {
  if (GetArenaNoVirtual() == NULL && devices_ != NULL) {
    delete devices_;
  }
  devices_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaDeviceList::kDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaDeviceList::XlaDeviceList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_XlaDeviceList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaDeviceList)
}
XlaDeviceList::XlaDeviceList(const XlaDeviceList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_devices()) {
    devices_ = new ::xla::GlobalTopologyProto(*from.devices_);
  } else {
    devices_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaDeviceList)
}

void XlaDeviceList::SharedCtor() {
  devices_ = NULL;
}

XlaDeviceList::~XlaDeviceList() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaDeviceList)
  SharedDtor();
}

void XlaDeviceList::SharedDtor() {
  if (this != internal_default_instance()) delete devices_;
}

void XlaDeviceList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaDeviceList::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaDeviceList& XlaDeviceList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_XlaDeviceList.base);
  return *internal_default_instance();
}


void XlaDeviceList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaDeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && devices_ != NULL) {
    delete devices_;
  }
  devices_ = NULL;
  _internal_metadata_.Clear();
}

bool XlaDeviceList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaDeviceList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalTopologyProto devices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaDeviceList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaDeviceList)
  return false;
#undef DO_
}

void XlaDeviceList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaDeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalTopologyProto devices = 1;
  if (this->has_devices()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_devices(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaDeviceList)
}

::google::protobuf::uint8* XlaDeviceList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaDeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalTopologyProto devices = 1;
  if (this->has_devices()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_devices(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaDeviceList)
  return target;
}

size_t XlaDeviceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaDeviceList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalTopologyProto devices = 1;
  if (this->has_devices()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *devices_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaDeviceList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaDeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaDeviceList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaDeviceList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaDeviceList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaDeviceList)
    MergeFrom(*source);
  }
}

void XlaDeviceList::MergeFrom(const XlaDeviceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaDeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_devices()) {
    mutable_devices()->::xla::GlobalTopologyProto::MergeFrom(from.devices());
  }
}

void XlaDeviceList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaDeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaDeviceList::CopyFrom(const XlaDeviceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaDeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaDeviceList::IsInitialized() const {
  return true;
}

void XlaDeviceList::Swap(XlaDeviceList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaDeviceList::InternalSwap(XlaDeviceList* other) {
  using std::swap;
  swap(devices_, other->devices_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaDeviceList::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoordinationServiceDeviceInfo::InitAsDefaultInstance() {
  ::tensorflow::_CoordinationServiceDeviceInfo_default_instance_.tf_ = const_cast< ::tensorflow::TfDeviceList*>(
      ::tensorflow::TfDeviceList::internal_default_instance());
  ::tensorflow::_CoordinationServiceDeviceInfo_default_instance_.xla_ = const_cast< ::tensorflow::XlaDeviceList*>(
      ::tensorflow::XlaDeviceList::internal_default_instance());
}
void CoordinationServiceDeviceInfo::set_allocated_tf(::tensorflow::TfDeviceList* tf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (tf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tf, submessage_arena);
    }
    set_has_tf();
    type_.tf_ = tf;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CoordinationServiceDeviceInfo.tf)
}
void CoordinationServiceDeviceInfo::set_allocated_xla(::tensorflow::XlaDeviceList* xla) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (xla) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      xla = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, xla, submessage_arena);
    }
    set_has_xla();
    type_.xla_ = xla;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CoordinationServiceDeviceInfo.xla)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationServiceDeviceInfo::kTfFieldNumber;
const int CoordinationServiceDeviceInfo::kXlaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationServiceDeviceInfo::CoordinationServiceDeviceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinationServiceDeviceInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CoordinationServiceDeviceInfo)
}
CoordinationServiceDeviceInfo::CoordinationServiceDeviceInfo(const CoordinationServiceDeviceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kTf: {
      mutable_tf()->::tensorflow::TfDeviceList::MergeFrom(from.tf());
      break;
    }
    case kXla: {
      mutable_xla()->::tensorflow::XlaDeviceList::MergeFrom(from.xla());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.CoordinationServiceDeviceInfo)
}

void CoordinationServiceDeviceInfo::SharedCtor() {
  clear_has_type();
}

CoordinationServiceDeviceInfo::~CoordinationServiceDeviceInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.CoordinationServiceDeviceInfo)
  SharedDtor();
}

void CoordinationServiceDeviceInfo::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void CoordinationServiceDeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoordinationServiceDeviceInfo::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoordinationServiceDeviceInfo& CoordinationServiceDeviceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CoordinationServiceDeviceInfo.base);
  return *internal_default_instance();
}


void CoordinationServiceDeviceInfo::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.CoordinationServiceDeviceInfo)
  switch (type_case()) {
    case kTf: {
      delete type_.tf_;
      break;
    }
    case kXla: {
      delete type_.xla_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void CoordinationServiceDeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CoordinationServiceDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool CoordinationServiceDeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CoordinationServiceDeviceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.TfDeviceList tf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.XlaDeviceList xla = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xla()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CoordinationServiceDeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CoordinationServiceDeviceInfo)
  return false;
#undef DO_
}

void CoordinationServiceDeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CoordinationServiceDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TfDeviceList tf = 1;
  if (has_tf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_tf(), output);
  }

  // .tensorflow.XlaDeviceList xla = 2;
  if (has_xla()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_xla(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CoordinationServiceDeviceInfo)
}

::google::protobuf::uint8* CoordinationServiceDeviceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CoordinationServiceDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TfDeviceList tf = 1;
  if (has_tf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_tf(), deterministic, target);
  }

  // .tensorflow.XlaDeviceList xla = 2;
  if (has_xla()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_xla(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CoordinationServiceDeviceInfo)
  return target;
}

size_t CoordinationServiceDeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CoordinationServiceDeviceInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .tensorflow.TfDeviceList tf = 1;
    case kTf: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.tf_);
      break;
    }
    // .tensorflow.XlaDeviceList xla = 2;
    case kXla: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.xla_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationServiceDeviceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CoordinationServiceDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationServiceDeviceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoordinationServiceDeviceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CoordinationServiceDeviceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CoordinationServiceDeviceInfo)
    MergeFrom(*source);
  }
}

void CoordinationServiceDeviceInfo::MergeFrom(const CoordinationServiceDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CoordinationServiceDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kTf: {
      mutable_tf()->::tensorflow::TfDeviceList::MergeFrom(from.tf());
      break;
    }
    case kXla: {
      mutable_xla()->::tensorflow::XlaDeviceList::MergeFrom(from.xla());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void CoordinationServiceDeviceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CoordinationServiceDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationServiceDeviceInfo::CopyFrom(const CoordinationServiceDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CoordinationServiceDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationServiceDeviceInfo::IsInitialized() const {
  return true;
}

void CoordinationServiceDeviceInfo::Swap(CoordinationServiceDeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationServiceDeviceInfo::InternalSwap(CoordinationServiceDeviceInfo* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoordinationServiceDeviceInfo::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterTaskRequest::InitAsDefaultInstance() {
  ::tensorflow::_RegisterTaskRequest_default_instance_._instance.get_mutable()->source_task_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterTaskRequest::kIncarnationFieldNumber;
const int RegisterTaskRequest::kSourceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterTaskRequest::RegisterTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_RegisterTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RegisterTaskRequest)
}
RegisterTaskRequest::RegisterTaskRequest(const RegisterTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_task()) {
    source_task_ = new ::tensorflow::CoordinatedTask(*from.source_task_);
  } else {
    source_task_ = NULL;
  }
  incarnation_ = from.incarnation_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.RegisterTaskRequest)
}

void RegisterTaskRequest::SharedCtor() {
  ::memset(&source_task_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incarnation_) -
      reinterpret_cast<char*>(&source_task_)) + sizeof(incarnation_));
}

RegisterTaskRequest::~RegisterTaskRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.RegisterTaskRequest)
  SharedDtor();
}

void RegisterTaskRequest::SharedDtor() {
  if (this != internal_default_instance()) delete source_task_;
}

void RegisterTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterTaskRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterTaskRequest& RegisterTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_RegisterTaskRequest.base);
  return *internal_default_instance();
}


void RegisterTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RegisterTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_task_ != NULL) {
    delete source_task_;
  }
  source_task_ = NULL;
  incarnation_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegisterTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RegisterTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 incarnation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &incarnation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinatedTask source_task = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RegisterTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RegisterTaskRequest)
  return false;
#undef DO_
}

void RegisterTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RegisterTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 incarnation = 3;
  if (this->incarnation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->incarnation(), output);
  }

  // .tensorflow.CoordinatedTask source_task = 5;
  if (this->has_source_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_source_task(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RegisterTaskRequest)
}

::google::protobuf::uint8* RegisterTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RegisterTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 incarnation = 3;
  if (this->incarnation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->incarnation(), target);
  }

  // .tensorflow.CoordinatedTask source_task = 5;
  if (this->has_source_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_source_task(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RegisterTaskRequest)
  return target;
}

size_t RegisterTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RegisterTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.CoordinatedTask source_task = 5;
  if (this->has_source_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_task_);
  }

  // fixed64 incarnation = 3;
  if (this->incarnation() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RegisterTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RegisterTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RegisterTaskRequest)
    MergeFrom(*source);
  }
}

void RegisterTaskRequest::MergeFrom(const RegisterTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RegisterTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_task()) {
    mutable_source_task()->::tensorflow::CoordinatedTask::MergeFrom(from.source_task());
  }
  if (from.incarnation() != 0) {
    set_incarnation(from.incarnation());
  }
}

void RegisterTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RegisterTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterTaskRequest::CopyFrom(const RegisterTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RegisterTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterTaskRequest::IsInitialized() const {
  return true;
}

void RegisterTaskRequest::Swap(RegisterTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterTaskRequest::InternalSwap(RegisterTaskRequest* other) {
  using std::swap;
  swap(source_task_, other->source_task_);
  swap(incarnation_, other->incarnation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterTaskRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterTaskResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterTaskResponse::kLeaderIncarnationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterTaskResponse::RegisterTaskResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_RegisterTaskResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RegisterTaskResponse)
}
RegisterTaskResponse::RegisterTaskResponse(const RegisterTaskResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_incarnation_ = from.leader_incarnation_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.RegisterTaskResponse)
}

void RegisterTaskResponse::SharedCtor() {
  leader_incarnation_ = GOOGLE_ULONGLONG(0);
}

RegisterTaskResponse::~RegisterTaskResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.RegisterTaskResponse)
  SharedDtor();
}

void RegisterTaskResponse::SharedDtor() {
}

void RegisterTaskResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterTaskResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterTaskResponse& RegisterTaskResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_RegisterTaskResponse.base);
  return *internal_default_instance();
}


void RegisterTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RegisterTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leader_incarnation_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegisterTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RegisterTaskResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 leader_incarnation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &leader_incarnation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RegisterTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RegisterTaskResponse)
  return false;
#undef DO_
}

void RegisterTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RegisterTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->leader_incarnation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RegisterTaskResponse)
}

::google::protobuf::uint8* RegisterTaskResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RegisterTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->leader_incarnation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RegisterTaskResponse)
  return target;
}

size_t RegisterTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RegisterTaskResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RegisterTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterTaskResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterTaskResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RegisterTaskResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RegisterTaskResponse)
    MergeFrom(*source);
  }
}

void RegisterTaskResponse::MergeFrom(const RegisterTaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RegisterTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.leader_incarnation() != 0) {
    set_leader_incarnation(from.leader_incarnation());
  }
}

void RegisterTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RegisterTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterTaskResponse::CopyFrom(const RegisterTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RegisterTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterTaskResponse::IsInitialized() const {
  return true;
}

void RegisterTaskResponse::Swap(RegisterTaskResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterTaskResponse::InternalSwap(RegisterTaskResponse* other) {
  using std::swap;
  swap(leader_incarnation_, other->leader_incarnation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterTaskResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatRequest::InitAsDefaultInstance() {
  ::tensorflow::_HeartbeatRequest_default_instance_._instance.get_mutable()->source_task_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatRequest::kIncarnationFieldNumber;
const int HeartbeatRequest::kSourceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRequest::HeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_HeartbeatRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.HeartbeatRequest)
}
HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_task()) {
    source_task_ = new ::tensorflow::CoordinatedTask(*from.source_task_);
  } else {
    source_task_ = NULL;
  }
  incarnation_ = from.incarnation_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.HeartbeatRequest)
}

void HeartbeatRequest::SharedCtor() {
  ::memset(&source_task_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incarnation_) -
      reinterpret_cast<char*>(&source_task_)) + sizeof(incarnation_));
}

HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.HeartbeatRequest)
  SharedDtor();
}

void HeartbeatRequest::SharedDtor() {
  if (this != internal_default_instance()) delete source_task_;
}

void HeartbeatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeartbeatRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatRequest& HeartbeatRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_HeartbeatRequest.base);
  return *internal_default_instance();
}


void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_task_ != NULL) {
    delete source_task_;
  }
  source_task_ = NULL;
  incarnation_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool HeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.HeartbeatRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 incarnation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &incarnation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinatedTask source_task = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.HeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.HeartbeatRequest)
  return false;
#undef DO_
}

void HeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 incarnation = 3;
  if (this->incarnation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->incarnation(), output);
  }

  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_source_task(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.HeartbeatRequest)
}

::google::protobuf::uint8* HeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 incarnation = 3;
  if (this->incarnation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->incarnation(), target);
  }

  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_source_task(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.HeartbeatRequest)
  return target;
}

size_t HeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.HeartbeatRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_task_);
  }

  // fixed64 incarnation = 3;
  if (this->incarnation() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.HeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.HeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.HeartbeatRequest)
    MergeFrom(*source);
  }
}

void HeartbeatRequest::MergeFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.HeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_task()) {
    mutable_source_task()->::tensorflow::CoordinatedTask::MergeFrom(from.source_task());
  }
  if (from.incarnation() != 0) {
    set_incarnation(from.incarnation());
  }
}

void HeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatRequest::IsInitialized() const {
  return true;
}

void HeartbeatRequest::Swap(HeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRequest::InternalSwap(HeartbeatRequest* other) {
  using std::swap;
  swap(source_task_, other->source_task_);
  swap(incarnation_, other->incarnation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatResponse::kLeaderIncarnationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatResponse::HeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_HeartbeatResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.HeartbeatResponse)
}
HeartbeatResponse::HeartbeatResponse(const HeartbeatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_incarnation_ = from.leader_incarnation_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.HeartbeatResponse)
}

void HeartbeatResponse::SharedCtor() {
  leader_incarnation_ = GOOGLE_ULONGLONG(0);
}

HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.HeartbeatResponse)
  SharedDtor();
}

void HeartbeatResponse::SharedDtor() {
}

void HeartbeatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeartbeatResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatResponse& HeartbeatResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_HeartbeatResponse.base);
  return *internal_default_instance();
}


void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leader_incarnation_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool HeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.HeartbeatResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 leader_incarnation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &leader_incarnation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.HeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.HeartbeatResponse)
  return false;
#undef DO_
}

void HeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->leader_incarnation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.HeartbeatResponse)
}

::google::protobuf::uint8* HeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->leader_incarnation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.HeartbeatResponse)
  return target;
}

size_t HeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.HeartbeatResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.HeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.HeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.HeartbeatResponse)
    MergeFrom(*source);
  }
}

void HeartbeatResponse::MergeFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.HeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.leader_incarnation() != 0) {
    set_leader_incarnation(from.leader_incarnation());
  }
}

void HeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatResponse::IsInitialized() const {
  return true;
}

void HeartbeatResponse::Swap(HeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatResponse::InternalSwap(HeartbeatResponse* other) {
  using std::swap;
  swap(leader_incarnation_, other->leader_incarnation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitForAllTasksRequest::InitAsDefaultInstance() {
  ::tensorflow::_WaitForAllTasksRequest_default_instance_._instance.get_mutable()->local_device_info_ = const_cast< ::tensorflow::CoordinationServiceDeviceInfo*>(
      ::tensorflow::CoordinationServiceDeviceInfo::internal_default_instance());
  ::tensorflow::_WaitForAllTasksRequest_default_instance_._instance.get_mutable()->source_task_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitForAllTasksRequest::kLocalDeviceInfoFieldNumber;
const int WaitForAllTasksRequest::kSourceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitForAllTasksRequest::WaitForAllTasksRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_WaitForAllTasksRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.WaitForAllTasksRequest)
}
WaitForAllTasksRequest::WaitForAllTasksRequest(const WaitForAllTasksRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_local_device_info()) {
    local_device_info_ = new ::tensorflow::CoordinationServiceDeviceInfo(*from.local_device_info_);
  } else {
    local_device_info_ = NULL;
  }
  if (from.has_source_task()) {
    source_task_ = new ::tensorflow::CoordinatedTask(*from.source_task_);
  } else {
    source_task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.WaitForAllTasksRequest)
}

void WaitForAllTasksRequest::SharedCtor() {
  ::memset(&local_device_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_task_) -
      reinterpret_cast<char*>(&local_device_info_)) + sizeof(source_task_));
}

WaitForAllTasksRequest::~WaitForAllTasksRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.WaitForAllTasksRequest)
  SharedDtor();
}

void WaitForAllTasksRequest::SharedDtor() {
  if (this != internal_default_instance()) delete local_device_info_;
  if (this != internal_default_instance()) delete source_task_;
}

void WaitForAllTasksRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitForAllTasksRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitForAllTasksRequest& WaitForAllTasksRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_WaitForAllTasksRequest.base);
  return *internal_default_instance();
}


void WaitForAllTasksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.WaitForAllTasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && local_device_info_ != NULL) {
    delete local_device_info_;
  }
  local_device_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_task_ != NULL) {
    delete source_task_;
  }
  source_task_ = NULL;
  _internal_metadata_.Clear();
}

bool WaitForAllTasksRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.WaitForAllTasksRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.CoordinationServiceDeviceInfo local_device_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_local_device_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinatedTask source_task = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.WaitForAllTasksRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.WaitForAllTasksRequest)
  return false;
#undef DO_
}

void WaitForAllTasksRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.WaitForAllTasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CoordinationServiceDeviceInfo local_device_info = 4;
  if (this->has_local_device_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_local_device_info(), output);
  }

  // .tensorflow.CoordinatedTask source_task = 5;
  if (this->has_source_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_source_task(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.WaitForAllTasksRequest)
}

::google::protobuf::uint8* WaitForAllTasksRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.WaitForAllTasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CoordinationServiceDeviceInfo local_device_info = 4;
  if (this->has_local_device_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_local_device_info(), deterministic, target);
  }

  // .tensorflow.CoordinatedTask source_task = 5;
  if (this->has_source_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_source_task(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.WaitForAllTasksRequest)
  return target;
}

size_t WaitForAllTasksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.WaitForAllTasksRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.CoordinationServiceDeviceInfo local_device_info = 4;
  if (this->has_local_device_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *local_device_info_);
  }

  // .tensorflow.CoordinatedTask source_task = 5;
  if (this->has_source_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForAllTasksRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.WaitForAllTasksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForAllTasksRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitForAllTasksRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.WaitForAllTasksRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.WaitForAllTasksRequest)
    MergeFrom(*source);
  }
}

void WaitForAllTasksRequest::MergeFrom(const WaitForAllTasksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.WaitForAllTasksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_local_device_info()) {
    mutable_local_device_info()->::tensorflow::CoordinationServiceDeviceInfo::MergeFrom(from.local_device_info());
  }
  if (from.has_source_task()) {
    mutable_source_task()->::tensorflow::CoordinatedTask::MergeFrom(from.source_task());
  }
}

void WaitForAllTasksRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.WaitForAllTasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForAllTasksRequest::CopyFrom(const WaitForAllTasksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.WaitForAllTasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForAllTasksRequest::IsInitialized() const {
  return true;
}

void WaitForAllTasksRequest::Swap(WaitForAllTasksRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitForAllTasksRequest::InternalSwap(WaitForAllTasksRequest* other) {
  using std::swap;
  swap(local_device_info_, other->local_device_info_);
  swap(source_task_, other->source_task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitForAllTasksRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitForAllTasksResponse::InitAsDefaultInstance() {
  ::tensorflow::_WaitForAllTasksResponse_default_instance_._instance.get_mutable()->cluster_device_info_ = const_cast< ::tensorflow::CoordinationServiceDeviceInfo*>(
      ::tensorflow::CoordinationServiceDeviceInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitForAllTasksResponse::kLeaderIncarnationFieldNumber;
const int WaitForAllTasksResponse::kClusterDeviceInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitForAllTasksResponse::WaitForAllTasksResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_WaitForAllTasksResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.WaitForAllTasksResponse)
}
WaitForAllTasksResponse::WaitForAllTasksResponse(const WaitForAllTasksResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cluster_device_info()) {
    cluster_device_info_ = new ::tensorflow::CoordinationServiceDeviceInfo(*from.cluster_device_info_);
  } else {
    cluster_device_info_ = NULL;
  }
  leader_incarnation_ = from.leader_incarnation_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.WaitForAllTasksResponse)
}

void WaitForAllTasksResponse::SharedCtor() {
  ::memset(&cluster_device_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_incarnation_) -
      reinterpret_cast<char*>(&cluster_device_info_)) + sizeof(leader_incarnation_));
}

WaitForAllTasksResponse::~WaitForAllTasksResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.WaitForAllTasksResponse)
  SharedDtor();
}

void WaitForAllTasksResponse::SharedDtor() {
  if (this != internal_default_instance()) delete cluster_device_info_;
}

void WaitForAllTasksResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitForAllTasksResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitForAllTasksResponse& WaitForAllTasksResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_WaitForAllTasksResponse.base);
  return *internal_default_instance();
}


void WaitForAllTasksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.WaitForAllTasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cluster_device_info_ != NULL) {
    delete cluster_device_info_;
  }
  cluster_device_info_ = NULL;
  leader_incarnation_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool WaitForAllTasksResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.WaitForAllTasksResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 leader_incarnation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &leader_incarnation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinationServiceDeviceInfo cluster_device_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster_device_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.WaitForAllTasksResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.WaitForAllTasksResponse)
  return false;
#undef DO_
}

void WaitForAllTasksResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.WaitForAllTasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->leader_incarnation(), output);
  }

  // .tensorflow.CoordinationServiceDeviceInfo cluster_device_info = 3;
  if (this->has_cluster_device_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cluster_device_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.WaitForAllTasksResponse)
}

::google::protobuf::uint8* WaitForAllTasksResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.WaitForAllTasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->leader_incarnation(), target);
  }

  // .tensorflow.CoordinationServiceDeviceInfo cluster_device_info = 3;
  if (this->has_cluster_device_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cluster_device_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.WaitForAllTasksResponse)
  return target;
}

size_t WaitForAllTasksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.WaitForAllTasksResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.CoordinationServiceDeviceInfo cluster_device_info = 3;
  if (this->has_cluster_device_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_device_info_);
  }

  // fixed64 leader_incarnation = 1;
  if (this->leader_incarnation() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForAllTasksResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.WaitForAllTasksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForAllTasksResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitForAllTasksResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.WaitForAllTasksResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.WaitForAllTasksResponse)
    MergeFrom(*source);
  }
}

void WaitForAllTasksResponse::MergeFrom(const WaitForAllTasksResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.WaitForAllTasksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cluster_device_info()) {
    mutable_cluster_device_info()->::tensorflow::CoordinationServiceDeviceInfo::MergeFrom(from.cluster_device_info());
  }
  if (from.leader_incarnation() != 0) {
    set_leader_incarnation(from.leader_incarnation());
  }
}

void WaitForAllTasksResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.WaitForAllTasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForAllTasksResponse::CopyFrom(const WaitForAllTasksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.WaitForAllTasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForAllTasksResponse::IsInitialized() const {
  return true;
}

void WaitForAllTasksResponse::Swap(WaitForAllTasksResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitForAllTasksResponse::InternalSwap(WaitForAllTasksResponse* other) {
  using std::swap;
  swap(cluster_device_info_, other->cluster_device_info_);
  swap(leader_incarnation_, other->leader_incarnation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitForAllTasksResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShutdownTaskRequest::InitAsDefaultInstance() {
  ::tensorflow::_ShutdownTaskRequest_default_instance_._instance.get_mutable()->source_task_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShutdownTaskRequest::kSourceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShutdownTaskRequest::ShutdownTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ShutdownTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ShutdownTaskRequest)
}
ShutdownTaskRequest::ShutdownTaskRequest(const ShutdownTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_task()) {
    source_task_ = new ::tensorflow::CoordinatedTask(*from.source_task_);
  } else {
    source_task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.ShutdownTaskRequest)
}

void ShutdownTaskRequest::SharedCtor() {
  source_task_ = NULL;
}

ShutdownTaskRequest::~ShutdownTaskRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.ShutdownTaskRequest)
  SharedDtor();
}

void ShutdownTaskRequest::SharedDtor() {
  if (this != internal_default_instance()) delete source_task_;
}

void ShutdownTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShutdownTaskRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShutdownTaskRequest& ShutdownTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ShutdownTaskRequest.base);
  return *internal_default_instance();
}


void ShutdownTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ShutdownTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_task_ != NULL) {
    delete source_task_;
  }
  source_task_ = NULL;
  _internal_metadata_.Clear();
}

bool ShutdownTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ShutdownTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.CoordinatedTask source_task = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ShutdownTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ShutdownTaskRequest)
  return false;
#undef DO_
}

void ShutdownTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ShutdownTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CoordinatedTask source_task = 1;
  if (this->has_source_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source_task(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ShutdownTaskRequest)
}

::google::protobuf::uint8* ShutdownTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ShutdownTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CoordinatedTask source_task = 1;
  if (this->has_source_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source_task(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ShutdownTaskRequest)
  return target;
}

size_t ShutdownTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ShutdownTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.CoordinatedTask source_task = 1;
  if (this->has_source_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShutdownTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ShutdownTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShutdownTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShutdownTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ShutdownTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ShutdownTaskRequest)
    MergeFrom(*source);
  }
}

void ShutdownTaskRequest::MergeFrom(const ShutdownTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ShutdownTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_task()) {
    mutable_source_task()->::tensorflow::CoordinatedTask::MergeFrom(from.source_task());
  }
}

void ShutdownTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ShutdownTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShutdownTaskRequest::CopyFrom(const ShutdownTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ShutdownTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownTaskRequest::IsInitialized() const {
  return true;
}

void ShutdownTaskRequest::Swap(ShutdownTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShutdownTaskRequest::InternalSwap(ShutdownTaskRequest* other) {
  using std::swap;
  swap(source_task_, other->source_task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShutdownTaskRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShutdownTaskResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShutdownTaskResponse::ShutdownTaskResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ShutdownTaskResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ShutdownTaskResponse)
}
ShutdownTaskResponse::ShutdownTaskResponse(const ShutdownTaskResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ShutdownTaskResponse)
}

void ShutdownTaskResponse::SharedCtor() {
}

ShutdownTaskResponse::~ShutdownTaskResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.ShutdownTaskResponse)
  SharedDtor();
}

void ShutdownTaskResponse::SharedDtor() {
}

void ShutdownTaskResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShutdownTaskResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShutdownTaskResponse& ShutdownTaskResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ShutdownTaskResponse.base);
  return *internal_default_instance();
}


void ShutdownTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ShutdownTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ShutdownTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ShutdownTaskResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ShutdownTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ShutdownTaskResponse)
  return false;
#undef DO_
}

void ShutdownTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ShutdownTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ShutdownTaskResponse)
}

::google::protobuf::uint8* ShutdownTaskResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ShutdownTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ShutdownTaskResponse)
  return target;
}

size_t ShutdownTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ShutdownTaskResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShutdownTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ShutdownTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShutdownTaskResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShutdownTaskResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ShutdownTaskResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ShutdownTaskResponse)
    MergeFrom(*source);
  }
}

void ShutdownTaskResponse::MergeFrom(const ShutdownTaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ShutdownTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShutdownTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ShutdownTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShutdownTaskResponse::CopyFrom(const ShutdownTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ShutdownTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownTaskResponse::IsInitialized() const {
  return true;
}

void ShutdownTaskResponse::Swap(ShutdownTaskResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShutdownTaskResponse::InternalSwap(ShutdownTaskResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShutdownTaskResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetTaskRequest::InitAsDefaultInstance() {
  ::tensorflow::_ResetTaskRequest_default_instance_._instance.get_mutable()->source_task_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetTaskRequest::kSourceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetTaskRequest::ResetTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ResetTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ResetTaskRequest)
}
ResetTaskRequest::ResetTaskRequest(const ResetTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_task()) {
    source_task_ = new ::tensorflow::CoordinatedTask(*from.source_task_);
  } else {
    source_task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.ResetTaskRequest)
}

void ResetTaskRequest::SharedCtor() {
  source_task_ = NULL;
}

ResetTaskRequest::~ResetTaskRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.ResetTaskRequest)
  SharedDtor();
}

void ResetTaskRequest::SharedDtor() {
  if (this != internal_default_instance()) delete source_task_;
}

void ResetTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetTaskRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetTaskRequest& ResetTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ResetTaskRequest.base);
  return *internal_default_instance();
}


void ResetTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ResetTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_task_ != NULL) {
    delete source_task_;
  }
  source_task_ = NULL;
  _internal_metadata_.Clear();
}

bool ResetTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ResetTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.CoordinatedTask source_task = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ResetTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ResetTaskRequest)
  return false;
#undef DO_
}

void ResetTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ResetTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CoordinatedTask source_task = 1;
  if (this->has_source_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source_task(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ResetTaskRequest)
}

::google::protobuf::uint8* ResetTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ResetTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CoordinatedTask source_task = 1;
  if (this->has_source_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source_task(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ResetTaskRequest)
  return target;
}

size_t ResetTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ResetTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.CoordinatedTask source_task = 1;
  if (this->has_source_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ResetTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ResetTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ResetTaskRequest)
    MergeFrom(*source);
  }
}

void ResetTaskRequest::MergeFrom(const ResetTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ResetTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_task()) {
    mutable_source_task()->::tensorflow::CoordinatedTask::MergeFrom(from.source_task());
  }
}

void ResetTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ResetTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetTaskRequest::CopyFrom(const ResetTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ResetTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetTaskRequest::IsInitialized() const {
  return true;
}

void ResetTaskRequest::Swap(ResetTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetTaskRequest::InternalSwap(ResetTaskRequest* other) {
  using std::swap;
  swap(source_task_, other->source_task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetTaskRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetTaskResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetTaskResponse::ResetTaskResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ResetTaskResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ResetTaskResponse)
}
ResetTaskResponse::ResetTaskResponse(const ResetTaskResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ResetTaskResponse)
}

void ResetTaskResponse::SharedCtor() {
}

ResetTaskResponse::~ResetTaskResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.ResetTaskResponse)
  SharedDtor();
}

void ResetTaskResponse::SharedDtor() {
}

void ResetTaskResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetTaskResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetTaskResponse& ResetTaskResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ResetTaskResponse.base);
  return *internal_default_instance();
}


void ResetTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ResetTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ResetTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ResetTaskResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ResetTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ResetTaskResponse)
  return false;
#undef DO_
}

void ResetTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ResetTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ResetTaskResponse)
}

::google::protobuf::uint8* ResetTaskResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ResetTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ResetTaskResponse)
  return target;
}

size_t ResetTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ResetTaskResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ResetTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetTaskResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetTaskResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ResetTaskResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ResetTaskResponse)
    MergeFrom(*source);
  }
}

void ResetTaskResponse::MergeFrom(const ResetTaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ResetTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ResetTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetTaskResponse::CopyFrom(const ResetTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ResetTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetTaskResponse::IsInitialized() const {
  return true;
}

void ResetTaskResponse::Swap(ResetTaskResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetTaskResponse::InternalSwap(ResetTaskResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetTaskResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportErrorToTaskRequest::InitAsDefaultInstance() {
  ::tensorflow::_ReportErrorToTaskRequest_default_instance_._instance.get_mutable()->error_payload_ = const_cast< ::tensorflow::CoordinationServiceError*>(
      ::tensorflow::CoordinationServiceError::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportErrorToTaskRequest::kErrorCodeFieldNumber;
const int ReportErrorToTaskRequest::kErrorMessageFieldNumber;
const int ReportErrorToTaskRequest::kErrorPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportErrorToTaskRequest::ReportErrorToTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ReportErrorToTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ReportErrorToTaskRequest)
}
ReportErrorToTaskRequest::ReportErrorToTaskRequest(const ReportErrorToTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.has_error_payload()) {
    error_payload_ = new ::tensorflow::CoordinationServiceError(*from.error_payload_);
  } else {
    error_payload_ = NULL;
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.ReportErrorToTaskRequest)
}

void ReportErrorToTaskRequest::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_payload_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&error_payload_)) + sizeof(error_code_));
}

ReportErrorToTaskRequest::~ReportErrorToTaskRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.ReportErrorToTaskRequest)
  SharedDtor();
}

void ReportErrorToTaskRequest::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_payload_;
}

void ReportErrorToTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportErrorToTaskRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportErrorToTaskRequest& ReportErrorToTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ReportErrorToTaskRequest.base);
  return *internal_default_instance();
}


void ReportErrorToTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ReportErrorToTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_payload_ != NULL) {
    delete error_payload_;
  }
  error_payload_ = NULL;
  error_code_ = 0;
  _internal_metadata_.Clear();
}

bool ReportErrorToTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ReportErrorToTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ReportErrorToTaskRequest.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinationServiceError error_payload = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ReportErrorToTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ReportErrorToTaskRequest)
  return false;
#undef DO_
}

void ReportErrorToTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ReportErrorToTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ReportErrorToTaskRequest.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  // .tensorflow.CoordinationServiceError error_payload = 5;
  if (this->has_error_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_error_payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ReportErrorToTaskRequest)
}

::google::protobuf::uint8* ReportErrorToTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ReportErrorToTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ReportErrorToTaskRequest.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  // .tensorflow.CoordinationServiceError error_payload = 5;
  if (this->has_error_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_error_payload(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ReportErrorToTaskRequest)
  return target;
}

size_t ReportErrorToTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ReportErrorToTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // .tensorflow.CoordinationServiceError error_payload = 5;
  if (this->has_error_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_payload_);
  }

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportErrorToTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ReportErrorToTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportErrorToTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportErrorToTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ReportErrorToTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ReportErrorToTaskRequest)
    MergeFrom(*source);
  }
}

void ReportErrorToTaskRequest::MergeFrom(const ReportErrorToTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ReportErrorToTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.has_error_payload()) {
    mutable_error_payload()->::tensorflow::CoordinationServiceError::MergeFrom(from.error_payload());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void ReportErrorToTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ReportErrorToTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorToTaskRequest::CopyFrom(const ReportErrorToTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ReportErrorToTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportErrorToTaskRequest::IsInitialized() const {
  return true;
}

void ReportErrorToTaskRequest::Swap(ReportErrorToTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportErrorToTaskRequest::InternalSwap(ReportErrorToTaskRequest* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_payload_, other->error_payload_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportErrorToTaskRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportErrorToTaskResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportErrorToTaskResponse::ReportErrorToTaskResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ReportErrorToTaskResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ReportErrorToTaskResponse)
}
ReportErrorToTaskResponse::ReportErrorToTaskResponse(const ReportErrorToTaskResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ReportErrorToTaskResponse)
}

void ReportErrorToTaskResponse::SharedCtor() {
}

ReportErrorToTaskResponse::~ReportErrorToTaskResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.ReportErrorToTaskResponse)
  SharedDtor();
}

void ReportErrorToTaskResponse::SharedDtor() {
}

void ReportErrorToTaskResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportErrorToTaskResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportErrorToTaskResponse& ReportErrorToTaskResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ReportErrorToTaskResponse.base);
  return *internal_default_instance();
}


void ReportErrorToTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ReportErrorToTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReportErrorToTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ReportErrorToTaskResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ReportErrorToTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ReportErrorToTaskResponse)
  return false;
#undef DO_
}

void ReportErrorToTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ReportErrorToTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ReportErrorToTaskResponse)
}

::google::protobuf::uint8* ReportErrorToTaskResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ReportErrorToTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ReportErrorToTaskResponse)
  return target;
}

size_t ReportErrorToTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ReportErrorToTaskResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportErrorToTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ReportErrorToTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportErrorToTaskResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportErrorToTaskResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ReportErrorToTaskResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ReportErrorToTaskResponse)
    MergeFrom(*source);
  }
}

void ReportErrorToTaskResponse::MergeFrom(const ReportErrorToTaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ReportErrorToTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReportErrorToTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ReportErrorToTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorToTaskResponse::CopyFrom(const ReportErrorToTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ReportErrorToTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportErrorToTaskResponse::IsInitialized() const {
  return true;
}

void ReportErrorToTaskResponse::Swap(ReportErrorToTaskResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportErrorToTaskResponse::InternalSwap(ReportErrorToTaskResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportErrorToTaskResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportErrorToServiceRequest::InitAsDefaultInstance() {
  ::tensorflow::_ReportErrorToServiceRequest_default_instance_._instance.get_mutable()->error_origin_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportErrorToServiceRequest::kErrorCodeFieldNumber;
const int ReportErrorToServiceRequest::kErrorMessageFieldNumber;
const int ReportErrorToServiceRequest::kErrorOriginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportErrorToServiceRequest::ReportErrorToServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ReportErrorToServiceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ReportErrorToServiceRequest)
}
ReportErrorToServiceRequest::ReportErrorToServiceRequest(const ReportErrorToServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.has_error_origin()) {
    error_origin_ = new ::tensorflow::CoordinatedTask(*from.error_origin_);
  } else {
    error_origin_ = NULL;
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.ReportErrorToServiceRequest)
}

void ReportErrorToServiceRequest::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&error_origin_)) + sizeof(error_code_));
}

ReportErrorToServiceRequest::~ReportErrorToServiceRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.ReportErrorToServiceRequest)
  SharedDtor();
}

void ReportErrorToServiceRequest::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_origin_;
}

void ReportErrorToServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportErrorToServiceRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportErrorToServiceRequest& ReportErrorToServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ReportErrorToServiceRequest.base);
  return *internal_default_instance();
}


void ReportErrorToServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ReportErrorToServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_origin_ != NULL) {
    delete error_origin_;
  }
  error_origin_ = NULL;
  error_code_ = 0;
  _internal_metadata_.Clear();
}

bool ReportErrorToServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ReportErrorToServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ReportErrorToServiceRequest.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinatedTask error_origin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ReportErrorToServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ReportErrorToServiceRequest)
  return false;
#undef DO_
}

void ReportErrorToServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ReportErrorToServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ReportErrorToServiceRequest.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  // .tensorflow.CoordinatedTask error_origin = 5;
  if (this->has_error_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_error_origin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ReportErrorToServiceRequest)
}

::google::protobuf::uint8* ReportErrorToServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ReportErrorToServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ReportErrorToServiceRequest.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  // .tensorflow.CoordinatedTask error_origin = 5;
  if (this->has_error_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_error_origin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ReportErrorToServiceRequest)
  return target;
}

size_t ReportErrorToServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ReportErrorToServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // .tensorflow.CoordinatedTask error_origin = 5;
  if (this->has_error_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_origin_);
  }

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportErrorToServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ReportErrorToServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportErrorToServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportErrorToServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ReportErrorToServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ReportErrorToServiceRequest)
    MergeFrom(*source);
  }
}

void ReportErrorToServiceRequest::MergeFrom(const ReportErrorToServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ReportErrorToServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.has_error_origin()) {
    mutable_error_origin()->::tensorflow::CoordinatedTask::MergeFrom(from.error_origin());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void ReportErrorToServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ReportErrorToServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorToServiceRequest::CopyFrom(const ReportErrorToServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ReportErrorToServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportErrorToServiceRequest::IsInitialized() const {
  return true;
}

void ReportErrorToServiceRequest::Swap(ReportErrorToServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportErrorToServiceRequest::InternalSwap(ReportErrorToServiceRequest* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_origin_, other->error_origin_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportErrorToServiceRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportErrorToServiceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportErrorToServiceResponse::ReportErrorToServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ReportErrorToServiceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ReportErrorToServiceResponse)
}
ReportErrorToServiceResponse::ReportErrorToServiceResponse(const ReportErrorToServiceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ReportErrorToServiceResponse)
}

void ReportErrorToServiceResponse::SharedCtor() {
}

ReportErrorToServiceResponse::~ReportErrorToServiceResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.ReportErrorToServiceResponse)
  SharedDtor();
}

void ReportErrorToServiceResponse::SharedDtor() {
}

void ReportErrorToServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportErrorToServiceResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportErrorToServiceResponse& ReportErrorToServiceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_ReportErrorToServiceResponse.base);
  return *internal_default_instance();
}


void ReportErrorToServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ReportErrorToServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReportErrorToServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ReportErrorToServiceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ReportErrorToServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ReportErrorToServiceResponse)
  return false;
#undef DO_
}

void ReportErrorToServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ReportErrorToServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ReportErrorToServiceResponse)
}

::google::protobuf::uint8* ReportErrorToServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ReportErrorToServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ReportErrorToServiceResponse)
  return target;
}

size_t ReportErrorToServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ReportErrorToServiceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportErrorToServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ReportErrorToServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportErrorToServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportErrorToServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ReportErrorToServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ReportErrorToServiceResponse)
    MergeFrom(*source);
  }
}

void ReportErrorToServiceResponse::MergeFrom(const ReportErrorToServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ReportErrorToServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReportErrorToServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ReportErrorToServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorToServiceResponse::CopyFrom(const ReportErrorToServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ReportErrorToServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportErrorToServiceResponse::IsInitialized() const {
  return true;
}

void ReportErrorToServiceResponse::Swap(ReportErrorToServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportErrorToServiceResponse::InternalSwap(ReportErrorToServiceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportErrorToServiceResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValueEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValueEntry::kKeyFieldNumber;
const int KeyValueEntry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValueEntry::KeyValueEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_KeyValueEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.KeyValueEntry)
}
KeyValueEntry::KeyValueEntry(const KeyValueEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.KeyValueEntry)
}

void KeyValueEntry::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyValueEntry::~KeyValueEntry() {
  // @@protoc_insertion_point(destructor:tensorflow.KeyValueEntry)
  SharedDtor();
}

void KeyValueEntry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValueEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyValueEntry::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValueEntry& KeyValueEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_KeyValueEntry.base);
  return *internal_default_instance();
}


void KeyValueEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.KeyValueEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KeyValueEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.KeyValueEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.KeyValueEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.KeyValueEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.KeyValueEntry)
  return false;
#undef DO_
}

void KeyValueEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.KeyValueEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KeyValueEntry.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.KeyValueEntry)
}

::google::protobuf::uint8* KeyValueEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.KeyValueEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KeyValueEntry.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.KeyValueEntry)
  return target;
}

size_t KeyValueEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.KeyValueEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValueEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.KeyValueEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValueEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValueEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.KeyValueEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.KeyValueEntry)
    MergeFrom(*source);
  }
}

void KeyValueEntry::MergeFrom(const KeyValueEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.KeyValueEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KeyValueEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.KeyValueEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValueEntry::CopyFrom(const KeyValueEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.KeyValueEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueEntry::IsInitialized() const {
  return true;
}

void KeyValueEntry::Swap(KeyValueEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValueEntry::InternalSwap(KeyValueEntry* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyValueEntry::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertKeyValueRequest::InitAsDefaultInstance() {
  ::tensorflow::_InsertKeyValueRequest_default_instance_._instance.get_mutable()->kv_ = const_cast< ::tensorflow::KeyValueEntry*>(
      ::tensorflow::KeyValueEntry::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertKeyValueRequest::kKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertKeyValueRequest::InsertKeyValueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_InsertKeyValueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.InsertKeyValueRequest)
}
InsertKeyValueRequest::InsertKeyValueRequest(const InsertKeyValueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_kv()) {
    kv_ = new ::tensorflow::KeyValueEntry(*from.kv_);
  } else {
    kv_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.InsertKeyValueRequest)
}

void InsertKeyValueRequest::SharedCtor() {
  kv_ = NULL;
}

InsertKeyValueRequest::~InsertKeyValueRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.InsertKeyValueRequest)
  SharedDtor();
}

void InsertKeyValueRequest::SharedDtor() {
  if (this != internal_default_instance()) delete kv_;
}

void InsertKeyValueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertKeyValueRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertKeyValueRequest& InsertKeyValueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_InsertKeyValueRequest.base);
  return *internal_default_instance();
}


void InsertKeyValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.InsertKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && kv_ != NULL) {
    delete kv_;
  }
  kv_ = NULL;
  _internal_metadata_.Clear();
}

bool InsertKeyValueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.InsertKeyValueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.KeyValueEntry kv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.InsertKeyValueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.InsertKeyValueRequest)
  return false;
#undef DO_
}

void InsertKeyValueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.InsertKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.KeyValueEntry kv = 1;
  if (this->has_kv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_kv(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.InsertKeyValueRequest)
}

::google::protobuf::uint8* InsertKeyValueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.InsertKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.KeyValueEntry kv = 1;
  if (this->has_kv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_kv(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.InsertKeyValueRequest)
  return target;
}

size_t InsertKeyValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.InsertKeyValueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.KeyValueEntry kv = 1;
  if (this->has_kv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kv_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertKeyValueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.InsertKeyValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertKeyValueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertKeyValueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.InsertKeyValueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.InsertKeyValueRequest)
    MergeFrom(*source);
  }
}

void InsertKeyValueRequest::MergeFrom(const InsertKeyValueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.InsertKeyValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_kv()) {
    mutable_kv()->::tensorflow::KeyValueEntry::MergeFrom(from.kv());
  }
}

void InsertKeyValueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.InsertKeyValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertKeyValueRequest::CopyFrom(const InsertKeyValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.InsertKeyValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertKeyValueRequest::IsInitialized() const {
  return true;
}

void InsertKeyValueRequest::Swap(InsertKeyValueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertKeyValueRequest::InternalSwap(InsertKeyValueRequest* other) {
  using std::swap;
  swap(kv_, other->kv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertKeyValueRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertKeyValueResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertKeyValueResponse::InsertKeyValueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_InsertKeyValueResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.InsertKeyValueResponse)
}
InsertKeyValueResponse::InsertKeyValueResponse(const InsertKeyValueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.InsertKeyValueResponse)
}

void InsertKeyValueResponse::SharedCtor() {
}

InsertKeyValueResponse::~InsertKeyValueResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.InsertKeyValueResponse)
  SharedDtor();
}

void InsertKeyValueResponse::SharedDtor() {
}

void InsertKeyValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertKeyValueResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertKeyValueResponse& InsertKeyValueResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_InsertKeyValueResponse.base);
  return *internal_default_instance();
}


void InsertKeyValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.InsertKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool InsertKeyValueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.InsertKeyValueResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.InsertKeyValueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.InsertKeyValueResponse)
  return false;
#undef DO_
}

void InsertKeyValueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.InsertKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.InsertKeyValueResponse)
}

::google::protobuf::uint8* InsertKeyValueResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.InsertKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.InsertKeyValueResponse)
  return target;
}

size_t InsertKeyValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.InsertKeyValueResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertKeyValueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.InsertKeyValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertKeyValueResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertKeyValueResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.InsertKeyValueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.InsertKeyValueResponse)
    MergeFrom(*source);
  }
}

void InsertKeyValueResponse::MergeFrom(const InsertKeyValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.InsertKeyValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void InsertKeyValueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.InsertKeyValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertKeyValueResponse::CopyFrom(const InsertKeyValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.InsertKeyValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertKeyValueResponse::IsInitialized() const {
  return true;
}

void InsertKeyValueResponse::Swap(InsertKeyValueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertKeyValueResponse::InternalSwap(InsertKeyValueResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertKeyValueResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetKeyValueRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetKeyValueRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetKeyValueRequest::GetKeyValueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_GetKeyValueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GetKeyValueRequest)
}
GetKeyValueRequest::GetKeyValueRequest(const GetKeyValueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.GetKeyValueRequest)
}

void GetKeyValueRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetKeyValueRequest::~GetKeyValueRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.GetKeyValueRequest)
  SharedDtor();
}

void GetKeyValueRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetKeyValueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetKeyValueRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetKeyValueRequest& GetKeyValueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_GetKeyValueRequest.base);
  return *internal_default_instance();
}


void GetKeyValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GetKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetKeyValueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GetKeyValueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GetKeyValueRequest.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GetKeyValueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GetKeyValueRequest)
  return false;
#undef DO_
}

void GetKeyValueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GetKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GetKeyValueRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GetKeyValueRequest)
}

::google::protobuf::uint8* GetKeyValueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GetKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GetKeyValueRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GetKeyValueRequest)
  return target;
}

size_t GetKeyValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GetKeyValueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetKeyValueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GetKeyValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetKeyValueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetKeyValueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GetKeyValueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GetKeyValueRequest)
    MergeFrom(*source);
  }
}

void GetKeyValueRequest::MergeFrom(const GetKeyValueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GetKeyValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void GetKeyValueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GetKeyValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetKeyValueRequest::CopyFrom(const GetKeyValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GetKeyValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKeyValueRequest::IsInitialized() const {
  return true;
}

void GetKeyValueRequest::Swap(GetKeyValueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetKeyValueRequest::InternalSwap(GetKeyValueRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetKeyValueRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetKeyValueResponse::InitAsDefaultInstance() {
  ::tensorflow::_GetKeyValueResponse_default_instance_._instance.get_mutable()->kv_ = const_cast< ::tensorflow::KeyValueEntry*>(
      ::tensorflow::KeyValueEntry::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetKeyValueResponse::kKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetKeyValueResponse::GetKeyValueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_GetKeyValueResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GetKeyValueResponse)
}
GetKeyValueResponse::GetKeyValueResponse(const GetKeyValueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_kv()) {
    kv_ = new ::tensorflow::KeyValueEntry(*from.kv_);
  } else {
    kv_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.GetKeyValueResponse)
}

void GetKeyValueResponse::SharedCtor() {
  kv_ = NULL;
}

GetKeyValueResponse::~GetKeyValueResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.GetKeyValueResponse)
  SharedDtor();
}

void GetKeyValueResponse::SharedDtor() {
  if (this != internal_default_instance()) delete kv_;
}

void GetKeyValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetKeyValueResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetKeyValueResponse& GetKeyValueResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_GetKeyValueResponse.base);
  return *internal_default_instance();
}


void GetKeyValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GetKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && kv_ != NULL) {
    delete kv_;
  }
  kv_ = NULL;
  _internal_metadata_.Clear();
}

bool GetKeyValueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GetKeyValueResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.KeyValueEntry kv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GetKeyValueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GetKeyValueResponse)
  return false;
#undef DO_
}

void GetKeyValueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GetKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.KeyValueEntry kv = 1;
  if (this->has_kv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_kv(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GetKeyValueResponse)
}

::google::protobuf::uint8* GetKeyValueResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GetKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.KeyValueEntry kv = 1;
  if (this->has_kv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_kv(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GetKeyValueResponse)
  return target;
}

size_t GetKeyValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GetKeyValueResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.KeyValueEntry kv = 1;
  if (this->has_kv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kv_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetKeyValueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GetKeyValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetKeyValueResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetKeyValueResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GetKeyValueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GetKeyValueResponse)
    MergeFrom(*source);
  }
}

void GetKeyValueResponse::MergeFrom(const GetKeyValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GetKeyValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_kv()) {
    mutable_kv()->::tensorflow::KeyValueEntry::MergeFrom(from.kv());
  }
}

void GetKeyValueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GetKeyValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetKeyValueResponse::CopyFrom(const GetKeyValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GetKeyValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKeyValueResponse::IsInitialized() const {
  return true;
}

void GetKeyValueResponse::Swap(GetKeyValueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetKeyValueResponse::InternalSwap(GetKeyValueResponse* other) {
  using std::swap;
  swap(kv_, other->kv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetKeyValueResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteKeyValueRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteKeyValueRequest::kKeyFieldNumber;
const int DeleteKeyValueRequest::kIsDirectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteKeyValueRequest::DeleteKeyValueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_DeleteKeyValueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DeleteKeyValueRequest)
}
DeleteKeyValueRequest::DeleteKeyValueRequest(const DeleteKeyValueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  is_directory_ = from.is_directory_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.DeleteKeyValueRequest)
}

void DeleteKeyValueRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_directory_ = false;
}

DeleteKeyValueRequest::~DeleteKeyValueRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.DeleteKeyValueRequest)
  SharedDtor();
}

void DeleteKeyValueRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteKeyValueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteKeyValueRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteKeyValueRequest& DeleteKeyValueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_DeleteKeyValueRequest.base);
  return *internal_default_instance();
}


void DeleteKeyValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeleteKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_directory_ = false;
  _internal_metadata_.Clear();
}

bool DeleteKeyValueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DeleteKeyValueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DeleteKeyValueRequest.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_directory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_directory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DeleteKeyValueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DeleteKeyValueRequest)
  return false;
#undef DO_
}

void DeleteKeyValueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DeleteKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DeleteKeyValueRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // bool is_directory = 2;
  if (this->is_directory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_directory(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DeleteKeyValueRequest)
}

::google::protobuf::uint8* DeleteKeyValueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeleteKeyValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DeleteKeyValueRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // bool is_directory = 2;
  if (this->is_directory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_directory(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeleteKeyValueRequest)
  return target;
}

size_t DeleteKeyValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DeleteKeyValueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // bool is_directory = 2;
  if (this->is_directory() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteKeyValueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DeleteKeyValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteKeyValueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteKeyValueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DeleteKeyValueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DeleteKeyValueRequest)
    MergeFrom(*source);
  }
}

void DeleteKeyValueRequest::MergeFrom(const DeleteKeyValueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeleteKeyValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.is_directory() != 0) {
    set_is_directory(from.is_directory());
  }
}

void DeleteKeyValueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DeleteKeyValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteKeyValueRequest::CopyFrom(const DeleteKeyValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeleteKeyValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteKeyValueRequest::IsInitialized() const {
  return true;
}

void DeleteKeyValueRequest::Swap(DeleteKeyValueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteKeyValueRequest::InternalSwap(DeleteKeyValueRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_directory_, other->is_directory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteKeyValueRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteKeyValueResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteKeyValueResponse::DeleteKeyValueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_DeleteKeyValueResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DeleteKeyValueResponse)
}
DeleteKeyValueResponse::DeleteKeyValueResponse(const DeleteKeyValueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.DeleteKeyValueResponse)
}

void DeleteKeyValueResponse::SharedCtor() {
}

DeleteKeyValueResponse::~DeleteKeyValueResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.DeleteKeyValueResponse)
  SharedDtor();
}

void DeleteKeyValueResponse::SharedDtor() {
}

void DeleteKeyValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteKeyValueResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteKeyValueResponse& DeleteKeyValueResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_DeleteKeyValueResponse.base);
  return *internal_default_instance();
}


void DeleteKeyValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeleteKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteKeyValueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DeleteKeyValueResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DeleteKeyValueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DeleteKeyValueResponse)
  return false;
#undef DO_
}

void DeleteKeyValueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DeleteKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DeleteKeyValueResponse)
}

::google::protobuf::uint8* DeleteKeyValueResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeleteKeyValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeleteKeyValueResponse)
  return target;
}

size_t DeleteKeyValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DeleteKeyValueResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteKeyValueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DeleteKeyValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteKeyValueResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteKeyValueResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DeleteKeyValueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DeleteKeyValueResponse)
    MergeFrom(*source);
  }
}

void DeleteKeyValueResponse::MergeFrom(const DeleteKeyValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeleteKeyValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteKeyValueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DeleteKeyValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteKeyValueResponse::CopyFrom(const DeleteKeyValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeleteKeyValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteKeyValueResponse::IsInitialized() const {
  return true;
}

void DeleteKeyValueResponse::Swap(DeleteKeyValueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteKeyValueResponse::InternalSwap(DeleteKeyValueResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteKeyValueResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BarrierRequest::InitAsDefaultInstance() {
  ::tensorflow::_BarrierRequest_default_instance_._instance.get_mutable()->source_task_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BarrierRequest::kBarrierIdFieldNumber;
const int BarrierRequest::kBarrierTimeoutInMsFieldNumber;
const int BarrierRequest::kTasksFieldNumber;
const int BarrierRequest::kSourceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BarrierRequest::BarrierRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_BarrierRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.BarrierRequest)
}
BarrierRequest::BarrierRequest(const BarrierRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tasks_(from.tasks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  barrier_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.barrier_id().size() > 0) {
    barrier_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.barrier_id_);
  }
  if (from.has_source_task()) {
    source_task_ = new ::tensorflow::CoordinatedTask(*from.source_task_);
  } else {
    source_task_ = NULL;
  }
  barrier_timeout_in_ms_ = from.barrier_timeout_in_ms_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.BarrierRequest)
}

void BarrierRequest::SharedCtor() {
  barrier_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_task_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&barrier_timeout_in_ms_) -
      reinterpret_cast<char*>(&source_task_)) + sizeof(barrier_timeout_in_ms_));
}

BarrierRequest::~BarrierRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.BarrierRequest)
  SharedDtor();
}

void BarrierRequest::SharedDtor() {
  barrier_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_task_;
}

void BarrierRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BarrierRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BarrierRequest& BarrierRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_BarrierRequest.base);
  return *internal_default_instance();
}


void BarrierRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BarrierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasks_.Clear();
  barrier_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && source_task_ != NULL) {
    delete source_task_;
  }
  source_task_ = NULL;
  barrier_timeout_in_ms_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool BarrierRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.BarrierRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string barrier_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_barrier_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->barrier_id().data(), static_cast<int>(this->barrier_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.BarrierRequest.barrier_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 barrier_timeout_in_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &barrier_timeout_in_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.CoordinatedTask tasks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinatedTask source_task = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.BarrierRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.BarrierRequest)
  return false;
#undef DO_
}

void BarrierRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.BarrierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string barrier_id = 1;
  if (this->barrier_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->barrier_id().data(), static_cast<int>(this->barrier_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.BarrierRequest.barrier_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->barrier_id(), output);
  }

  // int64 barrier_timeout_in_ms = 2;
  if (this->barrier_timeout_in_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->barrier_timeout_in_ms(), output);
  }

  // repeated .tensorflow.CoordinatedTask tasks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->tasks(static_cast<int>(i)),
      output);
  }

  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_source_task(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.BarrierRequest)
}

::google::protobuf::uint8* BarrierRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BarrierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string barrier_id = 1;
  if (this->barrier_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->barrier_id().data(), static_cast<int>(this->barrier_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.BarrierRequest.barrier_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->barrier_id(), target);
  }

  // int64 barrier_timeout_in_ms = 2;
  if (this->barrier_timeout_in_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->barrier_timeout_in_ms(), target);
  }

  // repeated .tensorflow.CoordinatedTask tasks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->tasks(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_source_task(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BarrierRequest)
  return target;
}

size_t BarrierRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.BarrierRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.CoordinatedTask tasks = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->tasks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasks(static_cast<int>(i)));
    }
  }

  // string barrier_id = 1;
  if (this->barrier_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->barrier_id());
  }

  // .tensorflow.CoordinatedTask source_task = 4;
  if (this->has_source_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_task_);
  }

  // int64 barrier_timeout_in_ms = 2;
  if (this->barrier_timeout_in_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->barrier_timeout_in_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BarrierRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.BarrierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BarrierRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BarrierRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.BarrierRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.BarrierRequest)
    MergeFrom(*source);
  }
}

void BarrierRequest::MergeFrom(const BarrierRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BarrierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasks_.MergeFrom(from.tasks_);
  if (from.barrier_id().size() > 0) {

    barrier_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.barrier_id_);
  }
  if (from.has_source_task()) {
    mutable_source_task()->::tensorflow::CoordinatedTask::MergeFrom(from.source_task());
  }
  if (from.barrier_timeout_in_ms() != 0) {
    set_barrier_timeout_in_ms(from.barrier_timeout_in_ms());
  }
}

void BarrierRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.BarrierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarrierRequest::CopyFrom(const BarrierRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BarrierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarrierRequest::IsInitialized() const {
  return true;
}

void BarrierRequest::Swap(BarrierRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BarrierRequest::InternalSwap(BarrierRequest* other) {
  using std::swap;
  CastToBase(&tasks_)->InternalSwap(CastToBase(&other->tasks_));
  barrier_id_.Swap(&other->barrier_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_task_, other->source_task_);
  swap(barrier_timeout_in_ms_, other->barrier_timeout_in_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BarrierRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BarrierResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BarrierResponse::BarrierResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_BarrierResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.BarrierResponse)
}
BarrierResponse::BarrierResponse(const BarrierResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.BarrierResponse)
}

void BarrierResponse::SharedCtor() {
}

BarrierResponse::~BarrierResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.BarrierResponse)
  SharedDtor();
}

void BarrierResponse::SharedDtor() {
}

void BarrierResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BarrierResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BarrierResponse& BarrierResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_BarrierResponse.base);
  return *internal_default_instance();
}


void BarrierResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BarrierResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool BarrierResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.BarrierResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.BarrierResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.BarrierResponse)
  return false;
#undef DO_
}

void BarrierResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.BarrierResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.BarrierResponse)
}

::google::protobuf::uint8* BarrierResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BarrierResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BarrierResponse)
  return target;
}

size_t BarrierResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.BarrierResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BarrierResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.BarrierResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BarrierResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BarrierResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.BarrierResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.BarrierResponse)
    MergeFrom(*source);
  }
}

void BarrierResponse::MergeFrom(const BarrierResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BarrierResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BarrierResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.BarrierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarrierResponse::CopyFrom(const BarrierResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BarrierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarrierResponse::IsInitialized() const {
  return true;
}

void BarrierResponse::Swap(BarrierResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BarrierResponse::InternalSwap(BarrierResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BarrierResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelBarrierRequest::InitAsDefaultInstance() {
  ::tensorflow::_CancelBarrierRequest_default_instance_._instance.get_mutable()->source_task_ = const_cast< ::tensorflow::CoordinatedTask*>(
      ::tensorflow::CoordinatedTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelBarrierRequest::kBarrierIdFieldNumber;
const int CancelBarrierRequest::kSourceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelBarrierRequest::CancelBarrierRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CancelBarrierRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CancelBarrierRequest)
}
CancelBarrierRequest::CancelBarrierRequest(const CancelBarrierRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  barrier_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.barrier_id().size() > 0) {
    barrier_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.barrier_id_);
  }
  if (from.has_source_task()) {
    source_task_ = new ::tensorflow::CoordinatedTask(*from.source_task_);
  } else {
    source_task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.CancelBarrierRequest)
}

void CancelBarrierRequest::SharedCtor() {
  barrier_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_task_ = NULL;
}

CancelBarrierRequest::~CancelBarrierRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.CancelBarrierRequest)
  SharedDtor();
}

void CancelBarrierRequest::SharedDtor() {
  barrier_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_task_;
}

void CancelBarrierRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CancelBarrierRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelBarrierRequest& CancelBarrierRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CancelBarrierRequest.base);
  return *internal_default_instance();
}


void CancelBarrierRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CancelBarrierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  barrier_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && source_task_ != NULL) {
    delete source_task_;
  }
  source_task_ = NULL;
  _internal_metadata_.Clear();
}

bool CancelBarrierRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CancelBarrierRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string barrier_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_barrier_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->barrier_id().data(), static_cast<int>(this->barrier_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CancelBarrierRequest.barrier_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CoordinatedTask source_task = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CancelBarrierRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CancelBarrierRequest)
  return false;
#undef DO_
}

void CancelBarrierRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CancelBarrierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string barrier_id = 1;
  if (this->barrier_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->barrier_id().data(), static_cast<int>(this->barrier_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CancelBarrierRequest.barrier_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->barrier_id(), output);
  }

  // .tensorflow.CoordinatedTask source_task = 2;
  if (this->has_source_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_source_task(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CancelBarrierRequest)
}

::google::protobuf::uint8* CancelBarrierRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CancelBarrierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string barrier_id = 1;
  if (this->barrier_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->barrier_id().data(), static_cast<int>(this->barrier_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CancelBarrierRequest.barrier_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->barrier_id(), target);
  }

  // .tensorflow.CoordinatedTask source_task = 2;
  if (this->has_source_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_source_task(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CancelBarrierRequest)
  return target;
}

size_t CancelBarrierRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CancelBarrierRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string barrier_id = 1;
  if (this->barrier_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->barrier_id());
  }

  // .tensorflow.CoordinatedTask source_task = 2;
  if (this->has_source_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelBarrierRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CancelBarrierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelBarrierRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelBarrierRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CancelBarrierRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CancelBarrierRequest)
    MergeFrom(*source);
  }
}

void CancelBarrierRequest::MergeFrom(const CancelBarrierRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CancelBarrierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.barrier_id().size() > 0) {

    barrier_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.barrier_id_);
  }
  if (from.has_source_task()) {
    mutable_source_task()->::tensorflow::CoordinatedTask::MergeFrom(from.source_task());
  }
}

void CancelBarrierRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CancelBarrierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelBarrierRequest::CopyFrom(const CancelBarrierRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CancelBarrierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelBarrierRequest::IsInitialized() const {
  return true;
}

void CancelBarrierRequest::Swap(CancelBarrierRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelBarrierRequest::InternalSwap(CancelBarrierRequest* other) {
  using std::swap;
  barrier_id_.Swap(&other->barrier_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_task_, other->source_task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CancelBarrierRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelBarrierResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelBarrierResponse::CancelBarrierResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CancelBarrierResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CancelBarrierResponse)
}
CancelBarrierResponse::CancelBarrierResponse(const CancelBarrierResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CancelBarrierResponse)
}

void CancelBarrierResponse::SharedCtor() {
}

CancelBarrierResponse::~CancelBarrierResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.CancelBarrierResponse)
  SharedDtor();
}

void CancelBarrierResponse::SharedDtor() {
}

void CancelBarrierResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CancelBarrierResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelBarrierResponse& CancelBarrierResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::scc_info_CancelBarrierResponse.base);
  return *internal_default_instance();
}


void CancelBarrierResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CancelBarrierResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CancelBarrierResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CancelBarrierResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CancelBarrierResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CancelBarrierResponse)
  return false;
#undef DO_
}

void CancelBarrierResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CancelBarrierResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CancelBarrierResponse)
}

::google::protobuf::uint8* CancelBarrierResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CancelBarrierResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CancelBarrierResponse)
  return target;
}

size_t CancelBarrierResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CancelBarrierResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelBarrierResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CancelBarrierResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelBarrierResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelBarrierResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CancelBarrierResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CancelBarrierResponse)
    MergeFrom(*source);
  }
}

void CancelBarrierResponse::MergeFrom(const CancelBarrierResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CancelBarrierResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CancelBarrierResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CancelBarrierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelBarrierResponse::CopyFrom(const CancelBarrierResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CancelBarrierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelBarrierResponse::IsInitialized() const {
  return true;
}

void CancelBarrierResponse::Swap(CancelBarrierResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelBarrierResponse::InternalSwap(CancelBarrierResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CancelBarrierResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fcoordination_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CoordinatedTask* Arena::CreateMaybeMessage< ::tensorflow::CoordinatedTask >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::CoordinatedTask >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CoordinationServiceError* Arena::CreateMaybeMessage< ::tensorflow::CoordinationServiceError >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::CoordinationServiceError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TfDeviceList* Arena::CreateMaybeMessage< ::tensorflow::TfDeviceList >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::TfDeviceList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaDeviceList* Arena::CreateMaybeMessage< ::tensorflow::XlaDeviceList >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaDeviceList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CoordinationServiceDeviceInfo* Arena::CreateMaybeMessage< ::tensorflow::CoordinationServiceDeviceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::CoordinationServiceDeviceInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RegisterTaskRequest* Arena::CreateMaybeMessage< ::tensorflow::RegisterTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::RegisterTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RegisterTaskResponse* Arena::CreateMaybeMessage< ::tensorflow::RegisterTaskResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::RegisterTaskResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::HeartbeatRequest* Arena::CreateMaybeMessage< ::tensorflow::HeartbeatRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::HeartbeatRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::HeartbeatResponse* Arena::CreateMaybeMessage< ::tensorflow::HeartbeatResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::HeartbeatResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::WaitForAllTasksRequest* Arena::CreateMaybeMessage< ::tensorflow::WaitForAllTasksRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::WaitForAllTasksRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::WaitForAllTasksResponse* Arena::CreateMaybeMessage< ::tensorflow::WaitForAllTasksResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::WaitForAllTasksResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ShutdownTaskRequest* Arena::CreateMaybeMessage< ::tensorflow::ShutdownTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ShutdownTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ShutdownTaskResponse* Arena::CreateMaybeMessage< ::tensorflow::ShutdownTaskResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ShutdownTaskResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ResetTaskRequest* Arena::CreateMaybeMessage< ::tensorflow::ResetTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ResetTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ResetTaskResponse* Arena::CreateMaybeMessage< ::tensorflow::ResetTaskResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ResetTaskResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ReportErrorToTaskRequest* Arena::CreateMaybeMessage< ::tensorflow::ReportErrorToTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ReportErrorToTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ReportErrorToTaskResponse* Arena::CreateMaybeMessage< ::tensorflow::ReportErrorToTaskResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ReportErrorToTaskResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ReportErrorToServiceRequest* Arena::CreateMaybeMessage< ::tensorflow::ReportErrorToServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ReportErrorToServiceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ReportErrorToServiceResponse* Arena::CreateMaybeMessage< ::tensorflow::ReportErrorToServiceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::ReportErrorToServiceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::KeyValueEntry* Arena::CreateMaybeMessage< ::tensorflow::KeyValueEntry >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::KeyValueEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::InsertKeyValueRequest* Arena::CreateMaybeMessage< ::tensorflow::InsertKeyValueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::InsertKeyValueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::InsertKeyValueResponse* Arena::CreateMaybeMessage< ::tensorflow::InsertKeyValueResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::InsertKeyValueResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::GetKeyValueRequest* Arena::CreateMaybeMessage< ::tensorflow::GetKeyValueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::GetKeyValueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::GetKeyValueResponse* Arena::CreateMaybeMessage< ::tensorflow::GetKeyValueResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::GetKeyValueResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DeleteKeyValueRequest* Arena::CreateMaybeMessage< ::tensorflow::DeleteKeyValueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::DeleteKeyValueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DeleteKeyValueResponse* Arena::CreateMaybeMessage< ::tensorflow::DeleteKeyValueResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::DeleteKeyValueResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::BarrierRequest* Arena::CreateMaybeMessage< ::tensorflow::BarrierRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::BarrierRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::BarrierResponse* Arena::CreateMaybeMessage< ::tensorflow::BarrierResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::BarrierResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CancelBarrierRequest* Arena::CreateMaybeMessage< ::tensorflow::CancelBarrierRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::CancelBarrierRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CancelBarrierResponse* Arena::CreateMaybeMessage< ::tensorflow::CancelBarrierResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::CancelBarrierResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
