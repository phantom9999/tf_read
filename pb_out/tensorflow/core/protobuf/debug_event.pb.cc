// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/debug_event.proto

#include "tensorflow/core/protobuf/debug_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TensorProto;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CodeLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DebugMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DebuggedDevice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DebuggedGraph;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SourceFile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GraphExecutionTrace;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GraphOpCreation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StackFrameWithId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Execution;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fgraph_5fdebug_5finfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fgraph_5fdebug_5finfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GraphDebugInfo_FileLineCol;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fgraph_5fdebug_5finfo_2eproto
namespace tensorflow {
class DebugEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugEvent>
      _instance;
  const ::tensorflow::DebugMetadata* debug_metadata_;
  const ::tensorflow::SourceFile* source_file_;
  const ::tensorflow::StackFrameWithId* stack_frame_with_id_;
  const ::tensorflow::GraphOpCreation* graph_op_creation_;
  const ::tensorflow::DebuggedGraph* debugged_graph_;
  const ::tensorflow::Execution* execution_;
  const ::tensorflow::GraphExecutionTrace* graph_execution_trace_;
  ::google::protobuf::internal::ArenaStringPtr graph_id_;
  const ::tensorflow::DebuggedDevice* debugged_device_;
} _DebugEvent_default_instance_;
class DebugMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugMetadata>
      _instance;
} _DebugMetadata_default_instance_;
class SourceFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourceFile>
      _instance;
} _SourceFile_default_instance_;
class StackFrameWithIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StackFrameWithId>
      _instance;
} _StackFrameWithId_default_instance_;
class CodeLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodeLocation>
      _instance;
} _CodeLocation_default_instance_;
class GraphOpCreationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphOpCreation>
      _instance;
} _GraphOpCreation_default_instance_;
class DebuggedGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebuggedGraph>
      _instance;
} _DebuggedGraph_default_instance_;
class DebuggedDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebuggedDevice>
      _instance;
} _DebuggedDevice_default_instance_;
class ExecutionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Execution>
      _instance;
} _Execution_default_instance_;
class GraphExecutionTraceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphExecutionTrace>
      _instance;
} _GraphExecutionTrace_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto {
static void InitDefaultsDebugEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DebugEvent_default_instance_;
    new (ptr) ::tensorflow::DebugEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DebugEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_DebugEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsDebugEvent}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebugMetadata.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_SourceFile.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_StackFrameWithId.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_GraphOpCreation.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebuggedGraph.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_Execution.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_GraphExecutionTrace.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebuggedDevice.base,}};

static void InitDefaultsDebugMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DebugMetadata_default_instance_;
    new (ptr) ::tensorflow::DebugMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DebugMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DebugMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebugMetadata}, {}};

static void InitDefaultsSourceFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SourceFile_default_instance_;
    new (ptr) ::tensorflow::SourceFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SourceFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SourceFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSourceFile}, {}};

static void InitDefaultsStackFrameWithId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_StackFrameWithId_default_instance_;
    new (ptr) ::tensorflow::StackFrameWithId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::StackFrameWithId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StackFrameWithId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStackFrameWithId}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fgraph_5fdebug_5finfo_2eproto::scc_info_GraphDebugInfo_FileLineCol.base,}};

static void InitDefaultsCodeLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CodeLocation_default_instance_;
    new (ptr) ::tensorflow::CodeLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CodeLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CodeLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCodeLocation}, {}};

static void InitDefaultsGraphOpCreation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GraphOpCreation_default_instance_;
    new (ptr) ::tensorflow::GraphOpCreation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GraphOpCreation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GraphOpCreation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGraphOpCreation}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_CodeLocation.base,}};

static void InitDefaultsDebuggedGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DebuggedGraph_default_instance_;
    new (ptr) ::tensorflow::DebuggedGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DebuggedGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DebuggedGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebuggedGraph}, {}};

static void InitDefaultsDebuggedDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DebuggedDevice_default_instance_;
    new (ptr) ::tensorflow::DebuggedDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DebuggedDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DebuggedDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebuggedDevice}, {}};

static void InitDefaultsExecution() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_Execution_default_instance_;
    new (ptr) ::tensorflow::Execution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::Execution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Execution =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExecution}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::scc_info_TensorProto.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_CodeLocation.base,}};

static void InitDefaultsGraphExecutionTrace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GraphExecutionTrace_default_instance_;
    new (ptr) ::tensorflow::GraphExecutionTrace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GraphExecutionTrace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GraphExecutionTrace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGraphExecutionTrace}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::scc_info_TensorProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DebugEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebugMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SourceFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StackFrameWithId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CodeLocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphOpCreation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebuggedGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebuggedDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Execution.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphExecutionTrace.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugEvent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugEvent, wall_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugEvent, step_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, debug_metadata_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, source_file_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, stack_frame_with_id_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, graph_op_creation_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, debugged_graph_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, execution_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, graph_execution_trace_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, graph_id_),
  offsetof(::tensorflow::DebugEventDefaultTypeInternal, debugged_device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugEvent, what_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugMetadata, tensorflow_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugMetadata, file_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebugMetadata, tfdbg_run_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::SourceFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::SourceFile, file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::SourceFile, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::SourceFile, lines_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::StackFrameWithId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::StackFrameWithId, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::StackFrameWithId, file_line_col_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CodeLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CodeLocation, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CodeLocation, stack_frame_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, op_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, graph_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, graph_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, input_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, num_outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, code_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphOpCreation, output_tensor_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedGraph, graph_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedGraph, graph_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedGraph, instrumented_ops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedGraph, original_graph_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedGraph, instrumented_graph_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedGraph, outer_context_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedDevice, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DebuggedDevice, device_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, num_outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, graph_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, input_tensor_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, output_tensor_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, tensor_debug_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, tensor_protos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, code_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::Execution, output_tensor_device_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, tfdbg_context_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, op_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, output_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, tensor_debug_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, tensor_proto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, device_name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::DebugEvent)},
  { 17, -1, sizeof(::tensorflow::DebugMetadata)},
  { 25, -1, sizeof(::tensorflow::SourceFile)},
  { 33, -1, sizeof(::tensorflow::StackFrameWithId)},
  { 40, -1, sizeof(::tensorflow::CodeLocation)},
  { 47, -1, sizeof(::tensorflow::GraphOpCreation)},
  { 61, -1, sizeof(::tensorflow::DebuggedGraph)},
  { 72, -1, sizeof(::tensorflow::DebuggedDevice)},
  { 79, -1, sizeof(::tensorflow::Execution)},
  { 93, -1, sizeof(::tensorflow::GraphExecutionTrace)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DebugEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DebugMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_SourceFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_StackFrameWithId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CodeLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_GraphOpCreation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DebuggedGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DebuggedDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_Execution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_GraphExecutionTrace_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/protobuf/debug_event.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*tensorflow/core/protobuf/debug_event.p"
      "roto\022\ntensorflow\032&tensorflow/core/framew"
      "ork/tensor.proto\032/tensorflow/core/protob"
      "uf/graph_debug_info.proto\"\376\003\n\nDebugEvent"
      "\022\021\n\twall_time\030\001 \001(\001\022\014\n\004step\030\002 \001(\003\0223\n\016deb"
      "ug_metadata\030\003 \001(\0132\031.tensorflow.DebugMeta"
      "dataH\000\022-\n\013source_file\030\004 \001(\0132\026.tensorflow"
      ".SourceFileH\000\022;\n\023stack_frame_with_id\030\006 \001"
      "(\0132\034.tensorflow.StackFrameWithIdH\000\0228\n\021gr"
      "aph_op_creation\030\007 \001(\0132\033.tensorflow.Graph"
      "OpCreationH\000\0223\n\016debugged_graph\030\010 \001(\0132\031.t"
      "ensorflow.DebuggedGraphH\000\022*\n\texecution\030\t"
      " \001(\0132\025.tensorflow.ExecutionH\000\022@\n\025graph_e"
      "xecution_trace\030\n \001(\0132\037.tensorflow.GraphE"
      "xecutionTraceH\000\022\022\n\010graph_id\030\013 \001(\tH\000\0225\n\017d"
      "ebugged_device\030\014 \001(\0132\032.tensorflow.Debugg"
      "edDeviceH\000B\006\n\004what\"W\n\rDebugMetadata\022\032\n\022t"
      "ensorflow_version\030\001 \001(\t\022\024\n\014file_version\030"
      "\002 \001(\t\022\024\n\014tfdbg_run_id\030\003 \001(\t\"A\n\nSourceFil"
      "e\022\021\n\tfile_path\030\001 \001(\t\022\021\n\thost_name\030\002 \001(\t\022"
      "\r\n\005lines\030\003 \003(\t\"]\n\020StackFrameWithId\022\n\n\002id"
      "\030\001 \001(\t\022=\n\rfile_line_col\030\002 \001(\0132&.tensorfl"
      "ow.GraphDebugInfo.FileLineCol\":\n\014CodeLoc"
      "ation\022\021\n\thost_name\030\001 \001(\t\022\027\n\017stack_frame_"
      "ids\030\002 \003(\t\"\344\001\n\017GraphOpCreation\022\017\n\007op_type"
      "\030\001 \001(\t\022\017\n\007op_name\030\002 \001(\t\022\022\n\ngraph_name\030\003 "
      "\001(\t\022\020\n\010graph_id\030\004 \001(\t\022\023\n\013device_name\030\005 \001"
      "(\t\022\023\n\013input_names\030\006 \003(\t\022\023\n\013num_outputs\030\007"
      " \001(\005\022/\n\rcode_location\030\010 \001(\0132\030.tensorflow"
      ".CodeLocation\022\031\n\021output_tensor_ids\030\t \003(\005"
      "\"\245\001\n\rDebuggedGraph\022\020\n\010graph_id\030\001 \001(\t\022\022\n\n"
      "graph_name\030\002 \001(\t\022\030\n\020instrumented_ops\030\003 \003"
      "(\t\022\032\n\022original_graph_def\030\004 \001(\014\022\036\n\026instru"
      "mented_graph_def\030\005 \001(\014\022\030\n\020outer_context_"
      "id\030\006 \001(\t\"8\n\016DebuggedDevice\022\023\n\013device_nam"
      "e\030\001 \001(\t\022\021\n\tdevice_id\030\002 \001(\005\"\263\002\n\tExecution"
      "\022\017\n\007op_type\030\001 \001(\t\022\023\n\013num_outputs\030\002 \001(\005\022\020"
      "\n\010graph_id\030\003 \001(\t\022\030\n\020input_tensor_ids\030\004 \003"
      "(\003\022\031\n\021output_tensor_ids\030\005 \003(\003\0226\n\021tensor_"
      "debug_mode\030\006 \001(\0162\033.tensorflow.TensorDebu"
      "gMode\022.\n\rtensor_protos\030\007 \003(\0132\027.tensorflo"
      "w.TensorProto\022/\n\rcode_location\030\010 \001(\0132\030.t"
      "ensorflow.CodeLocation\022 \n\030output_tensor_"
      "device_ids\030\t \003(\005\"\321\001\n\023GraphExecutionTrace"
      "\022\030\n\020tfdbg_context_id\030\001 \001(\t\022\017\n\007op_name\030\002 "
      "\001(\t\022\023\n\013output_slot\030\003 \001(\005\0226\n\021tensor_debug"
      "_mode\030\004 \001(\0162\033.tensorflow.TensorDebugMode"
      "\022-\n\014tensor_proto\030\005 \001(\0132\027.tensorflow.Tens"
      "orProto\022\023\n\013device_name\030\006 \001(\t*\266\001\n\017TensorD"
      "ebugMode\022\017\n\013UNSPECIFIED\020\000\022\r\n\tNO_TENSOR\020\001"
      "\022\017\n\013CURT_HEALTH\020\002\022\022\n\016CONCISE_HEALTH\020\003\022\017\n"
      "\013FULL_HEALTH\020\004\022\t\n\005SHAPE\020\005\022\021\n\rFULL_NUMERI"
      "CS\020\006\022\017\n\013FULL_TENSOR\020\007\022\036\n\032REDUCE_INF_NAN_"
      "THREE_SLOTS\020\010B\203\001\n\023org.tensorflow.utilB\020D"
      "ebugEventProtosP\001ZUgithub.com/tensorflow"
      "/tensorflow/tensorflow/go/core/protobuf/"
      "for_core_protos_go_proto\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2275);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/debug_event.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fgraph_5fdebug_5finfo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* TensorDebugMode_descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_enum_descriptors[0];
}
bool TensorDebugMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void DebugEvent::InitAsDefaultInstance() {
  ::tensorflow::_DebugEvent_default_instance_.debug_metadata_ = const_cast< ::tensorflow::DebugMetadata*>(
      ::tensorflow::DebugMetadata::internal_default_instance());
  ::tensorflow::_DebugEvent_default_instance_.source_file_ = const_cast< ::tensorflow::SourceFile*>(
      ::tensorflow::SourceFile::internal_default_instance());
  ::tensorflow::_DebugEvent_default_instance_.stack_frame_with_id_ = const_cast< ::tensorflow::StackFrameWithId*>(
      ::tensorflow::StackFrameWithId::internal_default_instance());
  ::tensorflow::_DebugEvent_default_instance_.graph_op_creation_ = const_cast< ::tensorflow::GraphOpCreation*>(
      ::tensorflow::GraphOpCreation::internal_default_instance());
  ::tensorflow::_DebugEvent_default_instance_.debugged_graph_ = const_cast< ::tensorflow::DebuggedGraph*>(
      ::tensorflow::DebuggedGraph::internal_default_instance());
  ::tensorflow::_DebugEvent_default_instance_.execution_ = const_cast< ::tensorflow::Execution*>(
      ::tensorflow::Execution::internal_default_instance());
  ::tensorflow::_DebugEvent_default_instance_.graph_execution_trace_ = const_cast< ::tensorflow::GraphExecutionTrace*>(
      ::tensorflow::GraphExecutionTrace::internal_default_instance());
  ::tensorflow::_DebugEvent_default_instance_.graph_id_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::tensorflow::_DebugEvent_default_instance_.debugged_device_ = const_cast< ::tensorflow::DebuggedDevice*>(
      ::tensorflow::DebuggedDevice::internal_default_instance());
}
void DebugEvent::set_allocated_debug_metadata(::tensorflow::DebugMetadata* debug_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_what();
  if (debug_metadata) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(debug_metadata);
    if (message_arena != submessage_arena) {
      debug_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debug_metadata, submessage_arena);
    }
    set_has_debug_metadata();
    what_.debug_metadata_ = debug_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.debug_metadata)
}
void DebugEvent::set_allocated_source_file(::tensorflow::SourceFile* source_file) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_what();
  if (source_file) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(source_file);
    if (message_arena != submessage_arena) {
      source_file = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_file, submessage_arena);
    }
    set_has_source_file();
    what_.source_file_ = source_file;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.source_file)
}
void DebugEvent::set_allocated_stack_frame_with_id(::tensorflow::StackFrameWithId* stack_frame_with_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_what();
  if (stack_frame_with_id) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(stack_frame_with_id);
    if (message_arena != submessage_arena) {
      stack_frame_with_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stack_frame_with_id, submessage_arena);
    }
    set_has_stack_frame_with_id();
    what_.stack_frame_with_id_ = stack_frame_with_id;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.stack_frame_with_id)
}
void DebugEvent::set_allocated_graph_op_creation(::tensorflow::GraphOpCreation* graph_op_creation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_what();
  if (graph_op_creation) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(graph_op_creation);
    if (message_arena != submessage_arena) {
      graph_op_creation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, graph_op_creation, submessage_arena);
    }
    set_has_graph_op_creation();
    what_.graph_op_creation_ = graph_op_creation;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.graph_op_creation)
}
void DebugEvent::set_allocated_debugged_graph(::tensorflow::DebuggedGraph* debugged_graph) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_what();
  if (debugged_graph) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(debugged_graph);
    if (message_arena != submessage_arena) {
      debugged_graph = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debugged_graph, submessage_arena);
    }
    set_has_debugged_graph();
    what_.debugged_graph_ = debugged_graph;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.debugged_graph)
}
void DebugEvent::set_allocated_execution(::tensorflow::Execution* execution) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_what();
  if (execution) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(execution);
    if (message_arena != submessage_arena) {
      execution = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution, submessage_arena);
    }
    set_has_execution();
    what_.execution_ = execution;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.execution)
}
void DebugEvent::set_allocated_graph_execution_trace(::tensorflow::GraphExecutionTrace* graph_execution_trace) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_what();
  if (graph_execution_trace) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(graph_execution_trace);
    if (message_arena != submessage_arena) {
      graph_execution_trace = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, graph_execution_trace, submessage_arena);
    }
    set_has_graph_execution_trace();
    what_.graph_execution_trace_ = graph_execution_trace;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.graph_execution_trace)
}
void DebugEvent::set_allocated_debugged_device(::tensorflow::DebuggedDevice* debugged_device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_what();
  if (debugged_device) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(debugged_device);
    if (message_arena != submessage_arena) {
      debugged_device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debugged_device, submessage_arena);
    }
    set_has_debugged_device();
    what_.debugged_device_ = debugged_device;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.debugged_device)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugEvent::kWallTimeFieldNumber;
const int DebugEvent::kStepFieldNumber;
const int DebugEvent::kDebugMetadataFieldNumber;
const int DebugEvent::kSourceFileFieldNumber;
const int DebugEvent::kStackFrameWithIdFieldNumber;
const int DebugEvent::kGraphOpCreationFieldNumber;
const int DebugEvent::kDebuggedGraphFieldNumber;
const int DebugEvent::kExecutionFieldNumber;
const int DebugEvent::kGraphExecutionTraceFieldNumber;
const int DebugEvent::kGraphIdFieldNumber;
const int DebugEvent::kDebuggedDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugEvent::DebugEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebugEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DebugEvent)
}
DebugEvent::DebugEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebugEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebugEvent)
}
DebugEvent::DebugEvent(const DebugEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wall_time_, &from.wall_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&step_) -
    reinterpret_cast<char*>(&wall_time_)) + sizeof(step_));
  clear_has_what();
  switch (from.what_case()) {
    case kDebugMetadata: {
      mutable_debug_metadata()->::tensorflow::DebugMetadata::MergeFrom(from.debug_metadata());
      break;
    }
    case kSourceFile: {
      mutable_source_file()->::tensorflow::SourceFile::MergeFrom(from.source_file());
      break;
    }
    case kStackFrameWithId: {
      mutable_stack_frame_with_id()->::tensorflow::StackFrameWithId::MergeFrom(from.stack_frame_with_id());
      break;
    }
    case kGraphOpCreation: {
      mutable_graph_op_creation()->::tensorflow::GraphOpCreation::MergeFrom(from.graph_op_creation());
      break;
    }
    case kDebuggedGraph: {
      mutable_debugged_graph()->::tensorflow::DebuggedGraph::MergeFrom(from.debugged_graph());
      break;
    }
    case kExecution: {
      mutable_execution()->::tensorflow::Execution::MergeFrom(from.execution());
      break;
    }
    case kGraphExecutionTrace: {
      mutable_graph_execution_trace()->::tensorflow::GraphExecutionTrace::MergeFrom(from.graph_execution_trace());
      break;
    }
    case kGraphId: {
      set_graph_id(from.graph_id());
      break;
    }
    case kDebuggedDevice: {
      mutable_debugged_device()->::tensorflow::DebuggedDevice::MergeFrom(from.debugged_device());
      break;
    }
    case WHAT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.DebugEvent)
}

void DebugEvent::SharedCtor() {
  ::memset(&wall_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_) -
      reinterpret_cast<char*>(&wall_time_)) + sizeof(step_));
  clear_has_what();
}

DebugEvent::~DebugEvent() {
  // @@protoc_insertion_point(destructor:tensorflow.DebugEvent)
  SharedDtor();
}

void DebugEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_what()) {
    clear_what();
  }
}

void DebugEvent::ArenaDtor(void* object) {
  DebugEvent* _this = reinterpret_cast< DebugEvent* >(object);
  (void)_this;
}
void DebugEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DebugEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DebugEvent::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugEvent& DebugEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebugEvent.base);
  return *internal_default_instance();
}


void DebugEvent::clear_what() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.DebugEvent)
  switch (what_case()) {
    case kDebugMetadata: {
      if (GetArenaNoVirtual() == NULL) {
        delete what_.debug_metadata_;
      }
      break;
    }
    case kSourceFile: {
      if (GetArenaNoVirtual() == NULL) {
        delete what_.source_file_;
      }
      break;
    }
    case kStackFrameWithId: {
      if (GetArenaNoVirtual() == NULL) {
        delete what_.stack_frame_with_id_;
      }
      break;
    }
    case kGraphOpCreation: {
      if (GetArenaNoVirtual() == NULL) {
        delete what_.graph_op_creation_;
      }
      break;
    }
    case kDebuggedGraph: {
      if (GetArenaNoVirtual() == NULL) {
        delete what_.debugged_graph_;
      }
      break;
    }
    case kExecution: {
      if (GetArenaNoVirtual() == NULL) {
        delete what_.execution_;
      }
      break;
    }
    case kGraphExecutionTrace: {
      if (GetArenaNoVirtual() == NULL) {
        delete what_.graph_execution_trace_;
      }
      break;
    }
    case kGraphId: {
      what_.graph_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kDebuggedDevice: {
      if (GetArenaNoVirtual() == NULL) {
        delete what_.debugged_device_;
      }
      break;
    }
    case WHAT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = WHAT_NOT_SET;
}


void DebugEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebugEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wall_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_) -
      reinterpret_cast<char*>(&wall_time_)) + sizeof(step_));
  clear_what();
  _internal_metadata_.Clear();
}

bool DebugEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DebugEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double wall_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wall_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 step = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DebugMetadata debug_metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.SourceFile source_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.StackFrameWithId stack_frame_with_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stack_frame_with_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.GraphOpCreation graph_op_creation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph_op_creation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DebuggedGraph debugged_graph = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debugged_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.Execution execution = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.GraphExecutionTrace graph_execution_trace = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph_execution_trace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string graph_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_id().data(), static_cast<int>(this->graph_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebugEvent.graph_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DebuggedDevice debugged_device = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debugged_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DebugEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DebugEvent)
  return false;
#undef DO_
}

void DebugEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DebugEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double wall_time = 1;
  if (this->wall_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->wall_time(), output);
  }

  // int64 step = 2;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->step(), output);
  }

  // .tensorflow.DebugMetadata debug_metadata = 3;
  if (has_debug_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_debug_metadata(), output);
  }

  // .tensorflow.SourceFile source_file = 4;
  if (has_source_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_source_file(), output);
  }

  // .tensorflow.StackFrameWithId stack_frame_with_id = 6;
  if (has_stack_frame_with_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_stack_frame_with_id(), output);
  }

  // .tensorflow.GraphOpCreation graph_op_creation = 7;
  if (has_graph_op_creation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_graph_op_creation(), output);
  }

  // .tensorflow.DebuggedGraph debugged_graph = 8;
  if (has_debugged_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_debugged_graph(), output);
  }

  // .tensorflow.Execution execution = 9;
  if (has_execution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_execution(), output);
  }

  // .tensorflow.GraphExecutionTrace graph_execution_trace = 10;
  if (has_graph_execution_trace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_graph_execution_trace(), output);
  }

  // string graph_id = 11;
  if (has_graph_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_id().data(), static_cast<int>(this->graph_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebugEvent.graph_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->graph_id(), output);
  }

  // .tensorflow.DebuggedDevice debugged_device = 12;
  if (has_debugged_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_debugged_device(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DebugEvent)
}

::google::protobuf::uint8* DebugEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebugEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double wall_time = 1;
  if (this->wall_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->wall_time(), target);
  }

  // int64 step = 2;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->step(), target);
  }

  // .tensorflow.DebugMetadata debug_metadata = 3;
  if (has_debug_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_debug_metadata(), deterministic, target);
  }

  // .tensorflow.SourceFile source_file = 4;
  if (has_source_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_source_file(), deterministic, target);
  }

  // .tensorflow.StackFrameWithId stack_frame_with_id = 6;
  if (has_stack_frame_with_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_stack_frame_with_id(), deterministic, target);
  }

  // .tensorflow.GraphOpCreation graph_op_creation = 7;
  if (has_graph_op_creation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_graph_op_creation(), deterministic, target);
  }

  // .tensorflow.DebuggedGraph debugged_graph = 8;
  if (has_debugged_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_debugged_graph(), deterministic, target);
  }

  // .tensorflow.Execution execution = 9;
  if (has_execution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_execution(), deterministic, target);
  }

  // .tensorflow.GraphExecutionTrace graph_execution_trace = 10;
  if (has_graph_execution_trace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_graph_execution_trace(), deterministic, target);
  }

  // string graph_id = 11;
  if (has_graph_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_id().data(), static_cast<int>(this->graph_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebugEvent.graph_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->graph_id(), target);
  }

  // .tensorflow.DebuggedDevice debugged_device = 12;
  if (has_debugged_device()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_debugged_device(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebugEvent)
  return target;
}

size_t DebugEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DebugEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double wall_time = 1;
  if (this->wall_time() != 0) {
    total_size += 1 + 8;
  }

  // int64 step = 2;
  if (this->step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step());
  }

  switch (what_case()) {
    // .tensorflow.DebugMetadata debug_metadata = 3;
    case kDebugMetadata: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *what_.debug_metadata_);
      break;
    }
    // .tensorflow.SourceFile source_file = 4;
    case kSourceFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *what_.source_file_);
      break;
    }
    // .tensorflow.StackFrameWithId stack_frame_with_id = 6;
    case kStackFrameWithId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *what_.stack_frame_with_id_);
      break;
    }
    // .tensorflow.GraphOpCreation graph_op_creation = 7;
    case kGraphOpCreation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *what_.graph_op_creation_);
      break;
    }
    // .tensorflow.DebuggedGraph debugged_graph = 8;
    case kDebuggedGraph: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *what_.debugged_graph_);
      break;
    }
    // .tensorflow.Execution execution = 9;
    case kExecution: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *what_.execution_);
      break;
    }
    // .tensorflow.GraphExecutionTrace graph_execution_trace = 10;
    case kGraphExecutionTrace: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *what_.graph_execution_trace_);
      break;
    }
    // string graph_id = 11;
    case kGraphId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->graph_id());
      break;
    }
    // .tensorflow.DebuggedDevice debugged_device = 12;
    case kDebuggedDevice: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *what_.debugged_device_);
      break;
    }
    case WHAT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebugEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DebugEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DebugEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DebugEvent)
    MergeFrom(*source);
  }
}

void DebugEvent::MergeFrom(const DebugEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebugEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wall_time() != 0) {
    set_wall_time(from.wall_time());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
  switch (from.what_case()) {
    case kDebugMetadata: {
      mutable_debug_metadata()->::tensorflow::DebugMetadata::MergeFrom(from.debug_metadata());
      break;
    }
    case kSourceFile: {
      mutable_source_file()->::tensorflow::SourceFile::MergeFrom(from.source_file());
      break;
    }
    case kStackFrameWithId: {
      mutable_stack_frame_with_id()->::tensorflow::StackFrameWithId::MergeFrom(from.stack_frame_with_id());
      break;
    }
    case kGraphOpCreation: {
      mutable_graph_op_creation()->::tensorflow::GraphOpCreation::MergeFrom(from.graph_op_creation());
      break;
    }
    case kDebuggedGraph: {
      mutable_debugged_graph()->::tensorflow::DebuggedGraph::MergeFrom(from.debugged_graph());
      break;
    }
    case kExecution: {
      mutable_execution()->::tensorflow::Execution::MergeFrom(from.execution());
      break;
    }
    case kGraphExecutionTrace: {
      mutable_graph_execution_trace()->::tensorflow::GraphExecutionTrace::MergeFrom(from.graph_execution_trace());
      break;
    }
    case kGraphId: {
      set_graph_id(from.graph_id());
      break;
    }
    case kDebuggedDevice: {
      mutable_debugged_device()->::tensorflow::DebuggedDevice::MergeFrom(from.debugged_device());
      break;
    }
    case WHAT_NOT_SET: {
      break;
    }
  }
}

void DebugEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DebugEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugEvent::CopyFrom(const DebugEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebugEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugEvent::IsInitialized() const {
  return true;
}

void DebugEvent::Swap(DebugEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DebugEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DebugEvent::UnsafeArenaSwap(DebugEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DebugEvent::InternalSwap(DebugEvent* other) {
  using std::swap;
  swap(wall_time_, other->wall_time_);
  swap(step_, other->step_);
  swap(what_, other->what_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DebugEvent::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DebugMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugMetadata::kTensorflowVersionFieldNumber;
const int DebugMetadata::kFileVersionFieldNumber;
const int DebugMetadata::kTfdbgRunIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugMetadata::DebugMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebugMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DebugMetadata)
}
DebugMetadata::DebugMetadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebugMetadata.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebugMetadata)
}
DebugMetadata::DebugMetadata(const DebugMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tensorflow_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tensorflow_version().size() > 0) {
    tensorflow_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tensorflow_version(),
      GetArenaNoVirtual());
  }
  file_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_version().size() > 0) {
    file_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_version(),
      GetArenaNoVirtual());
  }
  tfdbg_run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tfdbg_run_id().size() > 0) {
    tfdbg_run_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tfdbg_run_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.DebugMetadata)
}

void DebugMetadata::SharedCtor() {
  tensorflow_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tfdbg_run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DebugMetadata::~DebugMetadata() {
  // @@protoc_insertion_point(destructor:tensorflow.DebugMetadata)
  SharedDtor();
}

void DebugMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  tensorflow_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tfdbg_run_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugMetadata::ArenaDtor(void* object) {
  DebugMetadata* _this = reinterpret_cast< DebugMetadata* >(object);
  (void)_this;
}
void DebugMetadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DebugMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DebugMetadata::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugMetadata& DebugMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebugMetadata.base);
  return *internal_default_instance();
}


void DebugMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebugMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tensorflow_version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  file_version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  tfdbg_run_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DebugMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DebugMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tensorflow_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tensorflow_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tensorflow_version().data(), static_cast<int>(this->tensorflow_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebugMetadata.tensorflow_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_version().data(), static_cast<int>(this->file_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebugMetadata.file_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tfdbg_run_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tfdbg_run_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tfdbg_run_id().data(), static_cast<int>(this->tfdbg_run_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebugMetadata.tfdbg_run_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DebugMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DebugMetadata)
  return false;
#undef DO_
}

void DebugMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DebugMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tensorflow_version = 1;
  if (this->tensorflow_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensorflow_version().data(), static_cast<int>(this->tensorflow_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebugMetadata.tensorflow_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tensorflow_version(), output);
  }

  // string file_version = 2;
  if (this->file_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_version().data(), static_cast<int>(this->file_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebugMetadata.file_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_version(), output);
  }

  // string tfdbg_run_id = 3;
  if (this->tfdbg_run_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tfdbg_run_id().data(), static_cast<int>(this->tfdbg_run_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebugMetadata.tfdbg_run_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tfdbg_run_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DebugMetadata)
}

::google::protobuf::uint8* DebugMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebugMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tensorflow_version = 1;
  if (this->tensorflow_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensorflow_version().data(), static_cast<int>(this->tensorflow_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebugMetadata.tensorflow_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tensorflow_version(), target);
  }

  // string file_version = 2;
  if (this->file_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_version().data(), static_cast<int>(this->file_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebugMetadata.file_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_version(), target);
  }

  // string tfdbg_run_id = 3;
  if (this->tfdbg_run_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tfdbg_run_id().data(), static_cast<int>(this->tfdbg_run_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebugMetadata.tfdbg_run_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tfdbg_run_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebugMetadata)
  return target;
}

size_t DebugMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DebugMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tensorflow_version = 1;
  if (this->tensorflow_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tensorflow_version());
  }

  // string file_version = 2;
  if (this->file_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_version());
  }

  // string tfdbg_run_id = 3;
  if (this->tfdbg_run_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tfdbg_run_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebugMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DebugMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DebugMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DebugMetadata)
    MergeFrom(*source);
  }
}

void DebugMetadata::MergeFrom(const DebugMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebugMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tensorflow_version().size() > 0) {
    set_tensorflow_version(from.tensorflow_version());
  }
  if (from.file_version().size() > 0) {
    set_file_version(from.file_version());
  }
  if (from.tfdbg_run_id().size() > 0) {
    set_tfdbg_run_id(from.tfdbg_run_id());
  }
}

void DebugMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DebugMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugMetadata::CopyFrom(const DebugMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebugMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugMetadata::IsInitialized() const {
  return true;
}

void DebugMetadata::Swap(DebugMetadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DebugMetadata* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DebugMetadata::UnsafeArenaSwap(DebugMetadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DebugMetadata::InternalSwap(DebugMetadata* other) {
  using std::swap;
  tensorflow_version_.Swap(&other->tensorflow_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_version_.Swap(&other->file_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tfdbg_run_id_.Swap(&other->tfdbg_run_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DebugMetadata::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SourceFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceFile::kFilePathFieldNumber;
const int SourceFile::kHostNameFieldNumber;
const int SourceFile::kLinesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceFile::SourceFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_SourceFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SourceFile)
}
SourceFile::SourceFile(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  lines_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_SourceFile.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SourceFile)
}
SourceFile::SourceFile(const SourceFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lines_(from.lines_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_path().size() > 0) {
    file_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path(),
      GetArenaNoVirtual());
  }
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_name().size() > 0) {
    host_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SourceFile)
}

void SourceFile::SharedCtor() {
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SourceFile::~SourceFile() {
  // @@protoc_insertion_point(destructor:tensorflow.SourceFile)
  SharedDtor();
}

void SourceFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SourceFile::ArenaDtor(void* object) {
  SourceFile* _this = reinterpret_cast< SourceFile* >(object);
  (void)_this;
}
void SourceFile::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SourceFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SourceFile::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SourceFile& SourceFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_SourceFile.base);
  return *internal_default_instance();
}


void SourceFile::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SourceFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lines_.Clear();
  file_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  host_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool SourceFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SourceFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_path().data(), static_cast<int>(this->file_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SourceFile.file_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SourceFile.host_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string lines = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_lines()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lines(this->lines_size() - 1).data(),
            static_cast<int>(this->lines(this->lines_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SourceFile.lines"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SourceFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SourceFile)
  return false;
#undef DO_
}

void SourceFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SourceFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SourceFile.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_path(), output);
  }

  // string host_name = 2;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SourceFile.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_name(), output);
  }

  // repeated string lines = 3;
  for (int i = 0, n = this->lines_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lines(i).data(), static_cast<int>(this->lines(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SourceFile.lines");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->lines(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SourceFile)
}

::google::protobuf::uint8* SourceFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SourceFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SourceFile.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_path(), target);
  }

  // string host_name = 2;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SourceFile.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_name(), target);
  }

  // repeated string lines = 3;
  for (int i = 0, n = this->lines_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lines(i).data(), static_cast<int>(this->lines(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SourceFile.lines");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->lines(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SourceFile)
  return target;
}

size_t SourceFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SourceFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string lines = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->lines_size());
  for (int i = 0, n = this->lines_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->lines(i));
  }

  // string file_path = 1;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  // string host_name = 2;
  if (this->host_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SourceFile)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SourceFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SourceFile)
    MergeFrom(*source);
  }
}

void SourceFile::MergeFrom(const SourceFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SourceFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lines_.MergeFrom(from.lines_);
  if (from.file_path().size() > 0) {
    set_file_path(from.file_path());
  }
  if (from.host_name().size() > 0) {
    set_host_name(from.host_name());
  }
}

void SourceFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SourceFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceFile::CopyFrom(const SourceFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SourceFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceFile::IsInitialized() const {
  return true;
}

void SourceFile::Swap(SourceFile* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SourceFile* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SourceFile::UnsafeArenaSwap(SourceFile* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SourceFile::InternalSwap(SourceFile* other) {
  using std::swap;
  lines_.InternalSwap(CastToBase(&other->lines_));
  file_path_.Swap(&other->file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SourceFile::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StackFrameWithId::InitAsDefaultInstance() {
  ::tensorflow::_StackFrameWithId_default_instance_._instance.get_mutable()->file_line_col_ = const_cast< ::tensorflow::GraphDebugInfo_FileLineCol*>(
      ::tensorflow::GraphDebugInfo_FileLineCol::internal_default_instance());
}
void StackFrameWithId::unsafe_arena_set_allocated_file_line_col(
    ::tensorflow::GraphDebugInfo_FileLineCol* file_line_col) {
  if (GetArenaNoVirtual() == NULL) {
    delete file_line_col_;
  }
  file_line_col_ = file_line_col;
  if (file_line_col) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.StackFrameWithId.file_line_col)
}
void StackFrameWithId::clear_file_line_col() {
  if (GetArenaNoVirtual() == NULL && file_line_col_ != NULL) {
    delete file_line_col_;
  }
  file_line_col_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StackFrameWithId::kIdFieldNumber;
const int StackFrameWithId::kFileLineColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StackFrameWithId::StackFrameWithId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_StackFrameWithId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.StackFrameWithId)
}
StackFrameWithId::StackFrameWithId(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_StackFrameWithId.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.StackFrameWithId)
}
StackFrameWithId::StackFrameWithId(const StackFrameWithId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  if (from.has_file_line_col()) {
    file_line_col_ = new ::tensorflow::GraphDebugInfo_FileLineCol(*from.file_line_col_);
  } else {
    file_line_col_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.StackFrameWithId)
}

void StackFrameWithId::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_line_col_ = NULL;
}

StackFrameWithId::~StackFrameWithId() {
  // @@protoc_insertion_point(destructor:tensorflow.StackFrameWithId)
  SharedDtor();
}

void StackFrameWithId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete file_line_col_;
}

void StackFrameWithId::ArenaDtor(void* object) {
  StackFrameWithId* _this = reinterpret_cast< StackFrameWithId* >(object);
  (void)_this;
}
void StackFrameWithId::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StackFrameWithId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StackFrameWithId::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StackFrameWithId& StackFrameWithId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_StackFrameWithId.base);
  return *internal_default_instance();
}


void StackFrameWithId::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.StackFrameWithId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && file_line_col_ != NULL) {
    delete file_line_col_;
  }
  file_line_col_ = NULL;
  _internal_metadata_.Clear();
}

bool StackFrameWithId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.StackFrameWithId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.StackFrameWithId.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.GraphDebugInfo.FileLineCol file_line_col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_line_col()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.StackFrameWithId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.StackFrameWithId)
  return false;
#undef DO_
}

void StackFrameWithId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.StackFrameWithId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.StackFrameWithId.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .tensorflow.GraphDebugInfo.FileLineCol file_line_col = 2;
  if (this->has_file_line_col()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_file_line_col(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.StackFrameWithId)
}

::google::protobuf::uint8* StackFrameWithId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.StackFrameWithId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.StackFrameWithId.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .tensorflow.GraphDebugInfo.FileLineCol file_line_col = 2;
  if (this->has_file_line_col()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_file_line_col(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.StackFrameWithId)
  return target;
}

size_t StackFrameWithId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.StackFrameWithId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .tensorflow.GraphDebugInfo.FileLineCol file_line_col = 2;
  if (this->has_file_line_col()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_line_col_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StackFrameWithId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.StackFrameWithId)
  GOOGLE_DCHECK_NE(&from, this);
  const StackFrameWithId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StackFrameWithId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.StackFrameWithId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.StackFrameWithId)
    MergeFrom(*source);
  }
}

void StackFrameWithId::MergeFrom(const StackFrameWithId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.StackFrameWithId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.has_file_line_col()) {
    mutable_file_line_col()->::tensorflow::GraphDebugInfo_FileLineCol::MergeFrom(from.file_line_col());
  }
}

void StackFrameWithId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.StackFrameWithId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StackFrameWithId::CopyFrom(const StackFrameWithId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.StackFrameWithId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StackFrameWithId::IsInitialized() const {
  return true;
}

void StackFrameWithId::Swap(StackFrameWithId* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StackFrameWithId* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StackFrameWithId::UnsafeArenaSwap(StackFrameWithId* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StackFrameWithId::InternalSwap(StackFrameWithId* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_line_col_, other->file_line_col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StackFrameWithId::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodeLocation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodeLocation::kHostNameFieldNumber;
const int CodeLocation::kStackFrameIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodeLocation::CodeLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_CodeLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CodeLocation)
}
CodeLocation::CodeLocation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  stack_frame_ids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_CodeLocation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CodeLocation)
}
CodeLocation::CodeLocation(const CodeLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stack_frame_ids_(from.stack_frame_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_name().size() > 0) {
    host_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.CodeLocation)
}

void CodeLocation::SharedCtor() {
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CodeLocation::~CodeLocation() {
  // @@protoc_insertion_point(destructor:tensorflow.CodeLocation)
  SharedDtor();
}

void CodeLocation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CodeLocation::ArenaDtor(void* object) {
  CodeLocation* _this = reinterpret_cast< CodeLocation* >(object);
  (void)_this;
}
void CodeLocation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CodeLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CodeLocation::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodeLocation& CodeLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_CodeLocation.base);
  return *internal_default_instance();
}


void CodeLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CodeLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stack_frame_ids_.Clear();
  host_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool CodeLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CodeLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CodeLocation.host_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string stack_frame_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stack_frame_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stack_frame_ids(this->stack_frame_ids_size() - 1).data(),
            static_cast<int>(this->stack_frame_ids(this->stack_frame_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CodeLocation.stack_frame_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CodeLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CodeLocation)
  return false;
#undef DO_
}

void CodeLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CodeLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_name = 1;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CodeLocation.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host_name(), output);
  }

  // repeated string stack_frame_ids = 2;
  for (int i = 0, n = this->stack_frame_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stack_frame_ids(i).data(), static_cast<int>(this->stack_frame_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CodeLocation.stack_frame_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stack_frame_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CodeLocation)
}

::google::protobuf::uint8* CodeLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CodeLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_name = 1;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CodeLocation.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host_name(), target);
  }

  // repeated string stack_frame_ids = 2;
  for (int i = 0, n = this->stack_frame_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stack_frame_ids(i).data(), static_cast<int>(this->stack_frame_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CodeLocation.stack_frame_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->stack_frame_ids(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CodeLocation)
  return target;
}

size_t CodeLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CodeLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string stack_frame_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stack_frame_ids_size());
  for (int i = 0, n = this->stack_frame_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stack_frame_ids(i));
  }

  // string host_name = 1;
  if (this->host_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodeLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CodeLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const CodeLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodeLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CodeLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CodeLocation)
    MergeFrom(*source);
  }
}

void CodeLocation::MergeFrom(const CodeLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CodeLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stack_frame_ids_.MergeFrom(from.stack_frame_ids_);
  if (from.host_name().size() > 0) {
    set_host_name(from.host_name());
  }
}

void CodeLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CodeLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeLocation::CopyFrom(const CodeLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CodeLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeLocation::IsInitialized() const {
  return true;
}

void CodeLocation::Swap(CodeLocation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CodeLocation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CodeLocation::UnsafeArenaSwap(CodeLocation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CodeLocation::InternalSwap(CodeLocation* other) {
  using std::swap;
  stack_frame_ids_.InternalSwap(CastToBase(&other->stack_frame_ids_));
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CodeLocation::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphOpCreation::InitAsDefaultInstance() {
  ::tensorflow::_GraphOpCreation_default_instance_._instance.get_mutable()->code_location_ = const_cast< ::tensorflow::CodeLocation*>(
      ::tensorflow::CodeLocation::internal_default_instance());
}
void GraphOpCreation::unsafe_arena_set_allocated_code_location(
    ::tensorflow::CodeLocation* code_location) {
  if (GetArenaNoVirtual() == NULL) {
    delete code_location_;
  }
  code_location_ = code_location;
  if (code_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.GraphOpCreation.code_location)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphOpCreation::kOpTypeFieldNumber;
const int GraphOpCreation::kOpNameFieldNumber;
const int GraphOpCreation::kGraphNameFieldNumber;
const int GraphOpCreation::kGraphIdFieldNumber;
const int GraphOpCreation::kDeviceNameFieldNumber;
const int GraphOpCreation::kInputNamesFieldNumber;
const int GraphOpCreation::kNumOutputsFieldNumber;
const int GraphOpCreation::kCodeLocationFieldNumber;
const int GraphOpCreation::kOutputTensorIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphOpCreation::GraphOpCreation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_GraphOpCreation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GraphOpCreation)
}
GraphOpCreation::GraphOpCreation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  input_names_(arena),
  output_tensor_ids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_GraphOpCreation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphOpCreation)
}
GraphOpCreation::GraphOpCreation(const GraphOpCreation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_names_(from.input_names_),
      output_tensor_ids_(from.output_tensor_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_type().size() > 0) {
    op_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type(),
      GetArenaNoVirtual());
  }
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_name().size() > 0) {
    op_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_name(),
      GetArenaNoVirtual());
  }
  graph_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_name().size() > 0) {
    graph_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_name(),
      GetArenaNoVirtual());
  }
  graph_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_id().size() > 0) {
    graph_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_id(),
      GetArenaNoVirtual());
  }
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_name().size() > 0) {
    device_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name(),
      GetArenaNoVirtual());
  }
  if (from.has_code_location()) {
    code_location_ = new ::tensorflow::CodeLocation(*from.code_location_);
  } else {
    code_location_ = NULL;
  }
  num_outputs_ = from.num_outputs_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphOpCreation)
}

void GraphOpCreation::SharedCtor() {
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_outputs_) -
      reinterpret_cast<char*>(&code_location_)) + sizeof(num_outputs_));
}

GraphOpCreation::~GraphOpCreation() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphOpCreation)
  SharedDtor();
}

void GraphOpCreation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  op_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete code_location_;
}

void GraphOpCreation::ArenaDtor(void* object) {
  GraphOpCreation* _this = reinterpret_cast< GraphOpCreation* >(object);
  (void)_this;
}
void GraphOpCreation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GraphOpCreation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphOpCreation::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphOpCreation& GraphOpCreation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_GraphOpCreation.base);
  return *internal_default_instance();
}


void GraphOpCreation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphOpCreation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_names_.Clear();
  output_tensor_ids_.Clear();
  op_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  op_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  graph_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  graph_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  device_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && code_location_ != NULL) {
    delete code_location_;
  }
  code_location_ = NULL;
  num_outputs_ = 0;
  _internal_metadata_.Clear();
}

bool GraphOpCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GraphOpCreation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_type().data(), static_cast<int>(this->op_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphOpCreation.op_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string op_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_name().data(), static_cast<int>(this->op_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphOpCreation.op_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string graph_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_name().data(), static_cast<int>(this->graph_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphOpCreation.graph_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string graph_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_id().data(), static_cast<int>(this->graph_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphOpCreation.graph_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphOpCreation.device_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string input_names = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_names(this->input_names_size() - 1).data(),
            static_cast<int>(this->input_names(this->input_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphOpCreation.input_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_outputs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_outputs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CodeLocation code_location = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 output_tensor_ids = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_output_tensor_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_output_tensor_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GraphOpCreation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GraphOpCreation)
  return false;
#undef DO_
}

void GraphOpCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GraphOpCreation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op_type = 1;
  if (this->op_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->op_type(), output);
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.op_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->op_name(), output);
  }

  // string graph_name = 3;
  if (this->graph_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_name().data(), static_cast<int>(this->graph_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.graph_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->graph_name(), output);
  }

  // string graph_id = 4;
  if (this->graph_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_id().data(), static_cast<int>(this->graph_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.graph_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->graph_id(), output);
  }

  // string device_name = 5;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device_name(), output);
  }

  // repeated string input_names = 6;
  for (int i = 0, n = this->input_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_names(i).data(), static_cast<int>(this->input_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.input_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->input_names(i), output);
  }

  // int32 num_outputs = 7;
  if (this->num_outputs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->num_outputs(), output);
  }

  // .tensorflow.CodeLocation code_location = 8;
  if (this->has_code_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_code_location(), output);
  }

  // repeated int32 output_tensor_ids = 9;
  if (this->output_tensor_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _output_tensor_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->output_tensor_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->output_tensor_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GraphOpCreation)
}

::google::protobuf::uint8* GraphOpCreation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphOpCreation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op_type = 1;
  if (this->op_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->op_type(), target);
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.op_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->op_name(), target);
  }

  // string graph_name = 3;
  if (this->graph_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_name().data(), static_cast<int>(this->graph_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.graph_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->graph_name(), target);
  }

  // string graph_id = 4;
  if (this->graph_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_id().data(), static_cast<int>(this->graph_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.graph_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->graph_id(), target);
  }

  // string device_name = 5;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device_name(), target);
  }

  // repeated string input_names = 6;
  for (int i = 0, n = this->input_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_names(i).data(), static_cast<int>(this->input_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphOpCreation.input_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->input_names(i), target);
  }

  // int32 num_outputs = 7;
  if (this->num_outputs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->num_outputs(), target);
  }

  // .tensorflow.CodeLocation code_location = 8;
  if (this->has_code_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_code_location(), deterministic, target);
  }

  // repeated int32 output_tensor_ids = 9;
  if (this->output_tensor_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _output_tensor_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->output_tensor_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphOpCreation)
  return target;
}

size_t GraphOpCreation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphOpCreation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string input_names = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_names_size());
  for (int i = 0, n = this->input_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input_names(i));
  }

  // repeated int32 output_tensor_ids = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->output_tensor_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _output_tensor_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string op_type = 1;
  if (this->op_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_type());
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_name());
  }

  // string graph_name = 3;
  if (this->graph_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_name());
  }

  // string graph_id = 4;
  if (this->graph_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_id());
  }

  // string device_name = 5;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // .tensorflow.CodeLocation code_location = 8;
  if (this->has_code_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_location_);
  }

  // int32 num_outputs = 7;
  if (this->num_outputs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_outputs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphOpCreation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GraphOpCreation)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphOpCreation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphOpCreation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GraphOpCreation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GraphOpCreation)
    MergeFrom(*source);
  }
}

void GraphOpCreation::MergeFrom(const GraphOpCreation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphOpCreation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_names_.MergeFrom(from.input_names_);
  output_tensor_ids_.MergeFrom(from.output_tensor_ids_);
  if (from.op_type().size() > 0) {
    set_op_type(from.op_type());
  }
  if (from.op_name().size() > 0) {
    set_op_name(from.op_name());
  }
  if (from.graph_name().size() > 0) {
    set_graph_name(from.graph_name());
  }
  if (from.graph_id().size() > 0) {
    set_graph_id(from.graph_id());
  }
  if (from.device_name().size() > 0) {
    set_device_name(from.device_name());
  }
  if (from.has_code_location()) {
    mutable_code_location()->::tensorflow::CodeLocation::MergeFrom(from.code_location());
  }
  if (from.num_outputs() != 0) {
    set_num_outputs(from.num_outputs());
  }
}

void GraphOpCreation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GraphOpCreation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphOpCreation::CopyFrom(const GraphOpCreation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphOpCreation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphOpCreation::IsInitialized() const {
  return true;
}

void GraphOpCreation::Swap(GraphOpCreation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GraphOpCreation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GraphOpCreation::UnsafeArenaSwap(GraphOpCreation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GraphOpCreation::InternalSwap(GraphOpCreation* other) {
  using std::swap;
  input_names_.InternalSwap(CastToBase(&other->input_names_));
  output_tensor_ids_.InternalSwap(&other->output_tensor_ids_);
  op_type_.Swap(&other->op_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  op_name_.Swap(&other->op_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  graph_name_.Swap(&other->graph_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  graph_id_.Swap(&other->graph_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_name_.Swap(&other->device_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_location_, other->code_location_);
  swap(num_outputs_, other->num_outputs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphOpCreation::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DebuggedGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebuggedGraph::kGraphIdFieldNumber;
const int DebuggedGraph::kGraphNameFieldNumber;
const int DebuggedGraph::kInstrumentedOpsFieldNumber;
const int DebuggedGraph::kOriginalGraphDefFieldNumber;
const int DebuggedGraph::kInstrumentedGraphDefFieldNumber;
const int DebuggedGraph::kOuterContextIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebuggedGraph::DebuggedGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebuggedGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DebuggedGraph)
}
DebuggedGraph::DebuggedGraph(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  instrumented_ops_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebuggedGraph.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebuggedGraph)
}
DebuggedGraph::DebuggedGraph(const DebuggedGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instrumented_ops_(from.instrumented_ops_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  graph_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_id().size() > 0) {
    graph_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_id(),
      GetArenaNoVirtual());
  }
  graph_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_name().size() > 0) {
    graph_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_name(),
      GetArenaNoVirtual());
  }
  original_graph_def_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_graph_def().size() > 0) {
    original_graph_def_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_graph_def(),
      GetArenaNoVirtual());
  }
  instrumented_graph_def_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrumented_graph_def().size() > 0) {
    instrumented_graph_def_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrumented_graph_def(),
      GetArenaNoVirtual());
  }
  outer_context_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.outer_context_id().size() > 0) {
    outer_context_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outer_context_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.DebuggedGraph)
}

void DebuggedGraph::SharedCtor() {
  graph_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_graph_def_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrumented_graph_def_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outer_context_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DebuggedGraph::~DebuggedGraph() {
  // @@protoc_insertion_point(destructor:tensorflow.DebuggedGraph)
  SharedDtor();
}

void DebuggedGraph::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  graph_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_graph_def_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrumented_graph_def_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outer_context_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebuggedGraph::ArenaDtor(void* object) {
  DebuggedGraph* _this = reinterpret_cast< DebuggedGraph* >(object);
  (void)_this;
}
void DebuggedGraph::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DebuggedGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DebuggedGraph::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebuggedGraph& DebuggedGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebuggedGraph.base);
  return *internal_default_instance();
}


void DebuggedGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebuggedGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrumented_ops_.Clear();
  graph_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  graph_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  original_graph_def_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  instrumented_graph_def_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  outer_context_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DebuggedGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DebuggedGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string graph_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_id().data(), static_cast<int>(this->graph_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebuggedGraph.graph_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string graph_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_name().data(), static_cast<int>(this->graph_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebuggedGraph.graph_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string instrumented_ops = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_instrumented_ops()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrumented_ops(this->instrumented_ops_size() - 1).data(),
            static_cast<int>(this->instrumented_ops(this->instrumented_ops_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebuggedGraph.instrumented_ops"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes original_graph_def = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_original_graph_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes instrumented_graph_def = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_instrumented_graph_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string outer_context_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outer_context_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->outer_context_id().data(), static_cast<int>(this->outer_context_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebuggedGraph.outer_context_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DebuggedGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DebuggedGraph)
  return false;
#undef DO_
}

void DebuggedGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DebuggedGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_id = 1;
  if (this->graph_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_id().data(), static_cast<int>(this->graph_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedGraph.graph_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->graph_id(), output);
  }

  // string graph_name = 2;
  if (this->graph_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_name().data(), static_cast<int>(this->graph_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedGraph.graph_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->graph_name(), output);
  }

  // repeated string instrumented_ops = 3;
  for (int i = 0, n = this->instrumented_ops_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrumented_ops(i).data(), static_cast<int>(this->instrumented_ops(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedGraph.instrumented_ops");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->instrumented_ops(i), output);
  }

  // bytes original_graph_def = 4;
  if (this->original_graph_def().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->original_graph_def(), output);
  }

  // bytes instrumented_graph_def = 5;
  if (this->instrumented_graph_def().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->instrumented_graph_def(), output);
  }

  // string outer_context_id = 6;
  if (this->outer_context_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outer_context_id().data(), static_cast<int>(this->outer_context_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedGraph.outer_context_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->outer_context_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DebuggedGraph)
}

::google::protobuf::uint8* DebuggedGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebuggedGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_id = 1;
  if (this->graph_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_id().data(), static_cast<int>(this->graph_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedGraph.graph_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->graph_id(), target);
  }

  // string graph_name = 2;
  if (this->graph_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_name().data(), static_cast<int>(this->graph_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedGraph.graph_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->graph_name(), target);
  }

  // repeated string instrumented_ops = 3;
  for (int i = 0, n = this->instrumented_ops_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrumented_ops(i).data(), static_cast<int>(this->instrumented_ops(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedGraph.instrumented_ops");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->instrumented_ops(i), target);
  }

  // bytes original_graph_def = 4;
  if (this->original_graph_def().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->original_graph_def(), target);
  }

  // bytes instrumented_graph_def = 5;
  if (this->instrumented_graph_def().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->instrumented_graph_def(), target);
  }

  // string outer_context_id = 6;
  if (this->outer_context_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outer_context_id().data(), static_cast<int>(this->outer_context_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedGraph.outer_context_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->outer_context_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebuggedGraph)
  return target;
}

size_t DebuggedGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DebuggedGraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string instrumented_ops = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->instrumented_ops_size());
  for (int i = 0, n = this->instrumented_ops_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->instrumented_ops(i));
  }

  // string graph_id = 1;
  if (this->graph_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_id());
  }

  // string graph_name = 2;
  if (this->graph_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_name());
  }

  // bytes original_graph_def = 4;
  if (this->original_graph_def().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->original_graph_def());
  }

  // bytes instrumented_graph_def = 5;
  if (this->instrumented_graph_def().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->instrumented_graph_def());
  }

  // string outer_context_id = 6;
  if (this->outer_context_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->outer_context_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebuggedGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DebuggedGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const DebuggedGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebuggedGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DebuggedGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DebuggedGraph)
    MergeFrom(*source);
  }
}

void DebuggedGraph::MergeFrom(const DebuggedGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebuggedGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instrumented_ops_.MergeFrom(from.instrumented_ops_);
  if (from.graph_id().size() > 0) {
    set_graph_id(from.graph_id());
  }
  if (from.graph_name().size() > 0) {
    set_graph_name(from.graph_name());
  }
  if (from.original_graph_def().size() > 0) {
    set_original_graph_def(from.original_graph_def());
  }
  if (from.instrumented_graph_def().size() > 0) {
    set_instrumented_graph_def(from.instrumented_graph_def());
  }
  if (from.outer_context_id().size() > 0) {
    set_outer_context_id(from.outer_context_id());
  }
}

void DebuggedGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DebuggedGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebuggedGraph::CopyFrom(const DebuggedGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebuggedGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebuggedGraph::IsInitialized() const {
  return true;
}

void DebuggedGraph::Swap(DebuggedGraph* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DebuggedGraph* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DebuggedGraph::UnsafeArenaSwap(DebuggedGraph* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DebuggedGraph::InternalSwap(DebuggedGraph* other) {
  using std::swap;
  instrumented_ops_.InternalSwap(CastToBase(&other->instrumented_ops_));
  graph_id_.Swap(&other->graph_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  graph_name_.Swap(&other->graph_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  original_graph_def_.Swap(&other->original_graph_def_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrumented_graph_def_.Swap(&other->instrumented_graph_def_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  outer_context_id_.Swap(&other->outer_context_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DebuggedGraph::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DebuggedDevice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebuggedDevice::kDeviceNameFieldNumber;
const int DebuggedDevice::kDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebuggedDevice::DebuggedDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebuggedDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DebuggedDevice)
}
DebuggedDevice::DebuggedDevice(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebuggedDevice.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebuggedDevice)
}
DebuggedDevice::DebuggedDevice(const DebuggedDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_name().size() > 0) {
    device_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name(),
      GetArenaNoVirtual());
  }
  device_id_ = from.device_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.DebuggedDevice)
}

void DebuggedDevice::SharedCtor() {
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_ = 0;
}

DebuggedDevice::~DebuggedDevice() {
  // @@protoc_insertion_point(destructor:tensorflow.DebuggedDevice)
  SharedDtor();
}

void DebuggedDevice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebuggedDevice::ArenaDtor(void* object) {
  DebuggedDevice* _this = reinterpret_cast< DebuggedDevice* >(object);
  (void)_this;
}
void DebuggedDevice::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DebuggedDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DebuggedDevice::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebuggedDevice& DebuggedDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_DebuggedDevice.base);
  return *internal_default_instance();
}


void DebuggedDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebuggedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  device_id_ = 0;
  _internal_metadata_.Clear();
}

bool DebuggedDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DebuggedDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string device_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DebuggedDevice.device_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DebuggedDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DebuggedDevice)
  return false;
#undef DO_
}

void DebuggedDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DebuggedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_name = 1;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedDevice.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_name(), output);
  }

  // int32 device_id = 2;
  if (this->device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->device_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DebuggedDevice)
}

::google::protobuf::uint8* DebuggedDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebuggedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_name = 1;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DebuggedDevice.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_name(), target);
  }

  // int32 device_id = 2;
  if (this->device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->device_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebuggedDevice)
  return target;
}

size_t DebuggedDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DebuggedDevice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string device_name = 1;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // int32 device_id = 2;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebuggedDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DebuggedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const DebuggedDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebuggedDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DebuggedDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DebuggedDevice)
    MergeFrom(*source);
  }
}

void DebuggedDevice::MergeFrom(const DebuggedDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebuggedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_name().size() > 0) {
    set_device_name(from.device_name());
  }
  if (from.device_id() != 0) {
    set_device_id(from.device_id());
  }
}

void DebuggedDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DebuggedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebuggedDevice::CopyFrom(const DebuggedDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebuggedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebuggedDevice::IsInitialized() const {
  return true;
}

void DebuggedDevice::Swap(DebuggedDevice* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DebuggedDevice* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DebuggedDevice::UnsafeArenaSwap(DebuggedDevice* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DebuggedDevice::InternalSwap(DebuggedDevice* other) {
  using std::swap;
  device_name_.Swap(&other->device_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(device_id_, other->device_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DebuggedDevice::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Execution::InitAsDefaultInstance() {
  ::tensorflow::_Execution_default_instance_._instance.get_mutable()->code_location_ = const_cast< ::tensorflow::CodeLocation*>(
      ::tensorflow::CodeLocation::internal_default_instance());
}
void Execution::clear_tensor_protos() {
  tensor_protos_.Clear();
}
void Execution::unsafe_arena_set_allocated_code_location(
    ::tensorflow::CodeLocation* code_location) {
  if (GetArenaNoVirtual() == NULL) {
    delete code_location_;
  }
  code_location_ = code_location;
  if (code_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Execution.code_location)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Execution::kOpTypeFieldNumber;
const int Execution::kNumOutputsFieldNumber;
const int Execution::kGraphIdFieldNumber;
const int Execution::kInputTensorIdsFieldNumber;
const int Execution::kOutputTensorIdsFieldNumber;
const int Execution::kTensorDebugModeFieldNumber;
const int Execution::kTensorProtosFieldNumber;
const int Execution::kCodeLocationFieldNumber;
const int Execution::kOutputTensorDeviceIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Execution::Execution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_Execution.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.Execution)
}
Execution::Execution(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  input_tensor_ids_(arena),
  output_tensor_ids_(arena),
  tensor_protos_(arena),
  output_tensor_device_ids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_Execution.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.Execution)
}
Execution::Execution(const Execution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_tensor_ids_(from.input_tensor_ids_),
      output_tensor_ids_(from.output_tensor_ids_),
      tensor_protos_(from.tensor_protos_),
      output_tensor_device_ids_(from.output_tensor_device_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_type().size() > 0) {
    op_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type(),
      GetArenaNoVirtual());
  }
  graph_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_id().size() > 0) {
    graph_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_id(),
      GetArenaNoVirtual());
  }
  if (from.has_code_location()) {
    code_location_ = new ::tensorflow::CodeLocation(*from.code_location_);
  } else {
    code_location_ = NULL;
  }
  ::memcpy(&num_outputs_, &from.num_outputs_,
    static_cast<size_t>(reinterpret_cast<char*>(&tensor_debug_mode_) -
    reinterpret_cast<char*>(&num_outputs_)) + sizeof(tensor_debug_mode_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.Execution)
}

void Execution::SharedCtor() {
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tensor_debug_mode_) -
      reinterpret_cast<char*>(&code_location_)) + sizeof(tensor_debug_mode_));
}

Execution::~Execution() {
  // @@protoc_insertion_point(destructor:tensorflow.Execution)
  SharedDtor();
}

void Execution::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  op_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete code_location_;
}

void Execution::ArenaDtor(void* object) {
  Execution* _this = reinterpret_cast< Execution* >(object);
  (void)_this;
}
void Execution::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Execution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Execution::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Execution& Execution::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_Execution.base);
  return *internal_default_instance();
}


void Execution::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_tensor_ids_.Clear();
  output_tensor_ids_.Clear();
  tensor_protos_.Clear();
  output_tensor_device_ids_.Clear();
  op_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  graph_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && code_location_ != NULL) {
    delete code_location_;
  }
  code_location_ = NULL;
  ::memset(&num_outputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tensor_debug_mode_) -
      reinterpret_cast<char*>(&num_outputs_)) + sizeof(tensor_debug_mode_));
  _internal_metadata_.Clear();
}

bool Execution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.Execution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_type().data(), static_cast<int>(this->op_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.Execution.op_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_outputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_outputs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string graph_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_id().data(), static_cast<int>(this->graph_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.Execution.graph_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 input_tensor_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_input_tensor_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_input_tensor_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 output_tensor_ids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_output_tensor_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 42u, input, this->mutable_output_tensor_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorDebugMode tensor_debug_mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tensor_debug_mode(static_cast< ::tensorflow::TensorDebugMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.TensorProto tensor_protos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tensor_protos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CodeLocation code_location = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 output_tensor_device_ids = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_output_tensor_device_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_output_tensor_device_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.Execution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.Execution)
  return false;
#undef DO_
}

void Execution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op_type = 1;
  if (this->op_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.Execution.op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->op_type(), output);
  }

  // int32 num_outputs = 2;
  if (this->num_outputs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_outputs(), output);
  }

  // string graph_id = 3;
  if (this->graph_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_id().data(), static_cast<int>(this->graph_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.Execution.graph_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->graph_id(), output);
  }

  // repeated int64 input_tensor_ids = 4;
  if (this->input_tensor_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _input_tensor_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->input_tensor_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->input_tensor_ids(i), output);
  }

  // repeated int64 output_tensor_ids = 5;
  if (this->output_tensor_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _output_tensor_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->output_tensor_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->output_tensor_ids(i), output);
  }

  // .tensorflow.TensorDebugMode tensor_debug_mode = 6;
  if (this->tensor_debug_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->tensor_debug_mode(), output);
  }

  // repeated .tensorflow.TensorProto tensor_protos = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tensor_protos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->tensor_protos(static_cast<int>(i)),
      output);
  }

  // .tensorflow.CodeLocation code_location = 8;
  if (this->has_code_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_code_location(), output);
  }

  // repeated int32 output_tensor_device_ids = 9;
  if (this->output_tensor_device_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _output_tensor_device_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->output_tensor_device_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->output_tensor_device_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.Execution)
}

::google::protobuf::uint8* Execution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op_type = 1;
  if (this->op_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.Execution.op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->op_type(), target);
  }

  // int32 num_outputs = 2;
  if (this->num_outputs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_outputs(), target);
  }

  // string graph_id = 3;
  if (this->graph_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_id().data(), static_cast<int>(this->graph_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.Execution.graph_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->graph_id(), target);
  }

  // repeated int64 input_tensor_ids = 4;
  if (this->input_tensor_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _input_tensor_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->input_tensor_ids_, target);
  }

  // repeated int64 output_tensor_ids = 5;
  if (this->output_tensor_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _output_tensor_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->output_tensor_ids_, target);
  }

  // .tensorflow.TensorDebugMode tensor_debug_mode = 6;
  if (this->tensor_debug_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->tensor_debug_mode(), target);
  }

  // repeated .tensorflow.TensorProto tensor_protos = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tensor_protos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->tensor_protos(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.CodeLocation code_location = 8;
  if (this->has_code_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_code_location(), deterministic, target);
  }

  // repeated int32 output_tensor_device_ids = 9;
  if (this->output_tensor_device_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _output_tensor_device_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->output_tensor_device_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.Execution)
  return target;
}

size_t Execution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.Execution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 input_tensor_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->input_tensor_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _input_tensor_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 output_tensor_ids = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->output_tensor_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _output_tensor_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .tensorflow.TensorProto tensor_protos = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->tensor_protos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tensor_protos(static_cast<int>(i)));
    }
  }

  // repeated int32 output_tensor_device_ids = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->output_tensor_device_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _output_tensor_device_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string op_type = 1;
  if (this->op_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_type());
  }

  // string graph_id = 3;
  if (this->graph_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_id());
  }

  // .tensorflow.CodeLocation code_location = 8;
  if (this->has_code_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_location_);
  }

  // int32 num_outputs = 2;
  if (this->num_outputs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_outputs());
  }

  // .tensorflow.TensorDebugMode tensor_debug_mode = 6;
  if (this->tensor_debug_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tensor_debug_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Execution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.Execution)
  GOOGLE_DCHECK_NE(&from, this);
  const Execution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Execution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.Execution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.Execution)
    MergeFrom(*source);
  }
}

void Execution::MergeFrom(const Execution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.Execution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_tensor_ids_.MergeFrom(from.input_tensor_ids_);
  output_tensor_ids_.MergeFrom(from.output_tensor_ids_);
  tensor_protos_.MergeFrom(from.tensor_protos_);
  output_tensor_device_ids_.MergeFrom(from.output_tensor_device_ids_);
  if (from.op_type().size() > 0) {
    set_op_type(from.op_type());
  }
  if (from.graph_id().size() > 0) {
    set_graph_id(from.graph_id());
  }
  if (from.has_code_location()) {
    mutable_code_location()->::tensorflow::CodeLocation::MergeFrom(from.code_location());
  }
  if (from.num_outputs() != 0) {
    set_num_outputs(from.num_outputs());
  }
  if (from.tensor_debug_mode() != 0) {
    set_tensor_debug_mode(from.tensor_debug_mode());
  }
}

void Execution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.Execution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Execution::CopyFrom(const Execution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.Execution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Execution::IsInitialized() const {
  return true;
}

void Execution::Swap(Execution* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Execution* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Execution::UnsafeArenaSwap(Execution* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Execution::InternalSwap(Execution* other) {
  using std::swap;
  input_tensor_ids_.InternalSwap(&other->input_tensor_ids_);
  output_tensor_ids_.InternalSwap(&other->output_tensor_ids_);
  CastToBase(&tensor_protos_)->InternalSwap(CastToBase(&other->tensor_protos_));
  output_tensor_device_ids_.InternalSwap(&other->output_tensor_device_ids_);
  op_type_.Swap(&other->op_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  graph_id_.Swap(&other->graph_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_location_, other->code_location_);
  swap(num_outputs_, other->num_outputs_);
  swap(tensor_debug_mode_, other->tensor_debug_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Execution::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphExecutionTrace::InitAsDefaultInstance() {
  ::tensorflow::_GraphExecutionTrace_default_instance_._instance.get_mutable()->tensor_proto_ = const_cast< ::tensorflow::TensorProto*>(
      ::tensorflow::TensorProto::internal_default_instance());
}
void GraphExecutionTrace::unsafe_arena_set_allocated_tensor_proto(
    ::tensorflow::TensorProto* tensor_proto) {
  if (GetArenaNoVirtual() == NULL) {
    delete tensor_proto_;
  }
  tensor_proto_ = tensor_proto;
  if (tensor_proto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.GraphExecutionTrace.tensor_proto)
}
void GraphExecutionTrace::clear_tensor_proto() {
  if (GetArenaNoVirtual() == NULL && tensor_proto_ != NULL) {
    delete tensor_proto_;
  }
  tensor_proto_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphExecutionTrace::kTfdbgContextIdFieldNumber;
const int GraphExecutionTrace::kOpNameFieldNumber;
const int GraphExecutionTrace::kOutputSlotFieldNumber;
const int GraphExecutionTrace::kTensorDebugModeFieldNumber;
const int GraphExecutionTrace::kTensorProtoFieldNumber;
const int GraphExecutionTrace::kDeviceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphExecutionTrace::GraphExecutionTrace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_GraphExecutionTrace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GraphExecutionTrace)
}
GraphExecutionTrace::GraphExecutionTrace(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_GraphExecutionTrace.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphExecutionTrace)
}
GraphExecutionTrace::GraphExecutionTrace(const GraphExecutionTrace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tfdbg_context_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tfdbg_context_id().size() > 0) {
    tfdbg_context_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tfdbg_context_id(),
      GetArenaNoVirtual());
  }
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_name().size() > 0) {
    op_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_name(),
      GetArenaNoVirtual());
  }
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_name().size() > 0) {
    device_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name(),
      GetArenaNoVirtual());
  }
  if (from.has_tensor_proto()) {
    tensor_proto_ = new ::tensorflow::TensorProto(*from.tensor_proto_);
  } else {
    tensor_proto_ = NULL;
  }
  ::memcpy(&output_slot_, &from.output_slot_,
    static_cast<size_t>(reinterpret_cast<char*>(&tensor_debug_mode_) -
    reinterpret_cast<char*>(&output_slot_)) + sizeof(tensor_debug_mode_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphExecutionTrace)
}

void GraphExecutionTrace::SharedCtor() {
  tfdbg_context_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tensor_proto_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tensor_debug_mode_) -
      reinterpret_cast<char*>(&tensor_proto_)) + sizeof(tensor_debug_mode_));
}

GraphExecutionTrace::~GraphExecutionTrace() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphExecutionTrace)
  SharedDtor();
}

void GraphExecutionTrace::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  tfdbg_context_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tensor_proto_;
}

void GraphExecutionTrace::ArenaDtor(void* object) {
  GraphExecutionTrace* _this = reinterpret_cast< GraphExecutionTrace* >(object);
  (void)_this;
}
void GraphExecutionTrace::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GraphExecutionTrace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphExecutionTrace::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphExecutionTrace& GraphExecutionTrace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::scc_info_GraphExecutionTrace.base);
  return *internal_default_instance();
}


void GraphExecutionTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphExecutionTrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tfdbg_context_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  op_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  device_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && tensor_proto_ != NULL) {
    delete tensor_proto_;
  }
  tensor_proto_ = NULL;
  ::memset(&output_slot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tensor_debug_mode_) -
      reinterpret_cast<char*>(&output_slot_)) + sizeof(tensor_debug_mode_));
  _internal_metadata_.Clear();
}

bool GraphExecutionTrace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GraphExecutionTrace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tfdbg_context_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tfdbg_context_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tfdbg_context_id().data(), static_cast<int>(this->tfdbg_context_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphExecutionTrace.tfdbg_context_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string op_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_name().data(), static_cast<int>(this->op_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphExecutionTrace.op_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 output_slot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorDebugMode tensor_debug_mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tensor_debug_mode(static_cast< ::tensorflow::TensorDebugMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorProto tensor_proto = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tensor_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.GraphExecutionTrace.device_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GraphExecutionTrace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GraphExecutionTrace)
  return false;
#undef DO_
}

void GraphExecutionTrace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GraphExecutionTrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tfdbg_context_id = 1;
  if (this->tfdbg_context_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tfdbg_context_id().data(), static_cast<int>(this->tfdbg_context_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphExecutionTrace.tfdbg_context_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tfdbg_context_id(), output);
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphExecutionTrace.op_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->op_name(), output);
  }

  // int32 output_slot = 3;
  if (this->output_slot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->output_slot(), output);
  }

  // .tensorflow.TensorDebugMode tensor_debug_mode = 4;
  if (this->tensor_debug_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->tensor_debug_mode(), output);
  }

  // .tensorflow.TensorProto tensor_proto = 5;
  if (this->has_tensor_proto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_tensor_proto(), output);
  }

  // string device_name = 6;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphExecutionTrace.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GraphExecutionTrace)
}

::google::protobuf::uint8* GraphExecutionTrace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphExecutionTrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tfdbg_context_id = 1;
  if (this->tfdbg_context_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tfdbg_context_id().data(), static_cast<int>(this->tfdbg_context_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphExecutionTrace.tfdbg_context_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tfdbg_context_id(), target);
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphExecutionTrace.op_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->op_name(), target);
  }

  // int32 output_slot = 3;
  if (this->output_slot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->output_slot(), target);
  }

  // .tensorflow.TensorDebugMode tensor_debug_mode = 4;
  if (this->tensor_debug_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->tensor_debug_mode(), target);
  }

  // .tensorflow.TensorProto tensor_proto = 5;
  if (this->has_tensor_proto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_tensor_proto(), deterministic, target);
  }

  // string device_name = 6;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GraphExecutionTrace.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphExecutionTrace)
  return target;
}

size_t GraphExecutionTrace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphExecutionTrace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tfdbg_context_id = 1;
  if (this->tfdbg_context_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tfdbg_context_id());
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_name());
  }

  // string device_name = 6;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // .tensorflow.TensorProto tensor_proto = 5;
  if (this->has_tensor_proto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tensor_proto_);
  }

  // int32 output_slot = 3;
  if (this->output_slot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->output_slot());
  }

  // .tensorflow.TensorDebugMode tensor_debug_mode = 4;
  if (this->tensor_debug_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tensor_debug_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphExecutionTrace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GraphExecutionTrace)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphExecutionTrace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphExecutionTrace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GraphExecutionTrace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GraphExecutionTrace)
    MergeFrom(*source);
  }
}

void GraphExecutionTrace::MergeFrom(const GraphExecutionTrace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphExecutionTrace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tfdbg_context_id().size() > 0) {
    set_tfdbg_context_id(from.tfdbg_context_id());
  }
  if (from.op_name().size() > 0) {
    set_op_name(from.op_name());
  }
  if (from.device_name().size() > 0) {
    set_device_name(from.device_name());
  }
  if (from.has_tensor_proto()) {
    mutable_tensor_proto()->::tensorflow::TensorProto::MergeFrom(from.tensor_proto());
  }
  if (from.output_slot() != 0) {
    set_output_slot(from.output_slot());
  }
  if (from.tensor_debug_mode() != 0) {
    set_tensor_debug_mode(from.tensor_debug_mode());
  }
}

void GraphExecutionTrace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GraphExecutionTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphExecutionTrace::CopyFrom(const GraphExecutionTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphExecutionTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphExecutionTrace::IsInitialized() const {
  return true;
}

void GraphExecutionTrace::Swap(GraphExecutionTrace* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GraphExecutionTrace* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GraphExecutionTrace::UnsafeArenaSwap(GraphExecutionTrace* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GraphExecutionTrace::InternalSwap(GraphExecutionTrace* other) {
  using std::swap;
  tfdbg_context_id_.Swap(&other->tfdbg_context_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  op_name_.Swap(&other->op_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_name_.Swap(&other->device_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tensor_proto_, other->tensor_proto_);
  swap(output_slot_, other->output_slot_);
  swap(tensor_debug_mode_, other->tensor_debug_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphExecutionTrace::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DebugEvent* Arena::CreateMaybeMessage< ::tensorflow::DebugEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::DebugEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DebugMetadata* Arena::CreateMaybeMessage< ::tensorflow::DebugMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::DebugMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::SourceFile* Arena::CreateMaybeMessage< ::tensorflow::SourceFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SourceFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::StackFrameWithId* Arena::CreateMaybeMessage< ::tensorflow::StackFrameWithId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::StackFrameWithId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CodeLocation* Arena::CreateMaybeMessage< ::tensorflow::CodeLocation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CodeLocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::GraphOpCreation* Arena::CreateMaybeMessage< ::tensorflow::GraphOpCreation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::GraphOpCreation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DebuggedGraph* Arena::CreateMaybeMessage< ::tensorflow::DebuggedGraph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::DebuggedGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DebuggedDevice* Arena::CreateMaybeMessage< ::tensorflow::DebuggedDevice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::DebuggedDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::Execution* Arena::CreateMaybeMessage< ::tensorflow::Execution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::Execution >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::GraphExecutionTrace* Arena::CreateMaybeMessage< ::tensorflow::GraphExecutionTrace >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::GraphExecutionTrace >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
