// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/tpu/optimization_parameters.proto

#include "tensorflow/core/protobuf/tpu/optimization_parameters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_HloModuleProto;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AdadeltaParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AdagradMomentumParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AdagradParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AdamParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AssignParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoundedAdagradParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CenteredRmsPropParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DynamicLearningRate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FrequencyEstimatorParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FtrlParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HotIdReplicationConfiguration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MdlAdagradLightParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MomentumParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OnlineYogiParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProximalAdagradParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProximalYogiParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RmsPropParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StateVariableSpecification_FillWithConstant;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StateVariableSpecification_UserDefined;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StochasticGradientDescentParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClippingLimits;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LearningRate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SimulatedQuantization;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserDefinedProgramParameters;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto
namespace tensorflow {
namespace tpu {
class ClippingLimitsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClippingLimits>
      _instance;
} _ClippingLimits_default_instance_;
class SimulatedQuantizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimulatedQuantization>
      _instance;
} _SimulatedQuantization_default_instance_;
class DynamicLearningRateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DynamicLearningRate>
      _instance;
} _DynamicLearningRate_default_instance_;
class LearningRateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LearningRate>
      _instance;
  float constant_;
  const ::tensorflow::tpu::DynamicLearningRate* dynamic_;
} _LearningRate_default_instance_;
class AdagradParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdagradParameters>
      _instance;
} _AdagradParameters_default_instance_;
class AdagradMomentumParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdagradMomentumParameters>
      _instance;
} _AdagradMomentumParameters_default_instance_;
class BoundedAdagradParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoundedAdagradParameters>
      _instance;
} _BoundedAdagradParameters_default_instance_;
class StochasticGradientDescentParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StochasticGradientDescentParameters>
      _instance;
} _StochasticGradientDescentParameters_default_instance_;
class FtrlParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FtrlParameters>
      _instance;
} _FtrlParameters_default_instance_;
class AdamParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdamParameters>
      _instance;
} _AdamParameters_default_instance_;
class MomentumParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MomentumParameters>
      _instance;
} _MomentumParameters_default_instance_;
class RmsPropParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RmsPropParameters>
      _instance;
} _RmsPropParameters_default_instance_;
class CenteredRmsPropParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CenteredRmsPropParameters>
      _instance;
} _CenteredRmsPropParameters_default_instance_;
class MdlAdagradLightParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MdlAdagradLightParameters>
      _instance;
} _MdlAdagradLightParameters_default_instance_;
class AdadeltaParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdadeltaParameters>
      _instance;
} _AdadeltaParameters_default_instance_;
class ProximalAdagradParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProximalAdagradParameters>
      _instance;
} _ProximalAdagradParameters_default_instance_;
class OnlineYogiParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnlineYogiParameters>
      _instance;
} _OnlineYogiParameters_default_instance_;
class ProximalYogiParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProximalYogiParameters>
      _instance;
} _ProximalYogiParameters_default_instance_;
class FrequencyEstimatorParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrequencyEstimatorParameters>
      _instance;
} _FrequencyEstimatorParameters_default_instance_;
class UserDefinedProgramParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserDefinedProgramParameters>
      _instance;
} _UserDefinedProgramParameters_default_instance_;
class AssignParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssignParameters>
      _instance;
} _AssignParameters_default_instance_;
class GradientAccumulationStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GradientAccumulationStatus>
      _instance;
} _GradientAccumulationStatus_default_instance_;
class LowDimensionalPackingStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LowDimensionalPackingStatus>
      _instance;
} _LowDimensionalPackingStatus_default_instance_;
class HotIdReplicationConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotIdReplicationConfiguration>
      _instance;
} _HotIdReplicationConfiguration_default_instance_;
class OptimizationParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptimizationParameters>
      _instance;
  const ::tensorflow::tpu::AdagradParameters* adagrad_;
  const ::tensorflow::tpu::AdagradMomentumParameters* adagrad_momentum_;
  const ::tensorflow::tpu::BoundedAdagradParameters* bounded_adagrad_;
  const ::tensorflow::tpu::StochasticGradientDescentParameters* stochastic_gradient_descent_;
  const ::tensorflow::tpu::FtrlParameters* ftrl_;
  const ::tensorflow::tpu::AdamParameters* adam_;
  const ::tensorflow::tpu::MomentumParameters* momentum_;
  const ::tensorflow::tpu::RmsPropParameters* rms_prop_;
  const ::tensorflow::tpu::CenteredRmsPropParameters* centered_rms_prop_;
  const ::tensorflow::tpu::MdlAdagradLightParameters* mdl_adagrad_light_;
  const ::tensorflow::tpu::AdadeltaParameters* adadelta_;
  const ::tensorflow::tpu::ProximalAdagradParameters* proximal_adagrad_;
  const ::tensorflow::tpu::OnlineYogiParameters* online_yogi_;
  const ::tensorflow::tpu::ProximalYogiParameters* proximal_yogi_;
  const ::tensorflow::tpu::FrequencyEstimatorParameters* frequency_estimator_;
  const ::tensorflow::tpu::UserDefinedProgramParameters* user_defined_program_;
  const ::tensorflow::tpu::AssignParameters* assign_;
} _OptimizationParameters_default_instance_;
class StateVariableSpecification_UserDefinedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateVariableSpecification_UserDefined>
      _instance;
} _StateVariableSpecification_UserDefined_default_instance_;
class StateVariableSpecification_FillWithConstantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateVariableSpecification_FillWithConstant>
      _instance;
} _StateVariableSpecification_FillWithConstant_default_instance_;
class StateVariableSpecificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateVariableSpecification>
      _instance;
  const ::tensorflow::tpu::StateVariableSpecification_UserDefined* user_defined_;
  const ::tensorflow::tpu::StateVariableSpecification_FillWithConstant* fill_with_constant_;
} _StateVariableSpecification_default_instance_;
}  // namespace tpu
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto {
static void InitDefaultsClippingLimits() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_ClippingLimits_default_instance_;
    new (ptr) ::tensorflow::tpu::ClippingLimits();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::ClippingLimits::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClippingLimits =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClippingLimits}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_FloatValue.base,}};

static void InitDefaultsSimulatedQuantization() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_SimulatedQuantization_default_instance_;
    new (ptr) ::tensorflow::tpu::SimulatedQuantization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::SimulatedQuantization::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SimulatedQuantization =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSimulatedQuantization}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ClippingLimits.base,}};

static void InitDefaultsDynamicLearningRate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_DynamicLearningRate_default_instance_;
    new (ptr) ::tensorflow::tpu::DynamicLearningRate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::DynamicLearningRate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DynamicLearningRate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDynamicLearningRate}, {}};

static void InitDefaultsLearningRate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_LearningRate_default_instance_;
    new (ptr) ::tensorflow::tpu::LearningRate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::LearningRate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LearningRate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLearningRate}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_DynamicLearningRate.base,}};

static void InitDefaultsAdagradParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_AdagradParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::AdagradParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::AdagradParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdagradParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdagradParameters}, {}};

static void InitDefaultsAdagradMomentumParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_AdagradMomentumParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::AdagradMomentumParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::AdagradMomentumParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdagradMomentumParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdagradMomentumParameters}, {}};

static void InitDefaultsBoundedAdagradParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_BoundedAdagradParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::BoundedAdagradParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::BoundedAdagradParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BoundedAdagradParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBoundedAdagradParameters}, {}};

static void InitDefaultsStochasticGradientDescentParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_StochasticGradientDescentParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::StochasticGradientDescentParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::StochasticGradientDescentParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StochasticGradientDescentParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStochasticGradientDescentParameters}, {}};

static void InitDefaultsFtrlParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_FtrlParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::FtrlParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::FtrlParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FtrlParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFtrlParameters}, {}};

static void InitDefaultsAdamParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_AdamParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::AdamParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::AdamParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdamParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdamParameters}, {}};

static void InitDefaultsMomentumParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_MomentumParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::MomentumParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::MomentumParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MomentumParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMomentumParameters}, {}};

static void InitDefaultsRmsPropParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_RmsPropParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::RmsPropParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::RmsPropParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RmsPropParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRmsPropParameters}, {}};

static void InitDefaultsCenteredRmsPropParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_CenteredRmsPropParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::CenteredRmsPropParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::CenteredRmsPropParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CenteredRmsPropParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCenteredRmsPropParameters}, {}};

static void InitDefaultsMdlAdagradLightParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_MdlAdagradLightParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::MdlAdagradLightParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::MdlAdagradLightParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MdlAdagradLightParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMdlAdagradLightParameters}, {}};

static void InitDefaultsAdadeltaParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_AdadeltaParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::AdadeltaParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::AdadeltaParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdadeltaParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdadeltaParameters}, {}};

static void InitDefaultsProximalAdagradParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_ProximalAdagradParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::ProximalAdagradParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::ProximalAdagradParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProximalAdagradParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProximalAdagradParameters}, {}};

static void InitDefaultsOnlineYogiParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_OnlineYogiParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::OnlineYogiParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::OnlineYogiParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnlineYogiParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnlineYogiParameters}, {}};

static void InitDefaultsProximalYogiParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_ProximalYogiParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::ProximalYogiParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::ProximalYogiParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProximalYogiParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProximalYogiParameters}, {}};

static void InitDefaultsFrequencyEstimatorParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_FrequencyEstimatorParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::FrequencyEstimatorParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::FrequencyEstimatorParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FrequencyEstimatorParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFrequencyEstimatorParameters}, {}};

static void InitDefaultsUserDefinedProgramParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_UserDefinedProgramParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::UserDefinedProgramParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::UserDefinedProgramParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserDefinedProgramParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserDefinedProgramParameters}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,}};

static void InitDefaultsAssignParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_AssignParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::AssignParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::AssignParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AssignParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAssignParameters}, {}};

static void InitDefaultsGradientAccumulationStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_GradientAccumulationStatus_default_instance_;
    new (ptr) ::tensorflow::tpu::GradientAccumulationStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::GradientAccumulationStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GradientAccumulationStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGradientAccumulationStatus}, {}};

static void InitDefaultsLowDimensionalPackingStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_LowDimensionalPackingStatus_default_instance_;
    new (ptr) ::tensorflow::tpu::LowDimensionalPackingStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::LowDimensionalPackingStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LowDimensionalPackingStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLowDimensionalPackingStatus}, {}};

static void InitDefaultsHotIdReplicationConfiguration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_HotIdReplicationConfiguration_default_instance_;
    new (ptr) ::tensorflow::tpu::HotIdReplicationConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::HotIdReplicationConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HotIdReplicationConfiguration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHotIdReplicationConfiguration}, {}};

static void InitDefaultsOptimizationParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_OptimizationParameters_default_instance_;
    new (ptr) ::tensorflow::tpu::OptimizationParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::OptimizationParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<21> scc_info_OptimizationParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 21, InitDefaultsOptimizationParameters}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_LearningRate.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ClippingLimits.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_SimulatedQuantization.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_HotIdReplicationConfiguration.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdagradParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdagradMomentumParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_BoundedAdagradParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StochasticGradientDescentParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_FtrlParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdamParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_MomentumParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_RmsPropParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_CenteredRmsPropParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_MdlAdagradLightParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdadeltaParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ProximalAdagradParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_OnlineYogiParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ProximalYogiParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_FrequencyEstimatorParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_UserDefinedProgramParameters.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AssignParameters.base,}};

static void InitDefaultsStateVariableSpecification_UserDefined() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_StateVariableSpecification_UserDefined_default_instance_;
    new (ptr) ::tensorflow::tpu::StateVariableSpecification_UserDefined();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::StateVariableSpecification_UserDefined::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StateVariableSpecification_UserDefined =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStateVariableSpecification_UserDefined}, {}};

static void InitDefaultsStateVariableSpecification_FillWithConstant() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_StateVariableSpecification_FillWithConstant_default_instance_;
    new (ptr) ::tensorflow::tpu::StateVariableSpecification_FillWithConstant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::StateVariableSpecification_FillWithConstant::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StateVariableSpecification_FillWithConstant =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStateVariableSpecification_FillWithConstant}, {}};

static void InitDefaultsStateVariableSpecification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::tpu::_StateVariableSpecification_default_instance_;
    new (ptr) ::tensorflow::tpu::StateVariableSpecification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::StateVariableSpecification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StateVariableSpecification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStateVariableSpecification}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StateVariableSpecification_UserDefined.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StateVariableSpecification_FillWithConstant.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClippingLimits.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SimulatedQuantization.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DynamicLearningRate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LearningRate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdagradParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdagradMomentumParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoundedAdagradParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StochasticGradientDescentParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FtrlParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdamParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MomentumParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RmsPropParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CenteredRmsPropParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MdlAdagradLightParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdadeltaParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProximalAdagradParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnlineYogiParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProximalYogiParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrequencyEstimatorParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserDefinedProgramParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssignParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GradientAccumulationStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LowDimensionalPackingStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotIdReplicationConfiguration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptimizationParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateVariableSpecification_UserDefined.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateVariableSpecification_FillWithConstant.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateVariableSpecification.base);
}

::google::protobuf::Metadata file_level_metadata[28];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ClippingLimits, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ClippingLimits, lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ClippingLimits, upper_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::SimulatedQuantization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::SimulatedQuantization, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::SimulatedQuantization, clipping_limits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::SimulatedQuantization, num_buckets_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::DynamicLearningRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::DynamicLearningRate, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::LearningRate, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::LearningRate, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::tensorflow::tpu::LearningRateDefaultTypeInternal, constant_),
  offsetof(::tensorflow::tpu::LearningRateDefaultTypeInternal, dynamic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::LearningRate, learning_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdagradParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdagradMomentumParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdagradMomentumParameters, momentum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdagradMomentumParameters, use_nesterov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdagradMomentumParameters, exponent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdagradMomentumParameters, beta2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdagradMomentumParameters, epsilon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::BoundedAdagradParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::BoundedAdagradParameters, update_accumulator_first_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::BoundedAdagradParameters, max_var_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::BoundedAdagradParameters, max_accumulator_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::StochasticGradientDescentParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FtrlParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FtrlParameters, l1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FtrlParameters, l2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FtrlParameters, lr_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FtrlParameters, beta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FtrlParameters, multiply_linear_by_lr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FtrlParameters, allow_zero_accumulator_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdamParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdamParameters, beta1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdamParameters, beta2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdamParameters, epsilon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdamParameters, use_non_lazy_adam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdamParameters, use_sum_inside_sqrt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MomentumParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MomentumParameters, momentum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MomentumParameters, use_nesterov_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::RmsPropParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::RmsPropParameters, rho_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::RmsPropParameters, momentum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::RmsPropParameters, epsilon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::CenteredRmsPropParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::CenteredRmsPropParameters, rho_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::CenteredRmsPropParameters, momentum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::CenteredRmsPropParameters, epsilon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, l2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, lr_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, min_servable_mdl_benefit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, mdl_mix_in_margin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, mdl_benefit_rampup_coeff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, mdl_min_weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, benefit_revisit_scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, max_event_benefit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, max_total_benefit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, mdl_hard_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, hard_limit_min_benefit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::MdlAdagradLightParameters, mdl_regularize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdadeltaParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdadeltaParameters, rho_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AdadeltaParameters, epsilon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalAdagradParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalAdagradParameters, l1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalAdagradParameters, l2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OnlineYogiParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OnlineYogiParameters, l1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OnlineYogiParameters, l2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OnlineYogiParameters, beta2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalYogiParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalYogiParameters, l1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalYogiParameters, l2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalYogiParameters, beta1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalYogiParameters, beta2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::ProximalYogiParameters, epsilon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FrequencyEstimatorParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FrequencyEstimatorParameters, tau_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FrequencyEstimatorParameters, max_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FrequencyEstimatorParameters, outlier_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::FrequencyEstimatorParameters, weight_exponent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::UserDefinedProgramParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::UserDefinedProgramParameters, program_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::AssignParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::GradientAccumulationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::LowDimensionalPackingStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::HotIdReplicationConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::HotIdReplicationConfiguration, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, clipping_limits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, gradient_clipping_limits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, weight_decay_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, multiply_weight_decay_factor_by_learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, simulated_quantization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, gradient_accumulation_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, low_dimensional_packing_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, hot_id_replication_configuration_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, adagrad_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, adagrad_momentum_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, bounded_adagrad_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, stochastic_gradient_descent_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, ftrl_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, adam_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, momentum_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, rms_prop_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, centered_rms_prop_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, mdl_adagrad_light_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, adadelta_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, proximal_adagrad_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, online_yogi_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, proximal_yogi_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, frequency_estimator_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, user_defined_program_),
  offsetof(::tensorflow::tpu::OptimizationParametersDefaultTypeInternal, assign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::OptimizationParameters, parameters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::StateVariableSpecification_UserDefined, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::StateVariableSpecification_FillWithConstant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::StateVariableSpecification_FillWithConstant, initial_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::StateVariableSpecification, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::StateVariableSpecification, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::StateVariableSpecification, name_),
  offsetof(::tensorflow::tpu::StateVariableSpecificationDefaultTypeInternal, user_defined_),
  offsetof(::tensorflow::tpu::StateVariableSpecificationDefaultTypeInternal, fill_with_constant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::StateVariableSpecification, usage_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::tpu::ClippingLimits)},
  { 7, -1, sizeof(::tensorflow::tpu::SimulatedQuantization)},
  { 15, -1, sizeof(::tensorflow::tpu::DynamicLearningRate)},
  { 21, -1, sizeof(::tensorflow::tpu::LearningRate)},
  { 29, -1, sizeof(::tensorflow::tpu::AdagradParameters)},
  { 34, -1, sizeof(::tensorflow::tpu::AdagradMomentumParameters)},
  { 44, -1, sizeof(::tensorflow::tpu::BoundedAdagradParameters)},
  { 52, -1, sizeof(::tensorflow::tpu::StochasticGradientDescentParameters)},
  { 57, -1, sizeof(::tensorflow::tpu::FtrlParameters)},
  { 68, -1, sizeof(::tensorflow::tpu::AdamParameters)},
  { 78, -1, sizeof(::tensorflow::tpu::MomentumParameters)},
  { 85, -1, sizeof(::tensorflow::tpu::RmsPropParameters)},
  { 93, -1, sizeof(::tensorflow::tpu::CenteredRmsPropParameters)},
  { 101, -1, sizeof(::tensorflow::tpu::MdlAdagradLightParameters)},
  { 118, -1, sizeof(::tensorflow::tpu::AdadeltaParameters)},
  { 125, -1, sizeof(::tensorflow::tpu::ProximalAdagradParameters)},
  { 132, -1, sizeof(::tensorflow::tpu::OnlineYogiParameters)},
  { 140, -1, sizeof(::tensorflow::tpu::ProximalYogiParameters)},
  { 150, -1, sizeof(::tensorflow::tpu::FrequencyEstimatorParameters)},
  { 159, -1, sizeof(::tensorflow::tpu::UserDefinedProgramParameters)},
  { 165, -1, sizeof(::tensorflow::tpu::AssignParameters)},
  { 170, -1, sizeof(::tensorflow::tpu::GradientAccumulationStatus)},
  { 175, -1, sizeof(::tensorflow::tpu::LowDimensionalPackingStatus)},
  { 180, -1, sizeof(::tensorflow::tpu::HotIdReplicationConfiguration)},
  { 186, -1, sizeof(::tensorflow::tpu::OptimizationParameters)},
  { 218, -1, sizeof(::tensorflow::tpu::StateVariableSpecification_UserDefined)},
  { 223, -1, sizeof(::tensorflow::tpu::StateVariableSpecification_FillWithConstant)},
  { 229, -1, sizeof(::tensorflow::tpu::StateVariableSpecification)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_ClippingLimits_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_SimulatedQuantization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_DynamicLearningRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_LearningRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_AdagradParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_AdagradMomentumParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_BoundedAdagradParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_StochasticGradientDescentParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_FtrlParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_AdamParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_MomentumParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_RmsPropParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_CenteredRmsPropParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_MdlAdagradLightParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_AdadeltaParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_ProximalAdagradParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_OnlineYogiParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_ProximalYogiParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_FrequencyEstimatorParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_UserDefinedProgramParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_AssignParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_GradientAccumulationStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_LowDimensionalPackingStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_HotIdReplicationConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_OptimizationParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_StateVariableSpecification_UserDefined_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_StateVariableSpecification_FillWithConstant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_StateVariableSpecification_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/protobuf/tpu/optimization_parameters.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n:tensorflow/core/protobuf/tpu/optimizat"
      "ion_parameters.proto\022\016tensorflow.tpu\032\036go"
      "ogle/protobuf/wrappers.proto\032)tensorflow"
      "/compiler/xla/service/hlo.proto\"h\n\016Clipp"
      "ingLimits\022*\n\005lower\030\001 \001(\0132\033.google.protob"
      "uf.FloatValue\022*\n\005upper\030\002 \001(\0132\033.google.pr"
      "otobuf.FloatValue\"v\n\025SimulatedQuantizati"
      "on\022\017\n\007enabled\030\001 \001(\010\0227\n\017clipping_limits\030\002"
      " \001(\0132\036.tensorflow.tpu.ClippingLimits\022\023\n\013"
      "num_buckets\030\003 \001(\005\"\"\n\023DynamicLearningRate"
      "\022\013\n\003tag\030\001 \001(\005\"k\n\014LearningRate\022\022\n\010constan"
      "t\030\001 \001(\002H\000\0226\n\007dynamic\030\002 \001(\0132#.tensorflow."
      "tpu.DynamicLearningRateH\000B\017\n\rlearning_ra"
      "te\".\n\021AdagradParametersJ\004\010\001\020\002R\023initial_a"
      "ccumulator\"u\n\031AdagradMomentumParameters\022"
      "\020\n\010momentum\030\001 \001(\002\022\024\n\014use_nesterov\030\002 \001(\010\022"
      "\020\n\010exponent\030\003 \001(\002\022\r\n\005beta2\030\004 \001(\002\022\017\n\007epsi"
      "lon\030\005 \001(\002\"m\n\030BoundedAdagradParameters\022 \n"
      "\030update_accumulator_first\030\001 \001(\010\022\026\n\016max_v"
      "ar_update\030\002 \001(\002\022\027\n\017max_accumulator\030\003 \001(\002"
      "\"%\n#StochasticGradientDescentParameters\""
      "\266\001\n\016FtrlParameters\022\n\n\002l1\030\001 \001(\002\022\n\n\002l2\030\002 \001"
      "(\002\022\020\n\010lr_power\030\003 \001(\002\022\014\n\004beta\030\007 \001(\002\022\035\n\025mu"
      "ltiply_linear_by_lr\030\006 \001(\010\022\"\n\026allow_zero_"
      "accumulator\030\010 \001(\010B\002\030\001J\004\010\004\020\005J\004\010\005\020\006R\riniti"
      "al_accumR\016initial_linear\"\231\001\n\016AdamParamet"
      "ers\022\r\n\005beta1\030\003 \001(\002\022\r\n\005beta2\030\004 \001(\002\022\017\n\007eps"
      "ilon\030\005 \001(\002\022\031\n\021use_non_lazy_adam\030\010 \001(\010\022\033\n"
      "\023use_sum_inside_sqrt\030\n \001(\010J\004\010\006\020\007J\004\010\007\020\010R\t"
      "initial_mR\tinitial_v\"Q\n\022MomentumParamete"
      "rs\022\020\n\010momentum\030\001 \001(\002\022\024\n\014use_nesterov\030\002 \001"
      "(\010J\004\010\003\020\004R\rinitial_accum\"h\n\021RmsPropParame"
      "ters\022\013\n\003rho\030\001 \001(\002\022\020\n\010momentum\030\002 \001(\002\022\017\n\007e"
      "psilon\030\003 \001(\002J\004\010\004\020\005J\004\010\005\020\006R\ninitial_msR\013in"
      "itial_mom\"\202\001\n\031CenteredRmsPropParameters\022"
      "\013\n\003rho\030\001 \001(\002\022\020\n\010momentum\030\002 \001(\002\022\017\n\007epsilo"
      "n\030\003 \001(\002J\004\010\004\020\005J\004\010\005\020\006J\004\010\006\020\007R\ninitial_msR\013i"
      "nitial_momR\ninitial_mg\"\235\003\n\031MdlAdagradLig"
      "htParameters\022\n\n\002l2\030\001 \001(\002\022\020\n\010lr_power\030\002 \001"
      "(\002\022 \n\030min_servable_mdl_benefit\030\003 \001(\002\022\031\n\021"
      "mdl_mix_in_margin\030\004 \001(\002\022 \n\030mdl_benefit_r"
      "ampup_coeff\030\005 \001(\002\022\026\n\016mdl_min_weight\030\006 \001("
      "\002\022\035\n\025benefit_revisit_scale\030\007 \001(\002\022\031\n\021max_"
      "event_benefit\030\010 \001(\002\022\031\n\021max_total_benefit"
      "\030\t \001(\002\022\026\n\016mdl_hard_limit\030\n \001(\002\022\036\n\026hard_l"
      "imit_min_benefit\030\013 \001(\010\022\026\n\016mdl_regularize"
      "\030\014 \001(\010J\004\010\r\020\016J\004\010\016\020\017J\004\010\017\020\020R\023initial_accumu"
      "latorR\016initial_weightR\017initial_benefit\"c"
      "\n\022AdadeltaParameters\022\013\n\003rho\030\001 \001(\002\022\017\n\007eps"
      "ilon\030\002 \001(\002J\004\010\003\020\004J\004\010\004\020\005R\023initial_accumula"
      "torR\016initial_update\"N\n\031ProximalAdagradPa"
      "rameters\022\n\n\002l1\030\001 \001(\002\022\n\n\002l2\030\002 \001(\002J\004\010\003\020\004R\023"
      "initial_accumulator\"I\n\024OnlineYogiParamet"
      "ers\022\n\n\002l1\030\001 \001(\002\022\n\n\002l2\030\002 \001(\002\022\r\n\005beta2\030\003 \001"
      "(\002J\004\010\006\020\007J\004\010\007\020\010\"k\n\026ProximalYogiParameters"
      "\022\n\n\002l1\030\001 \001(\002\022\n\n\002l2\030\002 \001(\002\022\r\n\005beta1\030\003 \001(\002\022"
      "\r\n\005beta2\030\004 \001(\002\022\017\n\007epsilon\030\005 \001(\002J\004\010\010\020\tJ\004\010"
      "\t\020\n\"r\n\034FrequencyEstimatorParameters\022\013\n\003t"
      "au\030\001 \001(\002\022\021\n\tmax_delta\030\002 \001(\002\022\031\n\021outlier_t"
      "hreshold\030\003 \001(\002\022\027\n\017weight_exponent\030\004 \001(\002\""
      "J\n\034UserDefinedProgramParameters\022$\n\007progr"
      "am\030\001 \001(\0132\023.xla.HloModuleProtoJ\004\010\002\020\003\"\022\n\020A"
      "ssignParameters\"R\n\032GradientAccumulationS"
      "tatus\"4\n\006Status\022\017\n\013UNSPECIFIED\020\000\022\013\n\007ENAB"
      "LED\020\001\022\014\n\010DISABLED\020\002\"S\n\033LowDimensionalPac"
      "kingStatus\"4\n\006Status\022\017\n\013UNSPECIFIED\020\000\022\013\n"
      "\007ENABLED\020\001\022\014\n\010DISABLED\020\002\"\233\001\n\035HotIdReplic"
      "ationConfiguration\022D\n\006status\030\001 \001(\01624.ten"
      "sorflow.tpu.HotIdReplicationConfiguratio"
      "n.Status\"4\n\006Status\022\017\n\013UNSPECIFIED\020\000\022\013\n\007E"
      "NABLED\020\001\022\014\n\010DISABLED\020\002\"\324\r\n\026OptimizationP"
      "arameters\0223\n\rlearning_rate\030\r \001(\0132\034.tenso"
      "rflow.tpu.LearningRate\0227\n\017clipping_limit"
      "s\030\002 \001(\0132\036.tensorflow.tpu.ClippingLimits\022"
      "@\n\030gradient_clipping_limits\030\007 \001(\0132\036.tens"
      "orflow.tpu.ClippingLimits\022\033\n\023weight_deca"
      "y_factor\030\020 \001(\002\0225\n-multiply_weight_decay_"
      "factor_by_learning_rate\030\026 \001(\010\022E\n\026simulat"
      "ed_quantization\030\033 \001(\0132%.tensorflow.tpu.S"
      "imulatedQuantization\022W\n\034gradient_accumul"
      "ation_status\030\021 \001(\01621.tensorflow.tpu.Grad"
      "ientAccumulationStatus.Status\022Z\n\036low_dim"
      "ensional_packing_status\030\034 \001(\01622.tensorfl"
      "ow.tpu.LowDimensionalPackingStatus.Statu"
      "s\022W\n hot_id_replication_configuration\030\022 "
      "\001(\0132-.tensorflow.tpu.HotIdReplicationCon"
      "figuration\0224\n\007adagrad\030\003 \001(\0132!.tensorflow"
      ".tpu.AdagradParametersH\000\022E\n\020adagrad_mome"
      "ntum\030\032 \001(\0132).tensorflow.tpu.AdagradMomen"
      "tumParametersH\000\022C\n\017bounded_adagrad\030\023 \001(\013"
      "2(.tensorflow.tpu.BoundedAdagradParamete"
      "rsH\000\022Z\n\033stochastic_gradient_descent\030\004 \001("
      "\01323.tensorflow.tpu.StochasticGradientDes"
      "centParametersH\000\022.\n\004ftrl\030\005 \001(\0132\036.tensorf"
      "low.tpu.FtrlParametersH\000\022.\n\004adam\030\006 \001(\0132\036"
      ".tensorflow.tpu.AdamParametersH\000\0226\n\010mome"
      "ntum\030\010 \001(\0132\".tensorflow.tpu.MomentumPara"
      "metersH\000\0225\n\010rms_prop\030\t \001(\0132!.tensorflow."
      "tpu.RmsPropParametersH\000\022F\n\021centered_rms_"
      "prop\030\n \001(\0132).tensorflow.tpu.CenteredRmsP"
      "ropParametersH\000\022F\n\021mdl_adagrad_light\030\013 \001"
      "(\0132).tensorflow.tpu.MdlAdagradLightParam"
      "etersH\000\0226\n\010adadelta\030\014 \001(\0132\".tensorflow.t"
      "pu.AdadeltaParametersH\000\022E\n\020proximal_adag"
      "rad\030\016 \001(\0132).tensorflow.tpu.ProximalAdagr"
      "adParametersH\000\022;\n\013online_yogi\030\024 \001(\0132$.te"
      "nsorflow.tpu.OnlineYogiParametersH\000\022\?\n\rp"
      "roximal_yogi\030\025 \001(\0132&.tensorflow.tpu.Prox"
      "imalYogiParametersH\000\022K\n\023frequency_estima"
      "tor\030\027 \001(\0132,.tensorflow.tpu.FrequencyEsti"
      "matorParametersH\000\022L\n\024user_defined_progra"
      "m\030\030 \001(\0132,.tensorflow.tpu.UserDefinedProg"
      "ramParametersH\000\0222\n\006assign\030\031 \001(\0132 .tensor"
      "flow.tpu.AssignParametersH\000B\014\n\nparameter"
      "sJ\004\010\001\020\002J\004\010\017\020\020\"\236\002\n\032StateVariableSpecifica"
      "tion\022\014\n\004name\030\001 \001(\t\022N\n\014user_defined\030\002 \001(\013"
      "26.tensorflow.tpu.StateVariableSpecifica"
      "tion.UserDefinedH\000\022Y\n\022fill_with_constant"
      "\030\003 \001(\0132;.tensorflow.tpu.StateVariableSpe"
      "cification.FillWithConstantH\000\032\023\n\013UserDef"
      "inedJ\004\010\001\020\002\032)\n\020FillWithConstant\022\025\n\rinitia"
      "l_value\030\001 \001(\001B\007\n\005usageb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4870);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/tpu/optimization_parameters.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto
namespace tensorflow {
namespace tpu {
const ::google::protobuf::EnumDescriptor* GradientAccumulationStatus_Status_descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_enum_descriptors[0];
}
bool GradientAccumulationStatus_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GradientAccumulationStatus_Status GradientAccumulationStatus::UNSPECIFIED;
const GradientAccumulationStatus_Status GradientAccumulationStatus::ENABLED;
const GradientAccumulationStatus_Status GradientAccumulationStatus::DISABLED;
const GradientAccumulationStatus_Status GradientAccumulationStatus::Status_MIN;
const GradientAccumulationStatus_Status GradientAccumulationStatus::Status_MAX;
const int GradientAccumulationStatus::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LowDimensionalPackingStatus_Status_descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_enum_descriptors[1];
}
bool LowDimensionalPackingStatus_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LowDimensionalPackingStatus_Status LowDimensionalPackingStatus::UNSPECIFIED;
const LowDimensionalPackingStatus_Status LowDimensionalPackingStatus::ENABLED;
const LowDimensionalPackingStatus_Status LowDimensionalPackingStatus::DISABLED;
const LowDimensionalPackingStatus_Status LowDimensionalPackingStatus::Status_MIN;
const LowDimensionalPackingStatus_Status LowDimensionalPackingStatus::Status_MAX;
const int LowDimensionalPackingStatus::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* HotIdReplicationConfiguration_Status_descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_enum_descriptors[2];
}
bool HotIdReplicationConfiguration_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HotIdReplicationConfiguration_Status HotIdReplicationConfiguration::UNSPECIFIED;
const HotIdReplicationConfiguration_Status HotIdReplicationConfiguration::ENABLED;
const HotIdReplicationConfiguration_Status HotIdReplicationConfiguration::DISABLED;
const HotIdReplicationConfiguration_Status HotIdReplicationConfiguration::Status_MIN;
const HotIdReplicationConfiguration_Status HotIdReplicationConfiguration::Status_MAX;
const int HotIdReplicationConfiguration::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ClippingLimits::InitAsDefaultInstance() {
  ::tensorflow::tpu::_ClippingLimits_default_instance_._instance.get_mutable()->lower_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::tensorflow::tpu::_ClippingLimits_default_instance_._instance.get_mutable()->upper_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
}
void ClippingLimits::clear_lower() {
  if (GetArenaNoVirtual() == NULL && lower_ != NULL) {
    delete lower_;
  }
  lower_ = NULL;
}
void ClippingLimits::clear_upper() {
  if (GetArenaNoVirtual() == NULL && upper_ != NULL) {
    delete upper_;
  }
  upper_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClippingLimits::kLowerFieldNumber;
const int ClippingLimits::kUpperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClippingLimits::ClippingLimits()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ClippingLimits.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.ClippingLimits)
}
ClippingLimits::ClippingLimits(const ClippingLimits& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lower()) {
    lower_ = new ::google::protobuf::FloatValue(*from.lower_);
  } else {
    lower_ = NULL;
  }
  if (from.has_upper()) {
    upper_ = new ::google::protobuf::FloatValue(*from.upper_);
  } else {
    upper_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.ClippingLimits)
}

void ClippingLimits::SharedCtor() {
  ::memset(&lower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_) -
      reinterpret_cast<char*>(&lower_)) + sizeof(upper_));
}

ClippingLimits::~ClippingLimits() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.ClippingLimits)
  SharedDtor();
}

void ClippingLimits::SharedDtor() {
  if (this != internal_default_instance()) delete lower_;
  if (this != internal_default_instance()) delete upper_;
}

void ClippingLimits::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClippingLimits::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClippingLimits& ClippingLimits::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ClippingLimits.base);
  return *internal_default_instance();
}


void ClippingLimits::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.ClippingLimits)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lower_ != NULL) {
    delete lower_;
  }
  lower_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_ != NULL) {
    delete upper_;
  }
  upper_ = NULL;
  _internal_metadata_.Clear();
}

bool ClippingLimits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.ClippingLimits)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FloatValue lower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue upper = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.ClippingLimits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.ClippingLimits)
  return false;
#undef DO_
}

void ClippingLimits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.ClippingLimits)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue lower = 1;
  if (this->has_lower()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_lower(), output);
  }

  // .google.protobuf.FloatValue upper = 2;
  if (this->has_upper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_upper(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.ClippingLimits)
}

::google::protobuf::uint8* ClippingLimits::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.ClippingLimits)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue lower = 1;
  if (this->has_lower()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_lower(), deterministic, target);
  }

  // .google.protobuf.FloatValue upper = 2;
  if (this->has_upper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_upper(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.ClippingLimits)
  return target;
}

size_t ClippingLimits::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.ClippingLimits)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.FloatValue lower = 1;
  if (this->has_lower()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lower_);
  }

  // .google.protobuf.FloatValue upper = 2;
  if (this->has_upper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upper_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClippingLimits::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.ClippingLimits)
  GOOGLE_DCHECK_NE(&from, this);
  const ClippingLimits* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClippingLimits>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.ClippingLimits)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.ClippingLimits)
    MergeFrom(*source);
  }
}

void ClippingLimits::MergeFrom(const ClippingLimits& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.ClippingLimits)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lower()) {
    mutable_lower()->::google::protobuf::FloatValue::MergeFrom(from.lower());
  }
  if (from.has_upper()) {
    mutable_upper()->::google::protobuf::FloatValue::MergeFrom(from.upper());
  }
}

void ClippingLimits::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.ClippingLimits)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClippingLimits::CopyFrom(const ClippingLimits& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.ClippingLimits)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClippingLimits::IsInitialized() const {
  return true;
}

void ClippingLimits::Swap(ClippingLimits* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClippingLimits::InternalSwap(ClippingLimits* other) {
  using std::swap;
  swap(lower_, other->lower_);
  swap(upper_, other->upper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClippingLimits::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SimulatedQuantization::InitAsDefaultInstance() {
  ::tensorflow::tpu::_SimulatedQuantization_default_instance_._instance.get_mutable()->clipping_limits_ = const_cast< ::tensorflow::tpu::ClippingLimits*>(
      ::tensorflow::tpu::ClippingLimits::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimulatedQuantization::kEnabledFieldNumber;
const int SimulatedQuantization::kClippingLimitsFieldNumber;
const int SimulatedQuantization::kNumBucketsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimulatedQuantization::SimulatedQuantization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_SimulatedQuantization.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.SimulatedQuantization)
}
SimulatedQuantization::SimulatedQuantization(const SimulatedQuantization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clipping_limits()) {
    clipping_limits_ = new ::tensorflow::tpu::ClippingLimits(*from.clipping_limits_);
  } else {
    clipping_limits_ = NULL;
  }
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_buckets_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(num_buckets_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.SimulatedQuantization)
}

void SimulatedQuantization::SharedCtor() {
  ::memset(&clipping_limits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_buckets_) -
      reinterpret_cast<char*>(&clipping_limits_)) + sizeof(num_buckets_));
}

SimulatedQuantization::~SimulatedQuantization() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.SimulatedQuantization)
  SharedDtor();
}

void SimulatedQuantization::SharedDtor() {
  if (this != internal_default_instance()) delete clipping_limits_;
}

void SimulatedQuantization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimulatedQuantization::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimulatedQuantization& SimulatedQuantization::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_SimulatedQuantization.base);
  return *internal_default_instance();
}


void SimulatedQuantization::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.SimulatedQuantization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && clipping_limits_ != NULL) {
    delete clipping_limits_;
  }
  clipping_limits_ = NULL;
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_buckets_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(num_buckets_));
  _internal_metadata_.Clear();
}

bool SimulatedQuantization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.SimulatedQuantization)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.ClippingLimits clipping_limits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clipping_limits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_buckets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_buckets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.SimulatedQuantization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.SimulatedQuantization)
  return false;
#undef DO_
}

void SimulatedQuantization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.SimulatedQuantization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // .tensorflow.tpu.ClippingLimits clipping_limits = 2;
  if (this->has_clipping_limits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_clipping_limits(), output);
  }

  // int32 num_buckets = 3;
  if (this->num_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_buckets(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.SimulatedQuantization)
}

::google::protobuf::uint8* SimulatedQuantization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.SimulatedQuantization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // .tensorflow.tpu.ClippingLimits clipping_limits = 2;
  if (this->has_clipping_limits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_clipping_limits(), deterministic, target);
  }

  // int32 num_buckets = 3;
  if (this->num_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_buckets(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.SimulatedQuantization)
  return target;
}

size_t SimulatedQuantization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.SimulatedQuantization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.tpu.ClippingLimits clipping_limits = 2;
  if (this->has_clipping_limits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *clipping_limits_);
  }

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // int32 num_buckets = 3;
  if (this->num_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_buckets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimulatedQuantization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.SimulatedQuantization)
  GOOGLE_DCHECK_NE(&from, this);
  const SimulatedQuantization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimulatedQuantization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.SimulatedQuantization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.SimulatedQuantization)
    MergeFrom(*source);
  }
}

void SimulatedQuantization::MergeFrom(const SimulatedQuantization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.SimulatedQuantization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_clipping_limits()) {
    mutable_clipping_limits()->::tensorflow::tpu::ClippingLimits::MergeFrom(from.clipping_limits());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.num_buckets() != 0) {
    set_num_buckets(from.num_buckets());
  }
}

void SimulatedQuantization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.SimulatedQuantization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimulatedQuantization::CopyFrom(const SimulatedQuantization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.SimulatedQuantization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimulatedQuantization::IsInitialized() const {
  return true;
}

void SimulatedQuantization::Swap(SimulatedQuantization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimulatedQuantization::InternalSwap(SimulatedQuantization* other) {
  using std::swap;
  swap(clipping_limits_, other->clipping_limits_);
  swap(enabled_, other->enabled_);
  swap(num_buckets_, other->num_buckets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimulatedQuantization::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DynamicLearningRate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicLearningRate::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicLearningRate::DynamicLearningRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_DynamicLearningRate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.DynamicLearningRate)
}
DynamicLearningRate::DynamicLearningRate(const DynamicLearningRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_ = from.tag_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.DynamicLearningRate)
}

void DynamicLearningRate::SharedCtor() {
  tag_ = 0;
}

DynamicLearningRate::~DynamicLearningRate() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.DynamicLearningRate)
  SharedDtor();
}

void DynamicLearningRate::SharedDtor() {
}

void DynamicLearningRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DynamicLearningRate::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicLearningRate& DynamicLearningRate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_DynamicLearningRate.base);
  return *internal_default_instance();
}


void DynamicLearningRate::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.DynamicLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_ = 0;
  _internal_metadata_.Clear();
}

bool DynamicLearningRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.DynamicLearningRate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.DynamicLearningRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.DynamicLearningRate)
  return false;
#undef DO_
}

void DynamicLearningRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.DynamicLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tag = 1;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.DynamicLearningRate)
}

::google::protobuf::uint8* DynamicLearningRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.DynamicLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tag = 1;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.DynamicLearningRate)
  return target;
}

size_t DynamicLearningRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.DynamicLearningRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 tag = 1;
  if (this->tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DynamicLearningRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.DynamicLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicLearningRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicLearningRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.DynamicLearningRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.DynamicLearningRate)
    MergeFrom(*source);
  }
}

void DynamicLearningRate::MergeFrom(const DynamicLearningRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.DynamicLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tag() != 0) {
    set_tag(from.tag());
  }
}

void DynamicLearningRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.DynamicLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicLearningRate::CopyFrom(const DynamicLearningRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.DynamicLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicLearningRate::IsInitialized() const {
  return true;
}

void DynamicLearningRate::Swap(DynamicLearningRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynamicLearningRate::InternalSwap(DynamicLearningRate* other) {
  using std::swap;
  swap(tag_, other->tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DynamicLearningRate::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LearningRate::InitAsDefaultInstance() {
  ::tensorflow::tpu::_LearningRate_default_instance_.constant_ = 0;
  ::tensorflow::tpu::_LearningRate_default_instance_.dynamic_ = const_cast< ::tensorflow::tpu::DynamicLearningRate*>(
      ::tensorflow::tpu::DynamicLearningRate::internal_default_instance());
}
void LearningRate::set_allocated_dynamic(::tensorflow::tpu::DynamicLearningRate* dynamic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_learning_rate();
  if (dynamic) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dynamic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dynamic, submessage_arena);
    }
    set_has_dynamic();
    learning_rate_.dynamic_ = dynamic;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.LearningRate.dynamic)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LearningRate::kConstantFieldNumber;
const int LearningRate::kDynamicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LearningRate::LearningRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_LearningRate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.LearningRate)
}
LearningRate::LearningRate(const LearningRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_learning_rate();
  switch (from.learning_rate_case()) {
    case kConstant: {
      set_constant(from.constant());
      break;
    }
    case kDynamic: {
      mutable_dynamic()->::tensorflow::tpu::DynamicLearningRate::MergeFrom(from.dynamic());
      break;
    }
    case LEARNING_RATE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.LearningRate)
}

void LearningRate::SharedCtor() {
  clear_has_learning_rate();
}

LearningRate::~LearningRate() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.LearningRate)
  SharedDtor();
}

void LearningRate::SharedDtor() {
  if (has_learning_rate()) {
    clear_learning_rate();
  }
}

void LearningRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LearningRate::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LearningRate& LearningRate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_LearningRate.base);
  return *internal_default_instance();
}


void LearningRate::clear_learning_rate() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.tpu.LearningRate)
  switch (learning_rate_case()) {
    case kConstant: {
      // No need to clear
      break;
    }
    case kDynamic: {
      delete learning_rate_.dynamic_;
      break;
    }
    case LEARNING_RATE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = LEARNING_RATE_NOT_SET;
}


void LearningRate::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.LearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_learning_rate();
  _internal_metadata_.Clear();
}

bool LearningRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.LearningRate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float constant = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          clear_learning_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &learning_rate_.constant_)));
          set_has_constant();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.DynamicLearningRate dynamic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dynamic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.LearningRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.LearningRate)
  return false;
#undef DO_
}

void LearningRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.LearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float constant = 1;
  if (has_constant()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->constant(), output);
  }

  // .tensorflow.tpu.DynamicLearningRate dynamic = 2;
  if (has_dynamic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_dynamic(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.LearningRate)
}

::google::protobuf::uint8* LearningRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.LearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float constant = 1;
  if (has_constant()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->constant(), target);
  }

  // .tensorflow.tpu.DynamicLearningRate dynamic = 2;
  if (has_dynamic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_dynamic(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.LearningRate)
  return target;
}

size_t LearningRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.LearningRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (learning_rate_case()) {
    // float constant = 1;
    case kConstant: {
      total_size += 1 + 4;
      break;
    }
    // .tensorflow.tpu.DynamicLearningRate dynamic = 2;
    case kDynamic: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *learning_rate_.dynamic_);
      break;
    }
    case LEARNING_RATE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LearningRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.LearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  const LearningRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LearningRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.LearningRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.LearningRate)
    MergeFrom(*source);
  }
}

void LearningRate::MergeFrom(const LearningRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.LearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.learning_rate_case()) {
    case kConstant: {
      set_constant(from.constant());
      break;
    }
    case kDynamic: {
      mutable_dynamic()->::tensorflow::tpu::DynamicLearningRate::MergeFrom(from.dynamic());
      break;
    }
    case LEARNING_RATE_NOT_SET: {
      break;
    }
  }
}

void LearningRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.LearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LearningRate::CopyFrom(const LearningRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.LearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LearningRate::IsInitialized() const {
  return true;
}

void LearningRate::Swap(LearningRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LearningRate::InternalSwap(LearningRate* other) {
  using std::swap;
  swap(learning_rate_, other->learning_rate_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LearningRate::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdagradParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdagradParameters::AdagradParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdagradParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.AdagradParameters)
}
AdagradParameters::AdagradParameters(const AdagradParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.AdagradParameters)
}

void AdagradParameters::SharedCtor() {
}

AdagradParameters::~AdagradParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.AdagradParameters)
  SharedDtor();
}

void AdagradParameters::SharedDtor() {
}

void AdagradParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdagradParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdagradParameters& AdagradParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdagradParameters.base);
  return *internal_default_instance();
}


void AdagradParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.AdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AdagradParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.AdagradParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.AdagradParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.AdagradParameters)
  return false;
#undef DO_
}

void AdagradParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.AdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.AdagradParameters)
}

::google::protobuf::uint8* AdagradParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.AdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.AdagradParameters)
  return target;
}

size_t AdagradParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.AdagradParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdagradParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.AdagradParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AdagradParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdagradParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.AdagradParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.AdagradParameters)
    MergeFrom(*source);
  }
}

void AdagradParameters::MergeFrom(const AdagradParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.AdagradParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AdagradParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.AdagradParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdagradParameters::CopyFrom(const AdagradParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.AdagradParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdagradParameters::IsInitialized() const {
  return true;
}

void AdagradParameters::Swap(AdagradParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdagradParameters::InternalSwap(AdagradParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdagradParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdagradMomentumParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdagradMomentumParameters::kMomentumFieldNumber;
const int AdagradMomentumParameters::kUseNesterovFieldNumber;
const int AdagradMomentumParameters::kExponentFieldNumber;
const int AdagradMomentumParameters::kBeta2FieldNumber;
const int AdagradMomentumParameters::kEpsilonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdagradMomentumParameters::AdagradMomentumParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdagradMomentumParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.AdagradMomentumParameters)
}
AdagradMomentumParameters::AdagradMomentumParameters(const AdagradMomentumParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&momentum_, &from.momentum_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsilon_) -
    reinterpret_cast<char*>(&momentum_)) + sizeof(epsilon_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.AdagradMomentumParameters)
}

void AdagradMomentumParameters::SharedCtor() {
  ::memset(&momentum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&momentum_)) + sizeof(epsilon_));
}

AdagradMomentumParameters::~AdagradMomentumParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.AdagradMomentumParameters)
  SharedDtor();
}

void AdagradMomentumParameters::SharedDtor() {
}

void AdagradMomentumParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdagradMomentumParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdagradMomentumParameters& AdagradMomentumParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdagradMomentumParameters.base);
  return *internal_default_instance();
}


void AdagradMomentumParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.AdagradMomentumParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&momentum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&momentum_)) + sizeof(epsilon_));
  _internal_metadata_.Clear();
}

bool AdagradMomentumParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.AdagradMomentumParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float momentum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &momentum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_nesterov = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_nesterov_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float exponent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &exponent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float epsilon = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.AdagradMomentumParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.AdagradMomentumParameters)
  return false;
#undef DO_
}

void AdagradMomentumParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.AdagradMomentumParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float momentum = 1;
  if (this->momentum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->momentum(), output);
  }

  // bool use_nesterov = 2;
  if (this->use_nesterov() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_nesterov(), output);
  }

  // float exponent = 3;
  if (this->exponent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->exponent(), output);
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->beta2(), output);
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->epsilon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.AdagradMomentumParameters)
}

::google::protobuf::uint8* AdagradMomentumParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.AdagradMomentumParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float momentum = 1;
  if (this->momentum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->momentum(), target);
  }

  // bool use_nesterov = 2;
  if (this->use_nesterov() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->use_nesterov(), target);
  }

  // float exponent = 3;
  if (this->exponent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->exponent(), target);
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->beta2(), target);
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->epsilon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.AdagradMomentumParameters)
  return target;
}

size_t AdagradMomentumParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.AdagradMomentumParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float momentum = 1;
  if (this->momentum() != 0) {
    total_size += 1 + 4;
  }

  // bool use_nesterov = 2;
  if (this->use_nesterov() != 0) {
    total_size += 1 + 1;
  }

  // float exponent = 3;
  if (this->exponent() != 0) {
    total_size += 1 + 4;
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    total_size += 1 + 4;
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdagradMomentumParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.AdagradMomentumParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AdagradMomentumParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdagradMomentumParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.AdagradMomentumParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.AdagradMomentumParameters)
    MergeFrom(*source);
  }
}

void AdagradMomentumParameters::MergeFrom(const AdagradMomentumParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.AdagradMomentumParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.momentum() != 0) {
    set_momentum(from.momentum());
  }
  if (from.use_nesterov() != 0) {
    set_use_nesterov(from.use_nesterov());
  }
  if (from.exponent() != 0) {
    set_exponent(from.exponent());
  }
  if (from.beta2() != 0) {
    set_beta2(from.beta2());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
}

void AdagradMomentumParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.AdagradMomentumParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdagradMomentumParameters::CopyFrom(const AdagradMomentumParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.AdagradMomentumParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdagradMomentumParameters::IsInitialized() const {
  return true;
}

void AdagradMomentumParameters::Swap(AdagradMomentumParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdagradMomentumParameters::InternalSwap(AdagradMomentumParameters* other) {
  using std::swap;
  swap(momentum_, other->momentum_);
  swap(use_nesterov_, other->use_nesterov_);
  swap(exponent_, other->exponent_);
  swap(beta2_, other->beta2_);
  swap(epsilon_, other->epsilon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdagradMomentumParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoundedAdagradParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoundedAdagradParameters::kUpdateAccumulatorFirstFieldNumber;
const int BoundedAdagradParameters::kMaxVarUpdateFieldNumber;
const int BoundedAdagradParameters::kMaxAccumulatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoundedAdagradParameters::BoundedAdagradParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_BoundedAdagradParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.BoundedAdagradParameters)
}
BoundedAdagradParameters::BoundedAdagradParameters(const BoundedAdagradParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&update_accumulator_first_, &from.update_accumulator_first_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_accumulator_) -
    reinterpret_cast<char*>(&update_accumulator_first_)) + sizeof(max_accumulator_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.BoundedAdagradParameters)
}

void BoundedAdagradParameters::SharedCtor() {
  ::memset(&update_accumulator_first_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_accumulator_) -
      reinterpret_cast<char*>(&update_accumulator_first_)) + sizeof(max_accumulator_));
}

BoundedAdagradParameters::~BoundedAdagradParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.BoundedAdagradParameters)
  SharedDtor();
}

void BoundedAdagradParameters::SharedDtor() {
}

void BoundedAdagradParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BoundedAdagradParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoundedAdagradParameters& BoundedAdagradParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_BoundedAdagradParameters.base);
  return *internal_default_instance();
}


void BoundedAdagradParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.BoundedAdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&update_accumulator_first_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_accumulator_) -
      reinterpret_cast<char*>(&update_accumulator_first_)) + sizeof(max_accumulator_));
  _internal_metadata_.Clear();
}

bool BoundedAdagradParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.BoundedAdagradParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool update_accumulator_first = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_accumulator_first_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_var_update = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_var_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_accumulator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_accumulator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.BoundedAdagradParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.BoundedAdagradParameters)
  return false;
#undef DO_
}

void BoundedAdagradParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.BoundedAdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool update_accumulator_first = 1;
  if (this->update_accumulator_first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->update_accumulator_first(), output);
  }

  // float max_var_update = 2;
  if (this->max_var_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->max_var_update(), output);
  }

  // float max_accumulator = 3;
  if (this->max_accumulator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->max_accumulator(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.BoundedAdagradParameters)
}

::google::protobuf::uint8* BoundedAdagradParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.BoundedAdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool update_accumulator_first = 1;
  if (this->update_accumulator_first() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->update_accumulator_first(), target);
  }

  // float max_var_update = 2;
  if (this->max_var_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->max_var_update(), target);
  }

  // float max_accumulator = 3;
  if (this->max_accumulator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->max_accumulator(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.BoundedAdagradParameters)
  return target;
}

size_t BoundedAdagradParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.BoundedAdagradParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool update_accumulator_first = 1;
  if (this->update_accumulator_first() != 0) {
    total_size += 1 + 1;
  }

  // float max_var_update = 2;
  if (this->max_var_update() != 0) {
    total_size += 1 + 4;
  }

  // float max_accumulator = 3;
  if (this->max_accumulator() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoundedAdagradParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.BoundedAdagradParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const BoundedAdagradParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoundedAdagradParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.BoundedAdagradParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.BoundedAdagradParameters)
    MergeFrom(*source);
  }
}

void BoundedAdagradParameters::MergeFrom(const BoundedAdagradParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.BoundedAdagradParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.update_accumulator_first() != 0) {
    set_update_accumulator_first(from.update_accumulator_first());
  }
  if (from.max_var_update() != 0) {
    set_max_var_update(from.max_var_update());
  }
  if (from.max_accumulator() != 0) {
    set_max_accumulator(from.max_accumulator());
  }
}

void BoundedAdagradParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.BoundedAdagradParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoundedAdagradParameters::CopyFrom(const BoundedAdagradParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.BoundedAdagradParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundedAdagradParameters::IsInitialized() const {
  return true;
}

void BoundedAdagradParameters::Swap(BoundedAdagradParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoundedAdagradParameters::InternalSwap(BoundedAdagradParameters* other) {
  using std::swap;
  swap(update_accumulator_first_, other->update_accumulator_first_);
  swap(max_var_update_, other->max_var_update_);
  swap(max_accumulator_, other->max_accumulator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BoundedAdagradParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StochasticGradientDescentParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StochasticGradientDescentParameters::StochasticGradientDescentParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StochasticGradientDescentParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.StochasticGradientDescentParameters)
}
StochasticGradientDescentParameters::StochasticGradientDescentParameters(const StochasticGradientDescentParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.StochasticGradientDescentParameters)
}

void StochasticGradientDescentParameters::SharedCtor() {
}

StochasticGradientDescentParameters::~StochasticGradientDescentParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.StochasticGradientDescentParameters)
  SharedDtor();
}

void StochasticGradientDescentParameters::SharedDtor() {
}

void StochasticGradientDescentParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StochasticGradientDescentParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StochasticGradientDescentParameters& StochasticGradientDescentParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StochasticGradientDescentParameters.base);
  return *internal_default_instance();
}


void StochasticGradientDescentParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.StochasticGradientDescentParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StochasticGradientDescentParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.StochasticGradientDescentParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.StochasticGradientDescentParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.StochasticGradientDescentParameters)
  return false;
#undef DO_
}

void StochasticGradientDescentParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.StochasticGradientDescentParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.StochasticGradientDescentParameters)
}

::google::protobuf::uint8* StochasticGradientDescentParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.StochasticGradientDescentParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.StochasticGradientDescentParameters)
  return target;
}

size_t StochasticGradientDescentParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.StochasticGradientDescentParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StochasticGradientDescentParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.StochasticGradientDescentParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const StochasticGradientDescentParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StochasticGradientDescentParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.StochasticGradientDescentParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.StochasticGradientDescentParameters)
    MergeFrom(*source);
  }
}

void StochasticGradientDescentParameters::MergeFrom(const StochasticGradientDescentParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.StochasticGradientDescentParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StochasticGradientDescentParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.StochasticGradientDescentParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StochasticGradientDescentParameters::CopyFrom(const StochasticGradientDescentParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.StochasticGradientDescentParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StochasticGradientDescentParameters::IsInitialized() const {
  return true;
}

void StochasticGradientDescentParameters::Swap(StochasticGradientDescentParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StochasticGradientDescentParameters::InternalSwap(StochasticGradientDescentParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StochasticGradientDescentParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FtrlParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FtrlParameters::kL1FieldNumber;
const int FtrlParameters::kL2FieldNumber;
const int FtrlParameters::kLrPowerFieldNumber;
const int FtrlParameters::kBetaFieldNumber;
const int FtrlParameters::kMultiplyLinearByLrFieldNumber;
const int FtrlParameters::kAllowZeroAccumulatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FtrlParameters::FtrlParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_FtrlParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.FtrlParameters)
}
FtrlParameters::FtrlParameters(const FtrlParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&l1_, &from.l1_,
    static_cast<size_t>(reinterpret_cast<char*>(&allow_zero_accumulator_) -
    reinterpret_cast<char*>(&l1_)) + sizeof(allow_zero_accumulator_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.FtrlParameters)
}

void FtrlParameters::SharedCtor() {
  ::memset(&l1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_zero_accumulator_) -
      reinterpret_cast<char*>(&l1_)) + sizeof(allow_zero_accumulator_));
}

FtrlParameters::~FtrlParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.FtrlParameters)
  SharedDtor();
}

void FtrlParameters::SharedDtor() {
}

void FtrlParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FtrlParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FtrlParameters& FtrlParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_FtrlParameters.base);
  return *internal_default_instance();
}


void FtrlParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.FtrlParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&l1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_zero_accumulator_) -
      reinterpret_cast<char*>(&l1_)) + sizeof(allow_zero_accumulator_));
  _internal_metadata_.Clear();
}

bool FtrlParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.FtrlParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float l1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float l2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lr_power = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lr_power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool multiply_linear_by_lr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &multiply_linear_by_lr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allow_zero_accumulator = 8 [deprecated = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_zero_accumulator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.FtrlParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.FtrlParameters)
  return false;
#undef DO_
}

void FtrlParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.FtrlParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l1 = 1;
  if (this->l1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->l1(), output);
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->l2(), output);
  }

  // float lr_power = 3;
  if (this->lr_power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lr_power(), output);
  }

  // bool multiply_linear_by_lr = 6;
  if (this->multiply_linear_by_lr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->multiply_linear_by_lr(), output);
  }

  // float beta = 7;
  if (this->beta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->beta(), output);
  }

  // bool allow_zero_accumulator = 8 [deprecated = true];
  if (this->allow_zero_accumulator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->allow_zero_accumulator(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.FtrlParameters)
}

::google::protobuf::uint8* FtrlParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.FtrlParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l1 = 1;
  if (this->l1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->l1(), target);
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->l2(), target);
  }

  // float lr_power = 3;
  if (this->lr_power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lr_power(), target);
  }

  // bool multiply_linear_by_lr = 6;
  if (this->multiply_linear_by_lr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->multiply_linear_by_lr(), target);
  }

  // float beta = 7;
  if (this->beta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->beta(), target);
  }

  // bool allow_zero_accumulator = 8 [deprecated = true];
  if (this->allow_zero_accumulator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->allow_zero_accumulator(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.FtrlParameters)
  return target;
}

size_t FtrlParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.FtrlParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float l1 = 1;
  if (this->l1() != 0) {
    total_size += 1 + 4;
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    total_size += 1 + 4;
  }

  // float lr_power = 3;
  if (this->lr_power() != 0) {
    total_size += 1 + 4;
  }

  // float beta = 7;
  if (this->beta() != 0) {
    total_size += 1 + 4;
  }

  // bool multiply_linear_by_lr = 6;
  if (this->multiply_linear_by_lr() != 0) {
    total_size += 1 + 1;
  }

  // bool allow_zero_accumulator = 8 [deprecated = true];
  if (this->allow_zero_accumulator() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FtrlParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.FtrlParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const FtrlParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FtrlParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.FtrlParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.FtrlParameters)
    MergeFrom(*source);
  }
}

void FtrlParameters::MergeFrom(const FtrlParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.FtrlParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.l1() != 0) {
    set_l1(from.l1());
  }
  if (from.l2() != 0) {
    set_l2(from.l2());
  }
  if (from.lr_power() != 0) {
    set_lr_power(from.lr_power());
  }
  if (from.beta() != 0) {
    set_beta(from.beta());
  }
  if (from.multiply_linear_by_lr() != 0) {
    set_multiply_linear_by_lr(from.multiply_linear_by_lr());
  }
  if (from.allow_zero_accumulator() != 0) {
    set_allow_zero_accumulator(from.allow_zero_accumulator());
  }
}

void FtrlParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.FtrlParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FtrlParameters::CopyFrom(const FtrlParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.FtrlParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FtrlParameters::IsInitialized() const {
  return true;
}

void FtrlParameters::Swap(FtrlParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FtrlParameters::InternalSwap(FtrlParameters* other) {
  using std::swap;
  swap(l1_, other->l1_);
  swap(l2_, other->l2_);
  swap(lr_power_, other->lr_power_);
  swap(beta_, other->beta_);
  swap(multiply_linear_by_lr_, other->multiply_linear_by_lr_);
  swap(allow_zero_accumulator_, other->allow_zero_accumulator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FtrlParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdamParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdamParameters::kBeta1FieldNumber;
const int AdamParameters::kBeta2FieldNumber;
const int AdamParameters::kEpsilonFieldNumber;
const int AdamParameters::kUseNonLazyAdamFieldNumber;
const int AdamParameters::kUseSumInsideSqrtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdamParameters::AdamParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdamParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.AdamParameters)
}
AdamParameters::AdamParameters(const AdamParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&beta1_, &from.beta1_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_sum_inside_sqrt_) -
    reinterpret_cast<char*>(&beta1_)) + sizeof(use_sum_inside_sqrt_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.AdamParameters)
}

void AdamParameters::SharedCtor() {
  ::memset(&beta1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_sum_inside_sqrt_) -
      reinterpret_cast<char*>(&beta1_)) + sizeof(use_sum_inside_sqrt_));
}

AdamParameters::~AdamParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.AdamParameters)
  SharedDtor();
}

void AdamParameters::SharedDtor() {
}

void AdamParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdamParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdamParameters& AdamParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdamParameters.base);
  return *internal_default_instance();
}


void AdamParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.AdamParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&beta1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_sum_inside_sqrt_) -
      reinterpret_cast<char*>(&beta1_)) + sizeof(use_sum_inside_sqrt_));
  _internal_metadata_.Clear();
}

bool AdamParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.AdamParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float beta1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float epsilon = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_non_lazy_adam = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_non_lazy_adam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_sum_inside_sqrt = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_sum_inside_sqrt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.AdamParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.AdamParameters)
  return false;
#undef DO_
}

void AdamParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.AdamParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float beta1 = 3;
  if (this->beta1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->beta1(), output);
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->beta2(), output);
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->epsilon(), output);
  }

  // bool use_non_lazy_adam = 8;
  if (this->use_non_lazy_adam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->use_non_lazy_adam(), output);
  }

  // bool use_sum_inside_sqrt = 10;
  if (this->use_sum_inside_sqrt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->use_sum_inside_sqrt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.AdamParameters)
}

::google::protobuf::uint8* AdamParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.AdamParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float beta1 = 3;
  if (this->beta1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->beta1(), target);
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->beta2(), target);
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->epsilon(), target);
  }

  // bool use_non_lazy_adam = 8;
  if (this->use_non_lazy_adam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->use_non_lazy_adam(), target);
  }

  // bool use_sum_inside_sqrt = 10;
  if (this->use_sum_inside_sqrt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->use_sum_inside_sqrt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.AdamParameters)
  return target;
}

size_t AdamParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.AdamParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float beta1 = 3;
  if (this->beta1() != 0) {
    total_size += 1 + 4;
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    total_size += 1 + 4;
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    total_size += 1 + 4;
  }

  // bool use_non_lazy_adam = 8;
  if (this->use_non_lazy_adam() != 0) {
    total_size += 1 + 1;
  }

  // bool use_sum_inside_sqrt = 10;
  if (this->use_sum_inside_sqrt() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdamParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.AdamParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AdamParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdamParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.AdamParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.AdamParameters)
    MergeFrom(*source);
  }
}

void AdamParameters::MergeFrom(const AdamParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.AdamParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.beta1() != 0) {
    set_beta1(from.beta1());
  }
  if (from.beta2() != 0) {
    set_beta2(from.beta2());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
  if (from.use_non_lazy_adam() != 0) {
    set_use_non_lazy_adam(from.use_non_lazy_adam());
  }
  if (from.use_sum_inside_sqrt() != 0) {
    set_use_sum_inside_sqrt(from.use_sum_inside_sqrt());
  }
}

void AdamParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.AdamParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdamParameters::CopyFrom(const AdamParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.AdamParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdamParameters::IsInitialized() const {
  return true;
}

void AdamParameters::Swap(AdamParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdamParameters::InternalSwap(AdamParameters* other) {
  using std::swap;
  swap(beta1_, other->beta1_);
  swap(beta2_, other->beta2_);
  swap(epsilon_, other->epsilon_);
  swap(use_non_lazy_adam_, other->use_non_lazy_adam_);
  swap(use_sum_inside_sqrt_, other->use_sum_inside_sqrt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdamParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MomentumParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MomentumParameters::kMomentumFieldNumber;
const int MomentumParameters::kUseNesterovFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MomentumParameters::MomentumParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_MomentumParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.MomentumParameters)
}
MomentumParameters::MomentumParameters(const MomentumParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&momentum_, &from.momentum_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_nesterov_) -
    reinterpret_cast<char*>(&momentum_)) + sizeof(use_nesterov_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.MomentumParameters)
}

void MomentumParameters::SharedCtor() {
  ::memset(&momentum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_nesterov_) -
      reinterpret_cast<char*>(&momentum_)) + sizeof(use_nesterov_));
}

MomentumParameters::~MomentumParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.MomentumParameters)
  SharedDtor();
}

void MomentumParameters::SharedDtor() {
}

void MomentumParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MomentumParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MomentumParameters& MomentumParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_MomentumParameters.base);
  return *internal_default_instance();
}


void MomentumParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.MomentumParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&momentum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_nesterov_) -
      reinterpret_cast<char*>(&momentum_)) + sizeof(use_nesterov_));
  _internal_metadata_.Clear();
}

bool MomentumParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.MomentumParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float momentum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &momentum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_nesterov = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_nesterov_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.MomentumParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.MomentumParameters)
  return false;
#undef DO_
}

void MomentumParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.MomentumParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float momentum = 1;
  if (this->momentum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->momentum(), output);
  }

  // bool use_nesterov = 2;
  if (this->use_nesterov() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_nesterov(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.MomentumParameters)
}

::google::protobuf::uint8* MomentumParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.MomentumParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float momentum = 1;
  if (this->momentum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->momentum(), target);
  }

  // bool use_nesterov = 2;
  if (this->use_nesterov() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->use_nesterov(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.MomentumParameters)
  return target;
}

size_t MomentumParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.MomentumParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float momentum = 1;
  if (this->momentum() != 0) {
    total_size += 1 + 4;
  }

  // bool use_nesterov = 2;
  if (this->use_nesterov() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MomentumParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.MomentumParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const MomentumParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MomentumParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.MomentumParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.MomentumParameters)
    MergeFrom(*source);
  }
}

void MomentumParameters::MergeFrom(const MomentumParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.MomentumParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.momentum() != 0) {
    set_momentum(from.momentum());
  }
  if (from.use_nesterov() != 0) {
    set_use_nesterov(from.use_nesterov());
  }
}

void MomentumParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.MomentumParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MomentumParameters::CopyFrom(const MomentumParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.MomentumParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MomentumParameters::IsInitialized() const {
  return true;
}

void MomentumParameters::Swap(MomentumParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MomentumParameters::InternalSwap(MomentumParameters* other) {
  using std::swap;
  swap(momentum_, other->momentum_);
  swap(use_nesterov_, other->use_nesterov_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MomentumParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RmsPropParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RmsPropParameters::kRhoFieldNumber;
const int RmsPropParameters::kMomentumFieldNumber;
const int RmsPropParameters::kEpsilonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RmsPropParameters::RmsPropParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_RmsPropParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.RmsPropParameters)
}
RmsPropParameters::RmsPropParameters(const RmsPropParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rho_, &from.rho_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsilon_) -
    reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.RmsPropParameters)
}

void RmsPropParameters::SharedCtor() {
  ::memset(&rho_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
}

RmsPropParameters::~RmsPropParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.RmsPropParameters)
  SharedDtor();
}

void RmsPropParameters::SharedDtor() {
}

void RmsPropParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RmsPropParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RmsPropParameters& RmsPropParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_RmsPropParameters.base);
  return *internal_default_instance();
}


void RmsPropParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.RmsPropParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rho_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
  _internal_metadata_.Clear();
}

bool RmsPropParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.RmsPropParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float rho = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rho_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float momentum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &momentum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float epsilon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.RmsPropParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.RmsPropParameters)
  return false;
#undef DO_
}

void RmsPropParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.RmsPropParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rho = 1;
  if (this->rho() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->rho(), output);
  }

  // float momentum = 2;
  if (this->momentum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->momentum(), output);
  }

  // float epsilon = 3;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->epsilon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.RmsPropParameters)
}

::google::protobuf::uint8* RmsPropParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.RmsPropParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rho = 1;
  if (this->rho() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->rho(), target);
  }

  // float momentum = 2;
  if (this->momentum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->momentum(), target);
  }

  // float epsilon = 3;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->epsilon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.RmsPropParameters)
  return target;
}

size_t RmsPropParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.RmsPropParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float rho = 1;
  if (this->rho() != 0) {
    total_size += 1 + 4;
  }

  // float momentum = 2;
  if (this->momentum() != 0) {
    total_size += 1 + 4;
  }

  // float epsilon = 3;
  if (this->epsilon() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RmsPropParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.RmsPropParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RmsPropParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RmsPropParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.RmsPropParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.RmsPropParameters)
    MergeFrom(*source);
  }
}

void RmsPropParameters::MergeFrom(const RmsPropParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.RmsPropParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rho() != 0) {
    set_rho(from.rho());
  }
  if (from.momentum() != 0) {
    set_momentum(from.momentum());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
}

void RmsPropParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.RmsPropParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RmsPropParameters::CopyFrom(const RmsPropParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.RmsPropParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RmsPropParameters::IsInitialized() const {
  return true;
}

void RmsPropParameters::Swap(RmsPropParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RmsPropParameters::InternalSwap(RmsPropParameters* other) {
  using std::swap;
  swap(rho_, other->rho_);
  swap(momentum_, other->momentum_);
  swap(epsilon_, other->epsilon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RmsPropParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CenteredRmsPropParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CenteredRmsPropParameters::kRhoFieldNumber;
const int CenteredRmsPropParameters::kMomentumFieldNumber;
const int CenteredRmsPropParameters::kEpsilonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CenteredRmsPropParameters::CenteredRmsPropParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_CenteredRmsPropParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.CenteredRmsPropParameters)
}
CenteredRmsPropParameters::CenteredRmsPropParameters(const CenteredRmsPropParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rho_, &from.rho_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsilon_) -
    reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.CenteredRmsPropParameters)
}

void CenteredRmsPropParameters::SharedCtor() {
  ::memset(&rho_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
}

CenteredRmsPropParameters::~CenteredRmsPropParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.CenteredRmsPropParameters)
  SharedDtor();
}

void CenteredRmsPropParameters::SharedDtor() {
}

void CenteredRmsPropParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CenteredRmsPropParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CenteredRmsPropParameters& CenteredRmsPropParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_CenteredRmsPropParameters.base);
  return *internal_default_instance();
}


void CenteredRmsPropParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.CenteredRmsPropParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rho_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
  _internal_metadata_.Clear();
}

bool CenteredRmsPropParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.CenteredRmsPropParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float rho = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rho_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float momentum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &momentum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float epsilon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.CenteredRmsPropParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.CenteredRmsPropParameters)
  return false;
#undef DO_
}

void CenteredRmsPropParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.CenteredRmsPropParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rho = 1;
  if (this->rho() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->rho(), output);
  }

  // float momentum = 2;
  if (this->momentum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->momentum(), output);
  }

  // float epsilon = 3;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->epsilon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.CenteredRmsPropParameters)
}

::google::protobuf::uint8* CenteredRmsPropParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.CenteredRmsPropParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rho = 1;
  if (this->rho() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->rho(), target);
  }

  // float momentum = 2;
  if (this->momentum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->momentum(), target);
  }

  // float epsilon = 3;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->epsilon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.CenteredRmsPropParameters)
  return target;
}

size_t CenteredRmsPropParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.CenteredRmsPropParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float rho = 1;
  if (this->rho() != 0) {
    total_size += 1 + 4;
  }

  // float momentum = 2;
  if (this->momentum() != 0) {
    total_size += 1 + 4;
  }

  // float epsilon = 3;
  if (this->epsilon() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CenteredRmsPropParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.CenteredRmsPropParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const CenteredRmsPropParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CenteredRmsPropParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.CenteredRmsPropParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.CenteredRmsPropParameters)
    MergeFrom(*source);
  }
}

void CenteredRmsPropParameters::MergeFrom(const CenteredRmsPropParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.CenteredRmsPropParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rho() != 0) {
    set_rho(from.rho());
  }
  if (from.momentum() != 0) {
    set_momentum(from.momentum());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
}

void CenteredRmsPropParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.CenteredRmsPropParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CenteredRmsPropParameters::CopyFrom(const CenteredRmsPropParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.CenteredRmsPropParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CenteredRmsPropParameters::IsInitialized() const {
  return true;
}

void CenteredRmsPropParameters::Swap(CenteredRmsPropParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CenteredRmsPropParameters::InternalSwap(CenteredRmsPropParameters* other) {
  using std::swap;
  swap(rho_, other->rho_);
  swap(momentum_, other->momentum_);
  swap(epsilon_, other->epsilon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CenteredRmsPropParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MdlAdagradLightParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MdlAdagradLightParameters::kL2FieldNumber;
const int MdlAdagradLightParameters::kLrPowerFieldNumber;
const int MdlAdagradLightParameters::kMinServableMdlBenefitFieldNumber;
const int MdlAdagradLightParameters::kMdlMixInMarginFieldNumber;
const int MdlAdagradLightParameters::kMdlBenefitRampupCoeffFieldNumber;
const int MdlAdagradLightParameters::kMdlMinWeightFieldNumber;
const int MdlAdagradLightParameters::kBenefitRevisitScaleFieldNumber;
const int MdlAdagradLightParameters::kMaxEventBenefitFieldNumber;
const int MdlAdagradLightParameters::kMaxTotalBenefitFieldNumber;
const int MdlAdagradLightParameters::kMdlHardLimitFieldNumber;
const int MdlAdagradLightParameters::kHardLimitMinBenefitFieldNumber;
const int MdlAdagradLightParameters::kMdlRegularizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MdlAdagradLightParameters::MdlAdagradLightParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_MdlAdagradLightParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.MdlAdagradLightParameters)
}
MdlAdagradLightParameters::MdlAdagradLightParameters(const MdlAdagradLightParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&l2_, &from.l2_,
    static_cast<size_t>(reinterpret_cast<char*>(&mdl_regularize_) -
    reinterpret_cast<char*>(&l2_)) + sizeof(mdl_regularize_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.MdlAdagradLightParameters)
}

void MdlAdagradLightParameters::SharedCtor() {
  ::memset(&l2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mdl_regularize_) -
      reinterpret_cast<char*>(&l2_)) + sizeof(mdl_regularize_));
}

MdlAdagradLightParameters::~MdlAdagradLightParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.MdlAdagradLightParameters)
  SharedDtor();
}

void MdlAdagradLightParameters::SharedDtor() {
}

void MdlAdagradLightParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MdlAdagradLightParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MdlAdagradLightParameters& MdlAdagradLightParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_MdlAdagradLightParameters.base);
  return *internal_default_instance();
}


void MdlAdagradLightParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.MdlAdagradLightParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&l2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mdl_regularize_) -
      reinterpret_cast<char*>(&l2_)) + sizeof(mdl_regularize_));
  _internal_metadata_.Clear();
}

bool MdlAdagradLightParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.MdlAdagradLightParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float l2 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lr_power = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lr_power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float min_servable_mdl_benefit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_servable_mdl_benefit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float mdl_mix_in_margin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mdl_mix_in_margin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float mdl_benefit_rampup_coeff = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mdl_benefit_rampup_coeff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float mdl_min_weight = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mdl_min_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float benefit_revisit_scale = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &benefit_revisit_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_event_benefit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_event_benefit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_total_benefit = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_total_benefit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float mdl_hard_limit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mdl_hard_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hard_limit_min_benefit = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hard_limit_min_benefit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool mdl_regularize = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mdl_regularize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.MdlAdagradLightParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.MdlAdagradLightParameters)
  return false;
#undef DO_
}

void MdlAdagradLightParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.MdlAdagradLightParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l2 = 1;
  if (this->l2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->l2(), output);
  }

  // float lr_power = 2;
  if (this->lr_power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lr_power(), output);
  }

  // float min_servable_mdl_benefit = 3;
  if (this->min_servable_mdl_benefit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->min_servable_mdl_benefit(), output);
  }

  // float mdl_mix_in_margin = 4;
  if (this->mdl_mix_in_margin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->mdl_mix_in_margin(), output);
  }

  // float mdl_benefit_rampup_coeff = 5;
  if (this->mdl_benefit_rampup_coeff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->mdl_benefit_rampup_coeff(), output);
  }

  // float mdl_min_weight = 6;
  if (this->mdl_min_weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->mdl_min_weight(), output);
  }

  // float benefit_revisit_scale = 7;
  if (this->benefit_revisit_scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->benefit_revisit_scale(), output);
  }

  // float max_event_benefit = 8;
  if (this->max_event_benefit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->max_event_benefit(), output);
  }

  // float max_total_benefit = 9;
  if (this->max_total_benefit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->max_total_benefit(), output);
  }

  // float mdl_hard_limit = 10;
  if (this->mdl_hard_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->mdl_hard_limit(), output);
  }

  // bool hard_limit_min_benefit = 11;
  if (this->hard_limit_min_benefit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->hard_limit_min_benefit(), output);
  }

  // bool mdl_regularize = 12;
  if (this->mdl_regularize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->mdl_regularize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.MdlAdagradLightParameters)
}

::google::protobuf::uint8* MdlAdagradLightParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.MdlAdagradLightParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l2 = 1;
  if (this->l2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->l2(), target);
  }

  // float lr_power = 2;
  if (this->lr_power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lr_power(), target);
  }

  // float min_servable_mdl_benefit = 3;
  if (this->min_servable_mdl_benefit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->min_servable_mdl_benefit(), target);
  }

  // float mdl_mix_in_margin = 4;
  if (this->mdl_mix_in_margin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->mdl_mix_in_margin(), target);
  }

  // float mdl_benefit_rampup_coeff = 5;
  if (this->mdl_benefit_rampup_coeff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->mdl_benefit_rampup_coeff(), target);
  }

  // float mdl_min_weight = 6;
  if (this->mdl_min_weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->mdl_min_weight(), target);
  }

  // float benefit_revisit_scale = 7;
  if (this->benefit_revisit_scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->benefit_revisit_scale(), target);
  }

  // float max_event_benefit = 8;
  if (this->max_event_benefit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->max_event_benefit(), target);
  }

  // float max_total_benefit = 9;
  if (this->max_total_benefit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->max_total_benefit(), target);
  }

  // float mdl_hard_limit = 10;
  if (this->mdl_hard_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->mdl_hard_limit(), target);
  }

  // bool hard_limit_min_benefit = 11;
  if (this->hard_limit_min_benefit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->hard_limit_min_benefit(), target);
  }

  // bool mdl_regularize = 12;
  if (this->mdl_regularize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->mdl_regularize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.MdlAdagradLightParameters)
  return target;
}

size_t MdlAdagradLightParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.MdlAdagradLightParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float l2 = 1;
  if (this->l2() != 0) {
    total_size += 1 + 4;
  }

  // float lr_power = 2;
  if (this->lr_power() != 0) {
    total_size += 1 + 4;
  }

  // float min_servable_mdl_benefit = 3;
  if (this->min_servable_mdl_benefit() != 0) {
    total_size += 1 + 4;
  }

  // float mdl_mix_in_margin = 4;
  if (this->mdl_mix_in_margin() != 0) {
    total_size += 1 + 4;
  }

  // float mdl_benefit_rampup_coeff = 5;
  if (this->mdl_benefit_rampup_coeff() != 0) {
    total_size += 1 + 4;
  }

  // float mdl_min_weight = 6;
  if (this->mdl_min_weight() != 0) {
    total_size += 1 + 4;
  }

  // float benefit_revisit_scale = 7;
  if (this->benefit_revisit_scale() != 0) {
    total_size += 1 + 4;
  }

  // float max_event_benefit = 8;
  if (this->max_event_benefit() != 0) {
    total_size += 1 + 4;
  }

  // float max_total_benefit = 9;
  if (this->max_total_benefit() != 0) {
    total_size += 1 + 4;
  }

  // float mdl_hard_limit = 10;
  if (this->mdl_hard_limit() != 0) {
    total_size += 1 + 4;
  }

  // bool hard_limit_min_benefit = 11;
  if (this->hard_limit_min_benefit() != 0) {
    total_size += 1 + 1;
  }

  // bool mdl_regularize = 12;
  if (this->mdl_regularize() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MdlAdagradLightParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.MdlAdagradLightParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const MdlAdagradLightParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MdlAdagradLightParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.MdlAdagradLightParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.MdlAdagradLightParameters)
    MergeFrom(*source);
  }
}

void MdlAdagradLightParameters::MergeFrom(const MdlAdagradLightParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.MdlAdagradLightParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.l2() != 0) {
    set_l2(from.l2());
  }
  if (from.lr_power() != 0) {
    set_lr_power(from.lr_power());
  }
  if (from.min_servable_mdl_benefit() != 0) {
    set_min_servable_mdl_benefit(from.min_servable_mdl_benefit());
  }
  if (from.mdl_mix_in_margin() != 0) {
    set_mdl_mix_in_margin(from.mdl_mix_in_margin());
  }
  if (from.mdl_benefit_rampup_coeff() != 0) {
    set_mdl_benefit_rampup_coeff(from.mdl_benefit_rampup_coeff());
  }
  if (from.mdl_min_weight() != 0) {
    set_mdl_min_weight(from.mdl_min_weight());
  }
  if (from.benefit_revisit_scale() != 0) {
    set_benefit_revisit_scale(from.benefit_revisit_scale());
  }
  if (from.max_event_benefit() != 0) {
    set_max_event_benefit(from.max_event_benefit());
  }
  if (from.max_total_benefit() != 0) {
    set_max_total_benefit(from.max_total_benefit());
  }
  if (from.mdl_hard_limit() != 0) {
    set_mdl_hard_limit(from.mdl_hard_limit());
  }
  if (from.hard_limit_min_benefit() != 0) {
    set_hard_limit_min_benefit(from.hard_limit_min_benefit());
  }
  if (from.mdl_regularize() != 0) {
    set_mdl_regularize(from.mdl_regularize());
  }
}

void MdlAdagradLightParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.MdlAdagradLightParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MdlAdagradLightParameters::CopyFrom(const MdlAdagradLightParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.MdlAdagradLightParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MdlAdagradLightParameters::IsInitialized() const {
  return true;
}

void MdlAdagradLightParameters::Swap(MdlAdagradLightParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MdlAdagradLightParameters::InternalSwap(MdlAdagradLightParameters* other) {
  using std::swap;
  swap(l2_, other->l2_);
  swap(lr_power_, other->lr_power_);
  swap(min_servable_mdl_benefit_, other->min_servable_mdl_benefit_);
  swap(mdl_mix_in_margin_, other->mdl_mix_in_margin_);
  swap(mdl_benefit_rampup_coeff_, other->mdl_benefit_rampup_coeff_);
  swap(mdl_min_weight_, other->mdl_min_weight_);
  swap(benefit_revisit_scale_, other->benefit_revisit_scale_);
  swap(max_event_benefit_, other->max_event_benefit_);
  swap(max_total_benefit_, other->max_total_benefit_);
  swap(mdl_hard_limit_, other->mdl_hard_limit_);
  swap(hard_limit_min_benefit_, other->hard_limit_min_benefit_);
  swap(mdl_regularize_, other->mdl_regularize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MdlAdagradLightParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdadeltaParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdadeltaParameters::kRhoFieldNumber;
const int AdadeltaParameters::kEpsilonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdadeltaParameters::AdadeltaParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdadeltaParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.AdadeltaParameters)
}
AdadeltaParameters::AdadeltaParameters(const AdadeltaParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rho_, &from.rho_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsilon_) -
    reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.AdadeltaParameters)
}

void AdadeltaParameters::SharedCtor() {
  ::memset(&rho_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
}

AdadeltaParameters::~AdadeltaParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.AdadeltaParameters)
  SharedDtor();
}

void AdadeltaParameters::SharedDtor() {
}

void AdadeltaParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdadeltaParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdadeltaParameters& AdadeltaParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AdadeltaParameters.base);
  return *internal_default_instance();
}


void AdadeltaParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.AdadeltaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rho_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&rho_)) + sizeof(epsilon_));
  _internal_metadata_.Clear();
}

bool AdadeltaParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.AdadeltaParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float rho = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rho_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float epsilon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.AdadeltaParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.AdadeltaParameters)
  return false;
#undef DO_
}

void AdadeltaParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.AdadeltaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rho = 1;
  if (this->rho() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->rho(), output);
  }

  // float epsilon = 2;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->epsilon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.AdadeltaParameters)
}

::google::protobuf::uint8* AdadeltaParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.AdadeltaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rho = 1;
  if (this->rho() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->rho(), target);
  }

  // float epsilon = 2;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->epsilon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.AdadeltaParameters)
  return target;
}

size_t AdadeltaParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.AdadeltaParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float rho = 1;
  if (this->rho() != 0) {
    total_size += 1 + 4;
  }

  // float epsilon = 2;
  if (this->epsilon() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdadeltaParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.AdadeltaParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AdadeltaParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdadeltaParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.AdadeltaParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.AdadeltaParameters)
    MergeFrom(*source);
  }
}

void AdadeltaParameters::MergeFrom(const AdadeltaParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.AdadeltaParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rho() != 0) {
    set_rho(from.rho());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
}

void AdadeltaParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.AdadeltaParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdadeltaParameters::CopyFrom(const AdadeltaParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.AdadeltaParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdadeltaParameters::IsInitialized() const {
  return true;
}

void AdadeltaParameters::Swap(AdadeltaParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdadeltaParameters::InternalSwap(AdadeltaParameters* other) {
  using std::swap;
  swap(rho_, other->rho_);
  swap(epsilon_, other->epsilon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdadeltaParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProximalAdagradParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProximalAdagradParameters::kL1FieldNumber;
const int ProximalAdagradParameters::kL2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProximalAdagradParameters::ProximalAdagradParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ProximalAdagradParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.ProximalAdagradParameters)
}
ProximalAdagradParameters::ProximalAdagradParameters(const ProximalAdagradParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&l1_, &from.l1_,
    static_cast<size_t>(reinterpret_cast<char*>(&l2_) -
    reinterpret_cast<char*>(&l1_)) + sizeof(l2_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.ProximalAdagradParameters)
}

void ProximalAdagradParameters::SharedCtor() {
  ::memset(&l1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&l2_) -
      reinterpret_cast<char*>(&l1_)) + sizeof(l2_));
}

ProximalAdagradParameters::~ProximalAdagradParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.ProximalAdagradParameters)
  SharedDtor();
}

void ProximalAdagradParameters::SharedDtor() {
}

void ProximalAdagradParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProximalAdagradParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProximalAdagradParameters& ProximalAdagradParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ProximalAdagradParameters.base);
  return *internal_default_instance();
}


void ProximalAdagradParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.ProximalAdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&l1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&l2_) -
      reinterpret_cast<char*>(&l1_)) + sizeof(l2_));
  _internal_metadata_.Clear();
}

bool ProximalAdagradParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.ProximalAdagradParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float l1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float l2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.ProximalAdagradParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.ProximalAdagradParameters)
  return false;
#undef DO_
}

void ProximalAdagradParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.ProximalAdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l1 = 1;
  if (this->l1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->l1(), output);
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->l2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.ProximalAdagradParameters)
}

::google::protobuf::uint8* ProximalAdagradParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.ProximalAdagradParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l1 = 1;
  if (this->l1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->l1(), target);
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->l2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.ProximalAdagradParameters)
  return target;
}

size_t ProximalAdagradParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.ProximalAdagradParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float l1 = 1;
  if (this->l1() != 0) {
    total_size += 1 + 4;
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProximalAdagradParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.ProximalAdagradParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const ProximalAdagradParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProximalAdagradParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.ProximalAdagradParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.ProximalAdagradParameters)
    MergeFrom(*source);
  }
}

void ProximalAdagradParameters::MergeFrom(const ProximalAdagradParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.ProximalAdagradParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.l1() != 0) {
    set_l1(from.l1());
  }
  if (from.l2() != 0) {
    set_l2(from.l2());
  }
}

void ProximalAdagradParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.ProximalAdagradParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProximalAdagradParameters::CopyFrom(const ProximalAdagradParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.ProximalAdagradParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProximalAdagradParameters::IsInitialized() const {
  return true;
}

void ProximalAdagradParameters::Swap(ProximalAdagradParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProximalAdagradParameters::InternalSwap(ProximalAdagradParameters* other) {
  using std::swap;
  swap(l1_, other->l1_);
  swap(l2_, other->l2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProximalAdagradParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnlineYogiParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineYogiParameters::kL1FieldNumber;
const int OnlineYogiParameters::kL2FieldNumber;
const int OnlineYogiParameters::kBeta2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineYogiParameters::OnlineYogiParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_OnlineYogiParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.OnlineYogiParameters)
}
OnlineYogiParameters::OnlineYogiParameters(const OnlineYogiParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&l1_, &from.l1_,
    static_cast<size_t>(reinterpret_cast<char*>(&beta2_) -
    reinterpret_cast<char*>(&l1_)) + sizeof(beta2_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.OnlineYogiParameters)
}

void OnlineYogiParameters::SharedCtor() {
  ::memset(&l1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beta2_) -
      reinterpret_cast<char*>(&l1_)) + sizeof(beta2_));
}

OnlineYogiParameters::~OnlineYogiParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.OnlineYogiParameters)
  SharedDtor();
}

void OnlineYogiParameters::SharedDtor() {
}

void OnlineYogiParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OnlineYogiParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlineYogiParameters& OnlineYogiParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_OnlineYogiParameters.base);
  return *internal_default_instance();
}


void OnlineYogiParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.OnlineYogiParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&l1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beta2_) -
      reinterpret_cast<char*>(&l1_)) + sizeof(beta2_));
  _internal_metadata_.Clear();
}

bool OnlineYogiParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.OnlineYogiParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float l1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float l2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.OnlineYogiParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.OnlineYogiParameters)
  return false;
#undef DO_
}

void OnlineYogiParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.OnlineYogiParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l1 = 1;
  if (this->l1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->l1(), output);
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->l2(), output);
  }

  // float beta2 = 3;
  if (this->beta2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->beta2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.OnlineYogiParameters)
}

::google::protobuf::uint8* OnlineYogiParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.OnlineYogiParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l1 = 1;
  if (this->l1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->l1(), target);
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->l2(), target);
  }

  // float beta2 = 3;
  if (this->beta2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->beta2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.OnlineYogiParameters)
  return target;
}

size_t OnlineYogiParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.OnlineYogiParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float l1 = 1;
  if (this->l1() != 0) {
    total_size += 1 + 4;
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    total_size += 1 + 4;
  }

  // float beta2 = 3;
  if (this->beta2() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnlineYogiParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.OnlineYogiParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineYogiParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlineYogiParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.OnlineYogiParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.OnlineYogiParameters)
    MergeFrom(*source);
  }
}

void OnlineYogiParameters::MergeFrom(const OnlineYogiParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.OnlineYogiParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.l1() != 0) {
    set_l1(from.l1());
  }
  if (from.l2() != 0) {
    set_l2(from.l2());
  }
  if (from.beta2() != 0) {
    set_beta2(from.beta2());
  }
}

void OnlineYogiParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.OnlineYogiParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineYogiParameters::CopyFrom(const OnlineYogiParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.OnlineYogiParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineYogiParameters::IsInitialized() const {
  return true;
}

void OnlineYogiParameters::Swap(OnlineYogiParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineYogiParameters::InternalSwap(OnlineYogiParameters* other) {
  using std::swap;
  swap(l1_, other->l1_);
  swap(l2_, other->l2_);
  swap(beta2_, other->beta2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OnlineYogiParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProximalYogiParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProximalYogiParameters::kL1FieldNumber;
const int ProximalYogiParameters::kL2FieldNumber;
const int ProximalYogiParameters::kBeta1FieldNumber;
const int ProximalYogiParameters::kBeta2FieldNumber;
const int ProximalYogiParameters::kEpsilonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProximalYogiParameters::ProximalYogiParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ProximalYogiParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.ProximalYogiParameters)
}
ProximalYogiParameters::ProximalYogiParameters(const ProximalYogiParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&l1_, &from.l1_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsilon_) -
    reinterpret_cast<char*>(&l1_)) + sizeof(epsilon_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.ProximalYogiParameters)
}

void ProximalYogiParameters::SharedCtor() {
  ::memset(&l1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&l1_)) + sizeof(epsilon_));
}

ProximalYogiParameters::~ProximalYogiParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.ProximalYogiParameters)
  SharedDtor();
}

void ProximalYogiParameters::SharedDtor() {
}

void ProximalYogiParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProximalYogiParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProximalYogiParameters& ProximalYogiParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_ProximalYogiParameters.base);
  return *internal_default_instance();
}


void ProximalYogiParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.ProximalYogiParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&l1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsilon_) -
      reinterpret_cast<char*>(&l1_)) + sizeof(epsilon_));
  _internal_metadata_.Clear();
}

bool ProximalYogiParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.ProximalYogiParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float l1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float l2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float epsilon = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.ProximalYogiParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.ProximalYogiParameters)
  return false;
#undef DO_
}

void ProximalYogiParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.ProximalYogiParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l1 = 1;
  if (this->l1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->l1(), output);
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->l2(), output);
  }

  // float beta1 = 3;
  if (this->beta1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->beta1(), output);
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->beta2(), output);
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->epsilon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.ProximalYogiParameters)
}

::google::protobuf::uint8* ProximalYogiParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.ProximalYogiParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l1 = 1;
  if (this->l1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->l1(), target);
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->l2(), target);
  }

  // float beta1 = 3;
  if (this->beta1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->beta1(), target);
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->beta2(), target);
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->epsilon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.ProximalYogiParameters)
  return target;
}

size_t ProximalYogiParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.ProximalYogiParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float l1 = 1;
  if (this->l1() != 0) {
    total_size += 1 + 4;
  }

  // float l2 = 2;
  if (this->l2() != 0) {
    total_size += 1 + 4;
  }

  // float beta1 = 3;
  if (this->beta1() != 0) {
    total_size += 1 + 4;
  }

  // float beta2 = 4;
  if (this->beta2() != 0) {
    total_size += 1 + 4;
  }

  // float epsilon = 5;
  if (this->epsilon() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProximalYogiParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.ProximalYogiParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const ProximalYogiParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProximalYogiParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.ProximalYogiParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.ProximalYogiParameters)
    MergeFrom(*source);
  }
}

void ProximalYogiParameters::MergeFrom(const ProximalYogiParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.ProximalYogiParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.l1() != 0) {
    set_l1(from.l1());
  }
  if (from.l2() != 0) {
    set_l2(from.l2());
  }
  if (from.beta1() != 0) {
    set_beta1(from.beta1());
  }
  if (from.beta2() != 0) {
    set_beta2(from.beta2());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
}

void ProximalYogiParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.ProximalYogiParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProximalYogiParameters::CopyFrom(const ProximalYogiParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.ProximalYogiParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProximalYogiParameters::IsInitialized() const {
  return true;
}

void ProximalYogiParameters::Swap(ProximalYogiParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProximalYogiParameters::InternalSwap(ProximalYogiParameters* other) {
  using std::swap;
  swap(l1_, other->l1_);
  swap(l2_, other->l2_);
  swap(beta1_, other->beta1_);
  swap(beta2_, other->beta2_);
  swap(epsilon_, other->epsilon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProximalYogiParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrequencyEstimatorParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrequencyEstimatorParameters::kTauFieldNumber;
const int FrequencyEstimatorParameters::kMaxDeltaFieldNumber;
const int FrequencyEstimatorParameters::kOutlierThresholdFieldNumber;
const int FrequencyEstimatorParameters::kWeightExponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrequencyEstimatorParameters::FrequencyEstimatorParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_FrequencyEstimatorParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.FrequencyEstimatorParameters)
}
FrequencyEstimatorParameters::FrequencyEstimatorParameters(const FrequencyEstimatorParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tau_, &from.tau_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_exponent_) -
    reinterpret_cast<char*>(&tau_)) + sizeof(weight_exponent_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.FrequencyEstimatorParameters)
}

void FrequencyEstimatorParameters::SharedCtor() {
  ::memset(&tau_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_exponent_) -
      reinterpret_cast<char*>(&tau_)) + sizeof(weight_exponent_));
}

FrequencyEstimatorParameters::~FrequencyEstimatorParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.FrequencyEstimatorParameters)
  SharedDtor();
}

void FrequencyEstimatorParameters::SharedDtor() {
}

void FrequencyEstimatorParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FrequencyEstimatorParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrequencyEstimatorParameters& FrequencyEstimatorParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_FrequencyEstimatorParameters.base);
  return *internal_default_instance();
}


void FrequencyEstimatorParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.FrequencyEstimatorParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tau_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_exponent_) -
      reinterpret_cast<char*>(&tau_)) + sizeof(weight_exponent_));
  _internal_metadata_.Clear();
}

bool FrequencyEstimatorParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.FrequencyEstimatorParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float tau = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tau_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_delta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float outlier_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &outlier_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float weight_exponent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_exponent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.FrequencyEstimatorParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.FrequencyEstimatorParameters)
  return false;
#undef DO_
}

void FrequencyEstimatorParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.FrequencyEstimatorParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float tau = 1;
  if (this->tau() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->tau(), output);
  }

  // float max_delta = 2;
  if (this->max_delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->max_delta(), output);
  }

  // float outlier_threshold = 3;
  if (this->outlier_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->outlier_threshold(), output);
  }

  // float weight_exponent = 4;
  if (this->weight_exponent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->weight_exponent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.FrequencyEstimatorParameters)
}

::google::protobuf::uint8* FrequencyEstimatorParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.FrequencyEstimatorParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float tau = 1;
  if (this->tau() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->tau(), target);
  }

  // float max_delta = 2;
  if (this->max_delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->max_delta(), target);
  }

  // float outlier_threshold = 3;
  if (this->outlier_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->outlier_threshold(), target);
  }

  // float weight_exponent = 4;
  if (this->weight_exponent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->weight_exponent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.FrequencyEstimatorParameters)
  return target;
}

size_t FrequencyEstimatorParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.FrequencyEstimatorParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float tau = 1;
  if (this->tau() != 0) {
    total_size += 1 + 4;
  }

  // float max_delta = 2;
  if (this->max_delta() != 0) {
    total_size += 1 + 4;
  }

  // float outlier_threshold = 3;
  if (this->outlier_threshold() != 0) {
    total_size += 1 + 4;
  }

  // float weight_exponent = 4;
  if (this->weight_exponent() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrequencyEstimatorParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.FrequencyEstimatorParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const FrequencyEstimatorParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrequencyEstimatorParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.FrequencyEstimatorParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.FrequencyEstimatorParameters)
    MergeFrom(*source);
  }
}

void FrequencyEstimatorParameters::MergeFrom(const FrequencyEstimatorParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.FrequencyEstimatorParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tau() != 0) {
    set_tau(from.tau());
  }
  if (from.max_delta() != 0) {
    set_max_delta(from.max_delta());
  }
  if (from.outlier_threshold() != 0) {
    set_outlier_threshold(from.outlier_threshold());
  }
  if (from.weight_exponent() != 0) {
    set_weight_exponent(from.weight_exponent());
  }
}

void FrequencyEstimatorParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.FrequencyEstimatorParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrequencyEstimatorParameters::CopyFrom(const FrequencyEstimatorParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.FrequencyEstimatorParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrequencyEstimatorParameters::IsInitialized() const {
  return true;
}

void FrequencyEstimatorParameters::Swap(FrequencyEstimatorParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrequencyEstimatorParameters::InternalSwap(FrequencyEstimatorParameters* other) {
  using std::swap;
  swap(tau_, other->tau_);
  swap(max_delta_, other->max_delta_);
  swap(outlier_threshold_, other->outlier_threshold_);
  swap(weight_exponent_, other->weight_exponent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FrequencyEstimatorParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserDefinedProgramParameters::InitAsDefaultInstance() {
  ::tensorflow::tpu::_UserDefinedProgramParameters_default_instance_._instance.get_mutable()->program_ = const_cast< ::xla::HloModuleProto*>(
      ::xla::HloModuleProto::internal_default_instance());
}
void UserDefinedProgramParameters::clear_program() {
  if (GetArenaNoVirtual() == NULL && program_ != NULL) {
    delete program_;
  }
  program_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserDefinedProgramParameters::kProgramFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserDefinedProgramParameters::UserDefinedProgramParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_UserDefinedProgramParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.UserDefinedProgramParameters)
}
UserDefinedProgramParameters::UserDefinedProgramParameters(const UserDefinedProgramParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_program()) {
    program_ = new ::xla::HloModuleProto(*from.program_);
  } else {
    program_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.UserDefinedProgramParameters)
}

void UserDefinedProgramParameters::SharedCtor() {
  program_ = NULL;
}

UserDefinedProgramParameters::~UserDefinedProgramParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.UserDefinedProgramParameters)
  SharedDtor();
}

void UserDefinedProgramParameters::SharedDtor() {
  if (this != internal_default_instance()) delete program_;
}

void UserDefinedProgramParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserDefinedProgramParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserDefinedProgramParameters& UserDefinedProgramParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_UserDefinedProgramParameters.base);
  return *internal_default_instance();
}


void UserDefinedProgramParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.UserDefinedProgramParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && program_ != NULL) {
    delete program_;
  }
  program_ = NULL;
  _internal_metadata_.Clear();
}

bool UserDefinedProgramParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.UserDefinedProgramParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloModuleProto program = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.UserDefinedProgramParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.UserDefinedProgramParameters)
  return false;
#undef DO_
}

void UserDefinedProgramParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.UserDefinedProgramParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto program = 1;
  if (this->has_program()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_program(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.UserDefinedProgramParameters)
}

::google::protobuf::uint8* UserDefinedProgramParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.UserDefinedProgramParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto program = 1;
  if (this->has_program()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_program(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.UserDefinedProgramParameters)
  return target;
}

size_t UserDefinedProgramParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.UserDefinedProgramParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.HloModuleProto program = 1;
  if (this->has_program()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *program_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserDefinedProgramParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.UserDefinedProgramParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const UserDefinedProgramParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserDefinedProgramParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.UserDefinedProgramParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.UserDefinedProgramParameters)
    MergeFrom(*source);
  }
}

void UserDefinedProgramParameters::MergeFrom(const UserDefinedProgramParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.UserDefinedProgramParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_program()) {
    mutable_program()->::xla::HloModuleProto::MergeFrom(from.program());
  }
}

void UserDefinedProgramParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.UserDefinedProgramParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserDefinedProgramParameters::CopyFrom(const UserDefinedProgramParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.UserDefinedProgramParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserDefinedProgramParameters::IsInitialized() const {
  return true;
}

void UserDefinedProgramParameters::Swap(UserDefinedProgramParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserDefinedProgramParameters::InternalSwap(UserDefinedProgramParameters* other) {
  using std::swap;
  swap(program_, other->program_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserDefinedProgramParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssignParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssignParameters::AssignParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AssignParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.AssignParameters)
}
AssignParameters::AssignParameters(const AssignParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.AssignParameters)
}

void AssignParameters::SharedCtor() {
}

AssignParameters::~AssignParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.AssignParameters)
  SharedDtor();
}

void AssignParameters::SharedDtor() {
}

void AssignParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssignParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssignParameters& AssignParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_AssignParameters.base);
  return *internal_default_instance();
}


void AssignParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.AssignParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AssignParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.AssignParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.AssignParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.AssignParameters)
  return false;
#undef DO_
}

void AssignParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.AssignParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.AssignParameters)
}

::google::protobuf::uint8* AssignParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.AssignParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.AssignParameters)
  return target;
}

size_t AssignParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.AssignParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.AssignParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssignParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.AssignParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.AssignParameters)
    MergeFrom(*source);
  }
}

void AssignParameters::MergeFrom(const AssignParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.AssignParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AssignParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.AssignParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignParameters::CopyFrom(const AssignParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.AssignParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignParameters::IsInitialized() const {
  return true;
}

void AssignParameters::Swap(AssignParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssignParameters::InternalSwap(AssignParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssignParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GradientAccumulationStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GradientAccumulationStatus::GradientAccumulationStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_GradientAccumulationStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.GradientAccumulationStatus)
}
GradientAccumulationStatus::GradientAccumulationStatus(const GradientAccumulationStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.GradientAccumulationStatus)
}

void GradientAccumulationStatus::SharedCtor() {
}

GradientAccumulationStatus::~GradientAccumulationStatus() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.GradientAccumulationStatus)
  SharedDtor();
}

void GradientAccumulationStatus::SharedDtor() {
}

void GradientAccumulationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GradientAccumulationStatus::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GradientAccumulationStatus& GradientAccumulationStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_GradientAccumulationStatus.base);
  return *internal_default_instance();
}


void GradientAccumulationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.GradientAccumulationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GradientAccumulationStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.GradientAccumulationStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.GradientAccumulationStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.GradientAccumulationStatus)
  return false;
#undef DO_
}

void GradientAccumulationStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.GradientAccumulationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.GradientAccumulationStatus)
}

::google::protobuf::uint8* GradientAccumulationStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.GradientAccumulationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.GradientAccumulationStatus)
  return target;
}

size_t GradientAccumulationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.GradientAccumulationStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GradientAccumulationStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.GradientAccumulationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const GradientAccumulationStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GradientAccumulationStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.GradientAccumulationStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.GradientAccumulationStatus)
    MergeFrom(*source);
  }
}

void GradientAccumulationStatus::MergeFrom(const GradientAccumulationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.GradientAccumulationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GradientAccumulationStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.GradientAccumulationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GradientAccumulationStatus::CopyFrom(const GradientAccumulationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.GradientAccumulationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GradientAccumulationStatus::IsInitialized() const {
  return true;
}

void GradientAccumulationStatus::Swap(GradientAccumulationStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GradientAccumulationStatus::InternalSwap(GradientAccumulationStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GradientAccumulationStatus::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LowDimensionalPackingStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LowDimensionalPackingStatus::LowDimensionalPackingStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_LowDimensionalPackingStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.LowDimensionalPackingStatus)
}
LowDimensionalPackingStatus::LowDimensionalPackingStatus(const LowDimensionalPackingStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.LowDimensionalPackingStatus)
}

void LowDimensionalPackingStatus::SharedCtor() {
}

LowDimensionalPackingStatus::~LowDimensionalPackingStatus() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.LowDimensionalPackingStatus)
  SharedDtor();
}

void LowDimensionalPackingStatus::SharedDtor() {
}

void LowDimensionalPackingStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LowDimensionalPackingStatus::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LowDimensionalPackingStatus& LowDimensionalPackingStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_LowDimensionalPackingStatus.base);
  return *internal_default_instance();
}


void LowDimensionalPackingStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.LowDimensionalPackingStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LowDimensionalPackingStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.LowDimensionalPackingStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.LowDimensionalPackingStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.LowDimensionalPackingStatus)
  return false;
#undef DO_
}

void LowDimensionalPackingStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.LowDimensionalPackingStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.LowDimensionalPackingStatus)
}

::google::protobuf::uint8* LowDimensionalPackingStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.LowDimensionalPackingStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.LowDimensionalPackingStatus)
  return target;
}

size_t LowDimensionalPackingStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.LowDimensionalPackingStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LowDimensionalPackingStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.LowDimensionalPackingStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const LowDimensionalPackingStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LowDimensionalPackingStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.LowDimensionalPackingStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.LowDimensionalPackingStatus)
    MergeFrom(*source);
  }
}

void LowDimensionalPackingStatus::MergeFrom(const LowDimensionalPackingStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.LowDimensionalPackingStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LowDimensionalPackingStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.LowDimensionalPackingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LowDimensionalPackingStatus::CopyFrom(const LowDimensionalPackingStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.LowDimensionalPackingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LowDimensionalPackingStatus::IsInitialized() const {
  return true;
}

void LowDimensionalPackingStatus::Swap(LowDimensionalPackingStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LowDimensionalPackingStatus::InternalSwap(LowDimensionalPackingStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LowDimensionalPackingStatus::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotIdReplicationConfiguration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HotIdReplicationConfiguration::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotIdReplicationConfiguration::HotIdReplicationConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_HotIdReplicationConfiguration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.HotIdReplicationConfiguration)
}
HotIdReplicationConfiguration::HotIdReplicationConfiguration(const HotIdReplicationConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.HotIdReplicationConfiguration)
}

void HotIdReplicationConfiguration::SharedCtor() {
  status_ = 0;
}

HotIdReplicationConfiguration::~HotIdReplicationConfiguration() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.HotIdReplicationConfiguration)
  SharedDtor();
}

void HotIdReplicationConfiguration::SharedDtor() {
}

void HotIdReplicationConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotIdReplicationConfiguration::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotIdReplicationConfiguration& HotIdReplicationConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_HotIdReplicationConfiguration.base);
  return *internal_default_instance();
}


void HotIdReplicationConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.HotIdReplicationConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

bool HotIdReplicationConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.HotIdReplicationConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.tpu.HotIdReplicationConfiguration.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::tensorflow::tpu::HotIdReplicationConfiguration_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.HotIdReplicationConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.HotIdReplicationConfiguration)
  return false;
#undef DO_
}

void HotIdReplicationConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.HotIdReplicationConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.tpu.HotIdReplicationConfiguration.Status status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.HotIdReplicationConfiguration)
}

::google::protobuf::uint8* HotIdReplicationConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.HotIdReplicationConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.tpu.HotIdReplicationConfiguration.Status status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.HotIdReplicationConfiguration)
  return target;
}

size_t HotIdReplicationConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.HotIdReplicationConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.tpu.HotIdReplicationConfiguration.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotIdReplicationConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.HotIdReplicationConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const HotIdReplicationConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotIdReplicationConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.HotIdReplicationConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.HotIdReplicationConfiguration)
    MergeFrom(*source);
  }
}

void HotIdReplicationConfiguration::MergeFrom(const HotIdReplicationConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.HotIdReplicationConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void HotIdReplicationConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.HotIdReplicationConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotIdReplicationConfiguration::CopyFrom(const HotIdReplicationConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.HotIdReplicationConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotIdReplicationConfiguration::IsInitialized() const {
  return true;
}

void HotIdReplicationConfiguration::Swap(HotIdReplicationConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotIdReplicationConfiguration::InternalSwap(HotIdReplicationConfiguration* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotIdReplicationConfiguration::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptimizationParameters::InitAsDefaultInstance() {
  ::tensorflow::tpu::_OptimizationParameters_default_instance_._instance.get_mutable()->learning_rate_ = const_cast< ::tensorflow::tpu::LearningRate*>(
      ::tensorflow::tpu::LearningRate::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_._instance.get_mutable()->clipping_limits_ = const_cast< ::tensorflow::tpu::ClippingLimits*>(
      ::tensorflow::tpu::ClippingLimits::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_._instance.get_mutable()->gradient_clipping_limits_ = const_cast< ::tensorflow::tpu::ClippingLimits*>(
      ::tensorflow::tpu::ClippingLimits::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_._instance.get_mutable()->simulated_quantization_ = const_cast< ::tensorflow::tpu::SimulatedQuantization*>(
      ::tensorflow::tpu::SimulatedQuantization::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_._instance.get_mutable()->hot_id_replication_configuration_ = const_cast< ::tensorflow::tpu::HotIdReplicationConfiguration*>(
      ::tensorflow::tpu::HotIdReplicationConfiguration::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.adagrad_ = const_cast< ::tensorflow::tpu::AdagradParameters*>(
      ::tensorflow::tpu::AdagradParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.adagrad_momentum_ = const_cast< ::tensorflow::tpu::AdagradMomentumParameters*>(
      ::tensorflow::tpu::AdagradMomentumParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.bounded_adagrad_ = const_cast< ::tensorflow::tpu::BoundedAdagradParameters*>(
      ::tensorflow::tpu::BoundedAdagradParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.stochastic_gradient_descent_ = const_cast< ::tensorflow::tpu::StochasticGradientDescentParameters*>(
      ::tensorflow::tpu::StochasticGradientDescentParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.ftrl_ = const_cast< ::tensorflow::tpu::FtrlParameters*>(
      ::tensorflow::tpu::FtrlParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.adam_ = const_cast< ::tensorflow::tpu::AdamParameters*>(
      ::tensorflow::tpu::AdamParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.momentum_ = const_cast< ::tensorflow::tpu::MomentumParameters*>(
      ::tensorflow::tpu::MomentumParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.rms_prop_ = const_cast< ::tensorflow::tpu::RmsPropParameters*>(
      ::tensorflow::tpu::RmsPropParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.centered_rms_prop_ = const_cast< ::tensorflow::tpu::CenteredRmsPropParameters*>(
      ::tensorflow::tpu::CenteredRmsPropParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.mdl_adagrad_light_ = const_cast< ::tensorflow::tpu::MdlAdagradLightParameters*>(
      ::tensorflow::tpu::MdlAdagradLightParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.adadelta_ = const_cast< ::tensorflow::tpu::AdadeltaParameters*>(
      ::tensorflow::tpu::AdadeltaParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.proximal_adagrad_ = const_cast< ::tensorflow::tpu::ProximalAdagradParameters*>(
      ::tensorflow::tpu::ProximalAdagradParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.online_yogi_ = const_cast< ::tensorflow::tpu::OnlineYogiParameters*>(
      ::tensorflow::tpu::OnlineYogiParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.proximal_yogi_ = const_cast< ::tensorflow::tpu::ProximalYogiParameters*>(
      ::tensorflow::tpu::ProximalYogiParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.frequency_estimator_ = const_cast< ::tensorflow::tpu::FrequencyEstimatorParameters*>(
      ::tensorflow::tpu::FrequencyEstimatorParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.user_defined_program_ = const_cast< ::tensorflow::tpu::UserDefinedProgramParameters*>(
      ::tensorflow::tpu::UserDefinedProgramParameters::internal_default_instance());
  ::tensorflow::tpu::_OptimizationParameters_default_instance_.assign_ = const_cast< ::tensorflow::tpu::AssignParameters*>(
      ::tensorflow::tpu::AssignParameters::internal_default_instance());
}
void OptimizationParameters::set_allocated_adagrad(::tensorflow::tpu::AdagradParameters* adagrad) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (adagrad) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      adagrad = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, adagrad, submessage_arena);
    }
    set_has_adagrad();
    parameters_.adagrad_ = adagrad;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.adagrad)
}
void OptimizationParameters::set_allocated_adagrad_momentum(::tensorflow::tpu::AdagradMomentumParameters* adagrad_momentum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (adagrad_momentum) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      adagrad_momentum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, adagrad_momentum, submessage_arena);
    }
    set_has_adagrad_momentum();
    parameters_.adagrad_momentum_ = adagrad_momentum;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.adagrad_momentum)
}
void OptimizationParameters::set_allocated_bounded_adagrad(::tensorflow::tpu::BoundedAdagradParameters* bounded_adagrad) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (bounded_adagrad) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bounded_adagrad = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bounded_adagrad, submessage_arena);
    }
    set_has_bounded_adagrad();
    parameters_.bounded_adagrad_ = bounded_adagrad;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.bounded_adagrad)
}
void OptimizationParameters::set_allocated_stochastic_gradient_descent(::tensorflow::tpu::StochasticGradientDescentParameters* stochastic_gradient_descent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (stochastic_gradient_descent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stochastic_gradient_descent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stochastic_gradient_descent, submessage_arena);
    }
    set_has_stochastic_gradient_descent();
    parameters_.stochastic_gradient_descent_ = stochastic_gradient_descent;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.stochastic_gradient_descent)
}
void OptimizationParameters::set_allocated_ftrl(::tensorflow::tpu::FtrlParameters* ftrl) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (ftrl) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ftrl = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ftrl, submessage_arena);
    }
    set_has_ftrl();
    parameters_.ftrl_ = ftrl;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.ftrl)
}
void OptimizationParameters::set_allocated_adam(::tensorflow::tpu::AdamParameters* adam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (adam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      adam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, adam, submessage_arena);
    }
    set_has_adam();
    parameters_.adam_ = adam;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.adam)
}
void OptimizationParameters::set_allocated_momentum(::tensorflow::tpu::MomentumParameters* momentum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (momentum) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      momentum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, momentum, submessage_arena);
    }
    set_has_momentum();
    parameters_.momentum_ = momentum;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.momentum)
}
void OptimizationParameters::set_allocated_rms_prop(::tensorflow::tpu::RmsPropParameters* rms_prop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (rms_prop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rms_prop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rms_prop, submessage_arena);
    }
    set_has_rms_prop();
    parameters_.rms_prop_ = rms_prop;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.rms_prop)
}
void OptimizationParameters::set_allocated_centered_rms_prop(::tensorflow::tpu::CenteredRmsPropParameters* centered_rms_prop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (centered_rms_prop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      centered_rms_prop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, centered_rms_prop, submessage_arena);
    }
    set_has_centered_rms_prop();
    parameters_.centered_rms_prop_ = centered_rms_prop;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.centered_rms_prop)
}
void OptimizationParameters::set_allocated_mdl_adagrad_light(::tensorflow::tpu::MdlAdagradLightParameters* mdl_adagrad_light) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (mdl_adagrad_light) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mdl_adagrad_light = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mdl_adagrad_light, submessage_arena);
    }
    set_has_mdl_adagrad_light();
    parameters_.mdl_adagrad_light_ = mdl_adagrad_light;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.mdl_adagrad_light)
}
void OptimizationParameters::set_allocated_adadelta(::tensorflow::tpu::AdadeltaParameters* adadelta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (adadelta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      adadelta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, adadelta, submessage_arena);
    }
    set_has_adadelta();
    parameters_.adadelta_ = adadelta;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.adadelta)
}
void OptimizationParameters::set_allocated_proximal_adagrad(::tensorflow::tpu::ProximalAdagradParameters* proximal_adagrad) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (proximal_adagrad) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      proximal_adagrad = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, proximal_adagrad, submessage_arena);
    }
    set_has_proximal_adagrad();
    parameters_.proximal_adagrad_ = proximal_adagrad;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.proximal_adagrad)
}
void OptimizationParameters::set_allocated_online_yogi(::tensorflow::tpu::OnlineYogiParameters* online_yogi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (online_yogi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      online_yogi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, online_yogi, submessage_arena);
    }
    set_has_online_yogi();
    parameters_.online_yogi_ = online_yogi;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.online_yogi)
}
void OptimizationParameters::set_allocated_proximal_yogi(::tensorflow::tpu::ProximalYogiParameters* proximal_yogi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (proximal_yogi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      proximal_yogi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, proximal_yogi, submessage_arena);
    }
    set_has_proximal_yogi();
    parameters_.proximal_yogi_ = proximal_yogi;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.proximal_yogi)
}
void OptimizationParameters::set_allocated_frequency_estimator(::tensorflow::tpu::FrequencyEstimatorParameters* frequency_estimator) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (frequency_estimator) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      frequency_estimator = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, frequency_estimator, submessage_arena);
    }
    set_has_frequency_estimator();
    parameters_.frequency_estimator_ = frequency_estimator;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.frequency_estimator)
}
void OptimizationParameters::set_allocated_user_defined_program(::tensorflow::tpu::UserDefinedProgramParameters* user_defined_program) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (user_defined_program) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_defined_program = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_defined_program, submessage_arena);
    }
    set_has_user_defined_program();
    parameters_.user_defined_program_ = user_defined_program;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.user_defined_program)
}
void OptimizationParameters::set_allocated_assign(::tensorflow::tpu::AssignParameters* assign) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (assign) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assign = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assign, submessage_arena);
    }
    set_has_assign();
    parameters_.assign_ = assign;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.OptimizationParameters.assign)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizationParameters::kLearningRateFieldNumber;
const int OptimizationParameters::kClippingLimitsFieldNumber;
const int OptimizationParameters::kGradientClippingLimitsFieldNumber;
const int OptimizationParameters::kWeightDecayFactorFieldNumber;
const int OptimizationParameters::kMultiplyWeightDecayFactorByLearningRateFieldNumber;
const int OptimizationParameters::kSimulatedQuantizationFieldNumber;
const int OptimizationParameters::kGradientAccumulationStatusFieldNumber;
const int OptimizationParameters::kLowDimensionalPackingStatusFieldNumber;
const int OptimizationParameters::kHotIdReplicationConfigurationFieldNumber;
const int OptimizationParameters::kAdagradFieldNumber;
const int OptimizationParameters::kAdagradMomentumFieldNumber;
const int OptimizationParameters::kBoundedAdagradFieldNumber;
const int OptimizationParameters::kStochasticGradientDescentFieldNumber;
const int OptimizationParameters::kFtrlFieldNumber;
const int OptimizationParameters::kAdamFieldNumber;
const int OptimizationParameters::kMomentumFieldNumber;
const int OptimizationParameters::kRmsPropFieldNumber;
const int OptimizationParameters::kCenteredRmsPropFieldNumber;
const int OptimizationParameters::kMdlAdagradLightFieldNumber;
const int OptimizationParameters::kAdadeltaFieldNumber;
const int OptimizationParameters::kProximalAdagradFieldNumber;
const int OptimizationParameters::kOnlineYogiFieldNumber;
const int OptimizationParameters::kProximalYogiFieldNumber;
const int OptimizationParameters::kFrequencyEstimatorFieldNumber;
const int OptimizationParameters::kUserDefinedProgramFieldNumber;
const int OptimizationParameters::kAssignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizationParameters::OptimizationParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_OptimizationParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.OptimizationParameters)
}
OptimizationParameters::OptimizationParameters(const OptimizationParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clipping_limits()) {
    clipping_limits_ = new ::tensorflow::tpu::ClippingLimits(*from.clipping_limits_);
  } else {
    clipping_limits_ = NULL;
  }
  if (from.has_gradient_clipping_limits()) {
    gradient_clipping_limits_ = new ::tensorflow::tpu::ClippingLimits(*from.gradient_clipping_limits_);
  } else {
    gradient_clipping_limits_ = NULL;
  }
  if (from.has_learning_rate()) {
    learning_rate_ = new ::tensorflow::tpu::LearningRate(*from.learning_rate_);
  } else {
    learning_rate_ = NULL;
  }
  if (from.has_hot_id_replication_configuration()) {
    hot_id_replication_configuration_ = new ::tensorflow::tpu::HotIdReplicationConfiguration(*from.hot_id_replication_configuration_);
  } else {
    hot_id_replication_configuration_ = NULL;
  }
  if (from.has_simulated_quantization()) {
    simulated_quantization_ = new ::tensorflow::tpu::SimulatedQuantization(*from.simulated_quantization_);
  } else {
    simulated_quantization_ = NULL;
  }
  ::memcpy(&weight_decay_factor_, &from.weight_decay_factor_,
    static_cast<size_t>(reinterpret_cast<char*>(&low_dimensional_packing_status_) -
    reinterpret_cast<char*>(&weight_decay_factor_)) + sizeof(low_dimensional_packing_status_));
  clear_has_parameters();
  switch (from.parameters_case()) {
    case kAdagrad: {
      mutable_adagrad()->::tensorflow::tpu::AdagradParameters::MergeFrom(from.adagrad());
      break;
    }
    case kAdagradMomentum: {
      mutable_adagrad_momentum()->::tensorflow::tpu::AdagradMomentumParameters::MergeFrom(from.adagrad_momentum());
      break;
    }
    case kBoundedAdagrad: {
      mutable_bounded_adagrad()->::tensorflow::tpu::BoundedAdagradParameters::MergeFrom(from.bounded_adagrad());
      break;
    }
    case kStochasticGradientDescent: {
      mutable_stochastic_gradient_descent()->::tensorflow::tpu::StochasticGradientDescentParameters::MergeFrom(from.stochastic_gradient_descent());
      break;
    }
    case kFtrl: {
      mutable_ftrl()->::tensorflow::tpu::FtrlParameters::MergeFrom(from.ftrl());
      break;
    }
    case kAdam: {
      mutable_adam()->::tensorflow::tpu::AdamParameters::MergeFrom(from.adam());
      break;
    }
    case kMomentum: {
      mutable_momentum()->::tensorflow::tpu::MomentumParameters::MergeFrom(from.momentum());
      break;
    }
    case kRmsProp: {
      mutable_rms_prop()->::tensorflow::tpu::RmsPropParameters::MergeFrom(from.rms_prop());
      break;
    }
    case kCenteredRmsProp: {
      mutable_centered_rms_prop()->::tensorflow::tpu::CenteredRmsPropParameters::MergeFrom(from.centered_rms_prop());
      break;
    }
    case kMdlAdagradLight: {
      mutable_mdl_adagrad_light()->::tensorflow::tpu::MdlAdagradLightParameters::MergeFrom(from.mdl_adagrad_light());
      break;
    }
    case kAdadelta: {
      mutable_adadelta()->::tensorflow::tpu::AdadeltaParameters::MergeFrom(from.adadelta());
      break;
    }
    case kProximalAdagrad: {
      mutable_proximal_adagrad()->::tensorflow::tpu::ProximalAdagradParameters::MergeFrom(from.proximal_adagrad());
      break;
    }
    case kOnlineYogi: {
      mutable_online_yogi()->::tensorflow::tpu::OnlineYogiParameters::MergeFrom(from.online_yogi());
      break;
    }
    case kProximalYogi: {
      mutable_proximal_yogi()->::tensorflow::tpu::ProximalYogiParameters::MergeFrom(from.proximal_yogi());
      break;
    }
    case kFrequencyEstimator: {
      mutable_frequency_estimator()->::tensorflow::tpu::FrequencyEstimatorParameters::MergeFrom(from.frequency_estimator());
      break;
    }
    case kUserDefinedProgram: {
      mutable_user_defined_program()->::tensorflow::tpu::UserDefinedProgramParameters::MergeFrom(from.user_defined_program());
      break;
    }
    case kAssign: {
      mutable_assign()->::tensorflow::tpu::AssignParameters::MergeFrom(from.assign());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.OptimizationParameters)
}

void OptimizationParameters::SharedCtor() {
  ::memset(&clipping_limits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_dimensional_packing_status_) -
      reinterpret_cast<char*>(&clipping_limits_)) + sizeof(low_dimensional_packing_status_));
  clear_has_parameters();
}

OptimizationParameters::~OptimizationParameters() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.OptimizationParameters)
  SharedDtor();
}

void OptimizationParameters::SharedDtor() {
  if (this != internal_default_instance()) delete clipping_limits_;
  if (this != internal_default_instance()) delete gradient_clipping_limits_;
  if (this != internal_default_instance()) delete learning_rate_;
  if (this != internal_default_instance()) delete hot_id_replication_configuration_;
  if (this != internal_default_instance()) delete simulated_quantization_;
  if (has_parameters()) {
    clear_parameters();
  }
}

void OptimizationParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptimizationParameters::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptimizationParameters& OptimizationParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_OptimizationParameters.base);
  return *internal_default_instance();
}


void OptimizationParameters::clear_parameters() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.tpu.OptimizationParameters)
  switch (parameters_case()) {
    case kAdagrad: {
      delete parameters_.adagrad_;
      break;
    }
    case kAdagradMomentum: {
      delete parameters_.adagrad_momentum_;
      break;
    }
    case kBoundedAdagrad: {
      delete parameters_.bounded_adagrad_;
      break;
    }
    case kStochasticGradientDescent: {
      delete parameters_.stochastic_gradient_descent_;
      break;
    }
    case kFtrl: {
      delete parameters_.ftrl_;
      break;
    }
    case kAdam: {
      delete parameters_.adam_;
      break;
    }
    case kMomentum: {
      delete parameters_.momentum_;
      break;
    }
    case kRmsProp: {
      delete parameters_.rms_prop_;
      break;
    }
    case kCenteredRmsProp: {
      delete parameters_.centered_rms_prop_;
      break;
    }
    case kMdlAdagradLight: {
      delete parameters_.mdl_adagrad_light_;
      break;
    }
    case kAdadelta: {
      delete parameters_.adadelta_;
      break;
    }
    case kProximalAdagrad: {
      delete parameters_.proximal_adagrad_;
      break;
    }
    case kOnlineYogi: {
      delete parameters_.online_yogi_;
      break;
    }
    case kProximalYogi: {
      delete parameters_.proximal_yogi_;
      break;
    }
    case kFrequencyEstimator: {
      delete parameters_.frequency_estimator_;
      break;
    }
    case kUserDefinedProgram: {
      delete parameters_.user_defined_program_;
      break;
    }
    case kAssign: {
      delete parameters_.assign_;
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETERS_NOT_SET;
}


void OptimizationParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.OptimizationParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && clipping_limits_ != NULL) {
    delete clipping_limits_;
  }
  clipping_limits_ = NULL;
  if (GetArenaNoVirtual() == NULL && gradient_clipping_limits_ != NULL) {
    delete gradient_clipping_limits_;
  }
  gradient_clipping_limits_ = NULL;
  if (GetArenaNoVirtual() == NULL && learning_rate_ != NULL) {
    delete learning_rate_;
  }
  learning_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && hot_id_replication_configuration_ != NULL) {
    delete hot_id_replication_configuration_;
  }
  hot_id_replication_configuration_ = NULL;
  if (GetArenaNoVirtual() == NULL && simulated_quantization_ != NULL) {
    delete simulated_quantization_;
  }
  simulated_quantization_ = NULL;
  ::memset(&weight_decay_factor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_dimensional_packing_status_) -
      reinterpret_cast<char*>(&weight_decay_factor_)) + sizeof(low_dimensional_packing_status_));
  clear_parameters();
  _internal_metadata_.Clear();
}

bool OptimizationParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.OptimizationParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.tpu.ClippingLimits clipping_limits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clipping_limits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.AdagradParameters adagrad = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adagrad()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.StochasticGradientDescentParameters stochastic_gradient_descent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stochastic_gradient_descent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.FtrlParameters ftrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ftrl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.AdamParameters adam = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.ClippingLimits gradient_clipping_limits = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gradient_clipping_limits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.MomentumParameters momentum = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_momentum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.RmsPropParameters rms_prop = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rms_prop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.CenteredRmsPropParameters centered_rms_prop = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_centered_rms_prop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.MdlAdagradLightParameters mdl_adagrad_light = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mdl_adagrad_light()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.AdadeltaParameters adadelta = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adadelta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.LearningRate learning_rate = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_learning_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.ProximalAdagradParameters proximal_adagrad = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_proximal_adagrad()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float weight_decay_factor = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_decay_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.GradientAccumulationStatus.Status gradient_accumulation_status = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gradient_accumulation_status(static_cast< ::tensorflow::tpu::GradientAccumulationStatus_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.HotIdReplicationConfiguration hot_id_replication_configuration = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hot_id_replication_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.BoundedAdagradParameters bounded_adagrad = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounded_adagrad()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.OnlineYogiParameters online_yogi = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_online_yogi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.ProximalYogiParameters proximal_yogi = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_proximal_yogi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool multiply_weight_decay_factor_by_learning_rate = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &multiply_weight_decay_factor_by_learning_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.FrequencyEstimatorParameters frequency_estimator = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frequency_estimator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.UserDefinedProgramParameters user_defined_program = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_defined_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.AssignParameters assign = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.AdagradMomentumParameters adagrad_momentum = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adagrad_momentum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.SimulatedQuantization simulated_quantization = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_simulated_quantization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.LowDimensionalPackingStatus.Status low_dimensional_packing_status = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_low_dimensional_packing_status(static_cast< ::tensorflow::tpu::LowDimensionalPackingStatus_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.OptimizationParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.OptimizationParameters)
  return false;
#undef DO_
}

void OptimizationParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.OptimizationParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.tpu.ClippingLimits clipping_limits = 2;
  if (this->has_clipping_limits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_clipping_limits(), output);
  }

  // .tensorflow.tpu.AdagradParameters adagrad = 3;
  if (has_adagrad()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_adagrad(), output);
  }

  // .tensorflow.tpu.StochasticGradientDescentParameters stochastic_gradient_descent = 4;
  if (has_stochastic_gradient_descent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_stochastic_gradient_descent(), output);
  }

  // .tensorflow.tpu.FtrlParameters ftrl = 5;
  if (has_ftrl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_ftrl(), output);
  }

  // .tensorflow.tpu.AdamParameters adam = 6;
  if (has_adam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_adam(), output);
  }

  // .tensorflow.tpu.ClippingLimits gradient_clipping_limits = 7;
  if (this->has_gradient_clipping_limits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_gradient_clipping_limits(), output);
  }

  // .tensorflow.tpu.MomentumParameters momentum = 8;
  if (has_momentum()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_momentum(), output);
  }

  // .tensorflow.tpu.RmsPropParameters rms_prop = 9;
  if (has_rms_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_rms_prop(), output);
  }

  // .tensorflow.tpu.CenteredRmsPropParameters centered_rms_prop = 10;
  if (has_centered_rms_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_centered_rms_prop(), output);
  }

  // .tensorflow.tpu.MdlAdagradLightParameters mdl_adagrad_light = 11;
  if (has_mdl_adagrad_light()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_mdl_adagrad_light(), output);
  }

  // .tensorflow.tpu.AdadeltaParameters adadelta = 12;
  if (has_adadelta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_adadelta(), output);
  }

  // .tensorflow.tpu.LearningRate learning_rate = 13;
  if (this->has_learning_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_learning_rate(), output);
  }

  // .tensorflow.tpu.ProximalAdagradParameters proximal_adagrad = 14;
  if (has_proximal_adagrad()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_proximal_adagrad(), output);
  }

  // float weight_decay_factor = 16;
  if (this->weight_decay_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->weight_decay_factor(), output);
  }

  // .tensorflow.tpu.GradientAccumulationStatus.Status gradient_accumulation_status = 17;
  if (this->gradient_accumulation_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->gradient_accumulation_status(), output);
  }

  // .tensorflow.tpu.HotIdReplicationConfiguration hot_id_replication_configuration = 18;
  if (this->has_hot_id_replication_configuration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_hot_id_replication_configuration(), output);
  }

  // .tensorflow.tpu.BoundedAdagradParameters bounded_adagrad = 19;
  if (has_bounded_adagrad()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_bounded_adagrad(), output);
  }

  // .tensorflow.tpu.OnlineYogiParameters online_yogi = 20;
  if (has_online_yogi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_online_yogi(), output);
  }

  // .tensorflow.tpu.ProximalYogiParameters proximal_yogi = 21;
  if (has_proximal_yogi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_proximal_yogi(), output);
  }

  // bool multiply_weight_decay_factor_by_learning_rate = 22;
  if (this->multiply_weight_decay_factor_by_learning_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->multiply_weight_decay_factor_by_learning_rate(), output);
  }

  // .tensorflow.tpu.FrequencyEstimatorParameters frequency_estimator = 23;
  if (has_frequency_estimator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_frequency_estimator(), output);
  }

  // .tensorflow.tpu.UserDefinedProgramParameters user_defined_program = 24;
  if (has_user_defined_program()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_user_defined_program(), output);
  }

  // .tensorflow.tpu.AssignParameters assign = 25;
  if (has_assign()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_assign(), output);
  }

  // .tensorflow.tpu.AdagradMomentumParameters adagrad_momentum = 26;
  if (has_adagrad_momentum()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_adagrad_momentum(), output);
  }

  // .tensorflow.tpu.SimulatedQuantization simulated_quantization = 27;
  if (this->has_simulated_quantization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_simulated_quantization(), output);
  }

  // .tensorflow.tpu.LowDimensionalPackingStatus.Status low_dimensional_packing_status = 28;
  if (this->low_dimensional_packing_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      28, this->low_dimensional_packing_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.OptimizationParameters)
}

::google::protobuf::uint8* OptimizationParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.OptimizationParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.tpu.ClippingLimits clipping_limits = 2;
  if (this->has_clipping_limits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_clipping_limits(), deterministic, target);
  }

  // .tensorflow.tpu.AdagradParameters adagrad = 3;
  if (has_adagrad()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_adagrad(), deterministic, target);
  }

  // .tensorflow.tpu.StochasticGradientDescentParameters stochastic_gradient_descent = 4;
  if (has_stochastic_gradient_descent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_stochastic_gradient_descent(), deterministic, target);
  }

  // .tensorflow.tpu.FtrlParameters ftrl = 5;
  if (has_ftrl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_ftrl(), deterministic, target);
  }

  // .tensorflow.tpu.AdamParameters adam = 6;
  if (has_adam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_adam(), deterministic, target);
  }

  // .tensorflow.tpu.ClippingLimits gradient_clipping_limits = 7;
  if (this->has_gradient_clipping_limits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_gradient_clipping_limits(), deterministic, target);
  }

  // .tensorflow.tpu.MomentumParameters momentum = 8;
  if (has_momentum()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_momentum(), deterministic, target);
  }

  // .tensorflow.tpu.RmsPropParameters rms_prop = 9;
  if (has_rms_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_rms_prop(), deterministic, target);
  }

  // .tensorflow.tpu.CenteredRmsPropParameters centered_rms_prop = 10;
  if (has_centered_rms_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_centered_rms_prop(), deterministic, target);
  }

  // .tensorflow.tpu.MdlAdagradLightParameters mdl_adagrad_light = 11;
  if (has_mdl_adagrad_light()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_mdl_adagrad_light(), deterministic, target);
  }

  // .tensorflow.tpu.AdadeltaParameters adadelta = 12;
  if (has_adadelta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_adadelta(), deterministic, target);
  }

  // .tensorflow.tpu.LearningRate learning_rate = 13;
  if (this->has_learning_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_learning_rate(), deterministic, target);
  }

  // .tensorflow.tpu.ProximalAdagradParameters proximal_adagrad = 14;
  if (has_proximal_adagrad()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_proximal_adagrad(), deterministic, target);
  }

  // float weight_decay_factor = 16;
  if (this->weight_decay_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->weight_decay_factor(), target);
  }

  // .tensorflow.tpu.GradientAccumulationStatus.Status gradient_accumulation_status = 17;
  if (this->gradient_accumulation_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->gradient_accumulation_status(), target);
  }

  // .tensorflow.tpu.HotIdReplicationConfiguration hot_id_replication_configuration = 18;
  if (this->has_hot_id_replication_configuration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_hot_id_replication_configuration(), deterministic, target);
  }

  // .tensorflow.tpu.BoundedAdagradParameters bounded_adagrad = 19;
  if (has_bounded_adagrad()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_bounded_adagrad(), deterministic, target);
  }

  // .tensorflow.tpu.OnlineYogiParameters online_yogi = 20;
  if (has_online_yogi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_online_yogi(), deterministic, target);
  }

  // .tensorflow.tpu.ProximalYogiParameters proximal_yogi = 21;
  if (has_proximal_yogi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_proximal_yogi(), deterministic, target);
  }

  // bool multiply_weight_decay_factor_by_learning_rate = 22;
  if (this->multiply_weight_decay_factor_by_learning_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->multiply_weight_decay_factor_by_learning_rate(), target);
  }

  // .tensorflow.tpu.FrequencyEstimatorParameters frequency_estimator = 23;
  if (has_frequency_estimator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_frequency_estimator(), deterministic, target);
  }

  // .tensorflow.tpu.UserDefinedProgramParameters user_defined_program = 24;
  if (has_user_defined_program()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_user_defined_program(), deterministic, target);
  }

  // .tensorflow.tpu.AssignParameters assign = 25;
  if (has_assign()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_assign(), deterministic, target);
  }

  // .tensorflow.tpu.AdagradMomentumParameters adagrad_momentum = 26;
  if (has_adagrad_momentum()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_adagrad_momentum(), deterministic, target);
  }

  // .tensorflow.tpu.SimulatedQuantization simulated_quantization = 27;
  if (this->has_simulated_quantization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_simulated_quantization(), deterministic, target);
  }

  // .tensorflow.tpu.LowDimensionalPackingStatus.Status low_dimensional_packing_status = 28;
  if (this->low_dimensional_packing_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      28, this->low_dimensional_packing_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.OptimizationParameters)
  return target;
}

size_t OptimizationParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.OptimizationParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.tpu.ClippingLimits clipping_limits = 2;
  if (this->has_clipping_limits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *clipping_limits_);
  }

  // .tensorflow.tpu.ClippingLimits gradient_clipping_limits = 7;
  if (this->has_gradient_clipping_limits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gradient_clipping_limits_);
  }

  // .tensorflow.tpu.LearningRate learning_rate = 13;
  if (this->has_learning_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *learning_rate_);
  }

  // .tensorflow.tpu.HotIdReplicationConfiguration hot_id_replication_configuration = 18;
  if (this->has_hot_id_replication_configuration()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hot_id_replication_configuration_);
  }

  // .tensorflow.tpu.SimulatedQuantization simulated_quantization = 27;
  if (this->has_simulated_quantization()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *simulated_quantization_);
  }

  // float weight_decay_factor = 16;
  if (this->weight_decay_factor() != 0) {
    total_size += 2 + 4;
  }

  // .tensorflow.tpu.GradientAccumulationStatus.Status gradient_accumulation_status = 17;
  if (this->gradient_accumulation_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gradient_accumulation_status());
  }

  // bool multiply_weight_decay_factor_by_learning_rate = 22;
  if (this->multiply_weight_decay_factor_by_learning_rate() != 0) {
    total_size += 2 + 1;
  }

  // .tensorflow.tpu.LowDimensionalPackingStatus.Status low_dimensional_packing_status = 28;
  if (this->low_dimensional_packing_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->low_dimensional_packing_status());
  }

  switch (parameters_case()) {
    // .tensorflow.tpu.AdagradParameters adagrad = 3;
    case kAdagrad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.adagrad_);
      break;
    }
    // .tensorflow.tpu.AdagradMomentumParameters adagrad_momentum = 26;
    case kAdagradMomentum: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.adagrad_momentum_);
      break;
    }
    // .tensorflow.tpu.BoundedAdagradParameters bounded_adagrad = 19;
    case kBoundedAdagrad: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.bounded_adagrad_);
      break;
    }
    // .tensorflow.tpu.StochasticGradientDescentParameters stochastic_gradient_descent = 4;
    case kStochasticGradientDescent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.stochastic_gradient_descent_);
      break;
    }
    // .tensorflow.tpu.FtrlParameters ftrl = 5;
    case kFtrl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.ftrl_);
      break;
    }
    // .tensorflow.tpu.AdamParameters adam = 6;
    case kAdam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.adam_);
      break;
    }
    // .tensorflow.tpu.MomentumParameters momentum = 8;
    case kMomentum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.momentum_);
      break;
    }
    // .tensorflow.tpu.RmsPropParameters rms_prop = 9;
    case kRmsProp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.rms_prop_);
      break;
    }
    // .tensorflow.tpu.CenteredRmsPropParameters centered_rms_prop = 10;
    case kCenteredRmsProp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.centered_rms_prop_);
      break;
    }
    // .tensorflow.tpu.MdlAdagradLightParameters mdl_adagrad_light = 11;
    case kMdlAdagradLight: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.mdl_adagrad_light_);
      break;
    }
    // .tensorflow.tpu.AdadeltaParameters adadelta = 12;
    case kAdadelta: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.adadelta_);
      break;
    }
    // .tensorflow.tpu.ProximalAdagradParameters proximal_adagrad = 14;
    case kProximalAdagrad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.proximal_adagrad_);
      break;
    }
    // .tensorflow.tpu.OnlineYogiParameters online_yogi = 20;
    case kOnlineYogi: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.online_yogi_);
      break;
    }
    // .tensorflow.tpu.ProximalYogiParameters proximal_yogi = 21;
    case kProximalYogi: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.proximal_yogi_);
      break;
    }
    // .tensorflow.tpu.FrequencyEstimatorParameters frequency_estimator = 23;
    case kFrequencyEstimator: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.frequency_estimator_);
      break;
    }
    // .tensorflow.tpu.UserDefinedProgramParameters user_defined_program = 24;
    case kUserDefinedProgram: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.user_defined_program_);
      break;
    }
    // .tensorflow.tpu.AssignParameters assign = 25;
    case kAssign: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.assign_);
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptimizationParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.OptimizationParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizationParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizationParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.OptimizationParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.OptimizationParameters)
    MergeFrom(*source);
  }
}

void OptimizationParameters::MergeFrom(const OptimizationParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.OptimizationParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_clipping_limits()) {
    mutable_clipping_limits()->::tensorflow::tpu::ClippingLimits::MergeFrom(from.clipping_limits());
  }
  if (from.has_gradient_clipping_limits()) {
    mutable_gradient_clipping_limits()->::tensorflow::tpu::ClippingLimits::MergeFrom(from.gradient_clipping_limits());
  }
  if (from.has_learning_rate()) {
    mutable_learning_rate()->::tensorflow::tpu::LearningRate::MergeFrom(from.learning_rate());
  }
  if (from.has_hot_id_replication_configuration()) {
    mutable_hot_id_replication_configuration()->::tensorflow::tpu::HotIdReplicationConfiguration::MergeFrom(from.hot_id_replication_configuration());
  }
  if (from.has_simulated_quantization()) {
    mutable_simulated_quantization()->::tensorflow::tpu::SimulatedQuantization::MergeFrom(from.simulated_quantization());
  }
  if (from.weight_decay_factor() != 0) {
    set_weight_decay_factor(from.weight_decay_factor());
  }
  if (from.gradient_accumulation_status() != 0) {
    set_gradient_accumulation_status(from.gradient_accumulation_status());
  }
  if (from.multiply_weight_decay_factor_by_learning_rate() != 0) {
    set_multiply_weight_decay_factor_by_learning_rate(from.multiply_weight_decay_factor_by_learning_rate());
  }
  if (from.low_dimensional_packing_status() != 0) {
    set_low_dimensional_packing_status(from.low_dimensional_packing_status());
  }
  switch (from.parameters_case()) {
    case kAdagrad: {
      mutable_adagrad()->::tensorflow::tpu::AdagradParameters::MergeFrom(from.adagrad());
      break;
    }
    case kAdagradMomentum: {
      mutable_adagrad_momentum()->::tensorflow::tpu::AdagradMomentumParameters::MergeFrom(from.adagrad_momentum());
      break;
    }
    case kBoundedAdagrad: {
      mutable_bounded_adagrad()->::tensorflow::tpu::BoundedAdagradParameters::MergeFrom(from.bounded_adagrad());
      break;
    }
    case kStochasticGradientDescent: {
      mutable_stochastic_gradient_descent()->::tensorflow::tpu::StochasticGradientDescentParameters::MergeFrom(from.stochastic_gradient_descent());
      break;
    }
    case kFtrl: {
      mutable_ftrl()->::tensorflow::tpu::FtrlParameters::MergeFrom(from.ftrl());
      break;
    }
    case kAdam: {
      mutable_adam()->::tensorflow::tpu::AdamParameters::MergeFrom(from.adam());
      break;
    }
    case kMomentum: {
      mutable_momentum()->::tensorflow::tpu::MomentumParameters::MergeFrom(from.momentum());
      break;
    }
    case kRmsProp: {
      mutable_rms_prop()->::tensorflow::tpu::RmsPropParameters::MergeFrom(from.rms_prop());
      break;
    }
    case kCenteredRmsProp: {
      mutable_centered_rms_prop()->::tensorflow::tpu::CenteredRmsPropParameters::MergeFrom(from.centered_rms_prop());
      break;
    }
    case kMdlAdagradLight: {
      mutable_mdl_adagrad_light()->::tensorflow::tpu::MdlAdagradLightParameters::MergeFrom(from.mdl_adagrad_light());
      break;
    }
    case kAdadelta: {
      mutable_adadelta()->::tensorflow::tpu::AdadeltaParameters::MergeFrom(from.adadelta());
      break;
    }
    case kProximalAdagrad: {
      mutable_proximal_adagrad()->::tensorflow::tpu::ProximalAdagradParameters::MergeFrom(from.proximal_adagrad());
      break;
    }
    case kOnlineYogi: {
      mutable_online_yogi()->::tensorflow::tpu::OnlineYogiParameters::MergeFrom(from.online_yogi());
      break;
    }
    case kProximalYogi: {
      mutable_proximal_yogi()->::tensorflow::tpu::ProximalYogiParameters::MergeFrom(from.proximal_yogi());
      break;
    }
    case kFrequencyEstimator: {
      mutable_frequency_estimator()->::tensorflow::tpu::FrequencyEstimatorParameters::MergeFrom(from.frequency_estimator());
      break;
    }
    case kUserDefinedProgram: {
      mutable_user_defined_program()->::tensorflow::tpu::UserDefinedProgramParameters::MergeFrom(from.user_defined_program());
      break;
    }
    case kAssign: {
      mutable_assign()->::tensorflow::tpu::AssignParameters::MergeFrom(from.assign());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
}

void OptimizationParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.OptimizationParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizationParameters::CopyFrom(const OptimizationParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.OptimizationParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizationParameters::IsInitialized() const {
  return true;
}

void OptimizationParameters::Swap(OptimizationParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizationParameters::InternalSwap(OptimizationParameters* other) {
  using std::swap;
  swap(clipping_limits_, other->clipping_limits_);
  swap(gradient_clipping_limits_, other->gradient_clipping_limits_);
  swap(learning_rate_, other->learning_rate_);
  swap(hot_id_replication_configuration_, other->hot_id_replication_configuration_);
  swap(simulated_quantization_, other->simulated_quantization_);
  swap(weight_decay_factor_, other->weight_decay_factor_);
  swap(gradient_accumulation_status_, other->gradient_accumulation_status_);
  swap(multiply_weight_decay_factor_by_learning_rate_, other->multiply_weight_decay_factor_by_learning_rate_);
  swap(low_dimensional_packing_status_, other->low_dimensional_packing_status_);
  swap(parameters_, other->parameters_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptimizationParameters::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateVariableSpecification_UserDefined::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateVariableSpecification_UserDefined::StateVariableSpecification_UserDefined()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StateVariableSpecification_UserDefined.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.StateVariableSpecification.UserDefined)
}
StateVariableSpecification_UserDefined::StateVariableSpecification_UserDefined(const StateVariableSpecification_UserDefined& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.StateVariableSpecification.UserDefined)
}

void StateVariableSpecification_UserDefined::SharedCtor() {
}

StateVariableSpecification_UserDefined::~StateVariableSpecification_UserDefined() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.StateVariableSpecification.UserDefined)
  SharedDtor();
}

void StateVariableSpecification_UserDefined::SharedDtor() {
}

void StateVariableSpecification_UserDefined::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateVariableSpecification_UserDefined::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateVariableSpecification_UserDefined& StateVariableSpecification_UserDefined::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StateVariableSpecification_UserDefined.base);
  return *internal_default_instance();
}


void StateVariableSpecification_UserDefined::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StateVariableSpecification_UserDefined::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.StateVariableSpecification.UserDefined)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.StateVariableSpecification.UserDefined)
  return false;
#undef DO_
}

void StateVariableSpecification_UserDefined::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.StateVariableSpecification.UserDefined)
}

::google::protobuf::uint8* StateVariableSpecification_UserDefined::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.StateVariableSpecification.UserDefined)
  return target;
}

size_t StateVariableSpecification_UserDefined::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateVariableSpecification_UserDefined::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  GOOGLE_DCHECK_NE(&from, this);
  const StateVariableSpecification_UserDefined* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateVariableSpecification_UserDefined>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.StateVariableSpecification.UserDefined)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.StateVariableSpecification.UserDefined)
    MergeFrom(*source);
  }
}

void StateVariableSpecification_UserDefined::MergeFrom(const StateVariableSpecification_UserDefined& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StateVariableSpecification_UserDefined::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateVariableSpecification_UserDefined::CopyFrom(const StateVariableSpecification_UserDefined& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.StateVariableSpecification.UserDefined)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateVariableSpecification_UserDefined::IsInitialized() const {
  return true;
}

void StateVariableSpecification_UserDefined::Swap(StateVariableSpecification_UserDefined* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateVariableSpecification_UserDefined::InternalSwap(StateVariableSpecification_UserDefined* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateVariableSpecification_UserDefined::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateVariableSpecification_FillWithConstant::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateVariableSpecification_FillWithConstant::kInitialValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateVariableSpecification_FillWithConstant::StateVariableSpecification_FillWithConstant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StateVariableSpecification_FillWithConstant.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
}
StateVariableSpecification_FillWithConstant::StateVariableSpecification_FillWithConstant(const StateVariableSpecification_FillWithConstant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initial_value_ = from.initial_value_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
}

void StateVariableSpecification_FillWithConstant::SharedCtor() {
  initial_value_ = 0;
}

StateVariableSpecification_FillWithConstant::~StateVariableSpecification_FillWithConstant() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  SharedDtor();
}

void StateVariableSpecification_FillWithConstant::SharedDtor() {
}

void StateVariableSpecification_FillWithConstant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateVariableSpecification_FillWithConstant::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateVariableSpecification_FillWithConstant& StateVariableSpecification_FillWithConstant::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StateVariableSpecification_FillWithConstant.base);
  return *internal_default_instance();
}


void StateVariableSpecification_FillWithConstant::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initial_value_ = 0;
  _internal_metadata_.Clear();
}

bool StateVariableSpecification_FillWithConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double initial_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &initial_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  return false;
#undef DO_
}

void StateVariableSpecification_FillWithConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double initial_value = 1;
  if (this->initial_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->initial_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
}

::google::protobuf::uint8* StateVariableSpecification_FillWithConstant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double initial_value = 1;
  if (this->initial_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->initial_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  return target;
}

size_t StateVariableSpecification_FillWithConstant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double initial_value = 1;
  if (this->initial_value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateVariableSpecification_FillWithConstant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  GOOGLE_DCHECK_NE(&from, this);
  const StateVariableSpecification_FillWithConstant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateVariableSpecification_FillWithConstant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
    MergeFrom(*source);
  }
}

void StateVariableSpecification_FillWithConstant::MergeFrom(const StateVariableSpecification_FillWithConstant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.initial_value() != 0) {
    set_initial_value(from.initial_value());
  }
}

void StateVariableSpecification_FillWithConstant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateVariableSpecification_FillWithConstant::CopyFrom(const StateVariableSpecification_FillWithConstant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.StateVariableSpecification.FillWithConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateVariableSpecification_FillWithConstant::IsInitialized() const {
  return true;
}

void StateVariableSpecification_FillWithConstant::Swap(StateVariableSpecification_FillWithConstant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateVariableSpecification_FillWithConstant::InternalSwap(StateVariableSpecification_FillWithConstant* other) {
  using std::swap;
  swap(initial_value_, other->initial_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateVariableSpecification_FillWithConstant::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateVariableSpecification::InitAsDefaultInstance() {
  ::tensorflow::tpu::_StateVariableSpecification_default_instance_.user_defined_ = const_cast< ::tensorflow::tpu::StateVariableSpecification_UserDefined*>(
      ::tensorflow::tpu::StateVariableSpecification_UserDefined::internal_default_instance());
  ::tensorflow::tpu::_StateVariableSpecification_default_instance_.fill_with_constant_ = const_cast< ::tensorflow::tpu::StateVariableSpecification_FillWithConstant*>(
      ::tensorflow::tpu::StateVariableSpecification_FillWithConstant::internal_default_instance());
}
void StateVariableSpecification::set_allocated_user_defined(::tensorflow::tpu::StateVariableSpecification_UserDefined* user_defined) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_usage();
  if (user_defined) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_defined = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_defined, submessage_arena);
    }
    set_has_user_defined();
    usage_.user_defined_ = user_defined;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.StateVariableSpecification.user_defined)
}
void StateVariableSpecification::set_allocated_fill_with_constant(::tensorflow::tpu::StateVariableSpecification_FillWithConstant* fill_with_constant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_usage();
  if (fill_with_constant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fill_with_constant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fill_with_constant, submessage_arena);
    }
    set_has_fill_with_constant();
    usage_.fill_with_constant_ = fill_with_constant;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.StateVariableSpecification.fill_with_constant)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateVariableSpecification::kNameFieldNumber;
const int StateVariableSpecification::kUserDefinedFieldNumber;
const int StateVariableSpecification::kFillWithConstantFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateVariableSpecification::StateVariableSpecification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StateVariableSpecification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.StateVariableSpecification)
}
StateVariableSpecification::StateVariableSpecification(const StateVariableSpecification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_usage();
  switch (from.usage_case()) {
    case kUserDefined: {
      mutable_user_defined()->::tensorflow::tpu::StateVariableSpecification_UserDefined::MergeFrom(from.user_defined());
      break;
    }
    case kFillWithConstant: {
      mutable_fill_with_constant()->::tensorflow::tpu::StateVariableSpecification_FillWithConstant::MergeFrom(from.fill_with_constant());
      break;
    }
    case USAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.StateVariableSpecification)
}

void StateVariableSpecification::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_usage();
}

StateVariableSpecification::~StateVariableSpecification() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.StateVariableSpecification)
  SharedDtor();
}

void StateVariableSpecification::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_usage()) {
    clear_usage();
  }
}

void StateVariableSpecification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateVariableSpecification::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateVariableSpecification& StateVariableSpecification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::scc_info_StateVariableSpecification.base);
  return *internal_default_instance();
}


void StateVariableSpecification::clear_usage() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.tpu.StateVariableSpecification)
  switch (usage_case()) {
    case kUserDefined: {
      delete usage_.user_defined_;
      break;
    }
    case kFillWithConstant: {
      delete usage_.fill_with_constant_;
      break;
    }
    case USAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = USAGE_NOT_SET;
}


void StateVariableSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.StateVariableSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_usage();
  _internal_metadata_.Clear();
}

bool StateVariableSpecification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.StateVariableSpecification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.tpu.StateVariableSpecification.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.StateVariableSpecification.UserDefined user_defined = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_defined()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.StateVariableSpecification.FillWithConstant fill_with_constant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fill_with_constant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.StateVariableSpecification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.StateVariableSpecification)
  return false;
#undef DO_
}

void StateVariableSpecification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.StateVariableSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.tpu.StateVariableSpecification.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .tensorflow.tpu.StateVariableSpecification.UserDefined user_defined = 2;
  if (has_user_defined()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user_defined(), output);
  }

  // .tensorflow.tpu.StateVariableSpecification.FillWithConstant fill_with_constant = 3;
  if (has_fill_with_constant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fill_with_constant(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.StateVariableSpecification)
}

::google::protobuf::uint8* StateVariableSpecification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.StateVariableSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.tpu.StateVariableSpecification.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .tensorflow.tpu.StateVariableSpecification.UserDefined user_defined = 2;
  if (has_user_defined()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user_defined(), deterministic, target);
  }

  // .tensorflow.tpu.StateVariableSpecification.FillWithConstant fill_with_constant = 3;
  if (has_fill_with_constant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fill_with_constant(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.StateVariableSpecification)
  return target;
}

size_t StateVariableSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.StateVariableSpecification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (usage_case()) {
    // .tensorflow.tpu.StateVariableSpecification.UserDefined user_defined = 2;
    case kUserDefined: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *usage_.user_defined_);
      break;
    }
    // .tensorflow.tpu.StateVariableSpecification.FillWithConstant fill_with_constant = 3;
    case kFillWithConstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *usage_.fill_with_constant_);
      break;
    }
    case USAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateVariableSpecification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.StateVariableSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  const StateVariableSpecification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateVariableSpecification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.StateVariableSpecification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.StateVariableSpecification)
    MergeFrom(*source);
  }
}

void StateVariableSpecification::MergeFrom(const StateVariableSpecification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.StateVariableSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.usage_case()) {
    case kUserDefined: {
      mutable_user_defined()->::tensorflow::tpu::StateVariableSpecification_UserDefined::MergeFrom(from.user_defined());
      break;
    }
    case kFillWithConstant: {
      mutable_fill_with_constant()->::tensorflow::tpu::StateVariableSpecification_FillWithConstant::MergeFrom(from.fill_with_constant());
      break;
    }
    case USAGE_NOT_SET: {
      break;
    }
  }
}

void StateVariableSpecification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.StateVariableSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateVariableSpecification::CopyFrom(const StateVariableSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.StateVariableSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateVariableSpecification::IsInitialized() const {
  return true;
}

void StateVariableSpecification::Swap(StateVariableSpecification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateVariableSpecification::InternalSwap(StateVariableSpecification* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(usage_, other->usage_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateVariableSpecification::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2ftpu_2foptimization_5fparameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tpu
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::ClippingLimits* Arena::CreateMaybeMessage< ::tensorflow::tpu::ClippingLimits >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::ClippingLimits >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::SimulatedQuantization* Arena::CreateMaybeMessage< ::tensorflow::tpu::SimulatedQuantization >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::SimulatedQuantization >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::DynamicLearningRate* Arena::CreateMaybeMessage< ::tensorflow::tpu::DynamicLearningRate >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::DynamicLearningRate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::LearningRate* Arena::CreateMaybeMessage< ::tensorflow::tpu::LearningRate >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::LearningRate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::AdagradParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::AdagradParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::AdagradParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::AdagradMomentumParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::AdagradMomentumParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::AdagradMomentumParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::BoundedAdagradParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::BoundedAdagradParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::BoundedAdagradParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::StochasticGradientDescentParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::StochasticGradientDescentParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::StochasticGradientDescentParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::FtrlParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::FtrlParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::FtrlParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::AdamParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::AdamParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::AdamParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::MomentumParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::MomentumParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::MomentumParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::RmsPropParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::RmsPropParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::RmsPropParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::CenteredRmsPropParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::CenteredRmsPropParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::CenteredRmsPropParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::MdlAdagradLightParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::MdlAdagradLightParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::MdlAdagradLightParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::AdadeltaParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::AdadeltaParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::AdadeltaParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::ProximalAdagradParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::ProximalAdagradParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::ProximalAdagradParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::OnlineYogiParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::OnlineYogiParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::OnlineYogiParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::ProximalYogiParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::ProximalYogiParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::ProximalYogiParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::FrequencyEstimatorParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::FrequencyEstimatorParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::FrequencyEstimatorParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::UserDefinedProgramParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::UserDefinedProgramParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::UserDefinedProgramParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::AssignParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::AssignParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::AssignParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::GradientAccumulationStatus* Arena::CreateMaybeMessage< ::tensorflow::tpu::GradientAccumulationStatus >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::GradientAccumulationStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::LowDimensionalPackingStatus* Arena::CreateMaybeMessage< ::tensorflow::tpu::LowDimensionalPackingStatus >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::LowDimensionalPackingStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::HotIdReplicationConfiguration* Arena::CreateMaybeMessage< ::tensorflow::tpu::HotIdReplicationConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::HotIdReplicationConfiguration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::OptimizationParameters* Arena::CreateMaybeMessage< ::tensorflow::tpu::OptimizationParameters >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::OptimizationParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::StateVariableSpecification_UserDefined* Arena::CreateMaybeMessage< ::tensorflow::tpu::StateVariableSpecification_UserDefined >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::StateVariableSpecification_UserDefined >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::StateVariableSpecification_FillWithConstant* Arena::CreateMaybeMessage< ::tensorflow::tpu::StateVariableSpecification_FillWithConstant >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::StateVariableSpecification_FillWithConstant >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::StateVariableSpecification* Arena::CreateMaybeMessage< ::tensorflow::tpu::StateVariableSpecification >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::StateVariableSpecification >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
