// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/model.proto

#include "tensorflow/core/framework/model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModelProto_Node_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModelProto_OptimizationParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ModelProto_Node;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ModelProto_NodesEntry_DoNotUse;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto
namespace tensorflow {
namespace data {
namespace model {
class ModelProto_Node_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelProto_Node_Parameter>
      _instance;
} _ModelProto_Node_Parameter_default_instance_;
class ModelProto_NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelProto_Node>
      _instance;
} _ModelProto_Node_default_instance_;
class ModelProto_NodesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelProto_NodesEntry_DoNotUse>
      _instance;
} _ModelProto_NodesEntry_DoNotUse_default_instance_;
class ModelProto_OptimizationParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelProto_OptimizationParams>
      _instance;
} _ModelProto_OptimizationParams_default_instance_;
class ModelProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelProto>
      _instance;
} _ModelProto_default_instance_;
}  // namespace model
}  // namespace data
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto {
static void InitDefaultsModelProto_Node_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::model::_ModelProto_Node_Parameter_default_instance_;
    new (ptr) ::tensorflow::data::model::ModelProto_Node_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::model::ModelProto_Node_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModelProto_Node_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModelProto_Node_Parameter}, {}};

static void InitDefaultsModelProto_Node() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::model::_ModelProto_Node_default_instance_;
    new (ptr) ::tensorflow::data::model::ModelProto_Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::model::ModelProto_Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModelProto_Node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModelProto_Node}, {
      &protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_Node_Parameter.base,}};

static void InitDefaultsModelProto_NodesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::model::_ModelProto_NodesEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse();
  }
  ::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModelProto_NodesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModelProto_NodesEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_Node.base,}};

static void InitDefaultsModelProto_OptimizationParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::model::_ModelProto_OptimizationParams_default_instance_;
    new (ptr) ::tensorflow::data::model::ModelProto_OptimizationParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::model::ModelProto_OptimizationParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModelProto_OptimizationParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModelProto_OptimizationParams}, {}};

static void InitDefaultsModelProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::data::model::_ModelProto_default_instance_;
    new (ptr) ::tensorflow::data::model::ModelProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::data::model::ModelProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ModelProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsModelProto}, {
      &protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_NodesEntry_DoNotUse.base,
      &protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_OptimizationParams.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ModelProto_Node_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelProto_Node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelProto_NodesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelProto_OptimizationParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelProto.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node_Parameter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node_Parameter, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node_Parameter, state_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node_Parameter, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node_Parameter, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node_Parameter, tunable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, autotune_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, buffered_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, buffered_elements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, bytes_consumed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, bytes_produced_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, num_elements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, processing_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, record_metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, input_processing_time_sum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, input_processing_time_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, node_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_Node, memory_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_OptimizationParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_OptimizationParams, algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_OptimizationParams, cpu_budget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_OptimizationParams, ram_budget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto_OptimizationParams, model_input_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto, id_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::data::model::ModelProto, optimization_params_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::data::model::ModelProto_Node_Parameter)},
  { 11, -1, sizeof(::tensorflow::data::model::ModelProto_Node)},
  { 33, 40, sizeof(::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse)},
  { 42, -1, sizeof(::tensorflow::data::model::ModelProto_OptimizationParams)},
  { 51, -1, sizeof(::tensorflow::data::model::ModelProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::model::_ModelProto_Node_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::model::_ModelProto_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::model::_ModelProto_NodesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::model::_ModelProto_OptimizationParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::data::model::_ModelProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/framework/model.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%tensorflow/core/framework/model.proto\022"
      "\025tensorflow.data.model\"\364\007\n\nModelProto\022;\n"
      "\005nodes\030\001 \003(\0132,.tensorflow.data.model.Mod"
      "elProto.NodesEntry\022\016\n\006output\030\002 \001(\003\022\022\n\nid"
      "_counter\030\003 \001(\003\022Q\n\023optimization_params\030\005 "
      "\001(\01324.tensorflow.data.model.ModelProto.O"
      "ptimizationParams\032\277\004\n\004Node\022\n\n\002id\030\001 \001(\003\022\014"
      "\n\004name\030\002 \001(\t\022\020\n\010autotune\030\003 \001(\010\022\026\n\016buffer"
      "ed_bytes\030\004 \001(\003\022\031\n\021buffered_elements\030\005 \001("
      "\003\022\026\n\016bytes_consumed\030\006 \001(\003\022\026\n\016bytes_produ"
      "ced\030\007 \001(\003\022\024\n\014num_elements\030\010 \001(\003\022\027\n\017proce"
      "ssing_time\030\t \001(\003\022\026\n\016record_metrics\030\n \001(\010"
      "\022D\n\nparameters\030\013 \003(\01320.tensorflow.data.m"
      "odel.ModelProto.Node.Parameter\022!\n\031input_"
      "processing_time_sum\030\014 \001(\001\022#\n\033input_proce"
      "ssing_time_count\030\r \001(\003\022\016\n\006inputs\030\016 \003(\003\0224"
      "\n\nnode_class\030\017 \001(\0162 .tensorflow.data.mod"
      "el.NodeClass\022\r\n\005ratio\030\020 \001(\001\022\024\n\014memory_ra"
      "tio\030\021 \001(\001\032h\n\tParameter\022\014\n\004name\030\001 \001(\t\022\r\n\005"
      "value\030\002 \001(\001\022\023\n\013state_value\030\003 \001(\001\022\013\n\003min\030"
      "\004 \001(\001\022\013\n\003max\030\005 \001(\001\022\017\n\007tunable\030\006 \001(\010\032T\n\nN"
      "odesEntry\022\013\n\003key\030\001 \001(\003\0225\n\005value\030\002 \001(\0132&."
      "tensorflow.data.model.ModelProto.Node:\0028"
      "\001\032\223\001\n\022OptimizationParams\022;\n\talgorithm\030\001 "
      "\001(\0162(.tensorflow.data.model.AutotuneAlgo"
      "rithm\022\022\n\ncpu_budget\030\002 \001(\003\022\022\n\nram_budget\030"
      "\003 \001(\003\022\030\n\020model_input_time\030\004 \001(\001J\004\010\004\020\005*\234\001"
      "\n\tNodeClass\022\013\n\007UNKNOWN\020\000\022\023\n\017INTERLEAVE_M"
      "ANY\020\001\022\031\n\025ASYNC_INTERLEAVE_MANY\020\002\022\017\n\013KNOW"
      "N_RATIO\020\003\022\025\n\021ASYNC_KNOWN_RATIO\020\004\022\021\n\rUNKN"
      "OWN_RATIO\020\005\022\027\n\023ASYNC_UNKNOWN_RATIO\020\006*[\n\021"
      "AutotuneAlgorithm\022\013\n\007DEFAULT\020\000\022\016\n\nHILL_C"
      "LIMB\020\001\022\024\n\020GRADIENT_DESCENT\020\002\022\023\n\017MAX_PARA"
      "LLELISM\020\003BQZLgithub.com/tensorflow/tenso"
      "rflow/tensorflow/go/core/framework/model"
      "_go_proto\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1420);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/framework/model.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto
namespace tensorflow {
namespace data {
namespace model {
const ::google::protobuf::EnumDescriptor* NodeClass_descriptor() {
  protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_enum_descriptors[0];
}
bool NodeClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AutotuneAlgorithm_descriptor() {
  protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_enum_descriptors[1];
}
bool AutotuneAlgorithm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ModelProto_Node_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelProto_Node_Parameter::kNameFieldNumber;
const int ModelProto_Node_Parameter::kValueFieldNumber;
const int ModelProto_Node_Parameter::kStateValueFieldNumber;
const int ModelProto_Node_Parameter::kMinFieldNumber;
const int ModelProto_Node_Parameter::kMaxFieldNumber;
const int ModelProto_Node_Parameter::kTunableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelProto_Node_Parameter::ModelProto_Node_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_Node_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.model.ModelProto.Node.Parameter)
}
ModelProto_Node_Parameter::ModelProto_Node_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_Node_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.data.model.ModelProto.Node.Parameter)
}
ModelProto_Node_Parameter::ModelProto_Node_Parameter(const ModelProto_Node_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&tunable_) -
    reinterpret_cast<char*>(&value_)) + sizeof(tunable_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.model.ModelProto.Node.Parameter)
}

void ModelProto_Node_Parameter::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tunable_) -
      reinterpret_cast<char*>(&value_)) + sizeof(tunable_));
}

ModelProto_Node_Parameter::~ModelProto_Node_Parameter() {
  // @@protoc_insertion_point(destructor:tensorflow.data.model.ModelProto.Node.Parameter)
  SharedDtor();
}

void ModelProto_Node_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModelProto_Node_Parameter::ArenaDtor(void* object) {
  ModelProto_Node_Parameter* _this = reinterpret_cast< ModelProto_Node_Parameter* >(object);
  (void)_this;
}
void ModelProto_Node_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelProto_Node_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelProto_Node_Parameter::descriptor() {
  ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelProto_Node_Parameter& ModelProto_Node_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_Node_Parameter.base);
  return *internal_default_instance();
}


void ModelProto_Node_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.model.ModelProto.Node.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tunable_) -
      reinterpret_cast<char*>(&value_)) + sizeof(tunable_));
  _internal_metadata_.Clear();
}

bool ModelProto_Node_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.model.ModelProto.Node.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.model.ModelProto.Node.Parameter.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double state_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &state_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double min = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double max = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tunable = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tunable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.model.ModelProto.Node.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.model.ModelProto.Node.Parameter)
  return false;
#undef DO_
}

void ModelProto_Node_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.model.ModelProto.Node.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.model.ModelProto.Node.Parameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  // double state_value = 3;
  if (this->state_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->state_value(), output);
  }

  // double min = 4;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->min(), output);
  }

  // double max = 5;
  if (this->max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->max(), output);
  }

  // bool tunable = 6;
  if (this->tunable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->tunable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.model.ModelProto.Node.Parameter)
}

::google::protobuf::uint8* ModelProto_Node_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.model.ModelProto.Node.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.model.ModelProto.Node.Parameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  // double state_value = 3;
  if (this->state_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->state_value(), target);
  }

  // double min = 4;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->min(), target);
  }

  // double max = 5;
  if (this->max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->max(), target);
  }

  // bool tunable = 6;
  if (this->tunable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->tunable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.model.ModelProto.Node.Parameter)
  return target;
}

size_t ModelProto_Node_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.model.ModelProto.Node.Parameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  // double state_value = 3;
  if (this->state_value() != 0) {
    total_size += 1 + 8;
  }

  // double min = 4;
  if (this->min() != 0) {
    total_size += 1 + 8;
  }

  // double max = 5;
  if (this->max() != 0) {
    total_size += 1 + 8;
  }

  // bool tunable = 6;
  if (this->tunable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelProto_Node_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.model.ModelProto.Node.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelProto_Node_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelProto_Node_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.model.ModelProto.Node.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.model.ModelProto.Node.Parameter)
    MergeFrom(*source);
  }
}

void ModelProto_Node_Parameter::MergeFrom(const ModelProto_Node_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.model.ModelProto.Node.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.state_value() != 0) {
    set_state_value(from.state_value());
  }
  if (from.min() != 0) {
    set_min(from.min());
  }
  if (from.max() != 0) {
    set_max(from.max());
  }
  if (from.tunable() != 0) {
    set_tunable(from.tunable());
  }
}

void ModelProto_Node_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.model.ModelProto.Node.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelProto_Node_Parameter::CopyFrom(const ModelProto_Node_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.model.ModelProto.Node.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelProto_Node_Parameter::IsInitialized() const {
  return true;
}

void ModelProto_Node_Parameter::Swap(ModelProto_Node_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelProto_Node_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelProto_Node_Parameter::UnsafeArenaSwap(ModelProto_Node_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelProto_Node_Parameter::InternalSwap(ModelProto_Node_Parameter* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(state_value_, other->state_value_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(tunable_, other->tunable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelProto_Node_Parameter::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelProto_Node::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelProto_Node::kIdFieldNumber;
const int ModelProto_Node::kNameFieldNumber;
const int ModelProto_Node::kAutotuneFieldNumber;
const int ModelProto_Node::kBufferedBytesFieldNumber;
const int ModelProto_Node::kBufferedElementsFieldNumber;
const int ModelProto_Node::kBytesConsumedFieldNumber;
const int ModelProto_Node::kBytesProducedFieldNumber;
const int ModelProto_Node::kNumElementsFieldNumber;
const int ModelProto_Node::kProcessingTimeFieldNumber;
const int ModelProto_Node::kRecordMetricsFieldNumber;
const int ModelProto_Node::kParametersFieldNumber;
const int ModelProto_Node::kInputProcessingTimeSumFieldNumber;
const int ModelProto_Node::kInputProcessingTimeCountFieldNumber;
const int ModelProto_Node::kInputsFieldNumber;
const int ModelProto_Node::kNodeClassFieldNumber;
const int ModelProto_Node::kRatioFieldNumber;
const int ModelProto_Node::kMemoryRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelProto_Node::ModelProto_Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_Node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.model.ModelProto.Node)
}
ModelProto_Node::ModelProto_Node(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  parameters_(arena),
  inputs_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_Node.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.data.model.ModelProto.Node)
}
ModelProto_Node::ModelProto_Node(const ModelProto_Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parameters_(from.parameters_),
      inputs_(from.inputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&memory_ratio_) -
    reinterpret_cast<char*>(&id_)) + sizeof(memory_ratio_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.model.ModelProto.Node)
}

void ModelProto_Node::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_ratio_) -
      reinterpret_cast<char*>(&id_)) + sizeof(memory_ratio_));
}

ModelProto_Node::~ModelProto_Node() {
  // @@protoc_insertion_point(destructor:tensorflow.data.model.ModelProto.Node)
  SharedDtor();
}

void ModelProto_Node::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModelProto_Node::ArenaDtor(void* object) {
  ModelProto_Node* _this = reinterpret_cast< ModelProto_Node* >(object);
  (void)_this;
}
void ModelProto_Node::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelProto_Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelProto_Node::descriptor() {
  ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelProto_Node& ModelProto_Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_Node.base);
  return *internal_default_instance();
}


void ModelProto_Node::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.model.ModelProto.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  inputs_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_ratio_) -
      reinterpret_cast<char*>(&id_)) + sizeof(memory_ratio_));
  _internal_metadata_.Clear();
}

bool ModelProto_Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.model.ModelProto.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.data.model.ModelProto.Node.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool autotune = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autotune_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 buffered_bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buffered_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 buffered_elements = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buffered_elements_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_consumed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_consumed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_produced = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_produced_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_elements = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_elements_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 processing_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &processing_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool record_metrics = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &record_metrics_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.data.model.ModelProto.Node.Parameter parameters = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double input_processing_time_sum = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &input_processing_time_sum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 input_processing_time_count = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &input_processing_time_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 inputs = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_inputs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 114u, input, this->mutable_inputs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.data.model.NodeClass node_class = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_node_class(static_cast< ::tensorflow::data::model::NodeClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ratio = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double memory_ratio = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &memory_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.model.ModelProto.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.model.ModelProto.Node)
  return false;
#undef DO_
}

void ModelProto_Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.model.ModelProto.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.model.ModelProto.Node.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bool autotune = 3;
  if (this->autotune() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->autotune(), output);
  }

  // int64 buffered_bytes = 4;
  if (this->buffered_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->buffered_bytes(), output);
  }

  // int64 buffered_elements = 5;
  if (this->buffered_elements() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->buffered_elements(), output);
  }

  // int64 bytes_consumed = 6;
  if (this->bytes_consumed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->bytes_consumed(), output);
  }

  // int64 bytes_produced = 7;
  if (this->bytes_produced() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->bytes_produced(), output);
  }

  // int64 num_elements = 8;
  if (this->num_elements() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->num_elements(), output);
  }

  // int64 processing_time = 9;
  if (this->processing_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->processing_time(), output);
  }

  // bool record_metrics = 10;
  if (this->record_metrics() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->record_metrics(), output);
  }

  // repeated .tensorflow.data.model.ModelProto.Node.Parameter parameters = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->parameters(static_cast<int>(i)),
      output);
  }

  // double input_processing_time_sum = 12;
  if (this->input_processing_time_sum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->input_processing_time_sum(), output);
  }

  // int64 input_processing_time_count = 13;
  if (this->input_processing_time_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->input_processing_time_count(), output);
  }

  // repeated int64 inputs = 14;
  if (this->inputs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _inputs_cached_byte_size_));
  }
  for (int i = 0, n = this->inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->inputs(i), output);
  }

  // .tensorflow.data.model.NodeClass node_class = 15;
  if (this->node_class() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->node_class(), output);
  }

  // double ratio = 16;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->ratio(), output);
  }

  // double memory_ratio = 17;
  if (this->memory_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->memory_ratio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.model.ModelProto.Node)
}

::google::protobuf::uint8* ModelProto_Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.model.ModelProto.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.data.model.ModelProto.Node.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bool autotune = 3;
  if (this->autotune() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->autotune(), target);
  }

  // int64 buffered_bytes = 4;
  if (this->buffered_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->buffered_bytes(), target);
  }

  // int64 buffered_elements = 5;
  if (this->buffered_elements() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->buffered_elements(), target);
  }

  // int64 bytes_consumed = 6;
  if (this->bytes_consumed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->bytes_consumed(), target);
  }

  // int64 bytes_produced = 7;
  if (this->bytes_produced() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->bytes_produced(), target);
  }

  // int64 num_elements = 8;
  if (this->num_elements() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->num_elements(), target);
  }

  // int64 processing_time = 9;
  if (this->processing_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->processing_time(), target);
  }

  // bool record_metrics = 10;
  if (this->record_metrics() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->record_metrics(), target);
  }

  // repeated .tensorflow.data.model.ModelProto.Node.Parameter parameters = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->parameters(static_cast<int>(i)), deterministic, target);
  }

  // double input_processing_time_sum = 12;
  if (this->input_processing_time_sum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->input_processing_time_sum(), target);
  }

  // int64 input_processing_time_count = 13;
  if (this->input_processing_time_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->input_processing_time_count(), target);
  }

  // repeated int64 inputs = 14;
  if (this->inputs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _inputs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->inputs_, target);
  }

  // .tensorflow.data.model.NodeClass node_class = 15;
  if (this->node_class() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->node_class(), target);
  }

  // double ratio = 16;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->ratio(), target);
  }

  // double memory_ratio = 17;
  if (this->memory_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->memory_ratio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.model.ModelProto.Node)
  return target;
}

size_t ModelProto_Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.model.ModelProto.Node)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.data.model.ModelProto.Node.Parameter parameters = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameters(static_cast<int>(i)));
    }
  }

  // repeated int64 inputs = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->inputs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _inputs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 buffered_bytes = 4;
  if (this->buffered_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->buffered_bytes());
  }

  // int64 buffered_elements = 5;
  if (this->buffered_elements() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->buffered_elements());
  }

  // int64 bytes_consumed = 6;
  if (this->bytes_consumed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_consumed());
  }

  // int64 bytes_produced = 7;
  if (this->bytes_produced() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_produced());
  }

  // int64 num_elements = 8;
  if (this->num_elements() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_elements());
  }

  // int64 processing_time = 9;
  if (this->processing_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->processing_time());
  }

  // bool autotune = 3;
  if (this->autotune() != 0) {
    total_size += 1 + 1;
  }

  // bool record_metrics = 10;
  if (this->record_metrics() != 0) {
    total_size += 1 + 1;
  }

  // .tensorflow.data.model.NodeClass node_class = 15;
  if (this->node_class() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->node_class());
  }

  // double input_processing_time_sum = 12;
  if (this->input_processing_time_sum() != 0) {
    total_size += 1 + 8;
  }

  // int64 input_processing_time_count = 13;
  if (this->input_processing_time_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->input_processing_time_count());
  }

  // double ratio = 16;
  if (this->ratio() != 0) {
    total_size += 2 + 8;
  }

  // double memory_ratio = 17;
  if (this->memory_ratio() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelProto_Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.model.ModelProto.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelProto_Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelProto_Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.model.ModelProto.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.model.ModelProto.Node)
    MergeFrom(*source);
  }
}

void ModelProto_Node::MergeFrom(const ModelProto_Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.model.ModelProto.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  inputs_.MergeFrom(from.inputs_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.buffered_bytes() != 0) {
    set_buffered_bytes(from.buffered_bytes());
  }
  if (from.buffered_elements() != 0) {
    set_buffered_elements(from.buffered_elements());
  }
  if (from.bytes_consumed() != 0) {
    set_bytes_consumed(from.bytes_consumed());
  }
  if (from.bytes_produced() != 0) {
    set_bytes_produced(from.bytes_produced());
  }
  if (from.num_elements() != 0) {
    set_num_elements(from.num_elements());
  }
  if (from.processing_time() != 0) {
    set_processing_time(from.processing_time());
  }
  if (from.autotune() != 0) {
    set_autotune(from.autotune());
  }
  if (from.record_metrics() != 0) {
    set_record_metrics(from.record_metrics());
  }
  if (from.node_class() != 0) {
    set_node_class(from.node_class());
  }
  if (from.input_processing_time_sum() != 0) {
    set_input_processing_time_sum(from.input_processing_time_sum());
  }
  if (from.input_processing_time_count() != 0) {
    set_input_processing_time_count(from.input_processing_time_count());
  }
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
  if (from.memory_ratio() != 0) {
    set_memory_ratio(from.memory_ratio());
  }
}

void ModelProto_Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.model.ModelProto.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelProto_Node::CopyFrom(const ModelProto_Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.model.ModelProto.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelProto_Node::IsInitialized() const {
  return true;
}

void ModelProto_Node::Swap(ModelProto_Node* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelProto_Node* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelProto_Node::UnsafeArenaSwap(ModelProto_Node* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelProto_Node::InternalSwap(ModelProto_Node* other) {
  using std::swap;
  CastToBase(&parameters_)->InternalSwap(CastToBase(&other->parameters_));
  inputs_.InternalSwap(&other->inputs_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(buffered_bytes_, other->buffered_bytes_);
  swap(buffered_elements_, other->buffered_elements_);
  swap(bytes_consumed_, other->bytes_consumed_);
  swap(bytes_produced_, other->bytes_produced_);
  swap(num_elements_, other->num_elements_);
  swap(processing_time_, other->processing_time_);
  swap(autotune_, other->autotune_);
  swap(record_metrics_, other->record_metrics_);
  swap(node_class_, other->node_class_);
  swap(input_processing_time_sum_, other->input_processing_time_sum_);
  swap(input_processing_time_count_, other->input_processing_time_count_);
  swap(ratio_, other->ratio_);
  swap(memory_ratio_, other->memory_ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelProto_Node::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ModelProto_NodesEntry_DoNotUse::ModelProto_NodesEntry_DoNotUse() {}
ModelProto_NodesEntry_DoNotUse::ModelProto_NodesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ModelProto_NodesEntry_DoNotUse::MergeFrom(const ModelProto_NodesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ModelProto_NodesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[2];
}
void ModelProto_NodesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ModelProto_OptimizationParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelProto_OptimizationParams::kAlgorithmFieldNumber;
const int ModelProto_OptimizationParams::kCpuBudgetFieldNumber;
const int ModelProto_OptimizationParams::kRamBudgetFieldNumber;
const int ModelProto_OptimizationParams::kModelInputTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelProto_OptimizationParams::ModelProto_OptimizationParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_OptimizationParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.model.ModelProto.OptimizationParams)
}
ModelProto_OptimizationParams::ModelProto_OptimizationParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_OptimizationParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.data.model.ModelProto.OptimizationParams)
}
ModelProto_OptimizationParams::ModelProto_OptimizationParams(const ModelProto_OptimizationParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cpu_budget_, &from.cpu_budget_,
    static_cast<size_t>(reinterpret_cast<char*>(&algorithm_) -
    reinterpret_cast<char*>(&cpu_budget_)) + sizeof(algorithm_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.model.ModelProto.OptimizationParams)
}

void ModelProto_OptimizationParams::SharedCtor() {
  ::memset(&cpu_budget_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&algorithm_) -
      reinterpret_cast<char*>(&cpu_budget_)) + sizeof(algorithm_));
}

ModelProto_OptimizationParams::~ModelProto_OptimizationParams() {
  // @@protoc_insertion_point(destructor:tensorflow.data.model.ModelProto.OptimizationParams)
  SharedDtor();
}

void ModelProto_OptimizationParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ModelProto_OptimizationParams::ArenaDtor(void* object) {
  ModelProto_OptimizationParams* _this = reinterpret_cast< ModelProto_OptimizationParams* >(object);
  (void)_this;
}
void ModelProto_OptimizationParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelProto_OptimizationParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelProto_OptimizationParams::descriptor() {
  ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelProto_OptimizationParams& ModelProto_OptimizationParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto_OptimizationParams.base);
  return *internal_default_instance();
}


void ModelProto_OptimizationParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.model.ModelProto.OptimizationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cpu_budget_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&algorithm_) -
      reinterpret_cast<char*>(&cpu_budget_)) + sizeof(algorithm_));
  _internal_metadata_.Clear();
}

bool ModelProto_OptimizationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.model.ModelProto.OptimizationParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.data.model.AutotuneAlgorithm algorithm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_algorithm(static_cast< ::tensorflow::data::model::AutotuneAlgorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 cpu_budget = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cpu_budget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ram_budget = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ram_budget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double model_input_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &model_input_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.model.ModelProto.OptimizationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.model.ModelProto.OptimizationParams)
  return false;
#undef DO_
}

void ModelProto_OptimizationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.model.ModelProto.OptimizationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.model.AutotuneAlgorithm algorithm = 1;
  if (this->algorithm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->algorithm(), output);
  }

  // int64 cpu_budget = 2;
  if (this->cpu_budget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cpu_budget(), output);
  }

  // int64 ram_budget = 3;
  if (this->ram_budget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ram_budget(), output);
  }

  // double model_input_time = 4;
  if (this->model_input_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->model_input_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.model.ModelProto.OptimizationParams)
}

::google::protobuf::uint8* ModelProto_OptimizationParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.model.ModelProto.OptimizationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.data.model.AutotuneAlgorithm algorithm = 1;
  if (this->algorithm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->algorithm(), target);
  }

  // int64 cpu_budget = 2;
  if (this->cpu_budget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cpu_budget(), target);
  }

  // int64 ram_budget = 3;
  if (this->ram_budget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ram_budget(), target);
  }

  // double model_input_time = 4;
  if (this->model_input_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->model_input_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.model.ModelProto.OptimizationParams)
  return target;
}

size_t ModelProto_OptimizationParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.model.ModelProto.OptimizationParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 cpu_budget = 2;
  if (this->cpu_budget() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cpu_budget());
  }

  // int64 ram_budget = 3;
  if (this->ram_budget() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ram_budget());
  }

  // double model_input_time = 4;
  if (this->model_input_time() != 0) {
    total_size += 1 + 8;
  }

  // .tensorflow.data.model.AutotuneAlgorithm algorithm = 1;
  if (this->algorithm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->algorithm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelProto_OptimizationParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.model.ModelProto.OptimizationParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelProto_OptimizationParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelProto_OptimizationParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.model.ModelProto.OptimizationParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.model.ModelProto.OptimizationParams)
    MergeFrom(*source);
  }
}

void ModelProto_OptimizationParams::MergeFrom(const ModelProto_OptimizationParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.model.ModelProto.OptimizationParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpu_budget() != 0) {
    set_cpu_budget(from.cpu_budget());
  }
  if (from.ram_budget() != 0) {
    set_ram_budget(from.ram_budget());
  }
  if (from.model_input_time() != 0) {
    set_model_input_time(from.model_input_time());
  }
  if (from.algorithm() != 0) {
    set_algorithm(from.algorithm());
  }
}

void ModelProto_OptimizationParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.model.ModelProto.OptimizationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelProto_OptimizationParams::CopyFrom(const ModelProto_OptimizationParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.model.ModelProto.OptimizationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelProto_OptimizationParams::IsInitialized() const {
  return true;
}

void ModelProto_OptimizationParams::Swap(ModelProto_OptimizationParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelProto_OptimizationParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelProto_OptimizationParams::UnsafeArenaSwap(ModelProto_OptimizationParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelProto_OptimizationParams::InternalSwap(ModelProto_OptimizationParams* other) {
  using std::swap;
  swap(cpu_budget_, other->cpu_budget_);
  swap(ram_budget_, other->ram_budget_);
  swap(model_input_time_, other->model_input_time_);
  swap(algorithm_, other->algorithm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelProto_OptimizationParams::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelProto::InitAsDefaultInstance() {
  ::tensorflow::data::model::_ModelProto_default_instance_._instance.get_mutable()->optimization_params_ = const_cast< ::tensorflow::data::model::ModelProto_OptimizationParams*>(
      ::tensorflow::data::model::ModelProto_OptimizationParams::internal_default_instance());
}
void ModelProto::unsafe_arena_set_allocated_optimization_params(
    ::tensorflow::data::model::ModelProto_OptimizationParams* optimization_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete optimization_params_;
  }
  optimization_params_ = optimization_params;
  if (optimization_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.data.model.ModelProto.optimization_params)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelProto::kNodesFieldNumber;
const int ModelProto::kOutputFieldNumber;
const int ModelProto::kIdCounterFieldNumber;
const int ModelProto::kOptimizationParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelProto::ModelProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.data.model.ModelProto)
}
ModelProto::ModelProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  nodes_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.data.model.ModelProto)
}
ModelProto::ModelProto(const ModelProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodes_.MergeFrom(from.nodes_);
  if (from.has_optimization_params()) {
    optimization_params_ = new ::tensorflow::data::model::ModelProto_OptimizationParams(*from.optimization_params_);
  } else {
    optimization_params_ = NULL;
  }
  ::memcpy(&output_, &from.output_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_counter_) -
    reinterpret_cast<char*>(&output_)) + sizeof(id_counter_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.data.model.ModelProto)
}

void ModelProto::SharedCtor() {
  ::memset(&optimization_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_counter_) -
      reinterpret_cast<char*>(&optimization_params_)) + sizeof(id_counter_));
}

ModelProto::~ModelProto() {
  // @@protoc_insertion_point(destructor:tensorflow.data.model.ModelProto)
  SharedDtor();
}

void ModelProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete optimization_params_;
}

void ModelProto::ArenaDtor(void* object) {
  ModelProto* _this = reinterpret_cast< ModelProto* >(object);
  (void)_this;
}
void ModelProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelProto::descriptor() {
  ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelProto& ModelProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::scc_info_ModelProto.base);
  return *internal_default_instance();
}


void ModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.data.model.ModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  if (GetArenaNoVirtual() == NULL && optimization_params_ != NULL) {
    delete optimization_params_;
  }
  optimization_params_ = NULL;
  ::memset(&output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_counter_) -
      reinterpret_cast<char*>(&output_)) + sizeof(id_counter_));
  _internal_metadata_.Clear();
}

bool ModelProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.data.model.ModelProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, .tensorflow.data.model.ModelProto.Node> nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ModelProto_NodesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ModelProto_NodesEntry_DoNotUse,
              ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node > > parser(&nodes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id_counter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.data.model.ModelProto.OptimizationParams optimization_params = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optimization_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.data.model.ModelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.data.model.ModelProto)
  return false;
#undef DO_
}

void ModelProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.data.model.ModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .tensorflow.data.model.ModelProto.Node> nodes = 1;
  if (!this->nodes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->nodes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->nodes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::const_iterator
          it = this->nodes().begin();
          it != this->nodes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ModelProto_NodesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(nodes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<ModelProto_NodesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::const_iterator
          it = this->nodes().begin();
          it != this->nodes().end(); ++it) {
        entry.reset(nodes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // int64 output = 2;
  if (this->output() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->output(), output);
  }

  // int64 id_counter = 3;
  if (this->id_counter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->id_counter(), output);
  }

  // .tensorflow.data.model.ModelProto.OptimizationParams optimization_params = 5;
  if (this->has_optimization_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_optimization_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.data.model.ModelProto)
}

::google::protobuf::uint8* ModelProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.data.model.ModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .tensorflow.data.model.ModelProto.Node> nodes = 1;
  if (!this->nodes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->nodes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->nodes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::const_iterator
          it = this->nodes().begin();
          it != this->nodes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ModelProto_NodesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(nodes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<ModelProto_NodesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::const_iterator
          it = this->nodes().begin();
          it != this->nodes().end(); ++it) {
        entry.reset(nodes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // int64 output = 2;
  if (this->output() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->output(), target);
  }

  // int64 id_counter = 3;
  if (this->id_counter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->id_counter(), target);
  }

  // .tensorflow.data.model.ModelProto.OptimizationParams optimization_params = 5;
  if (this->has_optimization_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_optimization_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.data.model.ModelProto)
  return target;
}

size_t ModelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.data.model.ModelProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int64, .tensorflow.data.model.ModelProto.Node> nodes = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->nodes_size());
  {
    ::std::unique_ptr<ModelProto_NodesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::data::model::ModelProto_Node >::const_iterator
        it = this->nodes().begin();
        it != this->nodes().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(nodes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // .tensorflow.data.model.ModelProto.OptimizationParams optimization_params = 5;
  if (this->has_optimization_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optimization_params_);
  }

  // int64 output = 2;
  if (this->output() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->output());
  }

  // int64 id_counter = 3;
  if (this->id_counter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id_counter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.data.model.ModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.data.model.ModelProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.data.model.ModelProto)
    MergeFrom(*source);
  }
}

void ModelProto::MergeFrom(const ModelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.data.model.ModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  if (from.has_optimization_params()) {
    mutable_optimization_params()->::tensorflow::data::model::ModelProto_OptimizationParams::MergeFrom(from.optimization_params());
  }
  if (from.output() != 0) {
    set_output(from.output());
  }
  if (from.id_counter() != 0) {
    set_id_counter(from.id_counter());
  }
}

void ModelProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.data.model.ModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelProto::CopyFrom(const ModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.data.model.ModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelProto::IsInitialized() const {
  return true;
}

void ModelProto::Swap(ModelProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelProto::UnsafeArenaSwap(ModelProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelProto::InternalSwap(ModelProto* other) {
  using std::swap;
  nodes_.Swap(&other->nodes_);
  swap(optimization_params_, other->optimization_params_);
  swap(output_, other->output_);
  swap(id_counter_, other->id_counter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace data
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::model::ModelProto_Node_Parameter* Arena::CreateMaybeMessage< ::tensorflow::data::model::ModelProto_Node_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::data::model::ModelProto_Node_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::model::ModelProto_Node* Arena::CreateMaybeMessage< ::tensorflow::data::model::ModelProto_Node >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::data::model::ModelProto_Node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::data::model::ModelProto_NodesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::model::ModelProto_OptimizationParams* Arena::CreateMaybeMessage< ::tensorflow::data::model::ModelProto_OptimizationParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::data::model::ModelProto_OptimizationParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::data::model::ModelProto* Arena::CreateMaybeMessage< ::tensorflow::data::model::ModelProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::data::model::ModelProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
