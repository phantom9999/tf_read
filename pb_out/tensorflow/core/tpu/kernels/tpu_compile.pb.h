// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/tpu/kernels/tpu_compile.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompile_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompile_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/core/framework/attr_value.pb.h"
#include "tensorflow/core/framework/function.pb.h"
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/protobuf/tpu/compile_metadata.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompile_2eproto 

namespace protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompile_2eproto
namespace tensorflow {
namespace tpu {
class TpuCompilationRequestProto;
class TpuCompilationRequestProtoDefaultTypeInternal;
extern TpuCompilationRequestProtoDefaultTypeInternal _TpuCompilationRequestProto_default_instance_;
}  // namespace tpu
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::tpu::TpuCompilationRequestProto* Arena::CreateMaybeMessage<::tensorflow::tpu::TpuCompilationRequestProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace tpu {

// ===================================================================

class TpuCompilationRequestProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tpu.TpuCompilationRequestProto) */ {
 public:
  TpuCompilationRequestProto();
  virtual ~TpuCompilationRequestProto();

  TpuCompilationRequestProto(const TpuCompilationRequestProto& from);

  inline TpuCompilationRequestProto& operator=(const TpuCompilationRequestProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpuCompilationRequestProto(TpuCompilationRequestProto&& from) noexcept
    : TpuCompilationRequestProto() {
    *this = ::std::move(from);
  }

  inline TpuCompilationRequestProto& operator=(TpuCompilationRequestProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpuCompilationRequestProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpuCompilationRequestProto* internal_default_instance() {
    return reinterpret_cast<const TpuCompilationRequestProto*>(
               &_TpuCompilationRequestProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TpuCompilationRequestProto* other);
  friend void swap(TpuCompilationRequestProto& a, TpuCompilationRequestProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpuCompilationRequestProto* New() const final {
    return CreateMaybeMessage<TpuCompilationRequestProto>(NULL);
  }

  TpuCompilationRequestProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TpuCompilationRequestProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TpuCompilationRequestProto& from);
  void MergeFrom(const TpuCompilationRequestProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TpuCompilationRequestProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensorflow.TensorShapeProto arg_shapes = 6;
  int arg_shapes_size() const;
  void clear_arg_shapes();
  static const int kArgShapesFieldNumber = 6;
  ::tensorflow::TensorShapeProto* mutable_arg_shapes(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorShapeProto >*
      mutable_arg_shapes();
  const ::tensorflow::TensorShapeProto& arg_shapes(int index) const;
  ::tensorflow::TensorShapeProto* add_arg_shapes();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorShapeProto >&
      arg_shapes() const;

  // repeated .tensorflow.TensorProto guaranteed_constants = 7;
  int guaranteed_constants_size() const;
  void clear_guaranteed_constants();
  static const int kGuaranteedConstantsFieldNumber = 7;
  ::tensorflow::TensorProto* mutable_guaranteed_constants(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto >*
      mutable_guaranteed_constants();
  const ::tensorflow::TensorProto& guaranteed_constants(int index) const;
  ::tensorflow::TensorProto* add_guaranteed_constants();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto >&
      guaranteed_constants() const;

  // string mlir_module = 8;
  void clear_mlir_module();
  static const int kMlirModuleFieldNumber = 8;
  const ::std::string& mlir_module() const;
  void set_mlir_module(const ::std::string& value);
  #if LANG_CXX11
  void set_mlir_module(::std::string&& value);
  #endif
  void set_mlir_module(const char* value);
  void set_mlir_module(const char* value, size_t size);
  ::std::string* mutable_mlir_module();
  ::std::string* release_mlir_module();
  void set_allocated_mlir_module(::std::string* mlir_module);

  // .tensorflow.tpu.TPUCompileMetadataProto metadata = 5;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  private:
  const ::tensorflow::tpu::TPUCompileMetadataProto& _internal_metadata() const;
  public:
  const ::tensorflow::tpu::TPUCompileMetadataProto& metadata() const;
  ::tensorflow::tpu::TPUCompileMetadataProto* release_metadata();
  ::tensorflow::tpu::TPUCompileMetadataProto* mutable_metadata();
  void set_allocated_metadata(::tensorflow::tpu::TPUCompileMetadataProto* metadata);

  // .tensorflow.FunctionDefLibrary fdef_lib = 9;
  bool has_fdef_lib() const;
  void clear_fdef_lib();
  static const int kFdefLibFieldNumber = 9;
  private:
  const ::tensorflow::FunctionDefLibrary& _internal_fdef_lib() const;
  public:
  const ::tensorflow::FunctionDefLibrary& fdef_lib() const;
  ::tensorflow::FunctionDefLibrary* release_fdef_lib();
  ::tensorflow::FunctionDefLibrary* mutable_fdef_lib();
  void set_allocated_fdef_lib(::tensorflow::FunctionDefLibrary* fdef_lib);

  // .tensorflow.NameAttrList function = 11;
  bool has_function() const;
  void clear_function();
  static const int kFunctionFieldNumber = 11;
  private:
  const ::tensorflow::NameAttrList& _internal_function() const;
  public:
  const ::tensorflow::NameAttrList& function() const;
  ::tensorflow::NameAttrList* release_function();
  ::tensorflow::NameAttrList* mutable_function();
  void set_allocated_function(::tensorflow::NameAttrList* function);

  // bool use_experimental = 1;
  void clear_use_experimental();
  static const int kUseExperimentalFieldNumber = 1;
  bool use_experimental() const;
  void set_use_experimental(bool value);

  // bool use_mlir = 2;
  void clear_use_mlir();
  static const int kUseMlirFieldNumber = 2;
  bool use_mlir() const;
  void set_use_mlir(bool value);

  // bool return_hlo_protos = 3;
  void clear_return_hlo_protos();
  static const int kReturnHloProtosFieldNumber = 3;
  bool return_hlo_protos() const;
  void set_return_hlo_protos(bool value);

  // bool unload_cache_on_session_close = 4;
  void clear_unload_cache_on_session_close();
  static const int kUnloadCacheOnSessionCloseFieldNumber = 4;
  bool unload_cache_on_session_close() const;
  void set_unload_cache_on_session_close(bool value);

  // int32 graph_def_version = 10;
  void clear_graph_def_version();
  static const int kGraphDefVersionFieldNumber = 10;
  ::google::protobuf::int32 graph_def_version() const;
  void set_graph_def_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TpuCompilationRequestProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorShapeProto > arg_shapes_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto > guaranteed_constants_;
  ::google::protobuf::internal::ArenaStringPtr mlir_module_;
  ::tensorflow::tpu::TPUCompileMetadataProto* metadata_;
  ::tensorflow::FunctionDefLibrary* fdef_lib_;
  ::tensorflow::NameAttrList* function_;
  bool use_experimental_;
  bool use_mlir_;
  bool return_hlo_protos_;
  bool unload_cache_on_session_close_;
  ::google::protobuf::int32 graph_def_version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TpuCompilationRequestProto

// bool use_experimental = 1;
inline void TpuCompilationRequestProto::clear_use_experimental() {
  use_experimental_ = false;
}
inline bool TpuCompilationRequestProto::use_experimental() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.use_experimental)
  return use_experimental_;
}
inline void TpuCompilationRequestProto::set_use_experimental(bool value) {
  
  use_experimental_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TpuCompilationRequestProto.use_experimental)
}

// bool use_mlir = 2;
inline void TpuCompilationRequestProto::clear_use_mlir() {
  use_mlir_ = false;
}
inline bool TpuCompilationRequestProto::use_mlir() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.use_mlir)
  return use_mlir_;
}
inline void TpuCompilationRequestProto::set_use_mlir(bool value) {
  
  use_mlir_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TpuCompilationRequestProto.use_mlir)
}

// bool return_hlo_protos = 3;
inline void TpuCompilationRequestProto::clear_return_hlo_protos() {
  return_hlo_protos_ = false;
}
inline bool TpuCompilationRequestProto::return_hlo_protos() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.return_hlo_protos)
  return return_hlo_protos_;
}
inline void TpuCompilationRequestProto::set_return_hlo_protos(bool value) {
  
  return_hlo_protos_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TpuCompilationRequestProto.return_hlo_protos)
}

// bool unload_cache_on_session_close = 4;
inline void TpuCompilationRequestProto::clear_unload_cache_on_session_close() {
  unload_cache_on_session_close_ = false;
}
inline bool TpuCompilationRequestProto::unload_cache_on_session_close() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.unload_cache_on_session_close)
  return unload_cache_on_session_close_;
}
inline void TpuCompilationRequestProto::set_unload_cache_on_session_close(bool value) {
  
  unload_cache_on_session_close_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TpuCompilationRequestProto.unload_cache_on_session_close)
}

// .tensorflow.tpu.TPUCompileMetadataProto metadata = 5;
inline bool TpuCompilationRequestProto::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
inline const ::tensorflow::tpu::TPUCompileMetadataProto& TpuCompilationRequestProto::_internal_metadata() const {
  return *metadata_;
}
inline const ::tensorflow::tpu::TPUCompileMetadataProto& TpuCompilationRequestProto::metadata() const {
  const ::tensorflow::tpu::TPUCompileMetadataProto* p = metadata_;
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::tpu::TPUCompileMetadataProto*>(
      &::tensorflow::tpu::_TPUCompileMetadataProto_default_instance_);
}
inline ::tensorflow::tpu::TPUCompileMetadataProto* TpuCompilationRequestProto::release_metadata() {
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TpuCompilationRequestProto.metadata)
  
  ::tensorflow::tpu::TPUCompileMetadataProto* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline ::tensorflow::tpu::TPUCompileMetadataProto* TpuCompilationRequestProto::mutable_metadata() {
  
  if (metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::tpu::TPUCompileMetadataProto>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TpuCompilationRequestProto.metadata)
  return metadata_;
}
inline void TpuCompilationRequestProto::set_allocated_metadata(::tensorflow::tpu::TPUCompileMetadataProto* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(metadata)->GetArena();
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TpuCompilationRequestProto.metadata)
}

// repeated .tensorflow.TensorShapeProto arg_shapes = 6;
inline int TpuCompilationRequestProto::arg_shapes_size() const {
  return arg_shapes_.size();
}
inline ::tensorflow::TensorShapeProto* TpuCompilationRequestProto::mutable_arg_shapes(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TpuCompilationRequestProto.arg_shapes)
  return arg_shapes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorShapeProto >*
TpuCompilationRequestProto::mutable_arg_shapes() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TpuCompilationRequestProto.arg_shapes)
  return &arg_shapes_;
}
inline const ::tensorflow::TensorShapeProto& TpuCompilationRequestProto::arg_shapes(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.arg_shapes)
  return arg_shapes_.Get(index);
}
inline ::tensorflow::TensorShapeProto* TpuCompilationRequestProto::add_arg_shapes() {
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TpuCompilationRequestProto.arg_shapes)
  return arg_shapes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorShapeProto >&
TpuCompilationRequestProto::arg_shapes() const {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TpuCompilationRequestProto.arg_shapes)
  return arg_shapes_;
}

// repeated .tensorflow.TensorProto guaranteed_constants = 7;
inline int TpuCompilationRequestProto::guaranteed_constants_size() const {
  return guaranteed_constants_.size();
}
inline ::tensorflow::TensorProto* TpuCompilationRequestProto::mutable_guaranteed_constants(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TpuCompilationRequestProto.guaranteed_constants)
  return guaranteed_constants_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto >*
TpuCompilationRequestProto::mutable_guaranteed_constants() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TpuCompilationRequestProto.guaranteed_constants)
  return &guaranteed_constants_;
}
inline const ::tensorflow::TensorProto& TpuCompilationRequestProto::guaranteed_constants(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.guaranteed_constants)
  return guaranteed_constants_.Get(index);
}
inline ::tensorflow::TensorProto* TpuCompilationRequestProto::add_guaranteed_constants() {
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TpuCompilationRequestProto.guaranteed_constants)
  return guaranteed_constants_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto >&
TpuCompilationRequestProto::guaranteed_constants() const {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TpuCompilationRequestProto.guaranteed_constants)
  return guaranteed_constants_;
}

// string mlir_module = 8;
inline void TpuCompilationRequestProto::clear_mlir_module() {
  mlir_module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TpuCompilationRequestProto::mlir_module() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.mlir_module)
  return mlir_module_.GetNoArena();
}
inline void TpuCompilationRequestProto::set_mlir_module(const ::std::string& value) {
  
  mlir_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TpuCompilationRequestProto.mlir_module)
}
#if LANG_CXX11
inline void TpuCompilationRequestProto::set_mlir_module(::std::string&& value) {
  
  mlir_module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.tpu.TpuCompilationRequestProto.mlir_module)
}
#endif
inline void TpuCompilationRequestProto::set_mlir_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mlir_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tpu.TpuCompilationRequestProto.mlir_module)
}
inline void TpuCompilationRequestProto::set_mlir_module(const char* value, size_t size) {
  
  mlir_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tpu.TpuCompilationRequestProto.mlir_module)
}
inline ::std::string* TpuCompilationRequestProto::mutable_mlir_module() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TpuCompilationRequestProto.mlir_module)
  return mlir_module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TpuCompilationRequestProto::release_mlir_module() {
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TpuCompilationRequestProto.mlir_module)
  
  return mlir_module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TpuCompilationRequestProto::set_allocated_mlir_module(::std::string* mlir_module) {
  if (mlir_module != NULL) {
    
  } else {
    
  }
  mlir_module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mlir_module);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TpuCompilationRequestProto.mlir_module)
}

// .tensorflow.FunctionDefLibrary fdef_lib = 9;
inline bool TpuCompilationRequestProto::has_fdef_lib() const {
  return this != internal_default_instance() && fdef_lib_ != NULL;
}
inline const ::tensorflow::FunctionDefLibrary& TpuCompilationRequestProto::_internal_fdef_lib() const {
  return *fdef_lib_;
}
inline const ::tensorflow::FunctionDefLibrary& TpuCompilationRequestProto::fdef_lib() const {
  const ::tensorflow::FunctionDefLibrary* p = fdef_lib_;
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.fdef_lib)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::FunctionDefLibrary*>(
      &::tensorflow::_FunctionDefLibrary_default_instance_);
}
inline ::tensorflow::FunctionDefLibrary* TpuCompilationRequestProto::release_fdef_lib() {
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TpuCompilationRequestProto.fdef_lib)
  
  ::tensorflow::FunctionDefLibrary* temp = fdef_lib_;
  fdef_lib_ = NULL;
  return temp;
}
inline ::tensorflow::FunctionDefLibrary* TpuCompilationRequestProto::mutable_fdef_lib() {
  
  if (fdef_lib_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::FunctionDefLibrary>(GetArenaNoVirtual());
    fdef_lib_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TpuCompilationRequestProto.fdef_lib)
  return fdef_lib_;
}
inline void TpuCompilationRequestProto::set_allocated_fdef_lib(::tensorflow::FunctionDefLibrary* fdef_lib) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fdef_lib_);
  }
  if (fdef_lib) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(fdef_lib)->GetArena();
    if (message_arena != submessage_arena) {
      fdef_lib = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fdef_lib, submessage_arena);
    }
    
  } else {
    
  }
  fdef_lib_ = fdef_lib;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TpuCompilationRequestProto.fdef_lib)
}

// int32 graph_def_version = 10;
inline void TpuCompilationRequestProto::clear_graph_def_version() {
  graph_def_version_ = 0;
}
inline ::google::protobuf::int32 TpuCompilationRequestProto::graph_def_version() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.graph_def_version)
  return graph_def_version_;
}
inline void TpuCompilationRequestProto::set_graph_def_version(::google::protobuf::int32 value) {
  
  graph_def_version_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TpuCompilationRequestProto.graph_def_version)
}

// .tensorflow.NameAttrList function = 11;
inline bool TpuCompilationRequestProto::has_function() const {
  return this != internal_default_instance() && function_ != NULL;
}
inline const ::tensorflow::NameAttrList& TpuCompilationRequestProto::_internal_function() const {
  return *function_;
}
inline const ::tensorflow::NameAttrList& TpuCompilationRequestProto::function() const {
  const ::tensorflow::NameAttrList* p = function_;
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TpuCompilationRequestProto.function)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::NameAttrList*>(
      &::tensorflow::_NameAttrList_default_instance_);
}
inline ::tensorflow::NameAttrList* TpuCompilationRequestProto::release_function() {
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TpuCompilationRequestProto.function)
  
  ::tensorflow::NameAttrList* temp = function_;
  function_ = NULL;
  return temp;
}
inline ::tensorflow::NameAttrList* TpuCompilationRequestProto::mutable_function() {
  
  if (function_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::NameAttrList>(GetArenaNoVirtual());
    function_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TpuCompilationRequestProto.function)
  return function_;
}
inline void TpuCompilationRequestProto::set_allocated_function(::tensorflow::NameAttrList* function) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(function_);
  }
  if (function) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(function)->GetArena();
    if (message_arena != submessage_arena) {
      function = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, function, submessage_arena);
    }
    
  } else {
    
  }
  function_ = function;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TpuCompilationRequestProto.function)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace tpu
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompile_2eproto
