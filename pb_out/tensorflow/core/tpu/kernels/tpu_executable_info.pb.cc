// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/tpu/kernels/tpu_executable_info.proto

#include "tensorflow/core/tpu/kernels/tpu_executable_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_HloSnapshot;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto
namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAssignmentProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShapeProto;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TensorShapeProto;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto
namespace protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TPUExecutableInfoProto_ShapeIndex;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TPUExecutableInfoProto_UpdateIndexPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TPUHostTransferProto;
}  // namespace protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto
namespace tensorflow {
class TPUExecutableInfoProto_UpdateIndexPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUExecutableInfoProto_UpdateIndexPair>
      _instance;
} _TPUExecutableInfoProto_UpdateIndexPair_default_instance_;
class TPUExecutableInfoProto_ShapeIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUExecutableInfoProto_ShapeIndex>
      _instance;
} _TPUExecutableInfoProto_ShapeIndex_default_instance_;
class TPUExecutableInfoProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUExecutableInfoProto>
      _instance;
} _TPUExecutableInfoProto_default_instance_;
class TPUHostTransferProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUHostTransferProto>
      _instance;
} _TPUHostTransferProto_default_instance_;
class TPUHostTransferInfoProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUHostTransferInfoProto>
      _instance;
} _TPUHostTransferInfoProto_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto {
static void InitDefaultsTPUExecutableInfoProto_UpdateIndexPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TPUExecutableInfoProto_UpdateIndexPair_default_instance_;
    new (ptr) ::tensorflow::TPUExecutableInfoProto_UpdateIndexPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TPUExecutableInfoProto_UpdateIndexPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TPUExecutableInfoProto_UpdateIndexPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTPUExecutableInfoProto_UpdateIndexPair}, {}};

static void InitDefaultsTPUExecutableInfoProto_ShapeIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TPUExecutableInfoProto_ShapeIndex_default_instance_;
    new (ptr) ::tensorflow::TPUExecutableInfoProto_ShapeIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TPUExecutableInfoProto_ShapeIndex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TPUExecutableInfoProto_ShapeIndex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTPUExecutableInfoProto_ShapeIndex}, {}};

static void InitDefaultsTPUExecutableInfoProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TPUExecutableInfoProto_default_instance_;
    new (ptr) ::tensorflow::TPUExecutableInfoProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TPUExecutableInfoProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_TPUExecutableInfoProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsTPUExecutableInfoProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,
      &protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUExecutableInfoProto_ShapeIndex.base,
      &protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUExecutableInfoProto_UpdateIndexPair.base,
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::scc_info_TensorShapeProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloSnapshot.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto.base,}};

static void InitDefaultsTPUHostTransferProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TPUHostTransferProto_default_instance_;
    new (ptr) ::tensorflow::TPUHostTransferProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TPUHostTransferProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TPUHostTransferProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTPUHostTransferProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsTPUHostTransferInfoProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TPUHostTransferInfoProto_default_instance_;
    new (ptr) ::tensorflow::TPUHostTransferInfoProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TPUHostTransferInfoProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TPUHostTransferInfoProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTPUHostTransferInfoProto}, {
      &protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUHostTransferProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TPUExecutableInfoProto_UpdateIndexPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TPUExecutableInfoProto_ShapeIndex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TPUExecutableInfoProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TPUHostTransferProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TPUHostTransferInfoProto.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto_UpdateIndexPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto_UpdateIndexPair, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto_UpdateIndexPair, updated_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto_ShapeIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto_ShapeIndex, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto, input_shapes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto, output_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto, dynamic_output_indices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto, variable_indices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto, output_tensor_shapes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto, session_module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUExecutableInfoProto, device_assignment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, buffer_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, original_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, is_lower_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferProto, host_handler_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TPUHostTransferInfoProto, host_transfers_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::TPUExecutableInfoProto_UpdateIndexPair)},
  { 7, -1, sizeof(::tensorflow::TPUExecutableInfoProto_ShapeIndex)},
  { 13, -1, sizeof(::tensorflow::TPUExecutableInfoProto)},
  { 25, -1, sizeof(::tensorflow::TPUHostTransferProto)},
  { 38, -1, sizeof(::tensorflow::TPUHostTransferInfoProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TPUExecutableInfoProto_UpdateIndexPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TPUExecutableInfoProto_ShapeIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TPUExecutableInfoProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TPUHostTransferProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TPUHostTransferInfoProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/tpu/kernels/tpu_executable_info.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5tensorflow/core/tpu/kernels/tpu_execut"
      "able_info.proto\022\ntensorflow\032)tensorflow/"
      "compiler/xla/service/hlo.proto\032&tensorfl"
      "ow/compiler/xla/xla_data.proto\032,tensorfl"
      "ow/core/framework/tensor_shape.proto\"\202\004\n"
      "\026TPUExecutableInfoProto\022%\n\014input_shapes\030"
      "\002 \003(\0132\017.xla.ShapeProto\022%\n\014output_shape\030\003"
      " \001(\0132\017.xla.ShapeProto\022M\n\026dynamic_output_"
      "indices\030\013 \003(\0132-.tensorflow.TPUExecutable"
      "InfoProto.ShapeIndex\022L\n\020variable_indices"
      "\030\n \003(\01322.tensorflow.TPUExecutableInfoPro"
      "to.UpdateIndexPair\022:\n\024output_tensor_shap"
      "es\030\010 \003(\0132\034.tensorflow.TensorShapeProto\022("
      "\n\016session_module\030\005 \001(\0132\020.xla.HloSnapshot"
      "\0225\n\021device_assignment\030\006 \001(\0132\032.xla.Device"
      "AssignmentProto\0321\n\017UpdateIndexPair\022\r\n\005in"
      "dex\030\001 \001(\005\022\017\n\007updated\030\002 \001(\010\032\033\n\nShapeIndex"
      "\022\r\n\005index\030\001 \003(\005J\004\010\001\020\002J\004\010\007\020\010J\004\010\004\020\005\"\342\002\n\024TP"
      "UHostTransferProto\022\017\n\007channel\030\001 \001(\003\022E\n\td"
      "irection\030\002 \001(\01622.tensorflow.TPUHostTrans"
      "ferProto.TransferDirection\022\013\n\003key\030\003 \001(\t\022"
      "\036\n\005shape\030\005 \001(\0132\017.xla.ShapeProto\022\025\n\rbuffe"
      "r_offset\030\006 \001(\003\022)\n\roriginal_type\030\007 \001(\0162\022."
      "xla.PrimitiveType\022\025\n\ris_lower_bits\030\010 \001(\010"
      "\022\031\n\021host_handler_name\030\t \001(\t\"E\n\021TransferD"
      "irection\022\010\n\004NONE\020\000\022\022\n\016DEVICE_TO_HOST\020\001\022\022"
      "\n\016HOST_TO_DEVICE\020\002J\004\010\004\020\005J\004\010\n\020\013\"T\n\030TPUHos"
      "tTransferInfoProto\0228\n\016host_transfers\030\001 \003"
      "(\0132 .tensorflow.TPUHostTransferProtob\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1164);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/tpu/kernels/tpu_executable_info.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* TPUHostTransferProto_TransferDirection_descriptor() {
  protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_enum_descriptors[0];
}
bool TPUHostTransferProto_TransferDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TPUHostTransferProto_TransferDirection TPUHostTransferProto::NONE;
const TPUHostTransferProto_TransferDirection TPUHostTransferProto::DEVICE_TO_HOST;
const TPUHostTransferProto_TransferDirection TPUHostTransferProto::HOST_TO_DEVICE;
const TPUHostTransferProto_TransferDirection TPUHostTransferProto::TransferDirection_MIN;
const TPUHostTransferProto_TransferDirection TPUHostTransferProto::TransferDirection_MAX;
const int TPUHostTransferProto::TransferDirection_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TPUExecutableInfoProto_UpdateIndexPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUExecutableInfoProto_UpdateIndexPair::kIndexFieldNumber;
const int TPUExecutableInfoProto_UpdateIndexPair::kUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUExecutableInfoProto_UpdateIndexPair::TPUExecutableInfoProto_UpdateIndexPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUExecutableInfoProto_UpdateIndexPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
}
TPUExecutableInfoProto_UpdateIndexPair::TPUExecutableInfoProto_UpdateIndexPair(const TPUExecutableInfoProto_UpdateIndexPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&updated_) -
    reinterpret_cast<char*>(&index_)) + sizeof(updated_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
}

void TPUExecutableInfoProto_UpdateIndexPair::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_) -
      reinterpret_cast<char*>(&index_)) + sizeof(updated_));
}

TPUExecutableInfoProto_UpdateIndexPair::~TPUExecutableInfoProto_UpdateIndexPair() {
  // @@protoc_insertion_point(destructor:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  SharedDtor();
}

void TPUExecutableInfoProto_UpdateIndexPair::SharedDtor() {
}

void TPUExecutableInfoProto_UpdateIndexPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TPUExecutableInfoProto_UpdateIndexPair::descriptor() {
  ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUExecutableInfoProto_UpdateIndexPair& TPUExecutableInfoProto_UpdateIndexPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUExecutableInfoProto_UpdateIndexPair.base);
  return *internal_default_instance();
}


void TPUExecutableInfoProto_UpdateIndexPair::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_) -
      reinterpret_cast<char*>(&index_)) + sizeof(updated_));
  _internal_metadata_.Clear();
}

bool TPUExecutableInfoProto_UpdateIndexPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  return false;
#undef DO_
}

void TPUExecutableInfoProto_UpdateIndexPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // bool updated = 2;
  if (this->updated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->updated(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
}

::google::protobuf::uint8* TPUExecutableInfoProto_UpdateIndexPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // bool updated = 2;
  if (this->updated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->updated(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  return target;
}

size_t TPUExecutableInfoProto_UpdateIndexPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // bool updated = 2;
  if (this->updated() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPUExecutableInfoProto_UpdateIndexPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUExecutableInfoProto_UpdateIndexPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUExecutableInfoProto_UpdateIndexPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
    MergeFrom(*source);
  }
}

void TPUExecutableInfoProto_UpdateIndexPair::MergeFrom(const TPUExecutableInfoProto_UpdateIndexPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.updated() != 0) {
    set_updated(from.updated());
  }
}

void TPUExecutableInfoProto_UpdateIndexPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUExecutableInfoProto_UpdateIndexPair::CopyFrom(const TPUExecutableInfoProto_UpdateIndexPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TPUExecutableInfoProto.UpdateIndexPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUExecutableInfoProto_UpdateIndexPair::IsInitialized() const {
  return true;
}

void TPUExecutableInfoProto_UpdateIndexPair::Swap(TPUExecutableInfoProto_UpdateIndexPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUExecutableInfoProto_UpdateIndexPair::InternalSwap(TPUExecutableInfoProto_UpdateIndexPair* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(updated_, other->updated_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TPUExecutableInfoProto_UpdateIndexPair::GetMetadata() const {
  protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPUExecutableInfoProto_ShapeIndex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUExecutableInfoProto_ShapeIndex::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUExecutableInfoProto_ShapeIndex::TPUExecutableInfoProto_ShapeIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUExecutableInfoProto_ShapeIndex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TPUExecutableInfoProto.ShapeIndex)
}
TPUExecutableInfoProto_ShapeIndex::TPUExecutableInfoProto_ShapeIndex(const TPUExecutableInfoProto_ShapeIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      index_(from.index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.TPUExecutableInfoProto.ShapeIndex)
}

void TPUExecutableInfoProto_ShapeIndex::SharedCtor() {
}

TPUExecutableInfoProto_ShapeIndex::~TPUExecutableInfoProto_ShapeIndex() {
  // @@protoc_insertion_point(destructor:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  SharedDtor();
}

void TPUExecutableInfoProto_ShapeIndex::SharedDtor() {
}

void TPUExecutableInfoProto_ShapeIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TPUExecutableInfoProto_ShapeIndex::descriptor() {
  ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUExecutableInfoProto_ShapeIndex& TPUExecutableInfoProto_ShapeIndex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUExecutableInfoProto_ShapeIndex.base);
  return *internal_default_instance();
}


void TPUExecutableInfoProto_ShapeIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_.Clear();
  _internal_metadata_.Clear();
}

bool TPUExecutableInfoProto_ShapeIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  return false;
#undef DO_
}

void TPUExecutableInfoProto_ShapeIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 index = 1;
  if (this->index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _index_cached_byte_size_));
  }
  for (int i = 0, n = this->index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->index(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TPUExecutableInfoProto.ShapeIndex)
}

::google::protobuf::uint8* TPUExecutableInfoProto_ShapeIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 index = 1;
  if (this->index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->index_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  return target;
}

size_t TPUExecutableInfoProto_ShapeIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 index = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPUExecutableInfoProto_ShapeIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUExecutableInfoProto_ShapeIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUExecutableInfoProto_ShapeIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TPUExecutableInfoProto.ShapeIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TPUExecutableInfoProto.ShapeIndex)
    MergeFrom(*source);
  }
}

void TPUExecutableInfoProto_ShapeIndex::MergeFrom(const TPUExecutableInfoProto_ShapeIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  index_.MergeFrom(from.index_);
}

void TPUExecutableInfoProto_ShapeIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUExecutableInfoProto_ShapeIndex::CopyFrom(const TPUExecutableInfoProto_ShapeIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TPUExecutableInfoProto.ShapeIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUExecutableInfoProto_ShapeIndex::IsInitialized() const {
  return true;
}

void TPUExecutableInfoProto_ShapeIndex::Swap(TPUExecutableInfoProto_ShapeIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUExecutableInfoProto_ShapeIndex::InternalSwap(TPUExecutableInfoProto_ShapeIndex* other) {
  using std::swap;
  index_.InternalSwap(&other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TPUExecutableInfoProto_ShapeIndex::GetMetadata() const {
  protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPUExecutableInfoProto::InitAsDefaultInstance() {
  ::tensorflow::_TPUExecutableInfoProto_default_instance_._instance.get_mutable()->output_shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
  ::tensorflow::_TPUExecutableInfoProto_default_instance_._instance.get_mutable()->session_module_ = const_cast< ::xla::HloSnapshot*>(
      ::xla::HloSnapshot::internal_default_instance());
  ::tensorflow::_TPUExecutableInfoProto_default_instance_._instance.get_mutable()->device_assignment_ = const_cast< ::xla::DeviceAssignmentProto*>(
      ::xla::DeviceAssignmentProto::internal_default_instance());
}
void TPUExecutableInfoProto::clear_input_shapes() {
  input_shapes_.Clear();
}
void TPUExecutableInfoProto::clear_output_shape() {
  if (GetArenaNoVirtual() == NULL && output_shape_ != NULL) {
    delete output_shape_;
  }
  output_shape_ = NULL;
}
void TPUExecutableInfoProto::clear_output_tensor_shapes() {
  output_tensor_shapes_.Clear();
}
void TPUExecutableInfoProto::clear_session_module() {
  if (GetArenaNoVirtual() == NULL && session_module_ != NULL) {
    delete session_module_;
  }
  session_module_ = NULL;
}
void TPUExecutableInfoProto::clear_device_assignment() {
  if (GetArenaNoVirtual() == NULL && device_assignment_ != NULL) {
    delete device_assignment_;
  }
  device_assignment_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUExecutableInfoProto::kInputShapesFieldNumber;
const int TPUExecutableInfoProto::kOutputShapeFieldNumber;
const int TPUExecutableInfoProto::kDynamicOutputIndicesFieldNumber;
const int TPUExecutableInfoProto::kVariableIndicesFieldNumber;
const int TPUExecutableInfoProto::kOutputTensorShapesFieldNumber;
const int TPUExecutableInfoProto::kSessionModuleFieldNumber;
const int TPUExecutableInfoProto::kDeviceAssignmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUExecutableInfoProto::TPUExecutableInfoProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUExecutableInfoProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TPUExecutableInfoProto)
}
TPUExecutableInfoProto::TPUExecutableInfoProto(const TPUExecutableInfoProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_shapes_(from.input_shapes_),
      output_tensor_shapes_(from.output_tensor_shapes_),
      variable_indices_(from.variable_indices_),
      dynamic_output_indices_(from.dynamic_output_indices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output_shape()) {
    output_shape_ = new ::xla::ShapeProto(*from.output_shape_);
  } else {
    output_shape_ = NULL;
  }
  if (from.has_session_module()) {
    session_module_ = new ::xla::HloSnapshot(*from.session_module_);
  } else {
    session_module_ = NULL;
  }
  if (from.has_device_assignment()) {
    device_assignment_ = new ::xla::DeviceAssignmentProto(*from.device_assignment_);
  } else {
    device_assignment_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.TPUExecutableInfoProto)
}

void TPUExecutableInfoProto::SharedCtor() {
  ::memset(&output_shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_assignment_) -
      reinterpret_cast<char*>(&output_shape_)) + sizeof(device_assignment_));
}

TPUExecutableInfoProto::~TPUExecutableInfoProto() {
  // @@protoc_insertion_point(destructor:tensorflow.TPUExecutableInfoProto)
  SharedDtor();
}

void TPUExecutableInfoProto::SharedDtor() {
  if (this != internal_default_instance()) delete output_shape_;
  if (this != internal_default_instance()) delete session_module_;
  if (this != internal_default_instance()) delete device_assignment_;
}

void TPUExecutableInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TPUExecutableInfoProto::descriptor() {
  ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUExecutableInfoProto& TPUExecutableInfoProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUExecutableInfoProto.base);
  return *internal_default_instance();
}


void TPUExecutableInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TPUExecutableInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_shapes_.Clear();
  output_tensor_shapes_.Clear();
  variable_indices_.Clear();
  dynamic_output_indices_.Clear();
  if (GetArenaNoVirtual() == NULL && output_shape_ != NULL) {
    delete output_shape_;
  }
  output_shape_ = NULL;
  if (GetArenaNoVirtual() == NULL && session_module_ != NULL) {
    delete session_module_;
  }
  session_module_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_assignment_ != NULL) {
    delete device_assignment_;
  }
  device_assignment_ = NULL;
  _internal_metadata_.Clear();
}

bool TPUExecutableInfoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TPUExecutableInfoProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.ShapeProto input_shapes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input_shapes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto output_shape = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.HloSnapshot session_module = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_session_module()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DeviceAssignmentProto device_assignment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.TensorShapeProto output_tensor_shapes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_output_tensor_shapes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.TPUExecutableInfoProto.UpdateIndexPair variable_indices = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_variable_indices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.TPUExecutableInfoProto.ShapeIndex dynamic_output_indices = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dynamic_output_indices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TPUExecutableInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TPUExecutableInfoProto)
  return false;
#undef DO_
}

void TPUExecutableInfoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TPUExecutableInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.ShapeProto input_shapes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_shapes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->input_shapes(static_cast<int>(i)),
      output);
  }

  // .xla.ShapeProto output_shape = 3;
  if (this->has_output_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_output_shape(), output);
  }

  // .xla.HloSnapshot session_module = 5;
  if (this->has_session_module()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_session_module(), output);
  }

  // .xla.DeviceAssignmentProto device_assignment = 6;
  if (this->has_device_assignment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_device_assignment(), output);
  }

  // repeated .tensorflow.TensorShapeProto output_tensor_shapes = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_tensor_shapes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->output_tensor_shapes(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.TPUExecutableInfoProto.UpdateIndexPair variable_indices = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variable_indices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->variable_indices(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.TPUExecutableInfoProto.ShapeIndex dynamic_output_indices = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dynamic_output_indices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->dynamic_output_indices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TPUExecutableInfoProto)
}

::google::protobuf::uint8* TPUExecutableInfoProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TPUExecutableInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.ShapeProto input_shapes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_shapes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->input_shapes(static_cast<int>(i)), deterministic, target);
  }

  // .xla.ShapeProto output_shape = 3;
  if (this->has_output_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_output_shape(), deterministic, target);
  }

  // .xla.HloSnapshot session_module = 5;
  if (this->has_session_module()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_session_module(), deterministic, target);
  }

  // .xla.DeviceAssignmentProto device_assignment = 6;
  if (this->has_device_assignment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_device_assignment(), deterministic, target);
  }

  // repeated .tensorflow.TensorShapeProto output_tensor_shapes = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_tensor_shapes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->output_tensor_shapes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.TPUExecutableInfoProto.UpdateIndexPair variable_indices = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variable_indices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->variable_indices(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.TPUExecutableInfoProto.ShapeIndex dynamic_output_indices = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dynamic_output_indices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->dynamic_output_indices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TPUExecutableInfoProto)
  return target;
}

size_t TPUExecutableInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TPUExecutableInfoProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.ShapeProto input_shapes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->input_shapes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_shapes(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.TensorShapeProto output_tensor_shapes = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->output_tensor_shapes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_tensor_shapes(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.TPUExecutableInfoProto.UpdateIndexPair variable_indices = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->variable_indices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->variable_indices(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.TPUExecutableInfoProto.ShapeIndex dynamic_output_indices = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->dynamic_output_indices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dynamic_output_indices(static_cast<int>(i)));
    }
  }

  // .xla.ShapeProto output_shape = 3;
  if (this->has_output_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_shape_);
  }

  // .xla.HloSnapshot session_module = 5;
  if (this->has_session_module()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *session_module_);
  }

  // .xla.DeviceAssignmentProto device_assignment = 6;
  if (this->has_device_assignment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_assignment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPUExecutableInfoProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TPUExecutableInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUExecutableInfoProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUExecutableInfoProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TPUExecutableInfoProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TPUExecutableInfoProto)
    MergeFrom(*source);
  }
}

void TPUExecutableInfoProto::MergeFrom(const TPUExecutableInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TPUExecutableInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_shapes_.MergeFrom(from.input_shapes_);
  output_tensor_shapes_.MergeFrom(from.output_tensor_shapes_);
  variable_indices_.MergeFrom(from.variable_indices_);
  dynamic_output_indices_.MergeFrom(from.dynamic_output_indices_);
  if (from.has_output_shape()) {
    mutable_output_shape()->::xla::ShapeProto::MergeFrom(from.output_shape());
  }
  if (from.has_session_module()) {
    mutable_session_module()->::xla::HloSnapshot::MergeFrom(from.session_module());
  }
  if (from.has_device_assignment()) {
    mutable_device_assignment()->::xla::DeviceAssignmentProto::MergeFrom(from.device_assignment());
  }
}

void TPUExecutableInfoProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TPUExecutableInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUExecutableInfoProto::CopyFrom(const TPUExecutableInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TPUExecutableInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUExecutableInfoProto::IsInitialized() const {
  return true;
}

void TPUExecutableInfoProto::Swap(TPUExecutableInfoProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUExecutableInfoProto::InternalSwap(TPUExecutableInfoProto* other) {
  using std::swap;
  CastToBase(&input_shapes_)->InternalSwap(CastToBase(&other->input_shapes_));
  CastToBase(&output_tensor_shapes_)->InternalSwap(CastToBase(&other->output_tensor_shapes_));
  CastToBase(&variable_indices_)->InternalSwap(CastToBase(&other->variable_indices_));
  CastToBase(&dynamic_output_indices_)->InternalSwap(CastToBase(&other->dynamic_output_indices_));
  swap(output_shape_, other->output_shape_);
  swap(session_module_, other->session_module_);
  swap(device_assignment_, other->device_assignment_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TPUExecutableInfoProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPUHostTransferProto::InitAsDefaultInstance() {
  ::tensorflow::_TPUHostTransferProto_default_instance_._instance.get_mutable()->shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void TPUHostTransferProto::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUHostTransferProto::kChannelFieldNumber;
const int TPUHostTransferProto::kDirectionFieldNumber;
const int TPUHostTransferProto::kKeyFieldNumber;
const int TPUHostTransferProto::kShapeFieldNumber;
const int TPUHostTransferProto::kBufferOffsetFieldNumber;
const int TPUHostTransferProto::kOriginalTypeFieldNumber;
const int TPUHostTransferProto::kIsLowerBitsFieldNumber;
const int TPUHostTransferProto::kHostHandlerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUHostTransferProto::TPUHostTransferProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUHostTransferProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TPUHostTransferProto)
}
TPUHostTransferProto::TPUHostTransferProto(const TPUHostTransferProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  host_handler_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_handler_name().size() > 0) {
    host_handler_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_handler_name_);
  }
  if (from.has_shape()) {
    shape_ = new ::xla::ShapeProto(*from.shape_);
  } else {
    shape_ = NULL;
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_lower_bits_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(is_lower_bits_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.TPUHostTransferProto)
}

void TPUHostTransferProto::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_handler_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_lower_bits_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(is_lower_bits_));
}

TPUHostTransferProto::~TPUHostTransferProto() {
  // @@protoc_insertion_point(destructor:tensorflow.TPUHostTransferProto)
  SharedDtor();
}

void TPUHostTransferProto::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_handler_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shape_;
}

void TPUHostTransferProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TPUHostTransferProto::descriptor() {
  ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUHostTransferProto& TPUHostTransferProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUHostTransferProto.base);
  return *internal_default_instance();
}


void TPUHostTransferProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TPUHostTransferProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_handler_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_lower_bits_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(is_lower_bits_));
  _internal_metadata_.Clear();
}

bool TPUHostTransferProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TPUHostTransferProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TPUHostTransferProto.TransferDirection direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_direction(static_cast< ::tensorflow::TPUHostTransferProto_TransferDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.TPUHostTransferProto.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto shape = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 buffer_offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buffer_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.PrimitiveType original_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_original_type(static_cast< ::xla::PrimitiveType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_lower_bits = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_lower_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_handler_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_handler_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_handler_name().data(), static_cast<int>(this->host_handler_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.TPUHostTransferProto.host_handler_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TPUHostTransferProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TPUHostTransferProto)
  return false;
#undef DO_
}

void TPUHostTransferProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TPUHostTransferProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel(), output);
  }

  // .tensorflow.TPUHostTransferProto.TransferDirection direction = 2;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->direction(), output);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TPUHostTransferProto.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  // .xla.ShapeProto shape = 5;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_shape(), output);
  }

  // int64 buffer_offset = 6;
  if (this->buffer_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->buffer_offset(), output);
  }

  // .xla.PrimitiveType original_type = 7;
  if (this->original_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->original_type(), output);
  }

  // bool is_lower_bits = 8;
  if (this->is_lower_bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_lower_bits(), output);
  }

  // string host_handler_name = 9;
  if (this->host_handler_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_handler_name().data(), static_cast<int>(this->host_handler_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TPUHostTransferProto.host_handler_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->host_handler_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TPUHostTransferProto)
}

::google::protobuf::uint8* TPUHostTransferProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TPUHostTransferProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel(), target);
  }

  // .tensorflow.TPUHostTransferProto.TransferDirection direction = 2;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->direction(), target);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TPUHostTransferProto.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // .xla.ShapeProto shape = 5;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_shape(), deterministic, target);
  }

  // int64 buffer_offset = 6;
  if (this->buffer_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->buffer_offset(), target);
  }

  // .xla.PrimitiveType original_type = 7;
  if (this->original_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->original_type(), target);
  }

  // bool is_lower_bits = 8;
  if (this->is_lower_bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_lower_bits(), target);
  }

  // string host_handler_name = 9;
  if (this->host_handler_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_handler_name().data(), static_cast<int>(this->host_handler_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TPUHostTransferProto.host_handler_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->host_handler_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TPUHostTransferProto)
  return target;
}

size_t TPUHostTransferProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TPUHostTransferProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string host_handler_name = 9;
  if (this->host_handler_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_handler_name());
  }

  // .xla.ShapeProto shape = 5;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_);
  }

  // int64 channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel());
  }

  // .tensorflow.TPUHostTransferProto.TransferDirection direction = 2;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  // .xla.PrimitiveType original_type = 7;
  if (this->original_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->original_type());
  }

  // int64 buffer_offset = 6;
  if (this->buffer_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->buffer_offset());
  }

  // bool is_lower_bits = 8;
  if (this->is_lower_bits() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPUHostTransferProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TPUHostTransferProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUHostTransferProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUHostTransferProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TPUHostTransferProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TPUHostTransferProto)
    MergeFrom(*source);
  }
}

void TPUHostTransferProto::MergeFrom(const TPUHostTransferProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TPUHostTransferProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.host_handler_name().size() > 0) {

    host_handler_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_handler_name_);
  }
  if (from.has_shape()) {
    mutable_shape()->::xla::ShapeProto::MergeFrom(from.shape());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.original_type() != 0) {
    set_original_type(from.original_type());
  }
  if (from.buffer_offset() != 0) {
    set_buffer_offset(from.buffer_offset());
  }
  if (from.is_lower_bits() != 0) {
    set_is_lower_bits(from.is_lower_bits());
  }
}

void TPUHostTransferProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TPUHostTransferProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUHostTransferProto::CopyFrom(const TPUHostTransferProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TPUHostTransferProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUHostTransferProto::IsInitialized() const {
  return true;
}

void TPUHostTransferProto::Swap(TPUHostTransferProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUHostTransferProto::InternalSwap(TPUHostTransferProto* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_handler_name_.Swap(&other->host_handler_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shape_, other->shape_);
  swap(channel_, other->channel_);
  swap(direction_, other->direction_);
  swap(original_type_, other->original_type_);
  swap(buffer_offset_, other->buffer_offset_);
  swap(is_lower_bits_, other->is_lower_bits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TPUHostTransferProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPUHostTransferInfoProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUHostTransferInfoProto::kHostTransfersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUHostTransferInfoProto::TPUHostTransferInfoProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUHostTransferInfoProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TPUHostTransferInfoProto)
}
TPUHostTransferInfoProto::TPUHostTransferInfoProto(const TPUHostTransferInfoProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      host_transfers_(from.host_transfers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.TPUHostTransferInfoProto)
}

void TPUHostTransferInfoProto::SharedCtor() {
}

TPUHostTransferInfoProto::~TPUHostTransferInfoProto() {
  // @@protoc_insertion_point(destructor:tensorflow.TPUHostTransferInfoProto)
  SharedDtor();
}

void TPUHostTransferInfoProto::SharedDtor() {
}

void TPUHostTransferInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TPUHostTransferInfoProto::descriptor() {
  ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUHostTransferInfoProto& TPUHostTransferInfoProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::scc_info_TPUHostTransferInfoProto.base);
  return *internal_default_instance();
}


void TPUHostTransferInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TPUHostTransferInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_transfers_.Clear();
  _internal_metadata_.Clear();
}

bool TPUHostTransferInfoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TPUHostTransferInfoProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.TPUHostTransferProto host_transfers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_host_transfers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TPUHostTransferInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TPUHostTransferInfoProto)
  return false;
#undef DO_
}

void TPUHostTransferInfoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TPUHostTransferInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TPUHostTransferProto host_transfers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->host_transfers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->host_transfers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TPUHostTransferInfoProto)
}

::google::protobuf::uint8* TPUHostTransferInfoProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TPUHostTransferInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TPUHostTransferProto host_transfers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->host_transfers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->host_transfers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TPUHostTransferInfoProto)
  return target;
}

size_t TPUHostTransferInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TPUHostTransferInfoProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.TPUHostTransferProto host_transfers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->host_transfers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->host_transfers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPUHostTransferInfoProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TPUHostTransferInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUHostTransferInfoProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUHostTransferInfoProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TPUHostTransferInfoProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TPUHostTransferInfoProto)
    MergeFrom(*source);
  }
}

void TPUHostTransferInfoProto::MergeFrom(const TPUHostTransferInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TPUHostTransferInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  host_transfers_.MergeFrom(from.host_transfers_);
}

void TPUHostTransferInfoProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TPUHostTransferInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUHostTransferInfoProto::CopyFrom(const TPUHostTransferInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TPUHostTransferInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUHostTransferInfoProto::IsInitialized() const {
  return true;
}

void TPUHostTransferInfoProto::Swap(TPUHostTransferInfoProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUHostTransferInfoProto::InternalSwap(TPUHostTransferInfoProto* other) {
  using std::swap;
  CastToBase(&host_transfers_)->InternalSwap(CastToBase(&other->host_transfers_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TPUHostTransferInfoProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fexecutable_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TPUExecutableInfoProto_UpdateIndexPair* Arena::CreateMaybeMessage< ::tensorflow::TPUExecutableInfoProto_UpdateIndexPair >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::TPUExecutableInfoProto_UpdateIndexPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TPUExecutableInfoProto_ShapeIndex* Arena::CreateMaybeMessage< ::tensorflow::TPUExecutableInfoProto_ShapeIndex >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::TPUExecutableInfoProto_ShapeIndex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TPUExecutableInfoProto* Arena::CreateMaybeMessage< ::tensorflow::TPUExecutableInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::TPUExecutableInfoProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TPUHostTransferProto* Arena::CreateMaybeMessage< ::tensorflow::TPUHostTransferProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::TPUHostTransferProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TPUHostTransferInfoProto* Arena::CreateMaybeMessage< ::tensorflow::TPUHostTransferInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::TPUHostTransferInfoProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
