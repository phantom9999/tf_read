// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/jit/xla_compilation_cache.proto

#include "tensorflow/compiler/jit/xla_compilation_cache.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XlaSerializedCacheKey;
}  // namespace protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto
namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_HloModuleProto;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto
namespace tensorflow {
class XlaSerializedCacheKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaSerializedCacheKey>
      _instance;
} _XlaSerializedCacheKey_default_instance_;
class XlaSerializedCacheEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XlaSerializedCacheEntry>
      _instance;
} _XlaSerializedCacheEntry_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto {
static void InitDefaultsXlaSerializedCacheKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaSerializedCacheKey_default_instance_;
    new (ptr) ::tensorflow::XlaSerializedCacheKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaSerializedCacheKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XlaSerializedCacheKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXlaSerializedCacheKey}, {}};

static void InitDefaultsXlaSerializedCacheEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_XlaSerializedCacheEntry_default_instance_;
    new (ptr) ::tensorflow::XlaSerializedCacheEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::XlaSerializedCacheEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_XlaSerializedCacheEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsXlaSerializedCacheEntry}, {
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::scc_info_XlaSerializedCacheKey.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_XlaSerializedCacheKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XlaSerializedCacheEntry.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheKey, signature_fingerprint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheKey, cluster_fingerprint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheKey, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheKey, prefix_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheEntry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheEntry, hlo_module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::XlaSerializedCacheEntry, executable_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::XlaSerializedCacheKey)},
  { 9, -1, sizeof(::tensorflow::XlaSerializedCacheEntry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaSerializedCacheKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_XlaSerializedCacheEntry_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/compiler/jit/xla_compilation_cache.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n3tensorflow/compiler/jit/xla_compilatio"
      "n_cache.proto\022\ntensorflow\032)tensorflow/co"
      "mpiler/xla/service/hlo.proto\"x\n\025XlaSeria"
      "lizedCacheKey\022\035\n\025signature_fingerprint\030\001"
      " \001(\004\022\033\n\023cluster_fingerprint\030\002 \001(\004\022\023\n\013dev"
      "ice_type\030\003 \001(\t\022\016\n\006prefix\030\004 \001(\t\"\206\001\n\027XlaSe"
      "rializedCacheEntry\022.\n\003key\030\001 \001(\0132!.tensor"
      "flow.XlaSerializedCacheKey\022\'\n\nhlo_module"
      "\030\002 \001(\0132\023.xla.HloModuleProto\022\022\n\nexecutabl"
      "e\030\003 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 375);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/compiler/jit/xla_compilation_cache.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto
namespace tensorflow {

// ===================================================================

void XlaSerializedCacheKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaSerializedCacheKey::kSignatureFingerprintFieldNumber;
const int XlaSerializedCacheKey::kClusterFingerprintFieldNumber;
const int XlaSerializedCacheKey::kDeviceTypeFieldNumber;
const int XlaSerializedCacheKey::kPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaSerializedCacheKey::XlaSerializedCacheKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::scc_info_XlaSerializedCacheKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaSerializedCacheKey)
}
XlaSerializedCacheKey::XlaSerializedCacheKey(const XlaSerializedCacheKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prefix().size() > 0) {
    prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefix_);
  }
  ::memcpy(&signature_fingerprint_, &from.signature_fingerprint_,
    static_cast<size_t>(reinterpret_cast<char*>(&cluster_fingerprint_) -
    reinterpret_cast<char*>(&signature_fingerprint_)) + sizeof(cluster_fingerprint_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaSerializedCacheKey)
}

void XlaSerializedCacheKey::SharedCtor() {
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&signature_fingerprint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_fingerprint_) -
      reinterpret_cast<char*>(&signature_fingerprint_)) + sizeof(cluster_fingerprint_));
}

XlaSerializedCacheKey::~XlaSerializedCacheKey() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaSerializedCacheKey)
  SharedDtor();
}

void XlaSerializedCacheKey::SharedDtor() {
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XlaSerializedCacheKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaSerializedCacheKey::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaSerializedCacheKey& XlaSerializedCacheKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::scc_info_XlaSerializedCacheKey.base);
  return *internal_default_instance();
}


void XlaSerializedCacheKey::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaSerializedCacheKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&signature_fingerprint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_fingerprint_) -
      reinterpret_cast<char*>(&signature_fingerprint_)) + sizeof(cluster_fingerprint_));
  _internal_metadata_.Clear();
}

bool XlaSerializedCacheKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaSerializedCacheKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 signature_fingerprint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &signature_fingerprint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cluster_fingerprint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cluster_fingerprint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.XlaSerializedCacheKey.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prefix = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prefix().data(), static_cast<int>(this->prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.XlaSerializedCacheKey.prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaSerializedCacheKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaSerializedCacheKey)
  return false;
#undef DO_
}

void XlaSerializedCacheKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaSerializedCacheKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 signature_fingerprint = 1;
  if (this->signature_fingerprint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->signature_fingerprint(), output);
  }

  // uint64 cluster_fingerprint = 2;
  if (this->cluster_fingerprint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cluster_fingerprint(), output);
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaSerializedCacheKey.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_type(), output);
  }

  // string prefix = 4;
  if (this->prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prefix().data(), static_cast<int>(this->prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaSerializedCacheKey.prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->prefix(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaSerializedCacheKey)
}

::google::protobuf::uint8* XlaSerializedCacheKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaSerializedCacheKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 signature_fingerprint = 1;
  if (this->signature_fingerprint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->signature_fingerprint(), target);
  }

  // uint64 cluster_fingerprint = 2;
  if (this->cluster_fingerprint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cluster_fingerprint(), target);
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaSerializedCacheKey.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_type(), target);
  }

  // string prefix = 4;
  if (this->prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prefix().data(), static_cast<int>(this->prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.XlaSerializedCacheKey.prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->prefix(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaSerializedCacheKey)
  return target;
}

size_t XlaSerializedCacheKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaSerializedCacheKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string device_type = 3;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // string prefix = 4;
  if (this->prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prefix());
  }

  // uint64 signature_fingerprint = 1;
  if (this->signature_fingerprint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->signature_fingerprint());
  }

  // uint64 cluster_fingerprint = 2;
  if (this->cluster_fingerprint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cluster_fingerprint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaSerializedCacheKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaSerializedCacheKey)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaSerializedCacheKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaSerializedCacheKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaSerializedCacheKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaSerializedCacheKey)
    MergeFrom(*source);
  }
}

void XlaSerializedCacheKey::MergeFrom(const XlaSerializedCacheKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaSerializedCacheKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.prefix().size() > 0) {

    prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefix_);
  }
  if (from.signature_fingerprint() != 0) {
    set_signature_fingerprint(from.signature_fingerprint());
  }
  if (from.cluster_fingerprint() != 0) {
    set_cluster_fingerprint(from.cluster_fingerprint());
  }
}

void XlaSerializedCacheKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaSerializedCacheKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaSerializedCacheKey::CopyFrom(const XlaSerializedCacheKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaSerializedCacheKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaSerializedCacheKey::IsInitialized() const {
  return true;
}

void XlaSerializedCacheKey::Swap(XlaSerializedCacheKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaSerializedCacheKey::InternalSwap(XlaSerializedCacheKey* other) {
  using std::swap;
  device_type_.Swap(&other->device_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  prefix_.Swap(&other->prefix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(signature_fingerprint_, other->signature_fingerprint_);
  swap(cluster_fingerprint_, other->cluster_fingerprint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaSerializedCacheKey::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XlaSerializedCacheEntry::InitAsDefaultInstance() {
  ::tensorflow::_XlaSerializedCacheEntry_default_instance_._instance.get_mutable()->key_ = const_cast< ::tensorflow::XlaSerializedCacheKey*>(
      ::tensorflow::XlaSerializedCacheKey::internal_default_instance());
  ::tensorflow::_XlaSerializedCacheEntry_default_instance_._instance.get_mutable()->hlo_module_ = const_cast< ::xla::HloModuleProto*>(
      ::xla::HloModuleProto::internal_default_instance());
}
void XlaSerializedCacheEntry::clear_hlo_module() {
  if (GetArenaNoVirtual() == NULL && hlo_module_ != NULL) {
    delete hlo_module_;
  }
  hlo_module_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlaSerializedCacheEntry::kKeyFieldNumber;
const int XlaSerializedCacheEntry::kHloModuleFieldNumber;
const int XlaSerializedCacheEntry::kExecutableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlaSerializedCacheEntry::XlaSerializedCacheEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::scc_info_XlaSerializedCacheEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.XlaSerializedCacheEntry)
}
XlaSerializedCacheEntry::XlaSerializedCacheEntry(const XlaSerializedCacheEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  executable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.executable().size() > 0) {
    executable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.executable_);
  }
  if (from.has_key()) {
    key_ = new ::tensorflow::XlaSerializedCacheKey(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_hlo_module()) {
    hlo_module_ = new ::xla::HloModuleProto(*from.hlo_module_);
  } else {
    hlo_module_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.XlaSerializedCacheEntry)
}

void XlaSerializedCacheEntry::SharedCtor() {
  executable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hlo_module_) -
      reinterpret_cast<char*>(&key_)) + sizeof(hlo_module_));
}

XlaSerializedCacheEntry::~XlaSerializedCacheEntry() {
  // @@protoc_insertion_point(destructor:tensorflow.XlaSerializedCacheEntry)
  SharedDtor();
}

void XlaSerializedCacheEntry::SharedDtor() {
  executable_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete hlo_module_;
}

void XlaSerializedCacheEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XlaSerializedCacheEntry::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XlaSerializedCacheEntry& XlaSerializedCacheEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::scc_info_XlaSerializedCacheEntry.base);
  return *internal_default_instance();
}


void XlaSerializedCacheEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.XlaSerializedCacheEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  executable_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && hlo_module_ != NULL) {
    delete hlo_module_;
  }
  hlo_module_ = NULL;
  _internal_metadata_.Clear();
}

bool XlaSerializedCacheEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.XlaSerializedCacheEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.XlaSerializedCacheKey key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.HloModuleProto hlo_module = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hlo_module()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes executable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_executable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.XlaSerializedCacheEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.XlaSerializedCacheEntry)
  return false;
#undef DO_
}

void XlaSerializedCacheEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.XlaSerializedCacheEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.XlaSerializedCacheKey key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .xla.HloModuleProto hlo_module = 2;
  if (this->has_hlo_module()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_hlo_module(), output);
  }

  // bytes executable = 3;
  if (this->executable().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->executable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.XlaSerializedCacheEntry)
}

::google::protobuf::uint8* XlaSerializedCacheEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.XlaSerializedCacheEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.XlaSerializedCacheKey key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .xla.HloModuleProto hlo_module = 2;
  if (this->has_hlo_module()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_hlo_module(), deterministic, target);
  }

  // bytes executable = 3;
  if (this->executable().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->executable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.XlaSerializedCacheEntry)
  return target;
}

size_t XlaSerializedCacheEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.XlaSerializedCacheEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes executable = 3;
  if (this->executable().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->executable());
  }

  // .tensorflow.XlaSerializedCacheKey key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .xla.HloModuleProto hlo_module = 2;
  if (this->has_hlo_module()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hlo_module_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XlaSerializedCacheEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.XlaSerializedCacheEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const XlaSerializedCacheEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XlaSerializedCacheEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.XlaSerializedCacheEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.XlaSerializedCacheEntry)
    MergeFrom(*source);
  }
}

void XlaSerializedCacheEntry::MergeFrom(const XlaSerializedCacheEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.XlaSerializedCacheEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.executable().size() > 0) {

    executable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.executable_);
  }
  if (from.has_key()) {
    mutable_key()->::tensorflow::XlaSerializedCacheKey::MergeFrom(from.key());
  }
  if (from.has_hlo_module()) {
    mutable_hlo_module()->::xla::HloModuleProto::MergeFrom(from.hlo_module());
  }
}

void XlaSerializedCacheEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.XlaSerializedCacheEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlaSerializedCacheEntry::CopyFrom(const XlaSerializedCacheEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.XlaSerializedCacheEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlaSerializedCacheEntry::IsInitialized() const {
  return true;
}

void XlaSerializedCacheEntry::Swap(XlaSerializedCacheEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlaSerializedCacheEntry::InternalSwap(XlaSerializedCacheEntry* other) {
  using std::swap;
  executable_.Swap(&other->executable_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(hlo_module_, other->hlo_module_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XlaSerializedCacheEntry::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaSerializedCacheKey* Arena::CreateMaybeMessage< ::tensorflow::XlaSerializedCacheKey >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaSerializedCacheKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::XlaSerializedCacheEntry* Arena::CreateMaybeMessage< ::tensorflow::XlaSerializedCacheEntry >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::XlaSerializedCacheEntry >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
