// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/mlir/lite/quantization/quantization_info.proto

#include "tensorflow/compiler/mlir/lite/quantization/quantization_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QuantizationInfo_AffineParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QuantizationInfo_Metadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QuantizationInfo_MinMax;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_QuantizationInfo_PerAxisParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_QuantizationInfo_QuantParams;
}  // namespace protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto
namespace mlir {
namespace quant {
class QuantizationInfo_MinMaxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuantizationInfo_MinMax>
      _instance;
} _QuantizationInfo_MinMax_default_instance_;
class QuantizationInfo_AffineParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuantizationInfo_AffineParams>
      _instance;
} _QuantizationInfo_AffineParams_default_instance_;
class QuantizationInfo_PerAxisParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuantizationInfo_PerAxisParams>
      _instance;
  const ::mlir::quant::QuantizationInfo_MinMax* min_max_;
  const ::mlir::quant::QuantizationInfo_AffineParams* affine_params_;
} _QuantizationInfo_PerAxisParams_default_instance_;
class QuantizationInfo_MetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuantizationInfo_Metadata>
      _instance;
} _QuantizationInfo_Metadata_default_instance_;
class QuantizationInfo_QuantParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuantizationInfo_QuantParams>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr name_regex_;
} _QuantizationInfo_QuantParams_default_instance_;
class QuantizationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuantizationInfo>
      _instance;
} _QuantizationInfo_default_instance_;
}  // namespace quant
}  // namespace mlir
namespace protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto {
static void InitDefaultsQuantizationInfo_MinMax() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlir::quant::_QuantizationInfo_MinMax_default_instance_;
    new (ptr) ::mlir::quant::QuantizationInfo_MinMax();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlir::quant::QuantizationInfo_MinMax::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuantizationInfo_MinMax =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuantizationInfo_MinMax}, {}};

static void InitDefaultsQuantizationInfo_AffineParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlir::quant::_QuantizationInfo_AffineParams_default_instance_;
    new (ptr) ::mlir::quant::QuantizationInfo_AffineParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlir::quant::QuantizationInfo_AffineParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuantizationInfo_AffineParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuantizationInfo_AffineParams}, {}};

static void InitDefaultsQuantizationInfo_PerAxisParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlir::quant::_QuantizationInfo_PerAxisParams_default_instance_;
    new (ptr) ::mlir::quant::QuantizationInfo_PerAxisParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlir::quant::QuantizationInfo_PerAxisParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_QuantizationInfo_PerAxisParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsQuantizationInfo_PerAxisParams}, {
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_MinMax.base,
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_AffineParams.base,}};

static void InitDefaultsQuantizationInfo_Metadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlir::quant::_QuantizationInfo_Metadata_default_instance_;
    new (ptr) ::mlir::quant::QuantizationInfo_Metadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlir::quant::QuantizationInfo_Metadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuantizationInfo_Metadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuantizationInfo_Metadata}, {}};

static void InitDefaultsQuantizationInfo_QuantParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlir::quant::_QuantizationInfo_QuantParams_default_instance_;
    new (ptr) ::mlir::quant::QuantizationInfo_QuantParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlir::quant::QuantizationInfo_QuantParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_QuantizationInfo_QuantParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsQuantizationInfo_QuantParams}, {
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_PerAxisParams.base,
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_Metadata.base,}};

static void InitDefaultsQuantizationInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlir::quant::_QuantizationInfo_default_instance_;
    new (ptr) ::mlir::quant::QuantizationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlir::quant::QuantizationInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QuantizationInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQuantizationInfo}, {
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_QuantParams.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_QuantizationInfo_MinMax.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuantizationInfo_AffineParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuantizationInfo_PerAxisParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuantizationInfo_Metadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuantizationInfo_QuantParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuantizationInfo.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_MinMax, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_MinMax, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_MinMax, max_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_AffineParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_AffineParams, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_AffineParams, zero_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_PerAxisParams, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_PerAxisParams, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::mlir::quant::QuantizationInfo_PerAxisParamsDefaultTypeInternal, min_max_),
  offsetof(::mlir::quant::QuantizationInfo_PerAxisParamsDefaultTypeInternal, affine_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_PerAxisParams, params_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_Metadata, num_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_Metadata, quantize_axis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_Metadata, range_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_Metadata, range_max_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_QuantParams, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_QuantParams, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::mlir::quant::QuantizationInfo_QuantParamsDefaultTypeInternal, name_),
  offsetof(::mlir::quant::QuantizationInfo_QuantParamsDefaultTypeInternal, name_regex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_QuantParams, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_QuantParams, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo_QuantParams, name_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlir::quant::QuantizationInfo, entries_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mlir::quant::QuantizationInfo_MinMax)},
  { 7, -1, sizeof(::mlir::quant::QuantizationInfo_AffineParams)},
  { 14, -1, sizeof(::mlir::quant::QuantizationInfo_PerAxisParams)},
  { 22, -1, sizeof(::mlir::quant::QuantizationInfo_Metadata)},
  { 31, -1, sizeof(::mlir::quant::QuantizationInfo_QuantParams)},
  { 41, -1, sizeof(::mlir::quant::QuantizationInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlir::quant::_QuantizationInfo_MinMax_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlir::quant::_QuantizationInfo_AffineParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlir::quant::_QuantizationInfo_PerAxisParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlir::quant::_QuantizationInfo_Metadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlir::quant::_QuantizationInfo_QuantParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlir::quant::_QuantizationInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/compiler/mlir/lite/quantization/quantization_info.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nBtensorflow/compiler/mlir/lite/quantiza"
      "tion/quantization_info.proto\022\nmlir.quant"
      "\"\322\004\n\020QuantizationInfo\0229\n\007entries\030\001 \003(\0132("
      ".mlir.quant.QuantizationInfo.QuantParams"
      "\032\"\n\006MinMax\022\013\n\003min\030\001 \001(\002\022\013\n\003max\030\002 \001(\002\0321\n\014"
      "AffineParams\022\r\n\005scale\030\001 \001(\002\022\022\n\nzero_poin"
      "t\030\002 \001(\005\032\233\001\n\rPerAxisParams\0226\n\007min_max\030\001 \001"
      "(\0132#.mlir.quant.QuantizationInfo.MinMaxH"
      "\000\022B\n\raffine_params\030\002 \001(\0132).mlir.quant.Qu"
      "antizationInfo.AffineParamsH\000B\016\n\014params_"
      "oneof\032Y\n\010Metadata\022\020\n\010num_bits\030\001 \001(\005\022\025\n\rq"
      "uantize_axis\030\002 \001(\005\022\021\n\trange_min\030\003 \001(\005\022\021\n"
      "\trange_max\030\004 \001(\005\032\262\001\n\013QuantParams\022\016\n\004name"
      "\030\001 \001(\tH\000\022\024\n\nname_regex\030\002 \001(\tH\000\022:\n\006params"
      "\030\003 \003(\0132*.mlir.quant.QuantizationInfo.Per"
      "AxisParams\0223\n\004meta\030\005 \001(\0132%.mlir.quant.Qu"
      "antizationInfo.MetadataB\014\n\nname_oneofB\003\370"
      "\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/compiler/mlir/lite/quantization/quantization_info.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto
namespace mlir {
namespace quant {

// ===================================================================

void QuantizationInfo_MinMax::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuantizationInfo_MinMax::kMinFieldNumber;
const int QuantizationInfo_MinMax::kMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuantizationInfo_MinMax::QuantizationInfo_MinMax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_MinMax.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlir.quant.QuantizationInfo.MinMax)
}
QuantizationInfo_MinMax::QuantizationInfo_MinMax(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_MinMax.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mlir.quant.QuantizationInfo.MinMax)
}
QuantizationInfo_MinMax::QuantizationInfo_MinMax(const QuantizationInfo_MinMax& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_, &from.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_) -
    reinterpret_cast<char*>(&min_)) + sizeof(max_));
  // @@protoc_insertion_point(copy_constructor:mlir.quant.QuantizationInfo.MinMax)
}

void QuantizationInfo_MinMax::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
}

QuantizationInfo_MinMax::~QuantizationInfo_MinMax() {
  // @@protoc_insertion_point(destructor:mlir.quant.QuantizationInfo.MinMax)
  SharedDtor();
}

void QuantizationInfo_MinMax::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void QuantizationInfo_MinMax::ArenaDtor(void* object) {
  QuantizationInfo_MinMax* _this = reinterpret_cast< QuantizationInfo_MinMax* >(object);
  (void)_this;
}
void QuantizationInfo_MinMax::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QuantizationInfo_MinMax::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuantizationInfo_MinMax::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuantizationInfo_MinMax& QuantizationInfo_MinMax::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_MinMax.base);
  return *internal_default_instance();
}


void QuantizationInfo_MinMax::Clear() {
// @@protoc_insertion_point(message_clear_start:mlir.quant.QuantizationInfo.MinMax)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
  _internal_metadata_.Clear();
}

bool QuantizationInfo_MinMax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlir.quant.QuantizationInfo.MinMax)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float min = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlir.quant.QuantizationInfo.MinMax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlir.quant.QuantizationInfo.MinMax)
  return false;
#undef DO_
}

void QuantizationInfo_MinMax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlir.quant.QuantizationInfo.MinMax)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float min = 1;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->min(), output);
  }

  // float max = 2;
  if (this->max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->max(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mlir.quant.QuantizationInfo.MinMax)
}

::google::protobuf::uint8* QuantizationInfo_MinMax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlir.quant.QuantizationInfo.MinMax)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float min = 1;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->min(), target);
  }

  // float max = 2;
  if (this->max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->max(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlir.quant.QuantizationInfo.MinMax)
  return target;
}

size_t QuantizationInfo_MinMax::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlir.quant.QuantizationInfo.MinMax)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float min = 1;
  if (this->min() != 0) {
    total_size += 1 + 4;
  }

  // float max = 2;
  if (this->max() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuantizationInfo_MinMax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlir.quant.QuantizationInfo.MinMax)
  GOOGLE_DCHECK_NE(&from, this);
  const QuantizationInfo_MinMax* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuantizationInfo_MinMax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlir.quant.QuantizationInfo.MinMax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlir.quant.QuantizationInfo.MinMax)
    MergeFrom(*source);
  }
}

void QuantizationInfo_MinMax::MergeFrom(const QuantizationInfo_MinMax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlir.quant.QuantizationInfo.MinMax)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min() != 0) {
    set_min(from.min());
  }
  if (from.max() != 0) {
    set_max(from.max());
  }
}

void QuantizationInfo_MinMax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlir.quant.QuantizationInfo.MinMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuantizationInfo_MinMax::CopyFrom(const QuantizationInfo_MinMax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlir.quant.QuantizationInfo.MinMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuantizationInfo_MinMax::IsInitialized() const {
  return true;
}

void QuantizationInfo_MinMax::Swap(QuantizationInfo_MinMax* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QuantizationInfo_MinMax* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QuantizationInfo_MinMax::UnsafeArenaSwap(QuantizationInfo_MinMax* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QuantizationInfo_MinMax::InternalSwap(QuantizationInfo_MinMax* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuantizationInfo_MinMax::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuantizationInfo_AffineParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuantizationInfo_AffineParams::kScaleFieldNumber;
const int QuantizationInfo_AffineParams::kZeroPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuantizationInfo_AffineParams::QuantizationInfo_AffineParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_AffineParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlir.quant.QuantizationInfo.AffineParams)
}
QuantizationInfo_AffineParams::QuantizationInfo_AffineParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_AffineParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mlir.quant.QuantizationInfo.AffineParams)
}
QuantizationInfo_AffineParams::QuantizationInfo_AffineParams(const QuantizationInfo_AffineParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scale_, &from.scale_,
    static_cast<size_t>(reinterpret_cast<char*>(&zero_point_) -
    reinterpret_cast<char*>(&scale_)) + sizeof(zero_point_));
  // @@protoc_insertion_point(copy_constructor:mlir.quant.QuantizationInfo.AffineParams)
}

void QuantizationInfo_AffineParams::SharedCtor() {
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zero_point_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(zero_point_));
}

QuantizationInfo_AffineParams::~QuantizationInfo_AffineParams() {
  // @@protoc_insertion_point(destructor:mlir.quant.QuantizationInfo.AffineParams)
  SharedDtor();
}

void QuantizationInfo_AffineParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void QuantizationInfo_AffineParams::ArenaDtor(void* object) {
  QuantizationInfo_AffineParams* _this = reinterpret_cast< QuantizationInfo_AffineParams* >(object);
  (void)_this;
}
void QuantizationInfo_AffineParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QuantizationInfo_AffineParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuantizationInfo_AffineParams::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuantizationInfo_AffineParams& QuantizationInfo_AffineParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_AffineParams.base);
  return *internal_default_instance();
}


void QuantizationInfo_AffineParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mlir.quant.QuantizationInfo.AffineParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zero_point_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(zero_point_));
  _internal_metadata_.Clear();
}

bool QuantizationInfo_AffineParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlir.quant.QuantizationInfo.AffineParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float scale = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 zero_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zero_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlir.quant.QuantizationInfo.AffineParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlir.quant.QuantizationInfo.AffineParams)
  return false;
#undef DO_
}

void QuantizationInfo_AffineParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlir.quant.QuantizationInfo.AffineParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float scale = 1;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->scale(), output);
  }

  // int32 zero_point = 2;
  if (this->zero_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->zero_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mlir.quant.QuantizationInfo.AffineParams)
}

::google::protobuf::uint8* QuantizationInfo_AffineParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlir.quant.QuantizationInfo.AffineParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float scale = 1;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->scale(), target);
  }

  // int32 zero_point = 2;
  if (this->zero_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->zero_point(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlir.quant.QuantizationInfo.AffineParams)
  return target;
}

size_t QuantizationInfo_AffineParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlir.quant.QuantizationInfo.AffineParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float scale = 1;
  if (this->scale() != 0) {
    total_size += 1 + 4;
  }

  // int32 zero_point = 2;
  if (this->zero_point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zero_point());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuantizationInfo_AffineParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlir.quant.QuantizationInfo.AffineParams)
  GOOGLE_DCHECK_NE(&from, this);
  const QuantizationInfo_AffineParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuantizationInfo_AffineParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlir.quant.QuantizationInfo.AffineParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlir.quant.QuantizationInfo.AffineParams)
    MergeFrom(*source);
  }
}

void QuantizationInfo_AffineParams::MergeFrom(const QuantizationInfo_AffineParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlir.quant.QuantizationInfo.AffineParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scale() != 0) {
    set_scale(from.scale());
  }
  if (from.zero_point() != 0) {
    set_zero_point(from.zero_point());
  }
}

void QuantizationInfo_AffineParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlir.quant.QuantizationInfo.AffineParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuantizationInfo_AffineParams::CopyFrom(const QuantizationInfo_AffineParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlir.quant.QuantizationInfo.AffineParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuantizationInfo_AffineParams::IsInitialized() const {
  return true;
}

void QuantizationInfo_AffineParams::Swap(QuantizationInfo_AffineParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QuantizationInfo_AffineParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QuantizationInfo_AffineParams::UnsafeArenaSwap(QuantizationInfo_AffineParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QuantizationInfo_AffineParams::InternalSwap(QuantizationInfo_AffineParams* other) {
  using std::swap;
  swap(scale_, other->scale_);
  swap(zero_point_, other->zero_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuantizationInfo_AffineParams::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuantizationInfo_PerAxisParams::InitAsDefaultInstance() {
  ::mlir::quant::_QuantizationInfo_PerAxisParams_default_instance_.min_max_ = const_cast< ::mlir::quant::QuantizationInfo_MinMax*>(
      ::mlir::quant::QuantizationInfo_MinMax::internal_default_instance());
  ::mlir::quant::_QuantizationInfo_PerAxisParams_default_instance_.affine_params_ = const_cast< ::mlir::quant::QuantizationInfo_AffineParams*>(
      ::mlir::quant::QuantizationInfo_AffineParams::internal_default_instance());
}
void QuantizationInfo_PerAxisParams::set_allocated_min_max(::mlir::quant::QuantizationInfo_MinMax* min_max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params_oneof();
  if (min_max) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(min_max);
    if (message_arena != submessage_arena) {
      min_max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_max, submessage_arena);
    }
    set_has_min_max();
    params_oneof_.min_max_ = min_max;
  }
  // @@protoc_insertion_point(field_set_allocated:mlir.quant.QuantizationInfo.PerAxisParams.min_max)
}
void QuantizationInfo_PerAxisParams::set_allocated_affine_params(::mlir::quant::QuantizationInfo_AffineParams* affine_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params_oneof();
  if (affine_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(affine_params);
    if (message_arena != submessage_arena) {
      affine_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, affine_params, submessage_arena);
    }
    set_has_affine_params();
    params_oneof_.affine_params_ = affine_params;
  }
  // @@protoc_insertion_point(field_set_allocated:mlir.quant.QuantizationInfo.PerAxisParams.affine_params)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuantizationInfo_PerAxisParams::kMinMaxFieldNumber;
const int QuantizationInfo_PerAxisParams::kAffineParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuantizationInfo_PerAxisParams::QuantizationInfo_PerAxisParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_PerAxisParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlir.quant.QuantizationInfo.PerAxisParams)
}
QuantizationInfo_PerAxisParams::QuantizationInfo_PerAxisParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_PerAxisParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mlir.quant.QuantizationInfo.PerAxisParams)
}
QuantizationInfo_PerAxisParams::QuantizationInfo_PerAxisParams(const QuantizationInfo_PerAxisParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_params_oneof();
  switch (from.params_oneof_case()) {
    case kMinMax: {
      mutable_min_max()->::mlir::quant::QuantizationInfo_MinMax::MergeFrom(from.min_max());
      break;
    }
    case kAffineParams: {
      mutable_affine_params()->::mlir::quant::QuantizationInfo_AffineParams::MergeFrom(from.affine_params());
      break;
    }
    case PARAMS_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mlir.quant.QuantizationInfo.PerAxisParams)
}

void QuantizationInfo_PerAxisParams::SharedCtor() {
  clear_has_params_oneof();
}

QuantizationInfo_PerAxisParams::~QuantizationInfo_PerAxisParams() {
  // @@protoc_insertion_point(destructor:mlir.quant.QuantizationInfo.PerAxisParams)
  SharedDtor();
}

void QuantizationInfo_PerAxisParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_params_oneof()) {
    clear_params_oneof();
  }
}

void QuantizationInfo_PerAxisParams::ArenaDtor(void* object) {
  QuantizationInfo_PerAxisParams* _this = reinterpret_cast< QuantizationInfo_PerAxisParams* >(object);
  (void)_this;
}
void QuantizationInfo_PerAxisParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QuantizationInfo_PerAxisParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuantizationInfo_PerAxisParams::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuantizationInfo_PerAxisParams& QuantizationInfo_PerAxisParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_PerAxisParams.base);
  return *internal_default_instance();
}


void QuantizationInfo_PerAxisParams::clear_params_oneof() {
// @@protoc_insertion_point(one_of_clear_start:mlir.quant.QuantizationInfo.PerAxisParams)
  switch (params_oneof_case()) {
    case kMinMax: {
      if (GetArenaNoVirtual() == NULL) {
        delete params_oneof_.min_max_;
      }
      break;
    }
    case kAffineParams: {
      if (GetArenaNoVirtual() == NULL) {
        delete params_oneof_.affine_params_;
      }
      break;
    }
    case PARAMS_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMS_ONEOF_NOT_SET;
}


void QuantizationInfo_PerAxisParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mlir.quant.QuantizationInfo.PerAxisParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_params_oneof();
  _internal_metadata_.Clear();
}

bool QuantizationInfo_PerAxisParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlir.quant.QuantizationInfo.PerAxisParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mlir.quant.QuantizationInfo.MinMax min_max = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mlir.quant.QuantizationInfo.AffineParams affine_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_affine_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlir.quant.QuantizationInfo.PerAxisParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlir.quant.QuantizationInfo.PerAxisParams)
  return false;
#undef DO_
}

void QuantizationInfo_PerAxisParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlir.quant.QuantizationInfo.PerAxisParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mlir.quant.QuantizationInfo.MinMax min_max = 1;
  if (has_min_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_min_max(), output);
  }

  // .mlir.quant.QuantizationInfo.AffineParams affine_params = 2;
  if (has_affine_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_affine_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mlir.quant.QuantizationInfo.PerAxisParams)
}

::google::protobuf::uint8* QuantizationInfo_PerAxisParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlir.quant.QuantizationInfo.PerAxisParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mlir.quant.QuantizationInfo.MinMax min_max = 1;
  if (has_min_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_min_max(), deterministic, target);
  }

  // .mlir.quant.QuantizationInfo.AffineParams affine_params = 2;
  if (has_affine_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_affine_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlir.quant.QuantizationInfo.PerAxisParams)
  return target;
}

size_t QuantizationInfo_PerAxisParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlir.quant.QuantizationInfo.PerAxisParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (params_oneof_case()) {
    // .mlir.quant.QuantizationInfo.MinMax min_max = 1;
    case kMinMax: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_oneof_.min_max_);
      break;
    }
    // .mlir.quant.QuantizationInfo.AffineParams affine_params = 2;
    case kAffineParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_oneof_.affine_params_);
      break;
    }
    case PARAMS_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuantizationInfo_PerAxisParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlir.quant.QuantizationInfo.PerAxisParams)
  GOOGLE_DCHECK_NE(&from, this);
  const QuantizationInfo_PerAxisParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuantizationInfo_PerAxisParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlir.quant.QuantizationInfo.PerAxisParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlir.quant.QuantizationInfo.PerAxisParams)
    MergeFrom(*source);
  }
}

void QuantizationInfo_PerAxisParams::MergeFrom(const QuantizationInfo_PerAxisParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlir.quant.QuantizationInfo.PerAxisParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.params_oneof_case()) {
    case kMinMax: {
      mutable_min_max()->::mlir::quant::QuantizationInfo_MinMax::MergeFrom(from.min_max());
      break;
    }
    case kAffineParams: {
      mutable_affine_params()->::mlir::quant::QuantizationInfo_AffineParams::MergeFrom(from.affine_params());
      break;
    }
    case PARAMS_ONEOF_NOT_SET: {
      break;
    }
  }
}

void QuantizationInfo_PerAxisParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlir.quant.QuantizationInfo.PerAxisParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuantizationInfo_PerAxisParams::CopyFrom(const QuantizationInfo_PerAxisParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlir.quant.QuantizationInfo.PerAxisParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuantizationInfo_PerAxisParams::IsInitialized() const {
  return true;
}

void QuantizationInfo_PerAxisParams::Swap(QuantizationInfo_PerAxisParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QuantizationInfo_PerAxisParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QuantizationInfo_PerAxisParams::UnsafeArenaSwap(QuantizationInfo_PerAxisParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QuantizationInfo_PerAxisParams::InternalSwap(QuantizationInfo_PerAxisParams* other) {
  using std::swap;
  swap(params_oneof_, other->params_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuantizationInfo_PerAxisParams::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuantizationInfo_Metadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuantizationInfo_Metadata::kNumBitsFieldNumber;
const int QuantizationInfo_Metadata::kQuantizeAxisFieldNumber;
const int QuantizationInfo_Metadata::kRangeMinFieldNumber;
const int QuantizationInfo_Metadata::kRangeMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuantizationInfo_Metadata::QuantizationInfo_Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_Metadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlir.quant.QuantizationInfo.Metadata)
}
QuantizationInfo_Metadata::QuantizationInfo_Metadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_Metadata.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mlir.quant.QuantizationInfo.Metadata)
}
QuantizationInfo_Metadata::QuantizationInfo_Metadata(const QuantizationInfo_Metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_bits_, &from.num_bits_,
    static_cast<size_t>(reinterpret_cast<char*>(&range_max_) -
    reinterpret_cast<char*>(&num_bits_)) + sizeof(range_max_));
  // @@protoc_insertion_point(copy_constructor:mlir.quant.QuantizationInfo.Metadata)
}

void QuantizationInfo_Metadata::SharedCtor() {
  ::memset(&num_bits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_max_) -
      reinterpret_cast<char*>(&num_bits_)) + sizeof(range_max_));
}

QuantizationInfo_Metadata::~QuantizationInfo_Metadata() {
  // @@protoc_insertion_point(destructor:mlir.quant.QuantizationInfo.Metadata)
  SharedDtor();
}

void QuantizationInfo_Metadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void QuantizationInfo_Metadata::ArenaDtor(void* object) {
  QuantizationInfo_Metadata* _this = reinterpret_cast< QuantizationInfo_Metadata* >(object);
  (void)_this;
}
void QuantizationInfo_Metadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QuantizationInfo_Metadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuantizationInfo_Metadata::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuantizationInfo_Metadata& QuantizationInfo_Metadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_Metadata.base);
  return *internal_default_instance();
}


void QuantizationInfo_Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:mlir.quant.QuantizationInfo.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&num_bits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_max_) -
      reinterpret_cast<char*>(&num_bits_)) + sizeof(range_max_));
  _internal_metadata_.Clear();
}

bool QuantizationInfo_Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlir.quant.QuantizationInfo.Metadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_bits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 quantize_axis = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quantize_axis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 range_min = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 range_max = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlir.quant.QuantizationInfo.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlir.quant.QuantizationInfo.Metadata)
  return false;
#undef DO_
}

void QuantizationInfo_Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlir.quant.QuantizationInfo.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_bits = 1;
  if (this->num_bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_bits(), output);
  }

  // int32 quantize_axis = 2;
  if (this->quantize_axis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quantize_axis(), output);
  }

  // int32 range_min = 3;
  if (this->range_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->range_min(), output);
  }

  // int32 range_max = 4;
  if (this->range_max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->range_max(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mlir.quant.QuantizationInfo.Metadata)
}

::google::protobuf::uint8* QuantizationInfo_Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlir.quant.QuantizationInfo.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_bits = 1;
  if (this->num_bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_bits(), target);
  }

  // int32 quantize_axis = 2;
  if (this->quantize_axis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quantize_axis(), target);
  }

  // int32 range_min = 3;
  if (this->range_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->range_min(), target);
  }

  // int32 range_max = 4;
  if (this->range_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->range_max(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlir.quant.QuantizationInfo.Metadata)
  return target;
}

size_t QuantizationInfo_Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlir.quant.QuantizationInfo.Metadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 num_bits = 1;
  if (this->num_bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_bits());
  }

  // int32 quantize_axis = 2;
  if (this->quantize_axis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quantize_axis());
  }

  // int32 range_min = 3;
  if (this->range_min() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range_min());
  }

  // int32 range_max = 4;
  if (this->range_max() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range_max());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuantizationInfo_Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlir.quant.QuantizationInfo.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const QuantizationInfo_Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuantizationInfo_Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlir.quant.QuantizationInfo.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlir.quant.QuantizationInfo.Metadata)
    MergeFrom(*source);
  }
}

void QuantizationInfo_Metadata::MergeFrom(const QuantizationInfo_Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlir.quant.QuantizationInfo.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num_bits() != 0) {
    set_num_bits(from.num_bits());
  }
  if (from.quantize_axis() != 0) {
    set_quantize_axis(from.quantize_axis());
  }
  if (from.range_min() != 0) {
    set_range_min(from.range_min());
  }
  if (from.range_max() != 0) {
    set_range_max(from.range_max());
  }
}

void QuantizationInfo_Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlir.quant.QuantizationInfo.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuantizationInfo_Metadata::CopyFrom(const QuantizationInfo_Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlir.quant.QuantizationInfo.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuantizationInfo_Metadata::IsInitialized() const {
  return true;
}

void QuantizationInfo_Metadata::Swap(QuantizationInfo_Metadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QuantizationInfo_Metadata* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QuantizationInfo_Metadata::UnsafeArenaSwap(QuantizationInfo_Metadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QuantizationInfo_Metadata::InternalSwap(QuantizationInfo_Metadata* other) {
  using std::swap;
  swap(num_bits_, other->num_bits_);
  swap(quantize_axis_, other->quantize_axis_);
  swap(range_min_, other->range_min_);
  swap(range_max_, other->range_max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuantizationInfo_Metadata::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuantizationInfo_QuantParams::InitAsDefaultInstance() {
  ::mlir::quant::_QuantizationInfo_QuantParams_default_instance_.name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::mlir::quant::_QuantizationInfo_QuantParams_default_instance_.name_regex_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::mlir::quant::_QuantizationInfo_QuantParams_default_instance_._instance.get_mutable()->meta_ = const_cast< ::mlir::quant::QuantizationInfo_Metadata*>(
      ::mlir::quant::QuantizationInfo_Metadata::internal_default_instance());
}
void QuantizationInfo_QuantParams::unsafe_arena_set_allocated_meta(
    ::mlir::quant::QuantizationInfo_Metadata* meta) {
  if (GetArenaNoVirtual() == NULL) {
    delete meta_;
  }
  meta_ = meta;
  if (meta) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mlir.quant.QuantizationInfo.QuantParams.meta)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuantizationInfo_QuantParams::kNameFieldNumber;
const int QuantizationInfo_QuantParams::kNameRegexFieldNumber;
const int QuantizationInfo_QuantParams::kParamsFieldNumber;
const int QuantizationInfo_QuantParams::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuantizationInfo_QuantParams::QuantizationInfo_QuantParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_QuantParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlir.quant.QuantizationInfo.QuantParams)
}
QuantizationInfo_QuantParams::QuantizationInfo_QuantParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  params_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_QuantParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mlir.quant.QuantizationInfo.QuantParams)
}
QuantizationInfo_QuantParams::QuantizationInfo_QuantParams(const QuantizationInfo_QuantParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::mlir::quant::QuantizationInfo_Metadata(*from.meta_);
  } else {
    meta_ = NULL;
  }
  clear_has_name_oneof();
  switch (from.name_oneof_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kNameRegex: {
      set_name_regex(from.name_regex());
      break;
    }
    case NAME_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mlir.quant.QuantizationInfo.QuantParams)
}

void QuantizationInfo_QuantParams::SharedCtor() {
  meta_ = NULL;
  clear_has_name_oneof();
}

QuantizationInfo_QuantParams::~QuantizationInfo_QuantParams() {
  // @@protoc_insertion_point(destructor:mlir.quant.QuantizationInfo.QuantParams)
  SharedDtor();
}

void QuantizationInfo_QuantParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete meta_;
  if (has_name_oneof()) {
    clear_name_oneof();
  }
}

void QuantizationInfo_QuantParams::ArenaDtor(void* object) {
  QuantizationInfo_QuantParams* _this = reinterpret_cast< QuantizationInfo_QuantParams* >(object);
  (void)_this;
}
void QuantizationInfo_QuantParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QuantizationInfo_QuantParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuantizationInfo_QuantParams::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuantizationInfo_QuantParams& QuantizationInfo_QuantParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo_QuantParams.base);
  return *internal_default_instance();
}


void QuantizationInfo_QuantParams::clear_name_oneof() {
// @@protoc_insertion_point(one_of_clear_start:mlir.quant.QuantizationInfo.QuantParams)
  switch (name_oneof_case()) {
    case kName: {
      name_oneof_.name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kNameRegex: {
      name_oneof_.name_regex_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case NAME_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NAME_ONEOF_NOT_SET;
}


void QuantizationInfo_QuantParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mlir.quant.QuantizationInfo.QuantParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  clear_name_oneof();
  _internal_metadata_.Clear();
}

bool QuantizationInfo_QuantParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlir.quant.QuantizationInfo.QuantParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mlir.quant.QuantizationInfo.QuantParams.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name_regex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name_regex().data(), static_cast<int>(this->name_regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mlir.quant.QuantizationInfo.QuantParams.name_regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mlir.quant.QuantizationInfo.PerAxisParams params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mlir.quant.QuantizationInfo.Metadata meta = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlir.quant.QuantizationInfo.QuantParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlir.quant.QuantizationInfo.QuantParams)
  return false;
#undef DO_
}

void QuantizationInfo_QuantParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlir.quant.QuantizationInfo.QuantParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mlir.quant.QuantizationInfo.QuantParams.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string name_regex = 2;
  if (has_name_regex()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name_regex().data(), static_cast<int>(this->name_regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mlir.quant.QuantizationInfo.QuantParams.name_regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name_regex(), output);
  }

  // repeated .mlir.quant.QuantizationInfo.PerAxisParams params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->params(static_cast<int>(i)),
      output);
  }

  // .mlir.quant.QuantizationInfo.Metadata meta = 5;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_meta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mlir.quant.QuantizationInfo.QuantParams)
}

::google::protobuf::uint8* QuantizationInfo_QuantParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlir.quant.QuantizationInfo.QuantParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mlir.quant.QuantizationInfo.QuantParams.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string name_regex = 2;
  if (has_name_regex()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name_regex().data(), static_cast<int>(this->name_regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mlir.quant.QuantizationInfo.QuantParams.name_regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name_regex(), target);
  }

  // repeated .mlir.quant.QuantizationInfo.PerAxisParams params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->params(static_cast<int>(i)), deterministic, target);
  }

  // .mlir.quant.QuantizationInfo.Metadata meta = 5;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_meta(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlir.quant.QuantizationInfo.QuantParams)
  return target;
}

size_t QuantizationInfo_QuantParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlir.quant.QuantizationInfo.QuantParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mlir.quant.QuantizationInfo.PerAxisParams params = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // .mlir.quant.QuantizationInfo.Metadata meta = 5;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  switch (name_oneof_case()) {
    // string name = 1;
    case kName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
      break;
    }
    // string name_regex = 2;
    case kNameRegex: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name_regex());
      break;
    }
    case NAME_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuantizationInfo_QuantParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlir.quant.QuantizationInfo.QuantParams)
  GOOGLE_DCHECK_NE(&from, this);
  const QuantizationInfo_QuantParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuantizationInfo_QuantParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlir.quant.QuantizationInfo.QuantParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlir.quant.QuantizationInfo.QuantParams)
    MergeFrom(*source);
  }
}

void QuantizationInfo_QuantParams::MergeFrom(const QuantizationInfo_QuantParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlir.quant.QuantizationInfo.QuantParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_meta()) {
    mutable_meta()->::mlir::quant::QuantizationInfo_Metadata::MergeFrom(from.meta());
  }
  switch (from.name_oneof_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kNameRegex: {
      set_name_regex(from.name_regex());
      break;
    }
    case NAME_ONEOF_NOT_SET: {
      break;
    }
  }
}

void QuantizationInfo_QuantParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlir.quant.QuantizationInfo.QuantParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuantizationInfo_QuantParams::CopyFrom(const QuantizationInfo_QuantParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlir.quant.QuantizationInfo.QuantParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuantizationInfo_QuantParams::IsInitialized() const {
  return true;
}

void QuantizationInfo_QuantParams::Swap(QuantizationInfo_QuantParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QuantizationInfo_QuantParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QuantizationInfo_QuantParams::UnsafeArenaSwap(QuantizationInfo_QuantParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QuantizationInfo_QuantParams::InternalSwap(QuantizationInfo_QuantParams* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  swap(meta_, other->meta_);
  swap(name_oneof_, other->name_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuantizationInfo_QuantParams::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuantizationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuantizationInfo::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuantizationInfo::QuantizationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlir.quant.QuantizationInfo)
}
QuantizationInfo::QuantizationInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mlir.quant.QuantizationInfo)
}
QuantizationInfo::QuantizationInfo(const QuantizationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlir.quant.QuantizationInfo)
}

void QuantizationInfo::SharedCtor() {
}

QuantizationInfo::~QuantizationInfo() {
  // @@protoc_insertion_point(destructor:mlir.quant.QuantizationInfo)
  SharedDtor();
}

void QuantizationInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void QuantizationInfo::ArenaDtor(void* object) {
  QuantizationInfo* _this = reinterpret_cast< QuantizationInfo* >(object);
  (void)_this;
}
void QuantizationInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QuantizationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuantizationInfo::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuantizationInfo& QuantizationInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::scc_info_QuantizationInfo.base);
  return *internal_default_instance();
}


void QuantizationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mlir.quant.QuantizationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool QuantizationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlir.quant.QuantizationInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mlir.quant.QuantizationInfo.QuantParams entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlir.quant.QuantizationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlir.quant.QuantizationInfo)
  return false;
#undef DO_
}

void QuantizationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlir.quant.QuantizationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlir.quant.QuantizationInfo.QuantParams entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mlir.quant.QuantizationInfo)
}

::google::protobuf::uint8* QuantizationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlir.quant.QuantizationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlir.quant.QuantizationInfo.QuantParams entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlir.quant.QuantizationInfo)
  return target;
}

size_t QuantizationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlir.quant.QuantizationInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mlir.quant.QuantizationInfo.QuantParams entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuantizationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlir.quant.QuantizationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const QuantizationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuantizationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlir.quant.QuantizationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlir.quant.QuantizationInfo)
    MergeFrom(*source);
  }
}

void QuantizationInfo::MergeFrom(const QuantizationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlir.quant.QuantizationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void QuantizationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlir.quant.QuantizationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuantizationInfo::CopyFrom(const QuantizationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlir.quant.QuantizationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuantizationInfo::IsInitialized() const {
  return true;
}

void QuantizationInfo::Swap(QuantizationInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QuantizationInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QuantizationInfo::UnsafeArenaSwap(QuantizationInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QuantizationInfo::InternalSwap(QuantizationInfo* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuantizationInfo::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fmlir_2flite_2fquantization_2fquantization_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace quant
}  // namespace mlir
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlir::quant::QuantizationInfo_MinMax* Arena::CreateMaybeMessage< ::mlir::quant::QuantizationInfo_MinMax >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mlir::quant::QuantizationInfo_MinMax >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlir::quant::QuantizationInfo_AffineParams* Arena::CreateMaybeMessage< ::mlir::quant::QuantizationInfo_AffineParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mlir::quant::QuantizationInfo_AffineParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlir::quant::QuantizationInfo_PerAxisParams* Arena::CreateMaybeMessage< ::mlir::quant::QuantizationInfo_PerAxisParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mlir::quant::QuantizationInfo_PerAxisParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlir::quant::QuantizationInfo_Metadata* Arena::CreateMaybeMessage< ::mlir::quant::QuantizationInfo_Metadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mlir::quant::QuantizationInfo_Metadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlir::quant::QuantizationInfo_QuantParams* Arena::CreateMaybeMessage< ::mlir::quant::QuantizationInfo_QuantParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mlir::quant::QuantizationInfo_QuantParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlir::quant::QuantizationInfo* Arena::CreateMaybeMessage< ::mlir::quant::QuantizationInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mlir::quant::QuantizationInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
