// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/pjrt/distributed/protocol.proto

#include "tensorflow/compiler/xla/pjrt/distributed/protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GlobalTopologyProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LocalTopologyProto;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto
namespace xla {
class DeviceProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceProto>
      _instance;
} _DeviceProto_default_instance_;
class LocalTopologyProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalTopologyProto>
      _instance;
} _LocalTopologyProto_default_instance_;
class GlobalTopologyProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalTopologyProto>
      _instance;
} _GlobalTopologyProto_default_instance_;
class ConnectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectRequest>
      _instance;
} _ConnectRequest_default_instance_;
class ConnectResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectResponse>
      _instance;
} _ConnectResponse_default_instance_;
class EnumerateDevicesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnumerateDevicesRequest>
      _instance;
} _EnumerateDevicesRequest_default_instance_;
class EnumerateDevicesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnumerateDevicesResponse>
      _instance;
} _EnumerateDevicesResponse_default_instance_;
class KeyValueGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValueGetRequest>
      _instance;
} _KeyValueGetRequest_default_instance_;
class KeyValueGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValueGetResponse>
      _instance;
} _KeyValueGetResponse_default_instance_;
class KeyValueSetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValueSetRequest>
      _instance;
} _KeyValueSetRequest_default_instance_;
class KeyValueSetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValueSetResponse>
      _instance;
} _KeyValueSetResponse_default_instance_;
class HeartbeatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRequest>
      _instance;
} _HeartbeatRequest_default_instance_;
class HeartbeatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatResponse>
      _instance;
} _HeartbeatResponse_default_instance_;
class ShutdownRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShutdownRequest>
      _instance;
} _ShutdownRequest_default_instance_;
class ShutdownResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShutdownResponse>
      _instance;
} _ShutdownResponse_default_instance_;
}  // namespace xla
namespace protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto {
static void InitDefaultsDeviceProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DeviceProto_default_instance_;
    new (ptr) ::xla::DeviceProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DeviceProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceProto}, {}};

static void InitDefaultsLocalTopologyProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_LocalTopologyProto_default_instance_;
    new (ptr) ::xla::LocalTopologyProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::LocalTopologyProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LocalTopologyProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocalTopologyProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_DeviceProto.base,}};

static void InitDefaultsGlobalTopologyProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_GlobalTopologyProto_default_instance_;
    new (ptr) ::xla::GlobalTopologyProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::GlobalTopologyProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GlobalTopologyProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGlobalTopologyProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_LocalTopologyProto.base,}};

static void InitDefaultsConnectRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ConnectRequest_default_instance_;
    new (ptr) ::xla::ConnectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ConnectRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectRequest}, {}};

static void InitDefaultsConnectResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ConnectResponse_default_instance_;
    new (ptr) ::xla::ConnectResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ConnectResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectResponse}, {}};

static void InitDefaultsEnumerateDevicesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_EnumerateDevicesRequest_default_instance_;
    new (ptr) ::xla::EnumerateDevicesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::EnumerateDevicesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnumerateDevicesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnumerateDevicesRequest}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_LocalTopologyProto.base,}};

static void InitDefaultsEnumerateDevicesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_EnumerateDevicesResponse_default_instance_;
    new (ptr) ::xla::EnumerateDevicesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::EnumerateDevicesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnumerateDevicesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnumerateDevicesResponse}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_GlobalTopologyProto.base,}};

static void InitDefaultsKeyValueGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_KeyValueGetRequest_default_instance_;
    new (ptr) ::xla::KeyValueGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::KeyValueGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyValueGetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyValueGetRequest}, {}};

static void InitDefaultsKeyValueGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_KeyValueGetResponse_default_instance_;
    new (ptr) ::xla::KeyValueGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::KeyValueGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyValueGetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyValueGetResponse}, {}};

static void InitDefaultsKeyValueSetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_KeyValueSetRequest_default_instance_;
    new (ptr) ::xla::KeyValueSetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::KeyValueSetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyValueSetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyValueSetRequest}, {}};

static void InitDefaultsKeyValueSetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_KeyValueSetResponse_default_instance_;
    new (ptr) ::xla::KeyValueSetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::KeyValueSetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyValueSetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyValueSetResponse}, {}};

static void InitDefaultsHeartbeatRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HeartbeatRequest_default_instance_;
    new (ptr) ::xla::HeartbeatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HeartbeatRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartbeatRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartbeatRequest}, {}};

static void InitDefaultsHeartbeatResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HeartbeatResponse_default_instance_;
    new (ptr) ::xla::HeartbeatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HeartbeatResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartbeatResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartbeatResponse}, {}};

static void InitDefaultsShutdownRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ShutdownRequest_default_instance_;
    new (ptr) ::xla::ShutdownRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ShutdownRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShutdownRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShutdownRequest}, {}};

static void InitDefaultsShutdownResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ShutdownResponse_default_instance_;
    new (ptr) ::xla::ShutdownResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ShutdownResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShutdownResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShutdownResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalTopologyProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GlobalTopologyProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnumerateDevicesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnumerateDevicesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyValueGetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyValueGetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyValueSetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyValueSetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartbeatRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartbeatResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShutdownRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShutdownResponse.base);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceProto, local_device_ordinal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceProto, vendor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceProto, global_device_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LocalTopologyProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LocalTopologyProto, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LocalTopologyProto, devices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GlobalTopologyProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GlobalTopologyProto, nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConnectRequest, protocol_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConnectRequest, timeout_milliseconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConnectRequest, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConnectRequest, client_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConnectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConnectResponse, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EnumerateDevicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EnumerateDevicesRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EnumerateDevicesRequest, local_topology_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EnumerateDevicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EnumerateDevicesResponse, global_topology_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueGetRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueGetRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueGetRequest, timeout_milliseconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueGetResponse, found_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueGetResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueSetRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueSetRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueSetRequest, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::KeyValueSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeartbeatRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeartbeatRequest, node_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShutdownRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShutdownRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShutdownRequest, node_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShutdownResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xla::DeviceProto)},
  { 9, -1, sizeof(::xla::LocalTopologyProto)},
  { 16, -1, sizeof(::xla::GlobalTopologyProto)},
  { 22, -1, sizeof(::xla::ConnectRequest)},
  { 31, -1, sizeof(::xla::ConnectResponse)},
  { 37, -1, sizeof(::xla::EnumerateDevicesRequest)},
  { 44, -1, sizeof(::xla::EnumerateDevicesResponse)},
  { 50, -1, sizeof(::xla::KeyValueGetRequest)},
  { 58, -1, sizeof(::xla::KeyValueGetResponse)},
  { 65, -1, sizeof(::xla::KeyValueSetRequest)},
  { 73, -1, sizeof(::xla::KeyValueSetResponse)},
  { 78, -1, sizeof(::xla::HeartbeatRequest)},
  { 85, -1, sizeof(::xla::HeartbeatResponse)},
  { 90, -1, sizeof(::xla::ShutdownRequest)},
  { 97, -1, sizeof(::xla::ShutdownResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DeviceProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_LocalTopologyProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_GlobalTopologyProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ConnectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ConnectResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_EnumerateDevicesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_EnumerateDevicesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_KeyValueGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_KeyValueGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_KeyValueSetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_KeyValueSetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HeartbeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HeartbeatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ShutdownRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ShutdownResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/compiler/xla/pjrt/distributed/protocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n7tensorflow/compiler/xla/pjrt/distribut"
      "ed/protocol.proto\022\003xla\"c\n\013DeviceProto\022\034\n"
      "\024local_device_ordinal\030\001 \001(\005\022\014\n\004name\030\002 \001("
      "\t\022\016\n\006vendor\030\003 \001(\t\022\030\n\020global_device_id\030\004 "
      "\001(\005\"H\n\022LocalTopologyProto\022\017\n\007node_id\030\001 \001"
      "(\005\022!\n\007devices\030\002 \003(\0132\020.xla.DeviceProto\"=\n"
      "\023GlobalTopologyProto\022&\n\005nodes\030\001 \003(\0132\027.xl"
      "a.LocalTopologyProto\"l\n\016ConnectRequest\022\030"
      "\n\020protocol_version\030\001 \001(\005\022\034\n\024timeout_mill"
      "iseconds\030\002 \001(\005\022\017\n\007node_id\030\003 \001(\005\022\021\n\tclien"
      "t_id\030\004 \001(\004\"%\n\017ConnectResponse\022\022\n\nsession"
      "_id\030\001 \001(\004\"^\n\027EnumerateDevicesRequest\022\022\n\n"
      "session_id\030\001 \001(\004\022/\n\016local_topology\030\003 \001(\013"
      "2\027.xla.LocalTopologyProto\"M\n\030EnumerateDe"
      "vicesResponse\0221\n\017global_topology\030\001 \001(\0132\030"
      ".xla.GlobalTopologyProto\"S\n\022KeyValueGetR"
      "equest\022\022\n\nsession_id\030\001 \001(\004\022\013\n\003key\030\002 \001(\014\022"
      "\034\n\024timeout_milliseconds\030\003 \001(\005\"3\n\023KeyValu"
      "eGetResponse\022\r\n\005found\030\001 \001(\010\022\r\n\005value\030\002 \001"
      "(\014\"D\n\022KeyValueSetRequest\022\022\n\nsession_id\030\001"
      " \001(\004\022\013\n\003key\030\002 \001(\014\022\r\n\005value\030\003 \001(\014\"\025\n\023KeyV"
      "alueSetResponse\"7\n\020HeartbeatRequest\022\022\n\ns"
      "ession_id\030\001 \001(\004\022\017\n\007node_id\030\002 \001(\005\"\023\n\021Hear"
      "tbeatResponse\"6\n\017ShutdownRequest\022\022\n\nsess"
      "ion_id\030\001 \001(\004\022\017\n\007node_id\030\002 \001(\005\"\022\n\020Shutdow"
      "nResponse2\247\003\n\031DistributedRuntimeService\022"
      "6\n\007Connect\022\023.xla.ConnectRequest\032\024.xla.Co"
      "nnectResponse\"\000\022Q\n\020EnumerateDevices\022\034.xl"
      "a.EnumerateDevicesRequest\032\035.xla.Enumerat"
      "eDevicesResponse\"\000\022<\n\tHeartbeat\022\025.xla.He"
      "artbeatRequest\032\026.xla.HeartbeatResponse\"\000"
      "\0229\n\010Shutdown\022\024.xla.ShutdownRequest\032\025.xla"
      ".ShutdownResponse\"\000\022B\n\013KeyValueGet\022\027.xla"
      ".KeyValueGetRequest\032\030.xla.KeyValueGetRes"
      "ponse\"\000\022B\n\013KeyValueSet\022\027.xla.KeyValueSet"
      "Request\032\030.xla.KeyValueSetResponse\"\000B`Z^g"
      "ithub.com/tensorflow/tensorflow/tensorfl"
      "ow/go/compiler/xla/pjrt/distributed/prot"
      "ocol_go_protob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1541);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/compiler/xla/pjrt/distributed/protocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto
namespace xla {

// ===================================================================

void DeviceProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceProto::kLocalDeviceOrdinalFieldNumber;
const int DeviceProto::kNameFieldNumber;
const int DeviceProto::kVendorFieldNumber;
const int DeviceProto::kGlobalDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceProto::DeviceProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_DeviceProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DeviceProto)
}
DeviceProto::DeviceProto(const DeviceProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vendor().size() > 0) {
    vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  ::memcpy(&local_device_ordinal_, &from.local_device_ordinal_,
    static_cast<size_t>(reinterpret_cast<char*>(&global_device_id_) -
    reinterpret_cast<char*>(&local_device_ordinal_)) + sizeof(global_device_id_));
  // @@protoc_insertion_point(copy_constructor:xla.DeviceProto)
}

void DeviceProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_device_ordinal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_device_id_) -
      reinterpret_cast<char*>(&local_device_ordinal_)) + sizeof(global_device_id_));
}

DeviceProto::~DeviceProto() {
  // @@protoc_insertion_point(destructor:xla.DeviceProto)
  SharedDtor();
}

void DeviceProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceProto& DeviceProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_DeviceProto.base);
  return *internal_default_instance();
}


void DeviceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DeviceProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_device_ordinal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_device_id_) -
      reinterpret_cast<char*>(&local_device_ordinal_)) + sizeof(global_device_id_));
  _internal_metadata_.Clear();
}

bool DeviceProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DeviceProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 local_device_ordinal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &local_device_ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DeviceProto.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vendor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vendor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vendor().data(), static_cast<int>(this->vendor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DeviceProto.vendor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 global_device_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &global_device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DeviceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DeviceProto)
  return false;
#undef DO_
}

void DeviceProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DeviceProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 local_device_ordinal = 1;
  if (this->local_device_ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->local_device_ordinal(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DeviceProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string vendor = 3;
  if (this->vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DeviceProto.vendor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vendor(), output);
  }

  // int32 global_device_id = 4;
  if (this->global_device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->global_device_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DeviceProto)
}

::google::protobuf::uint8* DeviceProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DeviceProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 local_device_ordinal = 1;
  if (this->local_device_ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->local_device_ordinal(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DeviceProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string vendor = 3;
  if (this->vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DeviceProto.vendor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vendor(), target);
  }

  // int32 global_device_id = 4;
  if (this->global_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->global_device_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DeviceProto)
  return target;
}

size_t DeviceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DeviceProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string vendor = 3;
  if (this->vendor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vendor());
  }

  // int32 local_device_ordinal = 1;
  if (this->local_device_ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->local_device_ordinal());
  }

  // int32 global_device_id = 4;
  if (this->global_device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->global_device_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DeviceProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DeviceProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DeviceProto)
    MergeFrom(*source);
  }
}

void DeviceProto::MergeFrom(const DeviceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DeviceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.vendor().size() > 0) {

    vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  if (from.local_device_ordinal() != 0) {
    set_local_device_ordinal(from.local_device_ordinal());
  }
  if (from.global_device_id() != 0) {
    set_global_device_id(from.global_device_id());
  }
}

void DeviceProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DeviceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceProto::CopyFrom(const DeviceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DeviceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceProto::IsInitialized() const {
  return true;
}

void DeviceProto::Swap(DeviceProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceProto::InternalSwap(DeviceProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vendor_.Swap(&other->vendor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(local_device_ordinal_, other->local_device_ordinal_);
  swap(global_device_id_, other->global_device_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalTopologyProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalTopologyProto::kNodeIdFieldNumber;
const int LocalTopologyProto::kDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalTopologyProto::LocalTopologyProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_LocalTopologyProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.LocalTopologyProto)
}
LocalTopologyProto::LocalTopologyProto(const LocalTopologyProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devices_(from.devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:xla.LocalTopologyProto)
}

void LocalTopologyProto::SharedCtor() {
  node_id_ = 0;
}

LocalTopologyProto::~LocalTopologyProto() {
  // @@protoc_insertion_point(destructor:xla.LocalTopologyProto)
  SharedDtor();
}

void LocalTopologyProto::SharedDtor() {
}

void LocalTopologyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalTopologyProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalTopologyProto& LocalTopologyProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_LocalTopologyProto.base);
  return *internal_default_instance();
}


void LocalTopologyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LocalTopologyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  node_id_ = 0;
  _internal_metadata_.Clear();
}

bool LocalTopologyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.LocalTopologyProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.DeviceProto devices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.LocalTopologyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.LocalTopologyProto)
  return false;
#undef DO_
}

void LocalTopologyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.LocalTopologyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->node_id(), output);
  }

  // repeated .xla.DeviceProto devices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->devices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.LocalTopologyProto)
}

::google::protobuf::uint8* LocalTopologyProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.LocalTopologyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 node_id = 1;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->node_id(), target);
  }

  // repeated .xla.DeviceProto devices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->devices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.LocalTopologyProto)
  return target;
}

size_t LocalTopologyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.LocalTopologyProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.DeviceProto devices = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  // int32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalTopologyProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.LocalTopologyProto)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalTopologyProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalTopologyProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.LocalTopologyProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.LocalTopologyProto)
    MergeFrom(*source);
  }
}

void LocalTopologyProto::MergeFrom(const LocalTopologyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.LocalTopologyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void LocalTopologyProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.LocalTopologyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalTopologyProto::CopyFrom(const LocalTopologyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LocalTopologyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalTopologyProto::IsInitialized() const {
  return true;
}

void LocalTopologyProto::Swap(LocalTopologyProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalTopologyProto::InternalSwap(LocalTopologyProto* other) {
  using std::swap;
  CastToBase(&devices_)->InternalSwap(CastToBase(&other->devices_));
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalTopologyProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GlobalTopologyProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalTopologyProto::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalTopologyProto::GlobalTopologyProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_GlobalTopologyProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.GlobalTopologyProto)
}
GlobalTopologyProto::GlobalTopologyProto(const GlobalTopologyProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.GlobalTopologyProto)
}

void GlobalTopologyProto::SharedCtor() {
}

GlobalTopologyProto::~GlobalTopologyProto() {
  // @@protoc_insertion_point(destructor:xla.GlobalTopologyProto)
  SharedDtor();
}

void GlobalTopologyProto::SharedDtor() {
}

void GlobalTopologyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GlobalTopologyProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GlobalTopologyProto& GlobalTopologyProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_GlobalTopologyProto.base);
  return *internal_default_instance();
}


void GlobalTopologyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.GlobalTopologyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _internal_metadata_.Clear();
}

bool GlobalTopologyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.GlobalTopologyProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.LocalTopologyProto nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.GlobalTopologyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.GlobalTopologyProto)
  return false;
#undef DO_
}

void GlobalTopologyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.GlobalTopologyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.LocalTopologyProto nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.GlobalTopologyProto)
}

::google::protobuf::uint8* GlobalTopologyProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.GlobalTopologyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.LocalTopologyProto nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.GlobalTopologyProto)
  return target;
}

size_t GlobalTopologyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.GlobalTopologyProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.LocalTopologyProto nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalTopologyProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.GlobalTopologyProto)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalTopologyProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalTopologyProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.GlobalTopologyProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.GlobalTopologyProto)
    MergeFrom(*source);
  }
}

void GlobalTopologyProto::MergeFrom(const GlobalTopologyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.GlobalTopologyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void GlobalTopologyProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.GlobalTopologyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalTopologyProto::CopyFrom(const GlobalTopologyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.GlobalTopologyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalTopologyProto::IsInitialized() const {
  return true;
}

void GlobalTopologyProto::Swap(GlobalTopologyProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalTopologyProto::InternalSwap(GlobalTopologyProto* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GlobalTopologyProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectRequest::kProtocolVersionFieldNumber;
const int ConnectRequest::kTimeoutMillisecondsFieldNumber;
const int ConnectRequest::kNodeIdFieldNumber;
const int ConnectRequest::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectRequest::ConnectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_ConnectRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ConnectRequest)
}
ConnectRequest::ConnectRequest(const ConnectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&protocol_version_, &from.protocol_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_id_) -
    reinterpret_cast<char*>(&protocol_version_)) + sizeof(node_id_));
  // @@protoc_insertion_point(copy_constructor:xla.ConnectRequest)
}

void ConnectRequest::SharedCtor() {
  ::memset(&protocol_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&protocol_version_)) + sizeof(node_id_));
}

ConnectRequest::~ConnectRequest() {
  // @@protoc_insertion_point(destructor:xla.ConnectRequest)
  SharedDtor();
}

void ConnectRequest::SharedDtor() {
}

void ConnectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectRequest& ConnectRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_ConnectRequest.base);
  return *internal_default_instance();
}


void ConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&protocol_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&protocol_version_)) + sizeof(node_id_));
  _internal_metadata_.Clear();
}

bool ConnectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ConnectRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeout_milliseconds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_milliseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 client_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ConnectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ConnectRequest)
  return false;
#undef DO_
}

void ConnectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protocol_version(), output);
  }

  // int32 timeout_milliseconds = 2;
  if (this->timeout_milliseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timeout_milliseconds(), output);
  }

  // int32 node_id = 3;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->node_id(), output);
  }

  // uint64 client_id = 4;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->client_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ConnectRequest)
}

::google::protobuf::uint8* ConnectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protocol_version(), target);
  }

  // int32 timeout_milliseconds = 2;
  if (this->timeout_milliseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timeout_milliseconds(), target);
  }

  // int32 node_id = 3;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->node_id(), target);
  }

  // uint64 client_id = 4;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->client_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ConnectRequest)
  return target;
}

size_t ConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ConnectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->protocol_version());
  }

  // int32 timeout_milliseconds = 2;
  if (this->timeout_milliseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout_milliseconds());
  }

  // uint64 client_id = 4;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->client_id());
  }

  // int32 node_id = 3;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ConnectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ConnectRequest)
    MergeFrom(*source);
  }
}

void ConnectRequest::MergeFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protocol_version() != 0) {
    set_protocol_version(from.protocol_version());
  }
  if (from.timeout_milliseconds() != 0) {
    set_timeout_milliseconds(from.timeout_milliseconds());
  }
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void ConnectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectRequest::CopyFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectRequest::IsInitialized() const {
  return true;
}

void ConnectRequest::Swap(ConnectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectRequest::InternalSwap(ConnectRequest* other) {
  using std::swap;
  swap(protocol_version_, other->protocol_version_);
  swap(timeout_milliseconds_, other->timeout_milliseconds_);
  swap(client_id_, other->client_id_);
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectResponse::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectResponse::ConnectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_ConnectResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ConnectResponse)
}
ConnectResponse::ConnectResponse(const ConnectResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_ = from.session_id_;
  // @@protoc_insertion_point(copy_constructor:xla.ConnectResponse)
}

void ConnectResponse::SharedCtor() {
  session_id_ = GOOGLE_ULONGLONG(0);
}

ConnectResponse::~ConnectResponse() {
  // @@protoc_insertion_point(destructor:xla.ConnectResponse)
  SharedDtor();
}

void ConnectResponse::SharedDtor() {
}

void ConnectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectResponse& ConnectResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_ConnectResponse.base);
  return *internal_default_instance();
}


void ConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ConnectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ConnectResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ConnectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ConnectResponse)
  return false;
#undef DO_
}

void ConnectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->session_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ConnectResponse)
}

::google::protobuf::uint8* ConnectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->session_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ConnectResponse)
  return target;
}

size_t ConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ConnectResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ConnectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ConnectResponse)
    MergeFrom(*source);
  }
}

void ConnectResponse::MergeFrom(const ConnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
}

void ConnectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectResponse::CopyFrom(const ConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectResponse::IsInitialized() const {
  return true;
}

void ConnectResponse::Swap(ConnectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectResponse::InternalSwap(ConnectResponse* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnumerateDevicesRequest::InitAsDefaultInstance() {
  ::xla::_EnumerateDevicesRequest_default_instance_._instance.get_mutable()->local_topology_ = const_cast< ::xla::LocalTopologyProto*>(
      ::xla::LocalTopologyProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumerateDevicesRequest::kSessionIdFieldNumber;
const int EnumerateDevicesRequest::kLocalTopologyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumerateDevicesRequest::EnumerateDevicesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_EnumerateDevicesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.EnumerateDevicesRequest)
}
EnumerateDevicesRequest::EnumerateDevicesRequest(const EnumerateDevicesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_local_topology()) {
    local_topology_ = new ::xla::LocalTopologyProto(*from.local_topology_);
  } else {
    local_topology_ = NULL;
  }
  session_id_ = from.session_id_;
  // @@protoc_insertion_point(copy_constructor:xla.EnumerateDevicesRequest)
}

void EnumerateDevicesRequest::SharedCtor() {
  ::memset(&local_topology_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&session_id_) -
      reinterpret_cast<char*>(&local_topology_)) + sizeof(session_id_));
}

EnumerateDevicesRequest::~EnumerateDevicesRequest() {
  // @@protoc_insertion_point(destructor:xla.EnumerateDevicesRequest)
  SharedDtor();
}

void EnumerateDevicesRequest::SharedDtor() {
  if (this != internal_default_instance()) delete local_topology_;
}

void EnumerateDevicesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnumerateDevicesRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumerateDevicesRequest& EnumerateDevicesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_EnumerateDevicesRequest.base);
  return *internal_default_instance();
}


void EnumerateDevicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.EnumerateDevicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && local_topology_ != NULL) {
    delete local_topology_;
  }
  local_topology_ = NULL;
  session_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool EnumerateDevicesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.EnumerateDevicesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.LocalTopologyProto local_topology = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_local_topology()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.EnumerateDevicesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.EnumerateDevicesRequest)
  return false;
#undef DO_
}

void EnumerateDevicesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.EnumerateDevicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->session_id(), output);
  }

  // .xla.LocalTopologyProto local_topology = 3;
  if (this->has_local_topology()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_local_topology(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.EnumerateDevicesRequest)
}

::google::protobuf::uint8* EnumerateDevicesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.EnumerateDevicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->session_id(), target);
  }

  // .xla.LocalTopologyProto local_topology = 3;
  if (this->has_local_topology()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_local_topology(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.EnumerateDevicesRequest)
  return target;
}

size_t EnumerateDevicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.EnumerateDevicesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LocalTopologyProto local_topology = 3;
  if (this->has_local_topology()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *local_topology_);
  }

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnumerateDevicesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.EnumerateDevicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumerateDevicesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumerateDevicesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.EnumerateDevicesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.EnumerateDevicesRequest)
    MergeFrom(*source);
  }
}

void EnumerateDevicesRequest::MergeFrom(const EnumerateDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.EnumerateDevicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_local_topology()) {
    mutable_local_topology()->::xla::LocalTopologyProto::MergeFrom(from.local_topology());
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
}

void EnumerateDevicesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.EnumerateDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumerateDevicesRequest::CopyFrom(const EnumerateDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.EnumerateDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumerateDevicesRequest::IsInitialized() const {
  return true;
}

void EnumerateDevicesRequest::Swap(EnumerateDevicesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumerateDevicesRequest::InternalSwap(EnumerateDevicesRequest* other) {
  using std::swap;
  swap(local_topology_, other->local_topology_);
  swap(session_id_, other->session_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnumerateDevicesRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnumerateDevicesResponse::InitAsDefaultInstance() {
  ::xla::_EnumerateDevicesResponse_default_instance_._instance.get_mutable()->global_topology_ = const_cast< ::xla::GlobalTopologyProto*>(
      ::xla::GlobalTopologyProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumerateDevicesResponse::kGlobalTopologyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumerateDevicesResponse::EnumerateDevicesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_EnumerateDevicesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.EnumerateDevicesResponse)
}
EnumerateDevicesResponse::EnumerateDevicesResponse(const EnumerateDevicesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_global_topology()) {
    global_topology_ = new ::xla::GlobalTopologyProto(*from.global_topology_);
  } else {
    global_topology_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.EnumerateDevicesResponse)
}

void EnumerateDevicesResponse::SharedCtor() {
  global_topology_ = NULL;
}

EnumerateDevicesResponse::~EnumerateDevicesResponse() {
  // @@protoc_insertion_point(destructor:xla.EnumerateDevicesResponse)
  SharedDtor();
}

void EnumerateDevicesResponse::SharedDtor() {
  if (this != internal_default_instance()) delete global_topology_;
}

void EnumerateDevicesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnumerateDevicesResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumerateDevicesResponse& EnumerateDevicesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_EnumerateDevicesResponse.base);
  return *internal_default_instance();
}


void EnumerateDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.EnumerateDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && global_topology_ != NULL) {
    delete global_topology_;
  }
  global_topology_ = NULL;
  _internal_metadata_.Clear();
}

bool EnumerateDevicesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.EnumerateDevicesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalTopologyProto global_topology = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_global_topology()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.EnumerateDevicesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.EnumerateDevicesResponse)
  return false;
#undef DO_
}

void EnumerateDevicesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.EnumerateDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalTopologyProto global_topology = 1;
  if (this->has_global_topology()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_global_topology(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.EnumerateDevicesResponse)
}

::google::protobuf::uint8* EnumerateDevicesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.EnumerateDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalTopologyProto global_topology = 1;
  if (this->has_global_topology()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_global_topology(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.EnumerateDevicesResponse)
  return target;
}

size_t EnumerateDevicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.EnumerateDevicesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalTopologyProto global_topology = 1;
  if (this->has_global_topology()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *global_topology_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnumerateDevicesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.EnumerateDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumerateDevicesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumerateDevicesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.EnumerateDevicesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.EnumerateDevicesResponse)
    MergeFrom(*source);
  }
}

void EnumerateDevicesResponse::MergeFrom(const EnumerateDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.EnumerateDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_global_topology()) {
    mutable_global_topology()->::xla::GlobalTopologyProto::MergeFrom(from.global_topology());
  }
}

void EnumerateDevicesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.EnumerateDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumerateDevicesResponse::CopyFrom(const EnumerateDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.EnumerateDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumerateDevicesResponse::IsInitialized() const {
  return true;
}

void EnumerateDevicesResponse::Swap(EnumerateDevicesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumerateDevicesResponse::InternalSwap(EnumerateDevicesResponse* other) {
  using std::swap;
  swap(global_topology_, other->global_topology_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnumerateDevicesResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValueGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValueGetRequest::kSessionIdFieldNumber;
const int KeyValueGetRequest::kKeyFieldNumber;
const int KeyValueGetRequest::kTimeoutMillisecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValueGetRequest::KeyValueGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_KeyValueGetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.KeyValueGetRequest)
}
KeyValueGetRequest::KeyValueGetRequest(const KeyValueGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_milliseconds_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_milliseconds_));
  // @@protoc_insertion_point(copy_constructor:xla.KeyValueGetRequest)
}

void KeyValueGetRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_milliseconds_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_milliseconds_));
}

KeyValueGetRequest::~KeyValueGetRequest() {
  // @@protoc_insertion_point(destructor:xla.KeyValueGetRequest)
  SharedDtor();
}

void KeyValueGetRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValueGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyValueGetRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValueGetRequest& KeyValueGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_KeyValueGetRequest.base);
  return *internal_default_instance();
}


void KeyValueGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.KeyValueGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_milliseconds_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_milliseconds_));
  _internal_metadata_.Clear();
}

bool KeyValueGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.KeyValueGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeout_milliseconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_milliseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.KeyValueGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.KeyValueGetRequest)
  return false;
#undef DO_
}

void KeyValueGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.KeyValueGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->session_id(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // int32 timeout_milliseconds = 3;
  if (this->timeout_milliseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timeout_milliseconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.KeyValueGetRequest)
}

::google::protobuf::uint8* KeyValueGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.KeyValueGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->session_id(), target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // int32 timeout_milliseconds = 3;
  if (this->timeout_milliseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timeout_milliseconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.KeyValueGetRequest)
  return target;
}

size_t KeyValueGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.KeyValueGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->session_id());
  }

  // int32 timeout_milliseconds = 3;
  if (this->timeout_milliseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout_milliseconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValueGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.KeyValueGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValueGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValueGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.KeyValueGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.KeyValueGetRequest)
    MergeFrom(*source);
  }
}

void KeyValueGetRequest::MergeFrom(const KeyValueGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.KeyValueGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.timeout_milliseconds() != 0) {
    set_timeout_milliseconds(from.timeout_milliseconds());
  }
}

void KeyValueGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.KeyValueGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValueGetRequest::CopyFrom(const KeyValueGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.KeyValueGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueGetRequest::IsInitialized() const {
  return true;
}

void KeyValueGetRequest::Swap(KeyValueGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValueGetRequest::InternalSwap(KeyValueGetRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(session_id_, other->session_id_);
  swap(timeout_milliseconds_, other->timeout_milliseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyValueGetRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValueGetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValueGetResponse::kFoundFieldNumber;
const int KeyValueGetResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValueGetResponse::KeyValueGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_KeyValueGetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.KeyValueGetResponse)
}
KeyValueGetResponse::KeyValueGetResponse(const KeyValueGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  found_ = from.found_;
  // @@protoc_insertion_point(copy_constructor:xla.KeyValueGetResponse)
}

void KeyValueGetResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  found_ = false;
}

KeyValueGetResponse::~KeyValueGetResponse() {
  // @@protoc_insertion_point(destructor:xla.KeyValueGetResponse)
  SharedDtor();
}

void KeyValueGetResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValueGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyValueGetResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValueGetResponse& KeyValueGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_KeyValueGetResponse.base);
  return *internal_default_instance();
}


void KeyValueGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.KeyValueGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  found_ = false;
  _internal_metadata_.Clear();
}

bool KeyValueGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.KeyValueGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool found = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &found_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.KeyValueGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.KeyValueGetResponse)
  return false;
#undef DO_
}

void KeyValueGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.KeyValueGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool found = 1;
  if (this->found() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->found(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.KeyValueGetResponse)
}

::google::protobuf::uint8* KeyValueGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.KeyValueGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool found = 1;
  if (this->found() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->found(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.KeyValueGetResponse)
  return target;
}

size_t KeyValueGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.KeyValueGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // bool found = 1;
  if (this->found() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValueGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.KeyValueGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValueGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValueGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.KeyValueGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.KeyValueGetResponse)
    MergeFrom(*source);
  }
}

void KeyValueGetResponse::MergeFrom(const KeyValueGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.KeyValueGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.found() != 0) {
    set_found(from.found());
  }
}

void KeyValueGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.KeyValueGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValueGetResponse::CopyFrom(const KeyValueGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.KeyValueGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueGetResponse::IsInitialized() const {
  return true;
}

void KeyValueGetResponse::Swap(KeyValueGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValueGetResponse::InternalSwap(KeyValueGetResponse* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(found_, other->found_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyValueGetResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValueSetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValueSetRequest::kSessionIdFieldNumber;
const int KeyValueSetRequest::kKeyFieldNumber;
const int KeyValueSetRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValueSetRequest::KeyValueSetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_KeyValueSetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.KeyValueSetRequest)
}
KeyValueSetRequest::KeyValueSetRequest(const KeyValueSetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  session_id_ = from.session_id_;
  // @@protoc_insertion_point(copy_constructor:xla.KeyValueSetRequest)
}

void KeyValueSetRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_ = GOOGLE_ULONGLONG(0);
}

KeyValueSetRequest::~KeyValueSetRequest() {
  // @@protoc_insertion_point(destructor:xla.KeyValueSetRequest)
  SharedDtor();
}

void KeyValueSetRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValueSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyValueSetRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValueSetRequest& KeyValueSetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_KeyValueSetRequest.base);
  return *internal_default_instance();
}


void KeyValueSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.KeyValueSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool KeyValueSetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.KeyValueSetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.KeyValueSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.KeyValueSetRequest)
  return false;
#undef DO_
}

void KeyValueSetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.KeyValueSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->session_id(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.KeyValueSetRequest)
}

::google::protobuf::uint8* KeyValueSetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.KeyValueSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->session_id(), target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.KeyValueSetRequest)
  return target;
}

size_t KeyValueSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.KeyValueSetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValueSetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.KeyValueSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValueSetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValueSetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.KeyValueSetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.KeyValueSetRequest)
    MergeFrom(*source);
  }
}

void KeyValueSetRequest::MergeFrom(const KeyValueSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.KeyValueSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
}

void KeyValueSetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.KeyValueSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValueSetRequest::CopyFrom(const KeyValueSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.KeyValueSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueSetRequest::IsInitialized() const {
  return true;
}

void KeyValueSetRequest::Swap(KeyValueSetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValueSetRequest::InternalSwap(KeyValueSetRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(session_id_, other->session_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyValueSetRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValueSetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValueSetResponse::KeyValueSetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_KeyValueSetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.KeyValueSetResponse)
}
KeyValueSetResponse::KeyValueSetResponse(const KeyValueSetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.KeyValueSetResponse)
}

void KeyValueSetResponse::SharedCtor() {
}

KeyValueSetResponse::~KeyValueSetResponse() {
  // @@protoc_insertion_point(destructor:xla.KeyValueSetResponse)
  SharedDtor();
}

void KeyValueSetResponse::SharedDtor() {
}

void KeyValueSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyValueSetResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValueSetResponse& KeyValueSetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_KeyValueSetResponse.base);
  return *internal_default_instance();
}


void KeyValueSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.KeyValueSetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool KeyValueSetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.KeyValueSetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:xla.KeyValueSetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.KeyValueSetResponse)
  return false;
#undef DO_
}

void KeyValueSetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.KeyValueSetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.KeyValueSetResponse)
}

::google::protobuf::uint8* KeyValueSetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.KeyValueSetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.KeyValueSetResponse)
  return target;
}

size_t KeyValueSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.KeyValueSetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValueSetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.KeyValueSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValueSetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValueSetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.KeyValueSetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.KeyValueSetResponse)
    MergeFrom(*source);
  }
}

void KeyValueSetResponse::MergeFrom(const KeyValueSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.KeyValueSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void KeyValueSetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.KeyValueSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValueSetResponse::CopyFrom(const KeyValueSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.KeyValueSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueSetResponse::IsInitialized() const {
  return true;
}

void KeyValueSetResponse::Swap(KeyValueSetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValueSetResponse::InternalSwap(KeyValueSetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyValueSetResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatRequest::kSessionIdFieldNumber;
const int HeartbeatRequest::kNodeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRequest::HeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_HeartbeatRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HeartbeatRequest)
}
HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_id_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(node_id_));
  // @@protoc_insertion_point(copy_constructor:xla.HeartbeatRequest)
}

void HeartbeatRequest::SharedCtor() {
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(node_id_));
}

HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:xla.HeartbeatRequest)
  SharedDtor();
}

void HeartbeatRequest::SharedDtor() {
}

void HeartbeatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeartbeatRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatRequest& HeartbeatRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_HeartbeatRequest.base);
  return *internal_default_instance();
}


void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(node_id_));
  _internal_metadata_.Clear();
}

bool HeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HeartbeatRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HeartbeatRequest)
  return false;
#undef DO_
}

void HeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->session_id(), output);
  }

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->node_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HeartbeatRequest)
}

::google::protobuf::uint8* HeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->session_id(), target);
  }

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->node_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HeartbeatRequest)
  return target;
}

size_t HeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HeartbeatRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->session_id());
  }

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HeartbeatRequest)
    MergeFrom(*source);
  }
}

void HeartbeatRequest::MergeFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void HeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatRequest::IsInitialized() const {
  return true;
}

void HeartbeatRequest::Swap(HeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRequest::InternalSwap(HeartbeatRequest* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatResponse::HeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_HeartbeatResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HeartbeatResponse)
}
HeartbeatResponse::HeartbeatResponse(const HeartbeatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.HeartbeatResponse)
}

void HeartbeatResponse::SharedCtor() {
}

HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:xla.HeartbeatResponse)
  SharedDtor();
}

void HeartbeatResponse::SharedDtor() {
}

void HeartbeatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeartbeatResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatResponse& HeartbeatResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_HeartbeatResponse.base);
  return *internal_default_instance();
}


void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HeartbeatResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HeartbeatResponse)
  return false;
#undef DO_
}

void HeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HeartbeatResponse)
}

::google::protobuf::uint8* HeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HeartbeatResponse)
  return target;
}

size_t HeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HeartbeatResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HeartbeatResponse)
    MergeFrom(*source);
  }
}

void HeartbeatResponse::MergeFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatResponse::IsInitialized() const {
  return true;
}

void HeartbeatResponse::Swap(HeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatResponse::InternalSwap(HeartbeatResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShutdownRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShutdownRequest::kSessionIdFieldNumber;
const int ShutdownRequest::kNodeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShutdownRequest::ShutdownRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_ShutdownRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ShutdownRequest)
}
ShutdownRequest::ShutdownRequest(const ShutdownRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_id_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(node_id_));
  // @@protoc_insertion_point(copy_constructor:xla.ShutdownRequest)
}

void ShutdownRequest::SharedCtor() {
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(node_id_));
}

ShutdownRequest::~ShutdownRequest() {
  // @@protoc_insertion_point(destructor:xla.ShutdownRequest)
  SharedDtor();
}

void ShutdownRequest::SharedDtor() {
}

void ShutdownRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShutdownRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShutdownRequest& ShutdownRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_ShutdownRequest.base);
  return *internal_default_instance();
}


void ShutdownRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ShutdownRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(node_id_));
  _internal_metadata_.Clear();
}

bool ShutdownRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ShutdownRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ShutdownRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ShutdownRequest)
  return false;
#undef DO_
}

void ShutdownRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ShutdownRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->session_id(), output);
  }

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->node_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ShutdownRequest)
}

::google::protobuf::uint8* ShutdownRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ShutdownRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->session_id(), target);
  }

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->node_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ShutdownRequest)
  return target;
}

size_t ShutdownRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ShutdownRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->session_id());
  }

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShutdownRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ShutdownRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShutdownRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShutdownRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ShutdownRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ShutdownRequest)
    MergeFrom(*source);
  }
}

void ShutdownRequest::MergeFrom(const ShutdownRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ShutdownRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void ShutdownRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ShutdownRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShutdownRequest::CopyFrom(const ShutdownRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ShutdownRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownRequest::IsInitialized() const {
  return true;
}

void ShutdownRequest::Swap(ShutdownRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShutdownRequest::InternalSwap(ShutdownRequest* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShutdownRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShutdownResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShutdownResponse::ShutdownResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_ShutdownResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ShutdownResponse)
}
ShutdownResponse::ShutdownResponse(const ShutdownResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.ShutdownResponse)
}

void ShutdownResponse::SharedCtor() {
}

ShutdownResponse::~ShutdownResponse() {
  // @@protoc_insertion_point(destructor:xla.ShutdownResponse)
  SharedDtor();
}

void ShutdownResponse::SharedDtor() {
}

void ShutdownResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShutdownResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShutdownResponse& ShutdownResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::scc_info_ShutdownResponse.base);
  return *internal_default_instance();
}


void ShutdownResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ShutdownResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ShutdownResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ShutdownResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ShutdownResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ShutdownResponse)
  return false;
#undef DO_
}

void ShutdownResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ShutdownResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ShutdownResponse)
}

::google::protobuf::uint8* ShutdownResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ShutdownResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ShutdownResponse)
  return target;
}

size_t ShutdownResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ShutdownResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShutdownResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ShutdownResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShutdownResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShutdownResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ShutdownResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ShutdownResponse)
    MergeFrom(*source);
  }
}

void ShutdownResponse::MergeFrom(const ShutdownResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ShutdownResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShutdownResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ShutdownResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShutdownResponse::CopyFrom(const ShutdownResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ShutdownResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownResponse::IsInitialized() const {
  return true;
}

void ShutdownResponse::Swap(ShutdownResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShutdownResponse::InternalSwap(ShutdownResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShutdownResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpjrt_2fdistributed_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace xla
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DeviceProto* Arena::CreateMaybeMessage< ::xla::DeviceProto >(Arena* arena) {
  return Arena::CreateInternal< ::xla::DeviceProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::LocalTopologyProto* Arena::CreateMaybeMessage< ::xla::LocalTopologyProto >(Arena* arena) {
  return Arena::CreateInternal< ::xla::LocalTopologyProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::GlobalTopologyProto* Arena::CreateMaybeMessage< ::xla::GlobalTopologyProto >(Arena* arena) {
  return Arena::CreateInternal< ::xla::GlobalTopologyProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ConnectRequest* Arena::CreateMaybeMessage< ::xla::ConnectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ConnectRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ConnectResponse* Arena::CreateMaybeMessage< ::xla::ConnectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ConnectResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::EnumerateDevicesRequest* Arena::CreateMaybeMessage< ::xla::EnumerateDevicesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::EnumerateDevicesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::EnumerateDevicesResponse* Arena::CreateMaybeMessage< ::xla::EnumerateDevicesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::EnumerateDevicesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::KeyValueGetRequest* Arena::CreateMaybeMessage< ::xla::KeyValueGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::KeyValueGetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::KeyValueGetResponse* Arena::CreateMaybeMessage< ::xla::KeyValueGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::KeyValueGetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::KeyValueSetRequest* Arena::CreateMaybeMessage< ::xla::KeyValueSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::KeyValueSetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::KeyValueSetResponse* Arena::CreateMaybeMessage< ::xla::KeyValueSetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::KeyValueSetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HeartbeatRequest* Arena::CreateMaybeMessage< ::xla::HeartbeatRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::HeartbeatRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HeartbeatResponse* Arena::CreateMaybeMessage< ::xla::HeartbeatResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::HeartbeatResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ShutdownRequest* Arena::CreateMaybeMessage< ::xla::ShutdownRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ShutdownRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ShutdownResponse* Arena::CreateMaybeMessage< ::xla::ShutdownResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ShutdownResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
