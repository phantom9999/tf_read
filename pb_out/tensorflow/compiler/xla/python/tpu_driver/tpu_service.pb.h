// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/python/tpu_driver/tpu_service.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/compiler/xla/python/tpu_driver/tpu_driver.pb.h"
#include "tensorflow/compiler/xla/service/hlo.pb.h"
#include "tensorflow/compiler/xla/xla_data.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto 

namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[26];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto
namespace tpu_driver {
class AllocateRequest;
class AllocateRequestDefaultTypeInternal;
extern AllocateRequestDefaultTypeInternal _AllocateRequest_default_instance_;
class AllocateTupleRequest;
class AllocateTupleRequestDefaultTypeInternal;
extern AllocateTupleRequestDefaultTypeInternal _AllocateTupleRequest_default_instance_;
class CloseRequest;
class CloseRequestDefaultTypeInternal;
extern CloseRequestDefaultTypeInternal _CloseRequest_default_instance_;
class CloseResponse;
class CloseResponseDefaultTypeInternal;
extern CloseResponseDefaultTypeInternal _CloseResponse_default_instance_;
class CompileRequest;
class CompileRequestDefaultTypeInternal;
extern CompileRequestDefaultTypeInternal _CompileRequest_default_instance_;
class CompileResponse;
class CompileResponseDefaultTypeInternal;
extern CompileResponseDefaultTypeInternal _CompileResponse_default_instance_;
class CompiledProgramMetadata;
class CompiledProgramMetadataDefaultTypeInternal;
extern CompiledProgramMetadataDefaultTypeInternal _CompiledProgramMetadata_default_instance_;
class DeallocateRequest;
class DeallocateRequestDefaultTypeInternal;
extern DeallocateRequestDefaultTypeInternal _DeallocateRequest_default_instance_;
class ExecuteRequest;
class ExecuteRequestDefaultTypeInternal;
extern ExecuteRequestDefaultTypeInternal _ExecuteRequest_default_instance_;
class LoadProgramRequest;
class LoadProgramRequestDefaultTypeInternal;
extern LoadProgramRequestDefaultTypeInternal _LoadProgramRequest_default_instance_;
class OpenRequest;
class OpenRequestDefaultTypeInternal;
extern OpenRequestDefaultTypeInternal _OpenRequest_default_instance_;
class OpenResponse;
class OpenResponseDefaultTypeInternal;
extern OpenResponseDefaultTypeInternal _OpenResponse_default_instance_;
class QuerySystemInfoRequest;
class QuerySystemInfoRequestDefaultTypeInternal;
extern QuerySystemInfoRequestDefaultTypeInternal _QuerySystemInfoRequest_default_instance_;
class QuerySystemInfoResponse;
class QuerySystemInfoResponseDefaultTypeInternal;
extern QuerySystemInfoResponseDefaultTypeInternal _QuerySystemInfoResponse_default_instance_;
class ResetRequest;
class ResetRequestDefaultTypeInternal;
extern ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;
class ResetResponse;
class ResetResponseDefaultTypeInternal;
extern ResetResponseDefaultTypeInternal _ResetResponse_default_instance_;
class StatusMessage;
class StatusMessageDefaultTypeInternal;
extern StatusMessageDefaultTypeInternal _StatusMessage_default_instance_;
class StreamRequest;
class StreamRequestDefaultTypeInternal;
extern StreamRequestDefaultTypeInternal _StreamRequest_default_instance_;
class StreamRequest_Entry;
class StreamRequest_EntryDefaultTypeInternal;
extern StreamRequest_EntryDefaultTypeInternal _StreamRequest_Entry_default_instance_;
class StreamResponse;
class StreamResponseDefaultTypeInternal;
extern StreamResponseDefaultTypeInternal _StreamResponse_default_instance_;
class StreamResponse_Entry;
class StreamResponse_EntryDefaultTypeInternal;
extern StreamResponse_EntryDefaultTypeInternal _StreamResponse_Entry_default_instance_;
class TransferFromDeviceRequest;
class TransferFromDeviceRequestDefaultTypeInternal;
extern TransferFromDeviceRequestDefaultTypeInternal _TransferFromDeviceRequest_default_instance_;
class TransferFromDeviceResponse;
class TransferFromDeviceResponseDefaultTypeInternal;
extern TransferFromDeviceResponseDefaultTypeInternal _TransferFromDeviceResponse_default_instance_;
class TransferFromDeviceToDeviceRequest;
class TransferFromDeviceToDeviceRequestDefaultTypeInternal;
extern TransferFromDeviceToDeviceRequestDefaultTypeInternal _TransferFromDeviceToDeviceRequest_default_instance_;
class TransferToDeviceRequest;
class TransferToDeviceRequestDefaultTypeInternal;
extern TransferToDeviceRequestDefaultTypeInternal _TransferToDeviceRequest_default_instance_;
class UnloadProgramRequest;
class UnloadProgramRequestDefaultTypeInternal;
extern UnloadProgramRequestDefaultTypeInternal _UnloadProgramRequest_default_instance_;
}  // namespace tpu_driver
namespace google {
namespace protobuf {
template<> ::tpu_driver::AllocateRequest* Arena::CreateMaybeMessage<::tpu_driver::AllocateRequest>(Arena*);
template<> ::tpu_driver::AllocateTupleRequest* Arena::CreateMaybeMessage<::tpu_driver::AllocateTupleRequest>(Arena*);
template<> ::tpu_driver::CloseRequest* Arena::CreateMaybeMessage<::tpu_driver::CloseRequest>(Arena*);
template<> ::tpu_driver::CloseResponse* Arena::CreateMaybeMessage<::tpu_driver::CloseResponse>(Arena*);
template<> ::tpu_driver::CompileRequest* Arena::CreateMaybeMessage<::tpu_driver::CompileRequest>(Arena*);
template<> ::tpu_driver::CompileResponse* Arena::CreateMaybeMessage<::tpu_driver::CompileResponse>(Arena*);
template<> ::tpu_driver::CompiledProgramMetadata* Arena::CreateMaybeMessage<::tpu_driver::CompiledProgramMetadata>(Arena*);
template<> ::tpu_driver::DeallocateRequest* Arena::CreateMaybeMessage<::tpu_driver::DeallocateRequest>(Arena*);
template<> ::tpu_driver::ExecuteRequest* Arena::CreateMaybeMessage<::tpu_driver::ExecuteRequest>(Arena*);
template<> ::tpu_driver::LoadProgramRequest* Arena::CreateMaybeMessage<::tpu_driver::LoadProgramRequest>(Arena*);
template<> ::tpu_driver::OpenRequest* Arena::CreateMaybeMessage<::tpu_driver::OpenRequest>(Arena*);
template<> ::tpu_driver::OpenResponse* Arena::CreateMaybeMessage<::tpu_driver::OpenResponse>(Arena*);
template<> ::tpu_driver::QuerySystemInfoRequest* Arena::CreateMaybeMessage<::tpu_driver::QuerySystemInfoRequest>(Arena*);
template<> ::tpu_driver::QuerySystemInfoResponse* Arena::CreateMaybeMessage<::tpu_driver::QuerySystemInfoResponse>(Arena*);
template<> ::tpu_driver::ResetRequest* Arena::CreateMaybeMessage<::tpu_driver::ResetRequest>(Arena*);
template<> ::tpu_driver::ResetResponse* Arena::CreateMaybeMessage<::tpu_driver::ResetResponse>(Arena*);
template<> ::tpu_driver::StatusMessage* Arena::CreateMaybeMessage<::tpu_driver::StatusMessage>(Arena*);
template<> ::tpu_driver::StreamRequest* Arena::CreateMaybeMessage<::tpu_driver::StreamRequest>(Arena*);
template<> ::tpu_driver::StreamRequest_Entry* Arena::CreateMaybeMessage<::tpu_driver::StreamRequest_Entry>(Arena*);
template<> ::tpu_driver::StreamResponse* Arena::CreateMaybeMessage<::tpu_driver::StreamResponse>(Arena*);
template<> ::tpu_driver::StreamResponse_Entry* Arena::CreateMaybeMessage<::tpu_driver::StreamResponse_Entry>(Arena*);
template<> ::tpu_driver::TransferFromDeviceRequest* Arena::CreateMaybeMessage<::tpu_driver::TransferFromDeviceRequest>(Arena*);
template<> ::tpu_driver::TransferFromDeviceResponse* Arena::CreateMaybeMessage<::tpu_driver::TransferFromDeviceResponse>(Arena*);
template<> ::tpu_driver::TransferFromDeviceToDeviceRequest* Arena::CreateMaybeMessage<::tpu_driver::TransferFromDeviceToDeviceRequest>(Arena*);
template<> ::tpu_driver::TransferToDeviceRequest* Arena::CreateMaybeMessage<::tpu_driver::TransferToDeviceRequest>(Arena*);
template<> ::tpu_driver::UnloadProgramRequest* Arena::CreateMaybeMessage<::tpu_driver::UnloadProgramRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tpu_driver {

// ===================================================================

class StatusMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.StatusMessage) */ {
 public:
  StatusMessage();
  virtual ~StatusMessage();

  StatusMessage(const StatusMessage& from);

  inline StatusMessage& operator=(const StatusMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusMessage(StatusMessage&& from) noexcept
    : StatusMessage() {
    *this = ::std::move(from);
  }

  inline StatusMessage& operator=(StatusMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusMessage* internal_default_instance() {
    return reinterpret_cast<const StatusMessage*>(
               &_StatusMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StatusMessage* other);
  friend void swap(StatusMessage& a, StatusMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusMessage* New() const final {
    return CreateMaybeMessage<StatusMessage>(NULL);
  }

  StatusMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatusMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatusMessage& from);
  void MergeFrom(const StatusMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // required int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.StatusMessage)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllocateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.AllocateRequest) */ {
 public:
  AllocateRequest();
  virtual ~AllocateRequest();

  AllocateRequest(const AllocateRequest& from);

  inline AllocateRequest& operator=(const AllocateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllocateRequest(AllocateRequest&& from) noexcept
    : AllocateRequest() {
    *this = ::std::move(from);
  }

  inline AllocateRequest& operator=(AllocateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocateRequest& default_instance();

  enum SizeCase {
    kNumBytes = 3,
    kShape = 4,
    SIZE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllocateRequest* internal_default_instance() {
    return reinterpret_cast<const AllocateRequest*>(
               &_AllocateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AllocateRequest* other);
  friend void swap(AllocateRequest& a, AllocateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllocateRequest* New() const final {
    return CreateMaybeMessage<AllocateRequest>(NULL);
  }

  AllocateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllocateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllocateRequest& from);
  void MergeFrom(const AllocateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllocateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 core_id = 1;
  bool has_core_id() const;
  void clear_core_id();
  static const int kCoreIdFieldNumber = 1;
  ::google::protobuf::int32 core_id() const;
  void set_core_id(::google::protobuf::int32 value);

  // required .tpu_driver.MemoryRegion region = 2;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 2;
  ::tpu_driver::MemoryRegion region() const;
  void set_region(::tpu_driver::MemoryRegion value);

  // optional int64 num_bytes = 3;
  bool has_num_bytes() const;
  void clear_num_bytes();
  static const int kNumBytesFieldNumber = 3;
  ::google::protobuf::int64 num_bytes() const;
  void set_num_bytes(::google::protobuf::int64 value);

  // optional .xla.ShapeProto shape = 4;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 4;
  private:
  const ::xla::ShapeProto& _internal_shape() const;
  public:
  const ::xla::ShapeProto& shape() const;
  ::xla::ShapeProto* release_shape();
  ::xla::ShapeProto* mutable_shape();
  void set_allocated_shape(::xla::ShapeProto* shape);

  void clear_size();
  SizeCase size_case() const;
  // @@protoc_insertion_point(class_scope:tpu_driver.AllocateRequest)
 private:
  void set_has_core_id();
  void clear_has_core_id();
  void set_has_region();
  void clear_has_region();
  void set_has_num_bytes();
  void set_has_shape();

  inline bool has_size() const;
  inline void clear_has_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 core_id_;
  int region_;
  union SizeUnion {
    SizeUnion() {}
    ::google::protobuf::int64 num_bytes_;
    ::xla::ShapeProto* shape_;
  } size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllocateTupleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.AllocateTupleRequest) */ {
 public:
  AllocateTupleRequest();
  virtual ~AllocateTupleRequest();

  AllocateTupleRequest(const AllocateTupleRequest& from);

  inline AllocateTupleRequest& operator=(const AllocateTupleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllocateTupleRequest(AllocateTupleRequest&& from) noexcept
    : AllocateTupleRequest() {
    *this = ::std::move(from);
  }

  inline AllocateTupleRequest& operator=(AllocateTupleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocateTupleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllocateTupleRequest* internal_default_instance() {
    return reinterpret_cast<const AllocateTupleRequest*>(
               &_AllocateTupleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AllocateTupleRequest* other);
  friend void swap(AllocateTupleRequest& a, AllocateTupleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllocateTupleRequest* New() const final {
    return CreateMaybeMessage<AllocateTupleRequest>(NULL);
  }

  AllocateTupleRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllocateTupleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllocateTupleRequest& from);
  void MergeFrom(const AllocateTupleRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllocateTupleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 children = 3;
  int children_size() const;
  void clear_children();
  static const int kChildrenFieldNumber = 3;
  ::google::protobuf::int64 children(int index) const;
  void set_children(int index, ::google::protobuf::int64 value);
  void add_children(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      children() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_children();

  // required int32 core_id = 1;
  bool has_core_id() const;
  void clear_core_id();
  static const int kCoreIdFieldNumber = 1;
  ::google::protobuf::int32 core_id() const;
  void set_core_id(::google::protobuf::int32 value);

  // required .tpu_driver.MemoryRegion region = 2;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 2;
  ::tpu_driver::MemoryRegion region() const;
  void set_region(::tpu_driver::MemoryRegion value);

  // @@protoc_insertion_point(class_scope:tpu_driver.AllocateTupleRequest)
 private:
  void set_has_core_id();
  void clear_has_core_id();
  void set_has_region();
  void clear_has_region();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > children_;
  ::google::protobuf::int32 core_id_;
  int region_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeallocateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.DeallocateRequest) */ {
 public:
  DeallocateRequest();
  virtual ~DeallocateRequest();

  DeallocateRequest(const DeallocateRequest& from);

  inline DeallocateRequest& operator=(const DeallocateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeallocateRequest(DeallocateRequest&& from) noexcept
    : DeallocateRequest() {
    *this = ::std::move(from);
  }

  inline DeallocateRequest& operator=(DeallocateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeallocateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeallocateRequest* internal_default_instance() {
    return reinterpret_cast<const DeallocateRequest*>(
               &_DeallocateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DeallocateRequest* other);
  friend void swap(DeallocateRequest& a, DeallocateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeallocateRequest* New() const final {
    return CreateMaybeMessage<DeallocateRequest>(NULL);
  }

  DeallocateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeallocateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeallocateRequest& from);
  void MergeFrom(const DeallocateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeallocateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 handle = 1;
  bool has_handle() const;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  ::google::protobuf::int64 handle() const;
  void set_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.DeallocateRequest)
 private:
  void set_has_handle();
  void clear_has_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 handle_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransferToDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.TransferToDeviceRequest) */ {
 public:
  TransferToDeviceRequest();
  virtual ~TransferToDeviceRequest();

  TransferToDeviceRequest(const TransferToDeviceRequest& from);

  inline TransferToDeviceRequest& operator=(const TransferToDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferToDeviceRequest(TransferToDeviceRequest&& from) noexcept
    : TransferToDeviceRequest() {
    *this = ::std::move(from);
  }

  inline TransferToDeviceRequest& operator=(TransferToDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferToDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferToDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const TransferToDeviceRequest*>(
               &_TransferToDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TransferToDeviceRequest* other);
  friend void swap(TransferToDeviceRequest& a, TransferToDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferToDeviceRequest* New() const final {
    return CreateMaybeMessage<TransferToDeviceRequest>(NULL);
  }

  TransferToDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransferToDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransferToDeviceRequest& from);
  void MergeFrom(const TransferToDeviceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferToDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required int64 target_handle = 1;
  bool has_target_handle() const;
  void clear_target_handle();
  static const int kTargetHandleFieldNumber = 1;
  ::google::protobuf::int64 target_handle() const;
  void set_target_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.TransferToDeviceRequest)
 private:
  void set_has_target_handle();
  void clear_has_target_handle();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int64 target_handle_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransferFromDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.TransferFromDeviceRequest) */ {
 public:
  TransferFromDeviceRequest();
  virtual ~TransferFromDeviceRequest();

  TransferFromDeviceRequest(const TransferFromDeviceRequest& from);

  inline TransferFromDeviceRequest& operator=(const TransferFromDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferFromDeviceRequest(TransferFromDeviceRequest&& from) noexcept
    : TransferFromDeviceRequest() {
    *this = ::std::move(from);
  }

  inline TransferFromDeviceRequest& operator=(TransferFromDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferFromDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferFromDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const TransferFromDeviceRequest*>(
               &_TransferFromDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(TransferFromDeviceRequest* other);
  friend void swap(TransferFromDeviceRequest& a, TransferFromDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferFromDeviceRequest* New() const final {
    return CreateMaybeMessage<TransferFromDeviceRequest>(NULL);
  }

  TransferFromDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransferFromDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransferFromDeviceRequest& from);
  void MergeFrom(const TransferFromDeviceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferFromDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 source_handle = 1;
  bool has_source_handle() const;
  void clear_source_handle();
  static const int kSourceHandleFieldNumber = 1;
  ::google::protobuf::int64 source_handle() const;
  void set_source_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.TransferFromDeviceRequest)
 private:
  void set_has_source_handle();
  void clear_has_source_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 source_handle_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransferFromDeviceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.TransferFromDeviceResponse) */ {
 public:
  TransferFromDeviceResponse();
  virtual ~TransferFromDeviceResponse();

  TransferFromDeviceResponse(const TransferFromDeviceResponse& from);

  inline TransferFromDeviceResponse& operator=(const TransferFromDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferFromDeviceResponse(TransferFromDeviceResponse&& from) noexcept
    : TransferFromDeviceResponse() {
    *this = ::std::move(from);
  }

  inline TransferFromDeviceResponse& operator=(TransferFromDeviceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferFromDeviceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferFromDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const TransferFromDeviceResponse*>(
               &_TransferFromDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(TransferFromDeviceResponse* other);
  friend void swap(TransferFromDeviceResponse& a, TransferFromDeviceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferFromDeviceResponse* New() const final {
    return CreateMaybeMessage<TransferFromDeviceResponse>(NULL);
  }

  TransferFromDeviceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransferFromDeviceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransferFromDeviceResponse& from);
  void MergeFrom(const TransferFromDeviceResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferFromDeviceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:tpu_driver.TransferFromDeviceResponse)
 private:
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransferFromDeviceToDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.TransferFromDeviceToDeviceRequest) */ {
 public:
  TransferFromDeviceToDeviceRequest();
  virtual ~TransferFromDeviceToDeviceRequest();

  TransferFromDeviceToDeviceRequest(const TransferFromDeviceToDeviceRequest& from);

  inline TransferFromDeviceToDeviceRequest& operator=(const TransferFromDeviceToDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferFromDeviceToDeviceRequest(TransferFromDeviceToDeviceRequest&& from) noexcept
    : TransferFromDeviceToDeviceRequest() {
    *this = ::std::move(from);
  }

  inline TransferFromDeviceToDeviceRequest& operator=(TransferFromDeviceToDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferFromDeviceToDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferFromDeviceToDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const TransferFromDeviceToDeviceRequest*>(
               &_TransferFromDeviceToDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(TransferFromDeviceToDeviceRequest* other);
  friend void swap(TransferFromDeviceToDeviceRequest& a, TransferFromDeviceToDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferFromDeviceToDeviceRequest* New() const final {
    return CreateMaybeMessage<TransferFromDeviceToDeviceRequest>(NULL);
  }

  TransferFromDeviceToDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransferFromDeviceToDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransferFromDeviceToDeviceRequest& from);
  void MergeFrom(const TransferFromDeviceToDeviceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferFromDeviceToDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 source_handle = 1;
  bool has_source_handle() const;
  void clear_source_handle();
  static const int kSourceHandleFieldNumber = 1;
  ::google::protobuf::int64 source_handle() const;
  void set_source_handle(::google::protobuf::int64 value);

  // required int64 target_handle = 2;
  bool has_target_handle() const;
  void clear_target_handle();
  static const int kTargetHandleFieldNumber = 2;
  ::google::protobuf::int64 target_handle() const;
  void set_target_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.TransferFromDeviceToDeviceRequest)
 private:
  void set_has_source_handle();
  void clear_has_source_handle();
  void set_has_target_handle();
  void clear_has_target_handle();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 source_handle_;
  ::google::protobuf::int64 target_handle_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.CompileRequest) */ {
 public:
  CompileRequest();
  virtual ~CompileRequest();

  CompileRequest(const CompileRequest& from);

  inline CompileRequest& operator=(const CompileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompileRequest(CompileRequest&& from) noexcept
    : CompileRequest() {
    *this = ::std::move(from);
  }

  inline CompileRequest& operator=(CompileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompileRequest* internal_default_instance() {
    return reinterpret_cast<const CompileRequest*>(
               &_CompileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CompileRequest* other);
  friend void swap(CompileRequest& a, CompileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompileRequest* New() const final {
    return CreateMaybeMessage<CompileRequest>(NULL);
  }

  CompileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompileRequest& from);
  void MergeFrom(const CompileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .xla.HloProto hlo_program = 1;
  bool has_hlo_program() const;
  void clear_hlo_program();
  static const int kHloProgramFieldNumber = 1;
  private:
  const ::xla::HloProto& _internal_hlo_program() const;
  public:
  const ::xla::HloProto& hlo_program() const;
  ::xla::HloProto* release_hlo_program();
  ::xla::HloProto* mutable_hlo_program();
  void set_allocated_hlo_program(::xla::HloProto* hlo_program);

  // optional int64 num_replicas = 2;
  bool has_num_replicas() const;
  void clear_num_replicas();
  static const int kNumReplicasFieldNumber = 2;
  ::google::protobuf::int64 num_replicas() const;
  void set_num_replicas(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.CompileRequest)
 private:
  void set_has_hlo_program();
  void clear_has_hlo_program();
  void set_has_num_replicas();
  void clear_has_num_replicas();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::xla::HloProto* hlo_program_;
  ::google::protobuf::int64 num_replicas_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompiledProgramMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.CompiledProgramMetadata) */ {
 public:
  CompiledProgramMetadata();
  virtual ~CompiledProgramMetadata();

  CompiledProgramMetadata(const CompiledProgramMetadata& from);

  inline CompiledProgramMetadata& operator=(const CompiledProgramMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompiledProgramMetadata(CompiledProgramMetadata&& from) noexcept
    : CompiledProgramMetadata() {
    *this = ::std::move(from);
  }

  inline CompiledProgramMetadata& operator=(CompiledProgramMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompiledProgramMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompiledProgramMetadata* internal_default_instance() {
    return reinterpret_cast<const CompiledProgramMetadata*>(
               &_CompiledProgramMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CompiledProgramMetadata* other);
  friend void swap(CompiledProgramMetadata& a, CompiledProgramMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompiledProgramMetadata* New() const final {
    return CreateMaybeMessage<CompiledProgramMetadata>(NULL);
  }

  CompiledProgramMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompiledProgramMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompiledProgramMetadata& from);
  void MergeFrom(const CompiledProgramMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompiledProgramMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .xla.ProgramShapeProto program_shape = 1;
  bool has_program_shape() const;
  void clear_program_shape();
  static const int kProgramShapeFieldNumber = 1;
  private:
  const ::xla::ProgramShapeProto& _internal_program_shape() const;
  public:
  const ::xla::ProgramShapeProto& program_shape() const;
  ::xla::ProgramShapeProto* release_program_shape();
  ::xla::ProgramShapeProto* mutable_program_shape();
  void set_allocated_program_shape(::xla::ProgramShapeProto* program_shape);

  // @@protoc_insertion_point(class_scope:tpu_driver.CompiledProgramMetadata)
 private:
  void set_has_program_shape();
  void clear_has_program_shape();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::xla::ProgramShapeProto* program_shape_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.CompileResponse) */ {
 public:
  CompileResponse();
  virtual ~CompileResponse();

  CompileResponse(const CompileResponse& from);

  inline CompileResponse& operator=(const CompileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompileResponse(CompileResponse&& from) noexcept
    : CompileResponse() {
    *this = ::std::move(from);
  }

  inline CompileResponse& operator=(CompileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompileResponse* internal_default_instance() {
    return reinterpret_cast<const CompileResponse*>(
               &_CompileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CompileResponse* other);
  friend void swap(CompileResponse& a, CompileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompileResponse* New() const final {
    return CreateMaybeMessage<CompileResponse>(NULL);
  }

  CompileResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompileResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompileResponse& from);
  void MergeFrom(const CompileResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .tpu_driver.CompiledProgramMetadata metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  private:
  const ::tpu_driver::CompiledProgramMetadata& _internal_metadata() const;
  public:
  const ::tpu_driver::CompiledProgramMetadata& metadata() const;
  ::tpu_driver::CompiledProgramMetadata* release_metadata();
  ::tpu_driver::CompiledProgramMetadata* mutable_metadata();
  void set_allocated_metadata(::tpu_driver::CompiledProgramMetadata* metadata);

  // @@protoc_insertion_point(class_scope:tpu_driver.CompileResponse)
 private:
  void set_has_metadata();
  void clear_has_metadata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::tpu_driver::CompiledProgramMetadata* metadata_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoadProgramRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.LoadProgramRequest) */ {
 public:
  LoadProgramRequest();
  virtual ~LoadProgramRequest();

  LoadProgramRequest(const LoadProgramRequest& from);

  inline LoadProgramRequest& operator=(const LoadProgramRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadProgramRequest(LoadProgramRequest&& from) noexcept
    : LoadProgramRequest() {
    *this = ::std::move(from);
  }

  inline LoadProgramRequest& operator=(LoadProgramRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadProgramRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadProgramRequest* internal_default_instance() {
    return reinterpret_cast<const LoadProgramRequest*>(
               &_LoadProgramRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(LoadProgramRequest* other);
  friend void swap(LoadProgramRequest& a, LoadProgramRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadProgramRequest* New() const final {
    return CreateMaybeMessage<LoadProgramRequest>(NULL);
  }

  LoadProgramRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoadProgramRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoadProgramRequest& from);
  void MergeFrom(const LoadProgramRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadProgramRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 compiled_program_handle = 2;
  bool has_compiled_program_handle() const;
  void clear_compiled_program_handle();
  static const int kCompiledProgramHandleFieldNumber = 2;
  ::google::protobuf::int64 compiled_program_handle() const;
  void set_compiled_program_handle(::google::protobuf::int64 value);

  // required int32 core_id = 1;
  bool has_core_id() const;
  void clear_core_id();
  static const int kCoreIdFieldNumber = 1;
  ::google::protobuf::int32 core_id() const;
  void set_core_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.LoadProgramRequest)
 private:
  void set_has_core_id();
  void clear_has_core_id();
  void set_has_compiled_program_handle();
  void clear_has_compiled_program_handle();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 compiled_program_handle_;
  ::google::protobuf::int32 core_id_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnloadProgramRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.UnloadProgramRequest) */ {
 public:
  UnloadProgramRequest();
  virtual ~UnloadProgramRequest();

  UnloadProgramRequest(const UnloadProgramRequest& from);

  inline UnloadProgramRequest& operator=(const UnloadProgramRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnloadProgramRequest(UnloadProgramRequest&& from) noexcept
    : UnloadProgramRequest() {
    *this = ::std::move(from);
  }

  inline UnloadProgramRequest& operator=(UnloadProgramRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnloadProgramRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnloadProgramRequest* internal_default_instance() {
    return reinterpret_cast<const UnloadProgramRequest*>(
               &_UnloadProgramRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(UnloadProgramRequest* other);
  friend void swap(UnloadProgramRequest& a, UnloadProgramRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnloadProgramRequest* New() const final {
    return CreateMaybeMessage<UnloadProgramRequest>(NULL);
  }

  UnloadProgramRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnloadProgramRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnloadProgramRequest& from);
  void MergeFrom(const UnloadProgramRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnloadProgramRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 loaded_program_handle = 1;
  bool has_loaded_program_handle() const;
  void clear_loaded_program_handle();
  static const int kLoadedProgramHandleFieldNumber = 1;
  ::google::protobuf::int64 loaded_program_handle() const;
  void set_loaded_program_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.UnloadProgramRequest)
 private:
  void set_has_loaded_program_handle();
  void clear_has_loaded_program_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 loaded_program_handle_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.ExecuteRequest) */ {
 public:
  ExecuteRequest();
  virtual ~ExecuteRequest();

  ExecuteRequest(const ExecuteRequest& from);

  inline ExecuteRequest& operator=(const ExecuteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteRequest(ExecuteRequest&& from) noexcept
    : ExecuteRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteRequest& operator=(ExecuteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteRequest*>(
               &_ExecuteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ExecuteRequest* other);
  friend void swap(ExecuteRequest& a, ExecuteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteRequest* New() const final {
    return CreateMaybeMessage<ExecuteRequest>(NULL);
  }

  ExecuteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecuteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecuteRequest& from);
  void MergeFrom(const ExecuteRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 input_handle = 2;
  int input_handle_size() const;
  void clear_input_handle();
  static const int kInputHandleFieldNumber = 2;
  ::google::protobuf::int64 input_handle(int index) const;
  void set_input_handle(int index, ::google::protobuf::int64 value);
  void add_input_handle(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      input_handle() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_input_handle();

  // repeated int64 output_handle = 3;
  int output_handle_size() const;
  void clear_output_handle();
  static const int kOutputHandleFieldNumber = 3;
  ::google::protobuf::int64 output_handle(int index) const;
  void set_output_handle(int index, ::google::protobuf::int64 value);
  void add_output_handle(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      output_handle() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_output_handle();

  // optional .xla.DeviceAssignmentProto device_assignment = 4;
  bool has_device_assignment() const;
  void clear_device_assignment();
  static const int kDeviceAssignmentFieldNumber = 4;
  private:
  const ::xla::DeviceAssignmentProto& _internal_device_assignment() const;
  public:
  const ::xla::DeviceAssignmentProto& device_assignment() const;
  ::xla::DeviceAssignmentProto* release_device_assignment();
  ::xla::DeviceAssignmentProto* mutable_device_assignment();
  void set_allocated_device_assignment(::xla::DeviceAssignmentProto* device_assignment);

  // required int64 loaded_program_handle = 1;
  bool has_loaded_program_handle() const;
  void clear_loaded_program_handle();
  static const int kLoadedProgramHandleFieldNumber = 1;
  ::google::protobuf::int64 loaded_program_handle() const;
  void set_loaded_program_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.ExecuteRequest)
 private:
  void set_has_loaded_program_handle();
  void clear_has_loaded_program_handle();
  void set_has_device_assignment();
  void clear_has_device_assignment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > input_handle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > output_handle_;
  ::xla::DeviceAssignmentProto* device_assignment_;
  ::google::protobuf::int64 loaded_program_handle_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamRequest_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.StreamRequest.Entry) */ {
 public:
  StreamRequest_Entry();
  virtual ~StreamRequest_Entry();

  StreamRequest_Entry(const StreamRequest_Entry& from);

  inline StreamRequest_Entry& operator=(const StreamRequest_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamRequest_Entry(StreamRequest_Entry&& from) noexcept
    : StreamRequest_Entry() {
    *this = ::std::move(from);
  }

  inline StreamRequest_Entry& operator=(StreamRequest_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamRequest_Entry& default_instance();

  enum RequestCase {
    kAlloc = 1,
    kAllocTuple = 2,
    kDealloc = 3,
    kTransferTo = 4,
    kTransferFrom = 5,
    kTransferFromTo = 10,
    kCompile = 6,
    kLoad = 7,
    kUnload = 8,
    kExecute = 9,
    REQUEST_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamRequest_Entry* internal_default_instance() {
    return reinterpret_cast<const StreamRequest_Entry*>(
               &_StreamRequest_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(StreamRequest_Entry* other);
  friend void swap(StreamRequest_Entry& a, StreamRequest_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamRequest_Entry* New() const final {
    return CreateMaybeMessage<StreamRequest_Entry>(NULL);
  }

  StreamRequest_Entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StreamRequest_Entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StreamRequest_Entry& from);
  void MergeFrom(const StreamRequest_Entry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamRequest_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 wait_for_id = 20;
  int wait_for_id_size() const;
  void clear_wait_for_id();
  static const int kWaitForIdFieldNumber = 20;
  ::google::protobuf::int64 wait_for_id(int index) const;
  void set_wait_for_id(int index, ::google::protobuf::int64 value);
  void add_wait_for_id(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      wait_for_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_wait_for_id();

  // required int64 operation_id = 21;
  bool has_operation_id() const;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 21;
  ::google::protobuf::int64 operation_id() const;
  void set_operation_id(::google::protobuf::int64 value);

  // optional int64 thread_id = 22;
  bool has_thread_id() const;
  void clear_thread_id();
  static const int kThreadIdFieldNumber = 22;
  ::google::protobuf::int64 thread_id() const;
  void set_thread_id(::google::protobuf::int64 value);

  // optional .tpu_driver.AllocateRequest alloc = 1;
  bool has_alloc() const;
  void clear_alloc();
  static const int kAllocFieldNumber = 1;
  private:
  const ::tpu_driver::AllocateRequest& _internal_alloc() const;
  public:
  const ::tpu_driver::AllocateRequest& alloc() const;
  ::tpu_driver::AllocateRequest* release_alloc();
  ::tpu_driver::AllocateRequest* mutable_alloc();
  void set_allocated_alloc(::tpu_driver::AllocateRequest* alloc);

  // optional .tpu_driver.AllocateTupleRequest alloc_tuple = 2;
  bool has_alloc_tuple() const;
  void clear_alloc_tuple();
  static const int kAllocTupleFieldNumber = 2;
  private:
  const ::tpu_driver::AllocateTupleRequest& _internal_alloc_tuple() const;
  public:
  const ::tpu_driver::AllocateTupleRequest& alloc_tuple() const;
  ::tpu_driver::AllocateTupleRequest* release_alloc_tuple();
  ::tpu_driver::AllocateTupleRequest* mutable_alloc_tuple();
  void set_allocated_alloc_tuple(::tpu_driver::AllocateTupleRequest* alloc_tuple);

  // optional .tpu_driver.DeallocateRequest dealloc = 3;
  bool has_dealloc() const;
  void clear_dealloc();
  static const int kDeallocFieldNumber = 3;
  private:
  const ::tpu_driver::DeallocateRequest& _internal_dealloc() const;
  public:
  const ::tpu_driver::DeallocateRequest& dealloc() const;
  ::tpu_driver::DeallocateRequest* release_dealloc();
  ::tpu_driver::DeallocateRequest* mutable_dealloc();
  void set_allocated_dealloc(::tpu_driver::DeallocateRequest* dealloc);

  // optional .tpu_driver.TransferToDeviceRequest transfer_to = 4;
  bool has_transfer_to() const;
  void clear_transfer_to();
  static const int kTransferToFieldNumber = 4;
  private:
  const ::tpu_driver::TransferToDeviceRequest& _internal_transfer_to() const;
  public:
  const ::tpu_driver::TransferToDeviceRequest& transfer_to() const;
  ::tpu_driver::TransferToDeviceRequest* release_transfer_to();
  ::tpu_driver::TransferToDeviceRequest* mutable_transfer_to();
  void set_allocated_transfer_to(::tpu_driver::TransferToDeviceRequest* transfer_to);

  // optional .tpu_driver.TransferFromDeviceRequest transfer_from = 5;
  bool has_transfer_from() const;
  void clear_transfer_from();
  static const int kTransferFromFieldNumber = 5;
  private:
  const ::tpu_driver::TransferFromDeviceRequest& _internal_transfer_from() const;
  public:
  const ::tpu_driver::TransferFromDeviceRequest& transfer_from() const;
  ::tpu_driver::TransferFromDeviceRequest* release_transfer_from();
  ::tpu_driver::TransferFromDeviceRequest* mutable_transfer_from();
  void set_allocated_transfer_from(::tpu_driver::TransferFromDeviceRequest* transfer_from);

  // optional .tpu_driver.TransferFromDeviceToDeviceRequest transfer_from_to = 10;
  bool has_transfer_from_to() const;
  void clear_transfer_from_to();
  static const int kTransferFromToFieldNumber = 10;
  private:
  const ::tpu_driver::TransferFromDeviceToDeviceRequest& _internal_transfer_from_to() const;
  public:
  const ::tpu_driver::TransferFromDeviceToDeviceRequest& transfer_from_to() const;
  ::tpu_driver::TransferFromDeviceToDeviceRequest* release_transfer_from_to();
  ::tpu_driver::TransferFromDeviceToDeviceRequest* mutable_transfer_from_to();
  void set_allocated_transfer_from_to(::tpu_driver::TransferFromDeviceToDeviceRequest* transfer_from_to);

  // optional .tpu_driver.CompileRequest compile = 6;
  bool has_compile() const;
  void clear_compile();
  static const int kCompileFieldNumber = 6;
  private:
  const ::tpu_driver::CompileRequest& _internal_compile() const;
  public:
  const ::tpu_driver::CompileRequest& compile() const;
  ::tpu_driver::CompileRequest* release_compile();
  ::tpu_driver::CompileRequest* mutable_compile();
  void set_allocated_compile(::tpu_driver::CompileRequest* compile);

  // optional .tpu_driver.LoadProgramRequest load = 7;
  bool has_load() const;
  void clear_load();
  static const int kLoadFieldNumber = 7;
  private:
  const ::tpu_driver::LoadProgramRequest& _internal_load() const;
  public:
  const ::tpu_driver::LoadProgramRequest& load() const;
  ::tpu_driver::LoadProgramRequest* release_load();
  ::tpu_driver::LoadProgramRequest* mutable_load();
  void set_allocated_load(::tpu_driver::LoadProgramRequest* load);

  // optional .tpu_driver.UnloadProgramRequest unload = 8;
  bool has_unload() const;
  void clear_unload();
  static const int kUnloadFieldNumber = 8;
  private:
  const ::tpu_driver::UnloadProgramRequest& _internal_unload() const;
  public:
  const ::tpu_driver::UnloadProgramRequest& unload() const;
  ::tpu_driver::UnloadProgramRequest* release_unload();
  ::tpu_driver::UnloadProgramRequest* mutable_unload();
  void set_allocated_unload(::tpu_driver::UnloadProgramRequest* unload);

  // optional .tpu_driver.ExecuteRequest execute = 9;
  bool has_execute() const;
  void clear_execute();
  static const int kExecuteFieldNumber = 9;
  private:
  const ::tpu_driver::ExecuteRequest& _internal_execute() const;
  public:
  const ::tpu_driver::ExecuteRequest& execute() const;
  ::tpu_driver::ExecuteRequest* release_execute();
  ::tpu_driver::ExecuteRequest* mutable_execute();
  void set_allocated_execute(::tpu_driver::ExecuteRequest* execute);

  void clear_request();
  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:tpu_driver.StreamRequest.Entry)
 private:
  void set_has_alloc();
  void set_has_alloc_tuple();
  void set_has_dealloc();
  void set_has_transfer_to();
  void set_has_transfer_from();
  void set_has_transfer_from_to();
  void set_has_compile();
  void set_has_load();
  void set_has_unload();
  void set_has_execute();
  void set_has_operation_id();
  void clear_has_operation_id();
  void set_has_thread_id();
  void clear_has_thread_id();

  inline bool has_request() const;
  inline void clear_has_request();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > wait_for_id_;
  ::google::protobuf::int64 operation_id_;
  ::google::protobuf::int64 thread_id_;
  union RequestUnion {
    RequestUnion() {}
    ::tpu_driver::AllocateRequest* alloc_;
    ::tpu_driver::AllocateTupleRequest* alloc_tuple_;
    ::tpu_driver::DeallocateRequest* dealloc_;
    ::tpu_driver::TransferToDeviceRequest* transfer_to_;
    ::tpu_driver::TransferFromDeviceRequest* transfer_from_;
    ::tpu_driver::TransferFromDeviceToDeviceRequest* transfer_from_to_;
    ::tpu_driver::CompileRequest* compile_;
    ::tpu_driver::LoadProgramRequest* load_;
    ::tpu_driver::UnloadProgramRequest* unload_;
    ::tpu_driver::ExecuteRequest* execute_;
  } request_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.StreamRequest) */ {
 public:
  StreamRequest();
  virtual ~StreamRequest();

  StreamRequest(const StreamRequest& from);

  inline StreamRequest& operator=(const StreamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamRequest(StreamRequest&& from) noexcept
    : StreamRequest() {
    *this = ::std::move(from);
  }

  inline StreamRequest& operator=(StreamRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamRequest* internal_default_instance() {
    return reinterpret_cast<const StreamRequest*>(
               &_StreamRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(StreamRequest* other);
  friend void swap(StreamRequest& a, StreamRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamRequest* New() const final {
    return CreateMaybeMessage<StreamRequest>(NULL);
  }

  StreamRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StreamRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StreamRequest& from);
  void MergeFrom(const StreamRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StreamRequest_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .tpu_driver.StreamRequest.Entry entry = 30;
  int entry_size() const;
  void clear_entry();
  static const int kEntryFieldNumber = 30;
  ::tpu_driver::StreamRequest_Entry* mutable_entry(int index);
  ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamRequest_Entry >*
      mutable_entry();
  const ::tpu_driver::StreamRequest_Entry& entry(int index) const;
  ::tpu_driver::StreamRequest_Entry* add_entry();
  const ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamRequest_Entry >&
      entry() const;

  // @@protoc_insertion_point(class_scope:tpu_driver.StreamRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamRequest_Entry > entry_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamResponse_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.StreamResponse.Entry) */ {
 public:
  StreamResponse_Entry();
  virtual ~StreamResponse_Entry();

  StreamResponse_Entry(const StreamResponse_Entry& from);

  inline StreamResponse_Entry& operator=(const StreamResponse_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamResponse_Entry(StreamResponse_Entry&& from) noexcept
    : StreamResponse_Entry() {
    *this = ::std::move(from);
  }

  inline StreamResponse_Entry& operator=(StreamResponse_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamResponse_Entry& default_instance();

  enum ResponseCase {
    kTransferFrom = 3,
    kCompile = 4,
    RESPONSE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamResponse_Entry* internal_default_instance() {
    return reinterpret_cast<const StreamResponse_Entry*>(
               &_StreamResponse_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(StreamResponse_Entry* other);
  friend void swap(StreamResponse_Entry& a, StreamResponse_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamResponse_Entry* New() const final {
    return CreateMaybeMessage<StreamResponse_Entry>(NULL);
  }

  StreamResponse_Entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StreamResponse_Entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StreamResponse_Entry& from);
  void MergeFrom(const StreamResponse_Entry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamResponse_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .tpu_driver.StatusMessage status = 10;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  private:
  const ::tpu_driver::StatusMessage& _internal_status() const;
  public:
  const ::tpu_driver::StatusMessage& status() const;
  ::tpu_driver::StatusMessage* release_status();
  ::tpu_driver::StatusMessage* mutable_status();
  void set_allocated_status(::tpu_driver::StatusMessage* status);

  // required int64 operation_id = 11;
  bool has_operation_id() const;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 11;
  ::google::protobuf::int64 operation_id() const;
  void set_operation_id(::google::protobuf::int64 value);

  // optional .tpu_driver.TransferFromDeviceResponse transfer_from = 3;
  bool has_transfer_from() const;
  void clear_transfer_from();
  static const int kTransferFromFieldNumber = 3;
  private:
  const ::tpu_driver::TransferFromDeviceResponse& _internal_transfer_from() const;
  public:
  const ::tpu_driver::TransferFromDeviceResponse& transfer_from() const;
  ::tpu_driver::TransferFromDeviceResponse* release_transfer_from();
  ::tpu_driver::TransferFromDeviceResponse* mutable_transfer_from();
  void set_allocated_transfer_from(::tpu_driver::TransferFromDeviceResponse* transfer_from);

  // optional .tpu_driver.CompileResponse compile = 4;
  bool has_compile() const;
  void clear_compile();
  static const int kCompileFieldNumber = 4;
  private:
  const ::tpu_driver::CompileResponse& _internal_compile() const;
  public:
  const ::tpu_driver::CompileResponse& compile() const;
  ::tpu_driver::CompileResponse* release_compile();
  ::tpu_driver::CompileResponse* mutable_compile();
  void set_allocated_compile(::tpu_driver::CompileResponse* compile);

  void clear_response();
  ResponseCase response_case() const;
  // @@protoc_insertion_point(class_scope:tpu_driver.StreamResponse.Entry)
 private:
  void set_has_transfer_from();
  void set_has_compile();
  void set_has_status();
  void clear_has_status();
  void set_has_operation_id();
  void clear_has_operation_id();

  inline bool has_response() const;
  inline void clear_has_response();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::tpu_driver::StatusMessage* status_;
  ::google::protobuf::int64 operation_id_;
  union ResponseUnion {
    ResponseUnion() {}
    ::tpu_driver::TransferFromDeviceResponse* transfer_from_;
    ::tpu_driver::CompileResponse* compile_;
  } response_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.StreamResponse) */ {
 public:
  StreamResponse();
  virtual ~StreamResponse();

  StreamResponse(const StreamResponse& from);

  inline StreamResponse& operator=(const StreamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamResponse(StreamResponse&& from) noexcept
    : StreamResponse() {
    *this = ::std::move(from);
  }

  inline StreamResponse& operator=(StreamResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamResponse* internal_default_instance() {
    return reinterpret_cast<const StreamResponse*>(
               &_StreamResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(StreamResponse* other);
  friend void swap(StreamResponse& a, StreamResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamResponse* New() const final {
    return CreateMaybeMessage<StreamResponse>(NULL);
  }

  StreamResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StreamResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StreamResponse& from);
  void MergeFrom(const StreamResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StreamResponse_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .tpu_driver.StreamResponse.Entry entry = 20;
  int entry_size() const;
  void clear_entry();
  static const int kEntryFieldNumber = 20;
  ::tpu_driver::StreamResponse_Entry* mutable_entry(int index);
  ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamResponse_Entry >*
      mutable_entry();
  const ::tpu_driver::StreamResponse_Entry& entry(int index) const;
  ::tpu_driver::StreamResponse_Entry* add_entry();
  const ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamResponse_Entry >&
      entry() const;

  // @@protoc_insertion_point(class_scope:tpu_driver.StreamResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamResponse_Entry > entry_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpenRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.OpenRequest) */ {
 public:
  OpenRequest();
  virtual ~OpenRequest();

  OpenRequest(const OpenRequest& from);

  inline OpenRequest& operator=(const OpenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenRequest(OpenRequest&& from) noexcept
    : OpenRequest() {
    *this = ::std::move(from);
  }

  inline OpenRequest& operator=(OpenRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpenRequest* internal_default_instance() {
    return reinterpret_cast<const OpenRequest*>(
               &_OpenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(OpenRequest* other);
  friend void swap(OpenRequest& a, OpenRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenRequest* New() const final {
    return CreateMaybeMessage<OpenRequest>(NULL);
  }

  OpenRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OpenRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OpenRequest& from);
  void MergeFrom(const OpenRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_version = 1 [default = 0];
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  ::google::protobuf::int32 client_version() const;
  void set_client_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.OpenRequest)
 private:
  void set_has_client_version();
  void clear_has_client_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 client_version_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpenResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.OpenResponse) */ {
 public:
  OpenResponse();
  virtual ~OpenResponse();

  OpenResponse(const OpenResponse& from);

  inline OpenResponse& operator=(const OpenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenResponse(OpenResponse&& from) noexcept
    : OpenResponse() {
    *this = ::std::move(from);
  }

  inline OpenResponse& operator=(OpenResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpenResponse* internal_default_instance() {
    return reinterpret_cast<const OpenResponse*>(
               &_OpenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(OpenResponse* other);
  friend void swap(OpenResponse& a, OpenResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenResponse* New() const final {
    return CreateMaybeMessage<OpenResponse>(NULL);
  }

  OpenResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OpenResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OpenResponse& from);
  void MergeFrom(const OpenResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 client_id = 1;
  bool has_client_id() const;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::uint32 client_id() const;
  void set_client_id(::google::protobuf::uint32 value);

  // optional int32 max_idle_time_seconds = 2 [default = 3600];
  bool has_max_idle_time_seconds() const;
  void clear_max_idle_time_seconds();
  static const int kMaxIdleTimeSecondsFieldNumber = 2;
  ::google::protobuf::int32 max_idle_time_seconds() const;
  void set_max_idle_time_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.OpenResponse)
 private:
  void set_has_client_id();
  void clear_has_client_id();
  void set_has_max_idle_time_seconds();
  void clear_has_max_idle_time_seconds();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 client_id_;
  ::google::protobuf::int32 max_idle_time_seconds_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CloseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.CloseRequest) */ {
 public:
  CloseRequest();
  virtual ~CloseRequest();

  CloseRequest(const CloseRequest& from);

  inline CloseRequest& operator=(const CloseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloseRequest(CloseRequest&& from) noexcept
    : CloseRequest() {
    *this = ::std::move(from);
  }

  inline CloseRequest& operator=(CloseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloseRequest* internal_default_instance() {
    return reinterpret_cast<const CloseRequest*>(
               &_CloseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CloseRequest* other);
  friend void swap(CloseRequest& a, CloseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloseRequest* New() const final {
    return CreateMaybeMessage<CloseRequest>(NULL);
  }

  CloseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CloseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CloseRequest& from);
  void MergeFrom(const CloseRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CloseRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 client_id = 1;
  bool has_client_id() const;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::uint32 client_id() const;
  void set_client_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tpu_driver.CloseRequest)
 private:
  void set_has_client_id();
  void clear_has_client_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 client_id_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CloseResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.CloseResponse) */ {
 public:
  CloseResponse();
  virtual ~CloseResponse();

  CloseResponse(const CloseResponse& from);

  inline CloseResponse& operator=(const CloseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloseResponse(CloseResponse&& from) noexcept
    : CloseResponse() {
    *this = ::std::move(from);
  }

  inline CloseResponse& operator=(CloseResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloseResponse* internal_default_instance() {
    return reinterpret_cast<const CloseResponse*>(
               &_CloseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CloseResponse* other);
  friend void swap(CloseResponse& a, CloseResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloseResponse* New() const final {
    return CreateMaybeMessage<CloseResponse>(NULL);
  }

  CloseResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CloseResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CloseResponse& from);
  void MergeFrom(const CloseResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CloseResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:tpu_driver.CloseResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.ResetRequest) */ {
 public:
  ResetRequest();
  virtual ~ResetRequest();

  ResetRequest(const ResetRequest& from);

  inline ResetRequest& operator=(const ResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetRequest(ResetRequest&& from) noexcept
    : ResetRequest() {
    *this = ::std::move(from);
  }

  inline ResetRequest& operator=(ResetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetRequest* internal_default_instance() {
    return reinterpret_cast<const ResetRequest*>(
               &_ResetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(ResetRequest* other);
  friend void swap(ResetRequest& a, ResetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetRequest* New() const final {
    return CreateMaybeMessage<ResetRequest>(NULL);
  }

  ResetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResetRequest& from);
  void MergeFrom(const ResetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:tpu_driver.ResetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.ResetResponse) */ {
 public:
  ResetResponse();
  virtual ~ResetResponse();

  ResetResponse(const ResetResponse& from);

  inline ResetResponse& operator=(const ResetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetResponse(ResetResponse&& from) noexcept
    : ResetResponse() {
    *this = ::std::move(from);
  }

  inline ResetResponse& operator=(ResetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetResponse* internal_default_instance() {
    return reinterpret_cast<const ResetResponse*>(
               &_ResetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(ResetResponse* other);
  friend void swap(ResetResponse& a, ResetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetResponse* New() const final {
    return CreateMaybeMessage<ResetResponse>(NULL);
  }

  ResetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResetResponse& from);
  void MergeFrom(const ResetResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:tpu_driver.ResetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySystemInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.QuerySystemInfoRequest) */ {
 public:
  QuerySystemInfoRequest();
  virtual ~QuerySystemInfoRequest();

  QuerySystemInfoRequest(const QuerySystemInfoRequest& from);

  inline QuerySystemInfoRequest& operator=(const QuerySystemInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuerySystemInfoRequest(QuerySystemInfoRequest&& from) noexcept
    : QuerySystemInfoRequest() {
    *this = ::std::move(from);
  }

  inline QuerySystemInfoRequest& operator=(QuerySystemInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySystemInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuerySystemInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QuerySystemInfoRequest*>(
               &_QuerySystemInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(QuerySystemInfoRequest* other);
  friend void swap(QuerySystemInfoRequest& a, QuerySystemInfoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuerySystemInfoRequest* New() const final {
    return CreateMaybeMessage<QuerySystemInfoRequest>(NULL);
  }

  QuerySystemInfoRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuerySystemInfoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuerySystemInfoRequest& from);
  void MergeFrom(const QuerySystemInfoRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuerySystemInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:tpu_driver.QuerySystemInfoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuerySystemInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tpu_driver.QuerySystemInfoResponse) */ {
 public:
  QuerySystemInfoResponse();
  virtual ~QuerySystemInfoResponse();

  QuerySystemInfoResponse(const QuerySystemInfoResponse& from);

  inline QuerySystemInfoResponse& operator=(const QuerySystemInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuerySystemInfoResponse(QuerySystemInfoResponse&& from) noexcept
    : QuerySystemInfoResponse() {
    *this = ::std::move(from);
  }

  inline QuerySystemInfoResponse& operator=(QuerySystemInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySystemInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuerySystemInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QuerySystemInfoResponse*>(
               &_QuerySystemInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(QuerySystemInfoResponse* other);
  friend void swap(QuerySystemInfoResponse& a, QuerySystemInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuerySystemInfoResponse* New() const final {
    return CreateMaybeMessage<QuerySystemInfoResponse>(NULL);
  }

  QuerySystemInfoResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuerySystemInfoResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuerySystemInfoResponse& from);
  void MergeFrom(const QuerySystemInfoResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuerySystemInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .tpu_driver.SystemInfo system_info = 1;
  bool has_system_info() const;
  void clear_system_info();
  static const int kSystemInfoFieldNumber = 1;
  private:
  const ::tpu_driver::SystemInfo& _internal_system_info() const;
  public:
  const ::tpu_driver::SystemInfo& system_info() const;
  ::tpu_driver::SystemInfo* release_system_info();
  ::tpu_driver::SystemInfo* mutable_system_info();
  void set_allocated_system_info(::tpu_driver::SystemInfo* system_info);

  // @@protoc_insertion_point(class_scope:tpu_driver.QuerySystemInfoResponse)
 private:
  void set_has_system_info();
  void clear_has_system_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::tpu_driver::SystemInfo* system_info_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StatusMessage

// required int32 code = 1;
inline bool StatusMessage::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatusMessage::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatusMessage::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatusMessage::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 StatusMessage::code() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StatusMessage.code)
  return code_;
}
inline void StatusMessage::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.StatusMessage.code)
}

// optional string message = 2;
inline bool StatusMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatusMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatusMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatusMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& StatusMessage::message() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StatusMessage.message)
  return message_.GetNoArena();
}
inline void StatusMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tpu_driver.StatusMessage.message)
}
#if LANG_CXX11
inline void StatusMessage::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tpu_driver.StatusMessage.message)
}
#endif
inline void StatusMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tpu_driver.StatusMessage.message)
}
inline void StatusMessage::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tpu_driver.StatusMessage.message)
}
inline ::std::string* StatusMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:tpu_driver.StatusMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusMessage::release_message() {
  // @@protoc_insertion_point(field_release:tpu_driver.StatusMessage.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StatusMessage.message)
}

// -------------------------------------------------------------------

// AllocateRequest

// required int32 core_id = 1;
inline bool AllocateRequest::has_core_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllocateRequest::set_has_core_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllocateRequest::clear_has_core_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllocateRequest::clear_core_id() {
  core_id_ = 0;
  clear_has_core_id();
}
inline ::google::protobuf::int32 AllocateRequest::core_id() const {
  // @@protoc_insertion_point(field_get:tpu_driver.AllocateRequest.core_id)
  return core_id_;
}
inline void AllocateRequest::set_core_id(::google::protobuf::int32 value) {
  set_has_core_id();
  core_id_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.AllocateRequest.core_id)
}

// required .tpu_driver.MemoryRegion region = 2;
inline bool AllocateRequest::has_region() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllocateRequest::set_has_region() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllocateRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllocateRequest::clear_region() {
  region_ = 1;
  clear_has_region();
}
inline ::tpu_driver::MemoryRegion AllocateRequest::region() const {
  // @@protoc_insertion_point(field_get:tpu_driver.AllocateRequest.region)
  return static_cast< ::tpu_driver::MemoryRegion >(region_);
}
inline void AllocateRequest::set_region(::tpu_driver::MemoryRegion value) {
  assert(::tpu_driver::MemoryRegion_IsValid(value));
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.AllocateRequest.region)
}

// optional int64 num_bytes = 3;
inline bool AllocateRequest::has_num_bytes() const {
  return size_case() == kNumBytes;
}
inline void AllocateRequest::set_has_num_bytes() {
  _oneof_case_[0] = kNumBytes;
}
inline void AllocateRequest::clear_num_bytes() {
  if (has_num_bytes()) {
    size_.num_bytes_ = GOOGLE_LONGLONG(0);
    clear_has_size();
  }
}
inline ::google::protobuf::int64 AllocateRequest::num_bytes() const {
  // @@protoc_insertion_point(field_get:tpu_driver.AllocateRequest.num_bytes)
  if (has_num_bytes()) {
    return size_.num_bytes_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void AllocateRequest::set_num_bytes(::google::protobuf::int64 value) {
  if (!has_num_bytes()) {
    clear_size();
    set_has_num_bytes();
  }
  size_.num_bytes_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.AllocateRequest.num_bytes)
}

// optional .xla.ShapeProto shape = 4;
inline bool AllocateRequest::has_shape() const {
  return size_case() == kShape;
}
inline void AllocateRequest::set_has_shape() {
  _oneof_case_[0] = kShape;
}
inline const ::xla::ShapeProto& AllocateRequest::_internal_shape() const {
  return *size_.shape_;
}
inline ::xla::ShapeProto* AllocateRequest::release_shape() {
  // @@protoc_insertion_point(field_release:tpu_driver.AllocateRequest.shape)
  if (has_shape()) {
    clear_has_size();
      ::xla::ShapeProto* temp = size_.shape_;
    size_.shape_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::xla::ShapeProto& AllocateRequest::shape() const {
  // @@protoc_insertion_point(field_get:tpu_driver.AllocateRequest.shape)
  return has_shape()
      ? *size_.shape_
      : *reinterpret_cast< ::xla::ShapeProto*>(&::xla::_ShapeProto_default_instance_);
}
inline ::xla::ShapeProto* AllocateRequest::mutable_shape() {
  if (!has_shape()) {
    clear_size();
    set_has_shape();
    size_.shape_ = CreateMaybeMessage< ::xla::ShapeProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.AllocateRequest.shape)
  return size_.shape_;
}

inline bool AllocateRequest::has_size() const {
  return size_case() != SIZE_NOT_SET;
}
inline void AllocateRequest::clear_has_size() {
  _oneof_case_[0] = SIZE_NOT_SET;
}
inline AllocateRequest::SizeCase AllocateRequest::size_case() const {
  return AllocateRequest::SizeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AllocateTupleRequest

// required int32 core_id = 1;
inline bool AllocateTupleRequest::has_core_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllocateTupleRequest::set_has_core_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllocateTupleRequest::clear_has_core_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllocateTupleRequest::clear_core_id() {
  core_id_ = 0;
  clear_has_core_id();
}
inline ::google::protobuf::int32 AllocateTupleRequest::core_id() const {
  // @@protoc_insertion_point(field_get:tpu_driver.AllocateTupleRequest.core_id)
  return core_id_;
}
inline void AllocateTupleRequest::set_core_id(::google::protobuf::int32 value) {
  set_has_core_id();
  core_id_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.AllocateTupleRequest.core_id)
}

// required .tpu_driver.MemoryRegion region = 2;
inline bool AllocateTupleRequest::has_region() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllocateTupleRequest::set_has_region() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllocateTupleRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllocateTupleRequest::clear_region() {
  region_ = 1;
  clear_has_region();
}
inline ::tpu_driver::MemoryRegion AllocateTupleRequest::region() const {
  // @@protoc_insertion_point(field_get:tpu_driver.AllocateTupleRequest.region)
  return static_cast< ::tpu_driver::MemoryRegion >(region_);
}
inline void AllocateTupleRequest::set_region(::tpu_driver::MemoryRegion value) {
  assert(::tpu_driver::MemoryRegion_IsValid(value));
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.AllocateTupleRequest.region)
}

// repeated int64 children = 3;
inline int AllocateTupleRequest::children_size() const {
  return children_.size();
}
inline void AllocateTupleRequest::clear_children() {
  children_.Clear();
}
inline ::google::protobuf::int64 AllocateTupleRequest::children(int index) const {
  // @@protoc_insertion_point(field_get:tpu_driver.AllocateTupleRequest.children)
  return children_.Get(index);
}
inline void AllocateTupleRequest::set_children(int index, ::google::protobuf::int64 value) {
  children_.Set(index, value);
  // @@protoc_insertion_point(field_set:tpu_driver.AllocateTupleRequest.children)
}
inline void AllocateTupleRequest::add_children(::google::protobuf::int64 value) {
  children_.Add(value);
  // @@protoc_insertion_point(field_add:tpu_driver.AllocateTupleRequest.children)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AllocateTupleRequest::children() const {
  // @@protoc_insertion_point(field_list:tpu_driver.AllocateTupleRequest.children)
  return children_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AllocateTupleRequest::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:tpu_driver.AllocateTupleRequest.children)
  return &children_;
}

// -------------------------------------------------------------------

// DeallocateRequest

// required int64 handle = 1;
inline bool DeallocateRequest::has_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeallocateRequest::set_has_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeallocateRequest::clear_has_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeallocateRequest::clear_handle() {
  handle_ = GOOGLE_LONGLONG(0);
  clear_has_handle();
}
inline ::google::protobuf::int64 DeallocateRequest::handle() const {
  // @@protoc_insertion_point(field_get:tpu_driver.DeallocateRequest.handle)
  return handle_;
}
inline void DeallocateRequest::set_handle(::google::protobuf::int64 value) {
  set_has_handle();
  handle_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.DeallocateRequest.handle)
}

// -------------------------------------------------------------------

// TransferToDeviceRequest

// required int64 target_handle = 1;
inline bool TransferToDeviceRequest::has_target_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransferToDeviceRequest::set_has_target_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransferToDeviceRequest::clear_has_target_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransferToDeviceRequest::clear_target_handle() {
  target_handle_ = GOOGLE_LONGLONG(0);
  clear_has_target_handle();
}
inline ::google::protobuf::int64 TransferToDeviceRequest::target_handle() const {
  // @@protoc_insertion_point(field_get:tpu_driver.TransferToDeviceRequest.target_handle)
  return target_handle_;
}
inline void TransferToDeviceRequest::set_target_handle(::google::protobuf::int64 value) {
  set_has_target_handle();
  target_handle_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.TransferToDeviceRequest.target_handle)
}

// required bytes data = 2;
inline bool TransferToDeviceRequest::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransferToDeviceRequest::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransferToDeviceRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransferToDeviceRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& TransferToDeviceRequest::data() const {
  // @@protoc_insertion_point(field_get:tpu_driver.TransferToDeviceRequest.data)
  return data_.GetNoArena();
}
inline void TransferToDeviceRequest::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tpu_driver.TransferToDeviceRequest.data)
}
#if LANG_CXX11
inline void TransferToDeviceRequest::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tpu_driver.TransferToDeviceRequest.data)
}
#endif
inline void TransferToDeviceRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tpu_driver.TransferToDeviceRequest.data)
}
inline void TransferToDeviceRequest::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tpu_driver.TransferToDeviceRequest.data)
}
inline ::std::string* TransferToDeviceRequest::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tpu_driver.TransferToDeviceRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransferToDeviceRequest::release_data() {
  // @@protoc_insertion_point(field_release:tpu_driver.TransferToDeviceRequest.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransferToDeviceRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.TransferToDeviceRequest.data)
}

// -------------------------------------------------------------------

// TransferFromDeviceRequest

// required int64 source_handle = 1;
inline bool TransferFromDeviceRequest::has_source_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransferFromDeviceRequest::set_has_source_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransferFromDeviceRequest::clear_has_source_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransferFromDeviceRequest::clear_source_handle() {
  source_handle_ = GOOGLE_LONGLONG(0);
  clear_has_source_handle();
}
inline ::google::protobuf::int64 TransferFromDeviceRequest::source_handle() const {
  // @@protoc_insertion_point(field_get:tpu_driver.TransferFromDeviceRequest.source_handle)
  return source_handle_;
}
inline void TransferFromDeviceRequest::set_source_handle(::google::protobuf::int64 value) {
  set_has_source_handle();
  source_handle_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.TransferFromDeviceRequest.source_handle)
}

// -------------------------------------------------------------------

// TransferFromDeviceResponse

// required bytes data = 2;
inline bool TransferFromDeviceResponse::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransferFromDeviceResponse::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransferFromDeviceResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransferFromDeviceResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& TransferFromDeviceResponse::data() const {
  // @@protoc_insertion_point(field_get:tpu_driver.TransferFromDeviceResponse.data)
  return data_.GetNoArena();
}
inline void TransferFromDeviceResponse::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tpu_driver.TransferFromDeviceResponse.data)
}
#if LANG_CXX11
inline void TransferFromDeviceResponse::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tpu_driver.TransferFromDeviceResponse.data)
}
#endif
inline void TransferFromDeviceResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tpu_driver.TransferFromDeviceResponse.data)
}
inline void TransferFromDeviceResponse::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tpu_driver.TransferFromDeviceResponse.data)
}
inline ::std::string* TransferFromDeviceResponse::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tpu_driver.TransferFromDeviceResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransferFromDeviceResponse::release_data() {
  // @@protoc_insertion_point(field_release:tpu_driver.TransferFromDeviceResponse.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransferFromDeviceResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.TransferFromDeviceResponse.data)
}

// -------------------------------------------------------------------

// TransferFromDeviceToDeviceRequest

// required int64 source_handle = 1;
inline bool TransferFromDeviceToDeviceRequest::has_source_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransferFromDeviceToDeviceRequest::set_has_source_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransferFromDeviceToDeviceRequest::clear_has_source_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransferFromDeviceToDeviceRequest::clear_source_handle() {
  source_handle_ = GOOGLE_LONGLONG(0);
  clear_has_source_handle();
}
inline ::google::protobuf::int64 TransferFromDeviceToDeviceRequest::source_handle() const {
  // @@protoc_insertion_point(field_get:tpu_driver.TransferFromDeviceToDeviceRequest.source_handle)
  return source_handle_;
}
inline void TransferFromDeviceToDeviceRequest::set_source_handle(::google::protobuf::int64 value) {
  set_has_source_handle();
  source_handle_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.TransferFromDeviceToDeviceRequest.source_handle)
}

// required int64 target_handle = 2;
inline bool TransferFromDeviceToDeviceRequest::has_target_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransferFromDeviceToDeviceRequest::set_has_target_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransferFromDeviceToDeviceRequest::clear_has_target_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransferFromDeviceToDeviceRequest::clear_target_handle() {
  target_handle_ = GOOGLE_LONGLONG(0);
  clear_has_target_handle();
}
inline ::google::protobuf::int64 TransferFromDeviceToDeviceRequest::target_handle() const {
  // @@protoc_insertion_point(field_get:tpu_driver.TransferFromDeviceToDeviceRequest.target_handle)
  return target_handle_;
}
inline void TransferFromDeviceToDeviceRequest::set_target_handle(::google::protobuf::int64 value) {
  set_has_target_handle();
  target_handle_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.TransferFromDeviceToDeviceRequest.target_handle)
}

// -------------------------------------------------------------------

// CompileRequest

// required .xla.HloProto hlo_program = 1;
inline bool CompileRequest::has_hlo_program() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CompileRequest::set_has_hlo_program() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CompileRequest::clear_has_hlo_program() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::xla::HloProto& CompileRequest::_internal_hlo_program() const {
  return *hlo_program_;
}
inline const ::xla::HloProto& CompileRequest::hlo_program() const {
  const ::xla::HloProto* p = hlo_program_;
  // @@protoc_insertion_point(field_get:tpu_driver.CompileRequest.hlo_program)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::HloProto*>(
      &::xla::_HloProto_default_instance_);
}
inline ::xla::HloProto* CompileRequest::release_hlo_program() {
  // @@protoc_insertion_point(field_release:tpu_driver.CompileRequest.hlo_program)
  clear_has_hlo_program();
  ::xla::HloProto* temp = hlo_program_;
  hlo_program_ = NULL;
  return temp;
}
inline ::xla::HloProto* CompileRequest::mutable_hlo_program() {
  set_has_hlo_program();
  if (hlo_program_ == NULL) {
    auto* p = CreateMaybeMessage<::xla::HloProto>(GetArenaNoVirtual());
    hlo_program_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.CompileRequest.hlo_program)
  return hlo_program_;
}
inline void CompileRequest::set_allocated_hlo_program(::xla::HloProto* hlo_program) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hlo_program_);
  }
  if (hlo_program) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(hlo_program)->GetArena();
    if (message_arena != submessage_arena) {
      hlo_program = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hlo_program, submessage_arena);
    }
    set_has_hlo_program();
  } else {
    clear_has_hlo_program();
  }
  hlo_program_ = hlo_program;
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.CompileRequest.hlo_program)
}

// optional int64 num_replicas = 2;
inline bool CompileRequest::has_num_replicas() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CompileRequest::set_has_num_replicas() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CompileRequest::clear_has_num_replicas() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CompileRequest::clear_num_replicas() {
  num_replicas_ = GOOGLE_LONGLONG(0);
  clear_has_num_replicas();
}
inline ::google::protobuf::int64 CompileRequest::num_replicas() const {
  // @@protoc_insertion_point(field_get:tpu_driver.CompileRequest.num_replicas)
  return num_replicas_;
}
inline void CompileRequest::set_num_replicas(::google::protobuf::int64 value) {
  set_has_num_replicas();
  num_replicas_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.CompileRequest.num_replicas)
}

// -------------------------------------------------------------------

// CompiledProgramMetadata

// required .xla.ProgramShapeProto program_shape = 1;
inline bool CompiledProgramMetadata::has_program_shape() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CompiledProgramMetadata::set_has_program_shape() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CompiledProgramMetadata::clear_has_program_shape() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::xla::ProgramShapeProto& CompiledProgramMetadata::_internal_program_shape() const {
  return *program_shape_;
}
inline const ::xla::ProgramShapeProto& CompiledProgramMetadata::program_shape() const {
  const ::xla::ProgramShapeProto* p = program_shape_;
  // @@protoc_insertion_point(field_get:tpu_driver.CompiledProgramMetadata.program_shape)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ProgramShapeProto*>(
      &::xla::_ProgramShapeProto_default_instance_);
}
inline ::xla::ProgramShapeProto* CompiledProgramMetadata::release_program_shape() {
  // @@protoc_insertion_point(field_release:tpu_driver.CompiledProgramMetadata.program_shape)
  clear_has_program_shape();
  ::xla::ProgramShapeProto* temp = program_shape_;
  program_shape_ = NULL;
  return temp;
}
inline ::xla::ProgramShapeProto* CompiledProgramMetadata::mutable_program_shape() {
  set_has_program_shape();
  if (program_shape_ == NULL) {
    auto* p = CreateMaybeMessage<::xla::ProgramShapeProto>(GetArenaNoVirtual());
    program_shape_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.CompiledProgramMetadata.program_shape)
  return program_shape_;
}
inline void CompiledProgramMetadata::set_allocated_program_shape(::xla::ProgramShapeProto* program_shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(program_shape_);
  }
  if (program_shape) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(program_shape)->GetArena();
    if (message_arena != submessage_arena) {
      program_shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, program_shape, submessage_arena);
    }
    set_has_program_shape();
  } else {
    clear_has_program_shape();
  }
  program_shape_ = program_shape;
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.CompiledProgramMetadata.program_shape)
}

// -------------------------------------------------------------------

// CompileResponse

// required .tpu_driver.CompiledProgramMetadata metadata = 1;
inline bool CompileResponse::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CompileResponse::set_has_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CompileResponse::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CompileResponse::clear_metadata() {
  if (metadata_ != NULL) metadata_->Clear();
  clear_has_metadata();
}
inline const ::tpu_driver::CompiledProgramMetadata& CompileResponse::_internal_metadata() const {
  return *metadata_;
}
inline const ::tpu_driver::CompiledProgramMetadata& CompileResponse::metadata() const {
  const ::tpu_driver::CompiledProgramMetadata* p = metadata_;
  // @@protoc_insertion_point(field_get:tpu_driver.CompileResponse.metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::tpu_driver::CompiledProgramMetadata*>(
      &::tpu_driver::_CompiledProgramMetadata_default_instance_);
}
inline ::tpu_driver::CompiledProgramMetadata* CompileResponse::release_metadata() {
  // @@protoc_insertion_point(field_release:tpu_driver.CompileResponse.metadata)
  clear_has_metadata();
  ::tpu_driver::CompiledProgramMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline ::tpu_driver::CompiledProgramMetadata* CompileResponse::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::tpu_driver::CompiledProgramMetadata>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.CompileResponse.metadata)
  return metadata_;
}
inline void CompileResponse::set_allocated_metadata(::tpu_driver::CompiledProgramMetadata* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete metadata_;
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.CompileResponse.metadata)
}

// -------------------------------------------------------------------

// LoadProgramRequest

// required int32 core_id = 1;
inline bool LoadProgramRequest::has_core_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadProgramRequest::set_has_core_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoadProgramRequest::clear_has_core_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoadProgramRequest::clear_core_id() {
  core_id_ = 0;
  clear_has_core_id();
}
inline ::google::protobuf::int32 LoadProgramRequest::core_id() const {
  // @@protoc_insertion_point(field_get:tpu_driver.LoadProgramRequest.core_id)
  return core_id_;
}
inline void LoadProgramRequest::set_core_id(::google::protobuf::int32 value) {
  set_has_core_id();
  core_id_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.LoadProgramRequest.core_id)
}

// required int64 compiled_program_handle = 2;
inline bool LoadProgramRequest::has_compiled_program_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadProgramRequest::set_has_compiled_program_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadProgramRequest::clear_has_compiled_program_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadProgramRequest::clear_compiled_program_handle() {
  compiled_program_handle_ = GOOGLE_LONGLONG(0);
  clear_has_compiled_program_handle();
}
inline ::google::protobuf::int64 LoadProgramRequest::compiled_program_handle() const {
  // @@protoc_insertion_point(field_get:tpu_driver.LoadProgramRequest.compiled_program_handle)
  return compiled_program_handle_;
}
inline void LoadProgramRequest::set_compiled_program_handle(::google::protobuf::int64 value) {
  set_has_compiled_program_handle();
  compiled_program_handle_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.LoadProgramRequest.compiled_program_handle)
}

// -------------------------------------------------------------------

// UnloadProgramRequest

// required int64 loaded_program_handle = 1;
inline bool UnloadProgramRequest::has_loaded_program_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnloadProgramRequest::set_has_loaded_program_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnloadProgramRequest::clear_has_loaded_program_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnloadProgramRequest::clear_loaded_program_handle() {
  loaded_program_handle_ = GOOGLE_LONGLONG(0);
  clear_has_loaded_program_handle();
}
inline ::google::protobuf::int64 UnloadProgramRequest::loaded_program_handle() const {
  // @@protoc_insertion_point(field_get:tpu_driver.UnloadProgramRequest.loaded_program_handle)
  return loaded_program_handle_;
}
inline void UnloadProgramRequest::set_loaded_program_handle(::google::protobuf::int64 value) {
  set_has_loaded_program_handle();
  loaded_program_handle_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.UnloadProgramRequest.loaded_program_handle)
}

// -------------------------------------------------------------------

// ExecuteRequest

// required int64 loaded_program_handle = 1;
inline bool ExecuteRequest::has_loaded_program_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExecuteRequest::set_has_loaded_program_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExecuteRequest::clear_has_loaded_program_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExecuteRequest::clear_loaded_program_handle() {
  loaded_program_handle_ = GOOGLE_LONGLONG(0);
  clear_has_loaded_program_handle();
}
inline ::google::protobuf::int64 ExecuteRequest::loaded_program_handle() const {
  // @@protoc_insertion_point(field_get:tpu_driver.ExecuteRequest.loaded_program_handle)
  return loaded_program_handle_;
}
inline void ExecuteRequest::set_loaded_program_handle(::google::protobuf::int64 value) {
  set_has_loaded_program_handle();
  loaded_program_handle_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.ExecuteRequest.loaded_program_handle)
}

// repeated int64 input_handle = 2;
inline int ExecuteRequest::input_handle_size() const {
  return input_handle_.size();
}
inline void ExecuteRequest::clear_input_handle() {
  input_handle_.Clear();
}
inline ::google::protobuf::int64 ExecuteRequest::input_handle(int index) const {
  // @@protoc_insertion_point(field_get:tpu_driver.ExecuteRequest.input_handle)
  return input_handle_.Get(index);
}
inline void ExecuteRequest::set_input_handle(int index, ::google::protobuf::int64 value) {
  input_handle_.Set(index, value);
  // @@protoc_insertion_point(field_set:tpu_driver.ExecuteRequest.input_handle)
}
inline void ExecuteRequest::add_input_handle(::google::protobuf::int64 value) {
  input_handle_.Add(value);
  // @@protoc_insertion_point(field_add:tpu_driver.ExecuteRequest.input_handle)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ExecuteRequest::input_handle() const {
  // @@protoc_insertion_point(field_list:tpu_driver.ExecuteRequest.input_handle)
  return input_handle_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ExecuteRequest::mutable_input_handle() {
  // @@protoc_insertion_point(field_mutable_list:tpu_driver.ExecuteRequest.input_handle)
  return &input_handle_;
}

// repeated int64 output_handle = 3;
inline int ExecuteRequest::output_handle_size() const {
  return output_handle_.size();
}
inline void ExecuteRequest::clear_output_handle() {
  output_handle_.Clear();
}
inline ::google::protobuf::int64 ExecuteRequest::output_handle(int index) const {
  // @@protoc_insertion_point(field_get:tpu_driver.ExecuteRequest.output_handle)
  return output_handle_.Get(index);
}
inline void ExecuteRequest::set_output_handle(int index, ::google::protobuf::int64 value) {
  output_handle_.Set(index, value);
  // @@protoc_insertion_point(field_set:tpu_driver.ExecuteRequest.output_handle)
}
inline void ExecuteRequest::add_output_handle(::google::protobuf::int64 value) {
  output_handle_.Add(value);
  // @@protoc_insertion_point(field_add:tpu_driver.ExecuteRequest.output_handle)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ExecuteRequest::output_handle() const {
  // @@protoc_insertion_point(field_list:tpu_driver.ExecuteRequest.output_handle)
  return output_handle_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ExecuteRequest::mutable_output_handle() {
  // @@protoc_insertion_point(field_mutable_list:tpu_driver.ExecuteRequest.output_handle)
  return &output_handle_;
}

// optional .xla.DeviceAssignmentProto device_assignment = 4;
inline bool ExecuteRequest::has_device_assignment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecuteRequest::set_has_device_assignment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecuteRequest::clear_has_device_assignment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::xla::DeviceAssignmentProto& ExecuteRequest::_internal_device_assignment() const {
  return *device_assignment_;
}
inline const ::xla::DeviceAssignmentProto& ExecuteRequest::device_assignment() const {
  const ::xla::DeviceAssignmentProto* p = device_assignment_;
  // @@protoc_insertion_point(field_get:tpu_driver.ExecuteRequest.device_assignment)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::DeviceAssignmentProto*>(
      &::xla::_DeviceAssignmentProto_default_instance_);
}
inline ::xla::DeviceAssignmentProto* ExecuteRequest::release_device_assignment() {
  // @@protoc_insertion_point(field_release:tpu_driver.ExecuteRequest.device_assignment)
  clear_has_device_assignment();
  ::xla::DeviceAssignmentProto* temp = device_assignment_;
  device_assignment_ = NULL;
  return temp;
}
inline ::xla::DeviceAssignmentProto* ExecuteRequest::mutable_device_assignment() {
  set_has_device_assignment();
  if (device_assignment_ == NULL) {
    auto* p = CreateMaybeMessage<::xla::DeviceAssignmentProto>(GetArenaNoVirtual());
    device_assignment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.ExecuteRequest.device_assignment)
  return device_assignment_;
}
inline void ExecuteRequest::set_allocated_device_assignment(::xla::DeviceAssignmentProto* device_assignment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_assignment_);
  }
  if (device_assignment) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(device_assignment)->GetArena();
    if (message_arena != submessage_arena) {
      device_assignment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_assignment, submessage_arena);
    }
    set_has_device_assignment();
  } else {
    clear_has_device_assignment();
  }
  device_assignment_ = device_assignment;
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.ExecuteRequest.device_assignment)
}

// -------------------------------------------------------------------

// StreamRequest_Entry

// optional .tpu_driver.AllocateRequest alloc = 1;
inline bool StreamRequest_Entry::has_alloc() const {
  return request_case() == kAlloc;
}
inline void StreamRequest_Entry::set_has_alloc() {
  _oneof_case_[0] = kAlloc;
}
inline void StreamRequest_Entry::clear_alloc() {
  if (has_alloc()) {
    delete request_.alloc_;
    clear_has_request();
  }
}
inline const ::tpu_driver::AllocateRequest& StreamRequest_Entry::_internal_alloc() const {
  return *request_.alloc_;
}
inline ::tpu_driver::AllocateRequest* StreamRequest_Entry::release_alloc() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.alloc)
  if (has_alloc()) {
    clear_has_request();
      ::tpu_driver::AllocateRequest* temp = request_.alloc_;
    request_.alloc_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::AllocateRequest& StreamRequest_Entry::alloc() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.alloc)
  return has_alloc()
      ? *request_.alloc_
      : *reinterpret_cast< ::tpu_driver::AllocateRequest*>(&::tpu_driver::_AllocateRequest_default_instance_);
}
inline ::tpu_driver::AllocateRequest* StreamRequest_Entry::mutable_alloc() {
  if (!has_alloc()) {
    clear_request();
    set_has_alloc();
    request_.alloc_ = CreateMaybeMessage< ::tpu_driver::AllocateRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.alloc)
  return request_.alloc_;
}

// optional .tpu_driver.AllocateTupleRequest alloc_tuple = 2;
inline bool StreamRequest_Entry::has_alloc_tuple() const {
  return request_case() == kAllocTuple;
}
inline void StreamRequest_Entry::set_has_alloc_tuple() {
  _oneof_case_[0] = kAllocTuple;
}
inline void StreamRequest_Entry::clear_alloc_tuple() {
  if (has_alloc_tuple()) {
    delete request_.alloc_tuple_;
    clear_has_request();
  }
}
inline const ::tpu_driver::AllocateTupleRequest& StreamRequest_Entry::_internal_alloc_tuple() const {
  return *request_.alloc_tuple_;
}
inline ::tpu_driver::AllocateTupleRequest* StreamRequest_Entry::release_alloc_tuple() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.alloc_tuple)
  if (has_alloc_tuple()) {
    clear_has_request();
      ::tpu_driver::AllocateTupleRequest* temp = request_.alloc_tuple_;
    request_.alloc_tuple_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::AllocateTupleRequest& StreamRequest_Entry::alloc_tuple() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.alloc_tuple)
  return has_alloc_tuple()
      ? *request_.alloc_tuple_
      : *reinterpret_cast< ::tpu_driver::AllocateTupleRequest*>(&::tpu_driver::_AllocateTupleRequest_default_instance_);
}
inline ::tpu_driver::AllocateTupleRequest* StreamRequest_Entry::mutable_alloc_tuple() {
  if (!has_alloc_tuple()) {
    clear_request();
    set_has_alloc_tuple();
    request_.alloc_tuple_ = CreateMaybeMessage< ::tpu_driver::AllocateTupleRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.alloc_tuple)
  return request_.alloc_tuple_;
}

// optional .tpu_driver.DeallocateRequest dealloc = 3;
inline bool StreamRequest_Entry::has_dealloc() const {
  return request_case() == kDealloc;
}
inline void StreamRequest_Entry::set_has_dealloc() {
  _oneof_case_[0] = kDealloc;
}
inline void StreamRequest_Entry::clear_dealloc() {
  if (has_dealloc()) {
    delete request_.dealloc_;
    clear_has_request();
  }
}
inline const ::tpu_driver::DeallocateRequest& StreamRequest_Entry::_internal_dealloc() const {
  return *request_.dealloc_;
}
inline ::tpu_driver::DeallocateRequest* StreamRequest_Entry::release_dealloc() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.dealloc)
  if (has_dealloc()) {
    clear_has_request();
      ::tpu_driver::DeallocateRequest* temp = request_.dealloc_;
    request_.dealloc_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::DeallocateRequest& StreamRequest_Entry::dealloc() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.dealloc)
  return has_dealloc()
      ? *request_.dealloc_
      : *reinterpret_cast< ::tpu_driver::DeallocateRequest*>(&::tpu_driver::_DeallocateRequest_default_instance_);
}
inline ::tpu_driver::DeallocateRequest* StreamRequest_Entry::mutable_dealloc() {
  if (!has_dealloc()) {
    clear_request();
    set_has_dealloc();
    request_.dealloc_ = CreateMaybeMessage< ::tpu_driver::DeallocateRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.dealloc)
  return request_.dealloc_;
}

// optional .tpu_driver.TransferToDeviceRequest transfer_to = 4;
inline bool StreamRequest_Entry::has_transfer_to() const {
  return request_case() == kTransferTo;
}
inline void StreamRequest_Entry::set_has_transfer_to() {
  _oneof_case_[0] = kTransferTo;
}
inline void StreamRequest_Entry::clear_transfer_to() {
  if (has_transfer_to()) {
    delete request_.transfer_to_;
    clear_has_request();
  }
}
inline const ::tpu_driver::TransferToDeviceRequest& StreamRequest_Entry::_internal_transfer_to() const {
  return *request_.transfer_to_;
}
inline ::tpu_driver::TransferToDeviceRequest* StreamRequest_Entry::release_transfer_to() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.transfer_to)
  if (has_transfer_to()) {
    clear_has_request();
      ::tpu_driver::TransferToDeviceRequest* temp = request_.transfer_to_;
    request_.transfer_to_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::TransferToDeviceRequest& StreamRequest_Entry::transfer_to() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.transfer_to)
  return has_transfer_to()
      ? *request_.transfer_to_
      : *reinterpret_cast< ::tpu_driver::TransferToDeviceRequest*>(&::tpu_driver::_TransferToDeviceRequest_default_instance_);
}
inline ::tpu_driver::TransferToDeviceRequest* StreamRequest_Entry::mutable_transfer_to() {
  if (!has_transfer_to()) {
    clear_request();
    set_has_transfer_to();
    request_.transfer_to_ = CreateMaybeMessage< ::tpu_driver::TransferToDeviceRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.transfer_to)
  return request_.transfer_to_;
}

// optional .tpu_driver.TransferFromDeviceRequest transfer_from = 5;
inline bool StreamRequest_Entry::has_transfer_from() const {
  return request_case() == kTransferFrom;
}
inline void StreamRequest_Entry::set_has_transfer_from() {
  _oneof_case_[0] = kTransferFrom;
}
inline void StreamRequest_Entry::clear_transfer_from() {
  if (has_transfer_from()) {
    delete request_.transfer_from_;
    clear_has_request();
  }
}
inline const ::tpu_driver::TransferFromDeviceRequest& StreamRequest_Entry::_internal_transfer_from() const {
  return *request_.transfer_from_;
}
inline ::tpu_driver::TransferFromDeviceRequest* StreamRequest_Entry::release_transfer_from() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.transfer_from)
  if (has_transfer_from()) {
    clear_has_request();
      ::tpu_driver::TransferFromDeviceRequest* temp = request_.transfer_from_;
    request_.transfer_from_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::TransferFromDeviceRequest& StreamRequest_Entry::transfer_from() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.transfer_from)
  return has_transfer_from()
      ? *request_.transfer_from_
      : *reinterpret_cast< ::tpu_driver::TransferFromDeviceRequest*>(&::tpu_driver::_TransferFromDeviceRequest_default_instance_);
}
inline ::tpu_driver::TransferFromDeviceRequest* StreamRequest_Entry::mutable_transfer_from() {
  if (!has_transfer_from()) {
    clear_request();
    set_has_transfer_from();
    request_.transfer_from_ = CreateMaybeMessage< ::tpu_driver::TransferFromDeviceRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.transfer_from)
  return request_.transfer_from_;
}

// optional .tpu_driver.TransferFromDeviceToDeviceRequest transfer_from_to = 10;
inline bool StreamRequest_Entry::has_transfer_from_to() const {
  return request_case() == kTransferFromTo;
}
inline void StreamRequest_Entry::set_has_transfer_from_to() {
  _oneof_case_[0] = kTransferFromTo;
}
inline void StreamRequest_Entry::clear_transfer_from_to() {
  if (has_transfer_from_to()) {
    delete request_.transfer_from_to_;
    clear_has_request();
  }
}
inline const ::tpu_driver::TransferFromDeviceToDeviceRequest& StreamRequest_Entry::_internal_transfer_from_to() const {
  return *request_.transfer_from_to_;
}
inline ::tpu_driver::TransferFromDeviceToDeviceRequest* StreamRequest_Entry::release_transfer_from_to() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.transfer_from_to)
  if (has_transfer_from_to()) {
    clear_has_request();
      ::tpu_driver::TransferFromDeviceToDeviceRequest* temp = request_.transfer_from_to_;
    request_.transfer_from_to_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::TransferFromDeviceToDeviceRequest& StreamRequest_Entry::transfer_from_to() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.transfer_from_to)
  return has_transfer_from_to()
      ? *request_.transfer_from_to_
      : *reinterpret_cast< ::tpu_driver::TransferFromDeviceToDeviceRequest*>(&::tpu_driver::_TransferFromDeviceToDeviceRequest_default_instance_);
}
inline ::tpu_driver::TransferFromDeviceToDeviceRequest* StreamRequest_Entry::mutable_transfer_from_to() {
  if (!has_transfer_from_to()) {
    clear_request();
    set_has_transfer_from_to();
    request_.transfer_from_to_ = CreateMaybeMessage< ::tpu_driver::TransferFromDeviceToDeviceRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.transfer_from_to)
  return request_.transfer_from_to_;
}

// optional .tpu_driver.CompileRequest compile = 6;
inline bool StreamRequest_Entry::has_compile() const {
  return request_case() == kCompile;
}
inline void StreamRequest_Entry::set_has_compile() {
  _oneof_case_[0] = kCompile;
}
inline void StreamRequest_Entry::clear_compile() {
  if (has_compile()) {
    delete request_.compile_;
    clear_has_request();
  }
}
inline const ::tpu_driver::CompileRequest& StreamRequest_Entry::_internal_compile() const {
  return *request_.compile_;
}
inline ::tpu_driver::CompileRequest* StreamRequest_Entry::release_compile() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.compile)
  if (has_compile()) {
    clear_has_request();
      ::tpu_driver::CompileRequest* temp = request_.compile_;
    request_.compile_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::CompileRequest& StreamRequest_Entry::compile() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.compile)
  return has_compile()
      ? *request_.compile_
      : *reinterpret_cast< ::tpu_driver::CompileRequest*>(&::tpu_driver::_CompileRequest_default_instance_);
}
inline ::tpu_driver::CompileRequest* StreamRequest_Entry::mutable_compile() {
  if (!has_compile()) {
    clear_request();
    set_has_compile();
    request_.compile_ = CreateMaybeMessage< ::tpu_driver::CompileRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.compile)
  return request_.compile_;
}

// optional .tpu_driver.LoadProgramRequest load = 7;
inline bool StreamRequest_Entry::has_load() const {
  return request_case() == kLoad;
}
inline void StreamRequest_Entry::set_has_load() {
  _oneof_case_[0] = kLoad;
}
inline void StreamRequest_Entry::clear_load() {
  if (has_load()) {
    delete request_.load_;
    clear_has_request();
  }
}
inline const ::tpu_driver::LoadProgramRequest& StreamRequest_Entry::_internal_load() const {
  return *request_.load_;
}
inline ::tpu_driver::LoadProgramRequest* StreamRequest_Entry::release_load() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.load)
  if (has_load()) {
    clear_has_request();
      ::tpu_driver::LoadProgramRequest* temp = request_.load_;
    request_.load_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::LoadProgramRequest& StreamRequest_Entry::load() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.load)
  return has_load()
      ? *request_.load_
      : *reinterpret_cast< ::tpu_driver::LoadProgramRequest*>(&::tpu_driver::_LoadProgramRequest_default_instance_);
}
inline ::tpu_driver::LoadProgramRequest* StreamRequest_Entry::mutable_load() {
  if (!has_load()) {
    clear_request();
    set_has_load();
    request_.load_ = CreateMaybeMessage< ::tpu_driver::LoadProgramRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.load)
  return request_.load_;
}

// optional .tpu_driver.UnloadProgramRequest unload = 8;
inline bool StreamRequest_Entry::has_unload() const {
  return request_case() == kUnload;
}
inline void StreamRequest_Entry::set_has_unload() {
  _oneof_case_[0] = kUnload;
}
inline void StreamRequest_Entry::clear_unload() {
  if (has_unload()) {
    delete request_.unload_;
    clear_has_request();
  }
}
inline const ::tpu_driver::UnloadProgramRequest& StreamRequest_Entry::_internal_unload() const {
  return *request_.unload_;
}
inline ::tpu_driver::UnloadProgramRequest* StreamRequest_Entry::release_unload() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.unload)
  if (has_unload()) {
    clear_has_request();
      ::tpu_driver::UnloadProgramRequest* temp = request_.unload_;
    request_.unload_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::UnloadProgramRequest& StreamRequest_Entry::unload() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.unload)
  return has_unload()
      ? *request_.unload_
      : *reinterpret_cast< ::tpu_driver::UnloadProgramRequest*>(&::tpu_driver::_UnloadProgramRequest_default_instance_);
}
inline ::tpu_driver::UnloadProgramRequest* StreamRequest_Entry::mutable_unload() {
  if (!has_unload()) {
    clear_request();
    set_has_unload();
    request_.unload_ = CreateMaybeMessage< ::tpu_driver::UnloadProgramRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.unload)
  return request_.unload_;
}

// optional .tpu_driver.ExecuteRequest execute = 9;
inline bool StreamRequest_Entry::has_execute() const {
  return request_case() == kExecute;
}
inline void StreamRequest_Entry::set_has_execute() {
  _oneof_case_[0] = kExecute;
}
inline void StreamRequest_Entry::clear_execute() {
  if (has_execute()) {
    delete request_.execute_;
    clear_has_request();
  }
}
inline const ::tpu_driver::ExecuteRequest& StreamRequest_Entry::_internal_execute() const {
  return *request_.execute_;
}
inline ::tpu_driver::ExecuteRequest* StreamRequest_Entry::release_execute() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamRequest.Entry.execute)
  if (has_execute()) {
    clear_has_request();
      ::tpu_driver::ExecuteRequest* temp = request_.execute_;
    request_.execute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::ExecuteRequest& StreamRequest_Entry::execute() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.execute)
  return has_execute()
      ? *request_.execute_
      : *reinterpret_cast< ::tpu_driver::ExecuteRequest*>(&::tpu_driver::_ExecuteRequest_default_instance_);
}
inline ::tpu_driver::ExecuteRequest* StreamRequest_Entry::mutable_execute() {
  if (!has_execute()) {
    clear_request();
    set_has_execute();
    request_.execute_ = CreateMaybeMessage< ::tpu_driver::ExecuteRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.Entry.execute)
  return request_.execute_;
}

// repeated int64 wait_for_id = 20;
inline int StreamRequest_Entry::wait_for_id_size() const {
  return wait_for_id_.size();
}
inline void StreamRequest_Entry::clear_wait_for_id() {
  wait_for_id_.Clear();
}
inline ::google::protobuf::int64 StreamRequest_Entry::wait_for_id(int index) const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.wait_for_id)
  return wait_for_id_.Get(index);
}
inline void StreamRequest_Entry::set_wait_for_id(int index, ::google::protobuf::int64 value) {
  wait_for_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:tpu_driver.StreamRequest.Entry.wait_for_id)
}
inline void StreamRequest_Entry::add_wait_for_id(::google::protobuf::int64 value) {
  wait_for_id_.Add(value);
  // @@protoc_insertion_point(field_add:tpu_driver.StreamRequest.Entry.wait_for_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
StreamRequest_Entry::wait_for_id() const {
  // @@protoc_insertion_point(field_list:tpu_driver.StreamRequest.Entry.wait_for_id)
  return wait_for_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
StreamRequest_Entry::mutable_wait_for_id() {
  // @@protoc_insertion_point(field_mutable_list:tpu_driver.StreamRequest.Entry.wait_for_id)
  return &wait_for_id_;
}

// required int64 operation_id = 21;
inline bool StreamRequest_Entry::has_operation_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StreamRequest_Entry::set_has_operation_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StreamRequest_Entry::clear_has_operation_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StreamRequest_Entry::clear_operation_id() {
  operation_id_ = GOOGLE_LONGLONG(0);
  clear_has_operation_id();
}
inline ::google::protobuf::int64 StreamRequest_Entry::operation_id() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.operation_id)
  return operation_id_;
}
inline void StreamRequest_Entry::set_operation_id(::google::protobuf::int64 value) {
  set_has_operation_id();
  operation_id_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.StreamRequest.Entry.operation_id)
}

// optional int64 thread_id = 22;
inline bool StreamRequest_Entry::has_thread_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StreamRequest_Entry::set_has_thread_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StreamRequest_Entry::clear_has_thread_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StreamRequest_Entry::clear_thread_id() {
  thread_id_ = GOOGLE_LONGLONG(0);
  clear_has_thread_id();
}
inline ::google::protobuf::int64 StreamRequest_Entry::thread_id() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.Entry.thread_id)
  return thread_id_;
}
inline void StreamRequest_Entry::set_thread_id(::google::protobuf::int64 value) {
  set_has_thread_id();
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.StreamRequest.Entry.thread_id)
}

inline bool StreamRequest_Entry::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void StreamRequest_Entry::clear_has_request() {
  _oneof_case_[0] = REQUEST_NOT_SET;
}
inline StreamRequest_Entry::RequestCase StreamRequest_Entry::request_case() const {
  return StreamRequest_Entry::RequestCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// StreamRequest

// repeated .tpu_driver.StreamRequest.Entry entry = 30;
inline int StreamRequest::entry_size() const {
  return entry_.size();
}
inline void StreamRequest::clear_entry() {
  entry_.Clear();
}
inline ::tpu_driver::StreamRequest_Entry* StreamRequest::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamRequest.entry)
  return entry_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamRequest_Entry >*
StreamRequest::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:tpu_driver.StreamRequest.entry)
  return &entry_;
}
inline const ::tpu_driver::StreamRequest_Entry& StreamRequest::entry(int index) const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamRequest.entry)
  return entry_.Get(index);
}
inline ::tpu_driver::StreamRequest_Entry* StreamRequest::add_entry() {
  // @@protoc_insertion_point(field_add:tpu_driver.StreamRequest.entry)
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamRequest_Entry >&
StreamRequest::entry() const {
  // @@protoc_insertion_point(field_list:tpu_driver.StreamRequest.entry)
  return entry_;
}

// -------------------------------------------------------------------

// StreamResponse_Entry

// optional .tpu_driver.TransferFromDeviceResponse transfer_from = 3;
inline bool StreamResponse_Entry::has_transfer_from() const {
  return response_case() == kTransferFrom;
}
inline void StreamResponse_Entry::set_has_transfer_from() {
  _oneof_case_[0] = kTransferFrom;
}
inline void StreamResponse_Entry::clear_transfer_from() {
  if (has_transfer_from()) {
    delete response_.transfer_from_;
    clear_has_response();
  }
}
inline const ::tpu_driver::TransferFromDeviceResponse& StreamResponse_Entry::_internal_transfer_from() const {
  return *response_.transfer_from_;
}
inline ::tpu_driver::TransferFromDeviceResponse* StreamResponse_Entry::release_transfer_from() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamResponse.Entry.transfer_from)
  if (has_transfer_from()) {
    clear_has_response();
      ::tpu_driver::TransferFromDeviceResponse* temp = response_.transfer_from_;
    response_.transfer_from_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::TransferFromDeviceResponse& StreamResponse_Entry::transfer_from() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamResponse.Entry.transfer_from)
  return has_transfer_from()
      ? *response_.transfer_from_
      : *reinterpret_cast< ::tpu_driver::TransferFromDeviceResponse*>(&::tpu_driver::_TransferFromDeviceResponse_default_instance_);
}
inline ::tpu_driver::TransferFromDeviceResponse* StreamResponse_Entry::mutable_transfer_from() {
  if (!has_transfer_from()) {
    clear_response();
    set_has_transfer_from();
    response_.transfer_from_ = CreateMaybeMessage< ::tpu_driver::TransferFromDeviceResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamResponse.Entry.transfer_from)
  return response_.transfer_from_;
}

// optional .tpu_driver.CompileResponse compile = 4;
inline bool StreamResponse_Entry::has_compile() const {
  return response_case() == kCompile;
}
inline void StreamResponse_Entry::set_has_compile() {
  _oneof_case_[0] = kCompile;
}
inline void StreamResponse_Entry::clear_compile() {
  if (has_compile()) {
    delete response_.compile_;
    clear_has_response();
  }
}
inline const ::tpu_driver::CompileResponse& StreamResponse_Entry::_internal_compile() const {
  return *response_.compile_;
}
inline ::tpu_driver::CompileResponse* StreamResponse_Entry::release_compile() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamResponse.Entry.compile)
  if (has_compile()) {
    clear_has_response();
      ::tpu_driver::CompileResponse* temp = response_.compile_;
    response_.compile_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tpu_driver::CompileResponse& StreamResponse_Entry::compile() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamResponse.Entry.compile)
  return has_compile()
      ? *response_.compile_
      : *reinterpret_cast< ::tpu_driver::CompileResponse*>(&::tpu_driver::_CompileResponse_default_instance_);
}
inline ::tpu_driver::CompileResponse* StreamResponse_Entry::mutable_compile() {
  if (!has_compile()) {
    clear_response();
    set_has_compile();
    response_.compile_ = CreateMaybeMessage< ::tpu_driver::CompileResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamResponse.Entry.compile)
  return response_.compile_;
}

// required .tpu_driver.StatusMessage status = 10;
inline bool StreamResponse_Entry::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StreamResponse_Entry::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StreamResponse_Entry::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StreamResponse_Entry::clear_status() {
  if (status_ != NULL) status_->Clear();
  clear_has_status();
}
inline const ::tpu_driver::StatusMessage& StreamResponse_Entry::_internal_status() const {
  return *status_;
}
inline const ::tpu_driver::StatusMessage& StreamResponse_Entry::status() const {
  const ::tpu_driver::StatusMessage* p = status_;
  // @@protoc_insertion_point(field_get:tpu_driver.StreamResponse.Entry.status)
  return p != NULL ? *p : *reinterpret_cast<const ::tpu_driver::StatusMessage*>(
      &::tpu_driver::_StatusMessage_default_instance_);
}
inline ::tpu_driver::StatusMessage* StreamResponse_Entry::release_status() {
  // @@protoc_insertion_point(field_release:tpu_driver.StreamResponse.Entry.status)
  clear_has_status();
  ::tpu_driver::StatusMessage* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::tpu_driver::StatusMessage* StreamResponse_Entry::mutable_status() {
  set_has_status();
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::tpu_driver::StatusMessage>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamResponse.Entry.status)
  return status_;
}
inline void StreamResponse_Entry::set_allocated_status(::tpu_driver::StatusMessage* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    set_has_status();
  } else {
    clear_has_status();
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamResponse.Entry.status)
}

// required int64 operation_id = 11;
inline bool StreamResponse_Entry::has_operation_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StreamResponse_Entry::set_has_operation_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StreamResponse_Entry::clear_has_operation_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StreamResponse_Entry::clear_operation_id() {
  operation_id_ = GOOGLE_LONGLONG(0);
  clear_has_operation_id();
}
inline ::google::protobuf::int64 StreamResponse_Entry::operation_id() const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamResponse.Entry.operation_id)
  return operation_id_;
}
inline void StreamResponse_Entry::set_operation_id(::google::protobuf::int64 value) {
  set_has_operation_id();
  operation_id_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.StreamResponse.Entry.operation_id)
}

inline bool StreamResponse_Entry::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
inline void StreamResponse_Entry::clear_has_response() {
  _oneof_case_[0] = RESPONSE_NOT_SET;
}
inline StreamResponse_Entry::ResponseCase StreamResponse_Entry::response_case() const {
  return StreamResponse_Entry::ResponseCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// StreamResponse

// repeated .tpu_driver.StreamResponse.Entry entry = 20;
inline int StreamResponse::entry_size() const {
  return entry_.size();
}
inline void StreamResponse::clear_entry() {
  entry_.Clear();
}
inline ::tpu_driver::StreamResponse_Entry* StreamResponse::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:tpu_driver.StreamResponse.entry)
  return entry_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamResponse_Entry >*
StreamResponse::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:tpu_driver.StreamResponse.entry)
  return &entry_;
}
inline const ::tpu_driver::StreamResponse_Entry& StreamResponse::entry(int index) const {
  // @@protoc_insertion_point(field_get:tpu_driver.StreamResponse.entry)
  return entry_.Get(index);
}
inline ::tpu_driver::StreamResponse_Entry* StreamResponse::add_entry() {
  // @@protoc_insertion_point(field_add:tpu_driver.StreamResponse.entry)
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tpu_driver::StreamResponse_Entry >&
StreamResponse::entry() const {
  // @@protoc_insertion_point(field_list:tpu_driver.StreamResponse.entry)
  return entry_;
}

// -------------------------------------------------------------------

// OpenRequest

// optional int32 client_version = 1 [default = 0];
inline bool OpenRequest::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenRequest::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenRequest::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenRequest::clear_client_version() {
  client_version_ = 0;
  clear_has_client_version();
}
inline ::google::protobuf::int32 OpenRequest::client_version() const {
  // @@protoc_insertion_point(field_get:tpu_driver.OpenRequest.client_version)
  return client_version_;
}
inline void OpenRequest::set_client_version(::google::protobuf::int32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.OpenRequest.client_version)
}

// -------------------------------------------------------------------

// OpenResponse

// required uint32 client_id = 1;
inline bool OpenResponse::has_client_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenResponse::set_has_client_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenResponse::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenResponse::clear_client_id() {
  client_id_ = 0u;
  clear_has_client_id();
}
inline ::google::protobuf::uint32 OpenResponse::client_id() const {
  // @@protoc_insertion_point(field_get:tpu_driver.OpenResponse.client_id)
  return client_id_;
}
inline void OpenResponse::set_client_id(::google::protobuf::uint32 value) {
  set_has_client_id();
  client_id_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.OpenResponse.client_id)
}

// optional int32 max_idle_time_seconds = 2 [default = 3600];
inline bool OpenResponse::has_max_idle_time_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenResponse::set_has_max_idle_time_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenResponse::clear_has_max_idle_time_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenResponse::clear_max_idle_time_seconds() {
  max_idle_time_seconds_ = 3600;
  clear_has_max_idle_time_seconds();
}
inline ::google::protobuf::int32 OpenResponse::max_idle_time_seconds() const {
  // @@protoc_insertion_point(field_get:tpu_driver.OpenResponse.max_idle_time_seconds)
  return max_idle_time_seconds_;
}
inline void OpenResponse::set_max_idle_time_seconds(::google::protobuf::int32 value) {
  set_has_max_idle_time_seconds();
  max_idle_time_seconds_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.OpenResponse.max_idle_time_seconds)
}

// -------------------------------------------------------------------

// CloseRequest

// required fixed32 client_id = 1;
inline bool CloseRequest::has_client_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloseRequest::set_has_client_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloseRequest::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloseRequest::clear_client_id() {
  client_id_ = 0u;
  clear_has_client_id();
}
inline ::google::protobuf::uint32 CloseRequest::client_id() const {
  // @@protoc_insertion_point(field_get:tpu_driver.CloseRequest.client_id)
  return client_id_;
}
inline void CloseRequest::set_client_id(::google::protobuf::uint32 value) {
  set_has_client_id();
  client_id_ = value;
  // @@protoc_insertion_point(field_set:tpu_driver.CloseRequest.client_id)
}

// -------------------------------------------------------------------

// CloseResponse

// -------------------------------------------------------------------

// ResetRequest

// -------------------------------------------------------------------

// ResetResponse

// -------------------------------------------------------------------

// QuerySystemInfoRequest

// -------------------------------------------------------------------

// QuerySystemInfoResponse

// required .tpu_driver.SystemInfo system_info = 1;
inline bool QuerySystemInfoResponse::has_system_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuerySystemInfoResponse::set_has_system_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuerySystemInfoResponse::clear_has_system_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::tpu_driver::SystemInfo& QuerySystemInfoResponse::_internal_system_info() const {
  return *system_info_;
}
inline const ::tpu_driver::SystemInfo& QuerySystemInfoResponse::system_info() const {
  const ::tpu_driver::SystemInfo* p = system_info_;
  // @@protoc_insertion_point(field_get:tpu_driver.QuerySystemInfoResponse.system_info)
  return p != NULL ? *p : *reinterpret_cast<const ::tpu_driver::SystemInfo*>(
      &::tpu_driver::_SystemInfo_default_instance_);
}
inline ::tpu_driver::SystemInfo* QuerySystemInfoResponse::release_system_info() {
  // @@protoc_insertion_point(field_release:tpu_driver.QuerySystemInfoResponse.system_info)
  clear_has_system_info();
  ::tpu_driver::SystemInfo* temp = system_info_;
  system_info_ = NULL;
  return temp;
}
inline ::tpu_driver::SystemInfo* QuerySystemInfoResponse::mutable_system_info() {
  set_has_system_info();
  if (system_info_ == NULL) {
    auto* p = CreateMaybeMessage<::tpu_driver::SystemInfo>(GetArenaNoVirtual());
    system_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tpu_driver.QuerySystemInfoResponse.system_info)
  return system_info_;
}
inline void QuerySystemInfoResponse::set_allocated_system_info(::tpu_driver::SystemInfo* system_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(system_info_);
  }
  if (system_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_info, submessage_arena);
    }
    set_has_system_info();
  } else {
    clear_has_system_info();
  }
  system_info_ = system_info;
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.QuerySystemInfoResponse.system_info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tpu_driver

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto
