// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/python/tpu_driver/tpu_service.proto

#include "tensorflow/compiler/xla/python/tpu_driver/tpu_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_SystemInfo;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto
namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AllocateTupleRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeallocateRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LoadProgramRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StatusMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransferFromDeviceRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransferFromDeviceResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransferFromDeviceToDeviceRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransferToDeviceRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UnloadProgramRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<10> scc_info_StreamRequest_Entry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllocateRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CompileRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CompileResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CompiledProgramMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExecuteRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_StreamResponse_Entry;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto
namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_HloProto;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto
namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAssignmentProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProgramShapeProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShapeProto;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto
namespace tpu_driver {
class StatusMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusMessage>
      _instance;
} _StatusMessage_default_instance_;
class AllocateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocateRequest>
      _instance;
  ::google::protobuf::int64 num_bytes_;
  const ::xla::ShapeProto* shape_;
} _AllocateRequest_default_instance_;
class AllocateTupleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocateTupleRequest>
      _instance;
} _AllocateTupleRequest_default_instance_;
class DeallocateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeallocateRequest>
      _instance;
} _DeallocateRequest_default_instance_;
class TransferToDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferToDeviceRequest>
      _instance;
} _TransferToDeviceRequest_default_instance_;
class TransferFromDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferFromDeviceRequest>
      _instance;
} _TransferFromDeviceRequest_default_instance_;
class TransferFromDeviceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferFromDeviceResponse>
      _instance;
} _TransferFromDeviceResponse_default_instance_;
class TransferFromDeviceToDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferFromDeviceToDeviceRequest>
      _instance;
} _TransferFromDeviceToDeviceRequest_default_instance_;
class CompileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompileRequest>
      _instance;
} _CompileRequest_default_instance_;
class CompiledProgramMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompiledProgramMetadata>
      _instance;
} _CompiledProgramMetadata_default_instance_;
class CompileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompileResponse>
      _instance;
} _CompileResponse_default_instance_;
class LoadProgramRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadProgramRequest>
      _instance;
} _LoadProgramRequest_default_instance_;
class UnloadProgramRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnloadProgramRequest>
      _instance;
} _UnloadProgramRequest_default_instance_;
class ExecuteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteRequest>
      _instance;
} _ExecuteRequest_default_instance_;
class StreamRequest_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamRequest_Entry>
      _instance;
  const ::tpu_driver::AllocateRequest* alloc_;
  const ::tpu_driver::AllocateTupleRequest* alloc_tuple_;
  const ::tpu_driver::DeallocateRequest* dealloc_;
  const ::tpu_driver::TransferToDeviceRequest* transfer_to_;
  const ::tpu_driver::TransferFromDeviceRequest* transfer_from_;
  const ::tpu_driver::TransferFromDeviceToDeviceRequest* transfer_from_to_;
  const ::tpu_driver::CompileRequest* compile_;
  const ::tpu_driver::LoadProgramRequest* load_;
  const ::tpu_driver::UnloadProgramRequest* unload_;
  const ::tpu_driver::ExecuteRequest* execute_;
} _StreamRequest_Entry_default_instance_;
class StreamRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamRequest>
      _instance;
} _StreamRequest_default_instance_;
class StreamResponse_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamResponse_Entry>
      _instance;
  const ::tpu_driver::TransferFromDeviceResponse* transfer_from_;
  const ::tpu_driver::CompileResponse* compile_;
} _StreamResponse_Entry_default_instance_;
class StreamResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamResponse>
      _instance;
} _StreamResponse_default_instance_;
class OpenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenRequest>
      _instance;
} _OpenRequest_default_instance_;
class OpenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenResponse>
      _instance;
} _OpenResponse_default_instance_;
class CloseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseRequest>
      _instance;
} _CloseRequest_default_instance_;
class CloseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseResponse>
      _instance;
} _CloseResponse_default_instance_;
class ResetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetRequest>
      _instance;
} _ResetRequest_default_instance_;
class ResetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetResponse>
      _instance;
} _ResetResponse_default_instance_;
class QuerySystemInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuerySystemInfoRequest>
      _instance;
} _QuerySystemInfoRequest_default_instance_;
class QuerySystemInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuerySystemInfoResponse>
      _instance;
} _QuerySystemInfoResponse_default_instance_;
}  // namespace tpu_driver
namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto {
static void InitDefaultsStatusMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_StatusMessage_default_instance_;
    new (ptr) ::tpu_driver::StatusMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::StatusMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StatusMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatusMessage}, {}};

static void InitDefaultsAllocateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_AllocateRequest_default_instance_;
    new (ptr) ::tpu_driver::AllocateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::AllocateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllocateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllocateRequest}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsAllocateTupleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_AllocateTupleRequest_default_instance_;
    new (ptr) ::tpu_driver::AllocateTupleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::AllocateTupleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AllocateTupleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAllocateTupleRequest}, {}};

static void InitDefaultsDeallocateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_DeallocateRequest_default_instance_;
    new (ptr) ::tpu_driver::DeallocateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::DeallocateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeallocateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeallocateRequest}, {}};

static void InitDefaultsTransferToDeviceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_TransferToDeviceRequest_default_instance_;
    new (ptr) ::tpu_driver::TransferToDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::TransferToDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferToDeviceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferToDeviceRequest}, {}};

static void InitDefaultsTransferFromDeviceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_TransferFromDeviceRequest_default_instance_;
    new (ptr) ::tpu_driver::TransferFromDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::TransferFromDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferFromDeviceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferFromDeviceRequest}, {}};

static void InitDefaultsTransferFromDeviceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_TransferFromDeviceResponse_default_instance_;
    new (ptr) ::tpu_driver::TransferFromDeviceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::TransferFromDeviceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferFromDeviceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferFromDeviceResponse}, {}};

static void InitDefaultsTransferFromDeviceToDeviceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_TransferFromDeviceToDeviceRequest_default_instance_;
    new (ptr) ::tpu_driver::TransferFromDeviceToDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::TransferFromDeviceToDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferFromDeviceToDeviceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferFromDeviceToDeviceRequest}, {}};

static void InitDefaultsCompileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_CompileRequest_default_instance_;
    new (ptr) ::tpu_driver::CompileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::CompileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompileRequest}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloProto.base,}};

static void InitDefaultsCompiledProgramMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_CompiledProgramMetadata_default_instance_;
    new (ptr) ::tpu_driver::CompiledProgramMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::CompiledProgramMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompiledProgramMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompiledProgramMetadata}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ProgramShapeProto.base,}};

static void InitDefaultsCompileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_CompileResponse_default_instance_;
    new (ptr) ::tpu_driver::CompileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::CompileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompileResponse}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompiledProgramMetadata.base,}};

static void InitDefaultsLoadProgramRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_LoadProgramRequest_default_instance_;
    new (ptr) ::tpu_driver::LoadProgramRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::LoadProgramRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoadProgramRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoadProgramRequest}, {}};

static void InitDefaultsUnloadProgramRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_UnloadProgramRequest_default_instance_;
    new (ptr) ::tpu_driver::UnloadProgramRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::UnloadProgramRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnloadProgramRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnloadProgramRequest}, {}};

static void InitDefaultsExecuteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_ExecuteRequest_default_instance_;
    new (ptr) ::tpu_driver::ExecuteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::ExecuteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExecuteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExecuteRequest}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto.base,}};

static void InitDefaultsStreamRequest_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_StreamRequest_Entry_default_instance_;
    new (ptr) ::tpu_driver::StreamRequest_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::StreamRequest_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<10> scc_info_StreamRequest_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 10, InitDefaultsStreamRequest_Entry}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_AllocateRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_AllocateTupleRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_DeallocateRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferToDeviceRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceToDeviceRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompileRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_LoadProgramRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_UnloadProgramRequest.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_ExecuteRequest.base,}};

static void InitDefaultsStreamRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_StreamRequest_default_instance_;
    new (ptr) ::tpu_driver::StreamRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::StreamRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StreamRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStreamRequest}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamRequest_Entry.base,}};

static void InitDefaultsStreamResponse_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_StreamResponse_Entry_default_instance_;
    new (ptr) ::tpu_driver::StreamResponse_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::StreamResponse_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_StreamResponse_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsStreamResponse_Entry}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceResponse.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompileResponse.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StatusMessage.base,}};

static void InitDefaultsStreamResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_StreamResponse_default_instance_;
    new (ptr) ::tpu_driver::StreamResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::StreamResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StreamResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStreamResponse}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamResponse_Entry.base,}};

static void InitDefaultsOpenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_OpenRequest_default_instance_;
    new (ptr) ::tpu_driver::OpenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::OpenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpenRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpenRequest}, {}};

static void InitDefaultsOpenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_OpenResponse_default_instance_;
    new (ptr) ::tpu_driver::OpenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::OpenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpenResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpenResponse}, {}};

static void InitDefaultsCloseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_CloseRequest_default_instance_;
    new (ptr) ::tpu_driver::CloseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::CloseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CloseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCloseRequest}, {}};

static void InitDefaultsCloseResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_CloseResponse_default_instance_;
    new (ptr) ::tpu_driver::CloseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::CloseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CloseResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCloseResponse}, {}};

static void InitDefaultsResetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_ResetRequest_default_instance_;
    new (ptr) ::tpu_driver::ResetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::ResetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetRequest}, {}};

static void InitDefaultsResetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_ResetResponse_default_instance_;
    new (ptr) ::tpu_driver::ResetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::ResetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetResponse}, {}};

static void InitDefaultsQuerySystemInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_QuerySystemInfoRequest_default_instance_;
    new (ptr) ::tpu_driver::QuerySystemInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::QuerySystemInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuerySystemInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuerySystemInfoRequest}, {}};

static void InitDefaultsQuerySystemInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_QuerySystemInfoResponse_default_instance_;
    new (ptr) ::tpu_driver::QuerySystemInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::QuerySystemInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QuerySystemInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQuerySystemInfoResponse}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_SystemInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StatusMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllocateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllocateTupleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeallocateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferToDeviceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferFromDeviceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferFromDeviceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferFromDeviceToDeviceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompiledProgramMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoadProgramRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnloadProgramRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamRequest_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamResponse_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloseResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuerySystemInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuerySystemInfoResponse.base);
}

::google::protobuf::Metadata file_level_metadata[26];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StatusMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StatusMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StatusMessage, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StatusMessage, message_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateRequest, core_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateRequest, region_),
  offsetof(::tpu_driver::AllocateRequestDefaultTypeInternal, num_bytes_),
  offsetof(::tpu_driver::AllocateRequestDefaultTypeInternal, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateRequest, size_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateTupleRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateTupleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateTupleRequest, core_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateTupleRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::AllocateTupleRequest, children_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::DeallocateRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::DeallocateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::DeallocateRequest, handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferToDeviceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferToDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferToDeviceRequest, target_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferToDeviceRequest, data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceRequest, source_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceResponse, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceToDeviceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceToDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceToDeviceRequest, source_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TransferFromDeviceToDeviceRequest, target_handle_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompileRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompileRequest, hlo_program_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompileRequest, num_replicas_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompiledProgramMetadata, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompiledProgramMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompiledProgramMetadata, program_shape_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CompileResponse, metadata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::LoadProgramRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::LoadProgramRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::LoadProgramRequest, core_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::LoadProgramRequest, compiled_program_handle_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::UnloadProgramRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::UnloadProgramRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::UnloadProgramRequest, loaded_program_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ExecuteRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ExecuteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ExecuteRequest, loaded_program_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ExecuteRequest, input_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ExecuteRequest, output_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ExecuteRequest, device_assignment_),
  1,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest_Entry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, alloc_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, alloc_tuple_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, dealloc_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, transfer_to_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, transfer_from_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, transfer_from_to_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, compile_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, load_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, unload_),
  offsetof(::tpu_driver::StreamRequest_EntryDefaultTypeInternal, execute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest_Entry, wait_for_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest_Entry, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest_Entry, thread_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest_Entry, request_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamRequest, entry_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse_Entry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::tpu_driver::StreamResponse_EntryDefaultTypeInternal, transfer_from_),
  offsetof(::tpu_driver::StreamResponse_EntryDefaultTypeInternal, compile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse_Entry, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse_Entry, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse_Entry, response_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::StreamResponse, entry_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::OpenRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::OpenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::OpenRequest, client_version_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::OpenResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::OpenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::OpenResponse, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::OpenResponse, max_idle_time_seconds_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CloseRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CloseRequest, client_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CloseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CloseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ResetRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ResetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ResetResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ResetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::QuerySystemInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::QuerySystemInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::QuerySystemInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::QuerySystemInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::QuerySystemInfoResponse, system_info_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::tpu_driver::StatusMessage)},
  { 9, 19, sizeof(::tpu_driver::AllocateRequest)},
  { 23, 31, sizeof(::tpu_driver::AllocateTupleRequest)},
  { 34, 40, sizeof(::tpu_driver::DeallocateRequest)},
  { 41, 48, sizeof(::tpu_driver::TransferToDeviceRequest)},
  { 50, 56, sizeof(::tpu_driver::TransferFromDeviceRequest)},
  { 57, 63, sizeof(::tpu_driver::TransferFromDeviceResponse)},
  { 64, 71, sizeof(::tpu_driver::TransferFromDeviceToDeviceRequest)},
  { 73, 80, sizeof(::tpu_driver::CompileRequest)},
  { 82, 88, sizeof(::tpu_driver::CompiledProgramMetadata)},
  { 89, 95, sizeof(::tpu_driver::CompileResponse)},
  { 96, 103, sizeof(::tpu_driver::LoadProgramRequest)},
  { 105, 111, sizeof(::tpu_driver::UnloadProgramRequest)},
  { 112, 121, sizeof(::tpu_driver::ExecuteRequest)},
  { 125, 144, sizeof(::tpu_driver::StreamRequest_Entry)},
  { 157, 163, sizeof(::tpu_driver::StreamRequest)},
  { 164, 174, sizeof(::tpu_driver::StreamResponse_Entry)},
  { 178, 184, sizeof(::tpu_driver::StreamResponse)},
  { 185, 191, sizeof(::tpu_driver::OpenRequest)},
  { 192, 199, sizeof(::tpu_driver::OpenResponse)},
  { 201, 207, sizeof(::tpu_driver::CloseRequest)},
  { 208, 213, sizeof(::tpu_driver::CloseResponse)},
  { 213, 218, sizeof(::tpu_driver::ResetRequest)},
  { 218, 223, sizeof(::tpu_driver::ResetResponse)},
  { 223, 228, sizeof(::tpu_driver::QuerySystemInfoRequest)},
  { 228, 234, sizeof(::tpu_driver::QuerySystemInfoResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_StatusMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_AllocateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_AllocateTupleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_DeallocateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_TransferToDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_TransferFromDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_TransferFromDeviceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_TransferFromDeviceToDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_CompileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_CompiledProgramMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_CompileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_LoadProgramRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_UnloadProgramRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_ExecuteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_StreamRequest_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_StreamRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_StreamResponse_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_StreamResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_OpenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_OpenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_CloseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_CloseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_ResetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_ResetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_QuerySystemInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_QuerySystemInfoResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/compiler/xla/python/tpu_driver/tpu_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n;tensorflow/compiler/xla/python/tpu_dri"
      "ver/tpu_service.proto\022\ntpu_driver\032:tenso"
      "rflow/compiler/xla/python/tpu_driver/tpu"
      "_driver.proto\032)tensorflow/compiler/xla/s"
      "ervice/hlo.proto\032&tensorflow/compiler/xl"
      "a/xla_data.proto\".\n\rStatusMessage\022\014\n\004cod"
      "e\030\001 \002(\005\022\017\n\007message\030\002 \001(\t\"\213\001\n\017AllocateReq"
      "uest\022\017\n\007core_id\030\001 \002(\005\022(\n\006region\030\002 \002(\0162\030."
      "tpu_driver.MemoryRegion\022\023\n\tnum_bytes\030\003 \001"
      "(\003H\000\022 \n\005shape\030\004 \001(\0132\017.xla.ShapeProtoH\000B\006"
      "\n\004size\"c\n\024AllocateTupleRequest\022\017\n\007core_i"
      "d\030\001 \002(\005\022(\n\006region\030\002 \002(\0162\030.tpu_driver.Mem"
      "oryRegion\022\020\n\010children\030\003 \003(\003\"#\n\021Deallocat"
      "eRequest\022\016\n\006handle\030\001 \002(\003\">\n\027TransferToDe"
      "viceRequest\022\025\n\rtarget_handle\030\001 \002(\003\022\014\n\004da"
      "ta\030\002 \002(\014\"2\n\031TransferFromDeviceRequest\022\025\n"
      "\rsource_handle\030\001 \002(\003\"*\n\032TransferFromDevi"
      "ceResponse\022\014\n\004data\030\002 \002(\014\"Q\n!TransferFrom"
      "DeviceToDeviceRequest\022\025\n\rsource_handle\030\001"
      " \002(\003\022\025\n\rtarget_handle\030\002 \002(\003\"J\n\016CompileRe"
      "quest\022\"\n\013hlo_program\030\001 \002(\0132\r.xla.HloProt"
      "o\022\024\n\014num_replicas\030\002 \001(\003\"H\n\027CompiledProgr"
      "amMetadata\022-\n\rprogram_shape\030\001 \002(\0132\026.xla."
      "ProgramShapeProto\"H\n\017CompileResponse\0225\n\010"
      "metadata\030\001 \002(\0132#.tpu_driver.CompiledProg"
      "ramMetadata\"F\n\022LoadProgramRequest\022\017\n\007cor"
      "e_id\030\001 \002(\005\022\037\n\027compiled_program_handle\030\002 "
      "\002(\003\"5\n\024UnloadProgramRequest\022\035\n\025loaded_pr"
      "ogram_handle\030\001 \002(\003\"\223\001\n\016ExecuteRequest\022\035\n"
      "\025loaded_program_handle\030\001 \002(\003\022\024\n\014input_ha"
      "ndle\030\002 \003(\003\022\025\n\routput_handle\030\003 \003(\003\0225\n\021dev"
      "ice_assignment\030\004 \001(\0132\032.xla.DeviceAssignm"
      "entProto\"\264\005\n\rStreamRequest\022.\n\005entry\030\036 \003("
      "\0132\037.tpu_driver.StreamRequest.Entry\032\362\004\n\005E"
      "ntry\022,\n\005alloc\030\001 \001(\0132\033.tpu_driver.Allocat"
      "eRequestH\000\0227\n\013alloc_tuple\030\002 \001(\0132 .tpu_dr"
      "iver.AllocateTupleRequestH\000\0220\n\007dealloc\030\003"
      " \001(\0132\035.tpu_driver.DeallocateRequestH\000\022:\n"
      "\013transfer_to\030\004 \001(\0132#.tpu_driver.Transfer"
      "ToDeviceRequestH\000\022>\n\rtransfer_from\030\005 \001(\013"
      "2%.tpu_driver.TransferFromDeviceRequestH"
      "\000\022I\n\020transfer_from_to\030\n \001(\0132-.tpu_driver"
      ".TransferFromDeviceToDeviceRequestH\000\022-\n\007"
      "compile\030\006 \001(\0132\032.tpu_driver.CompileReques"
      "tH\000\022.\n\004load\030\007 \001(\0132\036.tpu_driver.LoadProgr"
      "amRequestH\000\0222\n\006unload\030\010 \001(\0132 .tpu_driver"
      ".UnloadProgramRequestH\000\022-\n\007execute\030\t \001(\013"
      "2\032.tpu_driver.ExecuteRequestH\000\022\023\n\013wait_f"
      "or_id\030\024 \003(\003\022\024\n\014operation_id\030\025 \002(\003\022\021\n\tthr"
      "ead_id\030\026 \001(\003B\t\n\007request\"\211\002\n\016StreamRespon"
      "se\022/\n\005entry\030\024 \003(\0132 .tpu_driver.StreamRes"
      "ponse.Entry\032\305\001\n\005Entry\022\?\n\rtransfer_from\030\003"
      " \001(\0132&.tpu_driver.TransferFromDeviceResp"
      "onseH\000\022.\n\007compile\030\004 \001(\0132\033.tpu_driver.Com"
      "pileResponseH\000\022)\n\006status\030\n \002(\0132\031.tpu_dri"
      "ver.StatusMessage\022\024\n\014operation_id\030\013 \002(\003B"
      "\n\n\010response\"(\n\013OpenRequest\022\031\n\016client_ver"
      "sion\030\001 \001(\005:\0010\"F\n\014OpenResponse\022\021\n\tclient_"
      "id\030\001 \002(\r\022#\n\025max_idle_time_seconds\030\002 \001(\005:"
      "\0043600\"!\n\014CloseRequest\022\021\n\tclient_id\030\001 \002(\007"
      "\"\017\n\rCloseResponse\"\016\n\014ResetRequest\"\017\n\rRes"
      "etResponse\"\030\n\026QuerySystemInfoRequest\"F\n\027"
      "QuerySystemInfoResponse\022+\n\013system_info\030\001"
      " \002(\0132\026.tpu_driver.SystemInfo2\357\002\n\016CloudTp"
      "uDriver\0229\n\004Open\022\027.tpu_driver.OpenRequest"
      "\032\030.tpu_driver.OpenResponse\022<\n\005Close\022\030.tp"
      "u_driver.CloseRequest\032\031.tpu_driver.Close"
      "Response\022<\n\005Reset\022\030.tpu_driver.ResetRequ"
      "est\032\031.tpu_driver.ResetResponse\022Z\n\017QueryS"
      "ystemInfo\022\".tpu_driver.QuerySystemInfoRe"
      "quest\032#.tpu_driver.QuerySystemInfoRespon"
      "se\022J\n\rStreamExecute\022\031.tpu_driver.StreamR"
      "equest\032\032.tpu_driver.StreamResponse(\0010\001B\002"
      "H\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2922);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/compiler/xla/python/tpu_driver/tpu_service.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto
namespace tpu_driver {

// ===================================================================

void StatusMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusMessage::kCodeFieldNumber;
const int StatusMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusMessage::StatusMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StatusMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.StatusMessage)
}
StatusMessage::StatusMessage(const StatusMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.StatusMessage)
}

void StatusMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

StatusMessage::~StatusMessage() {
  // @@protoc_insertion_point(destructor:tpu_driver.StatusMessage)
  SharedDtor();
}

void StatusMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StatusMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StatusMessage::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusMessage& StatusMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StatusMessage.base);
  return *internal_default_instance();
}


void StatusMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.StatusMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StatusMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.StatusMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tpu_driver.StatusMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.StatusMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.StatusMessage)
  return false;
#undef DO_
}

void StatusMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.StatusMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tpu_driver.StatusMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.StatusMessage)
}

::google::protobuf::uint8* StatusMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.StatusMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tpu_driver.StatusMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.StatusMessage)
  return target;
}

size_t StatusMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.StatusMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // optional string message = 2;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.StatusMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.StatusMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.StatusMessage)
    MergeFrom(*source);
  }
}

void StatusMessage::MergeFrom(const StatusMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.StatusMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StatusMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.StatusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusMessage::CopyFrom(const StatusMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.StatusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void StatusMessage::Swap(StatusMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusMessage::InternalSwap(StatusMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StatusMessage::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllocateRequest::InitAsDefaultInstance() {
  ::tpu_driver::_AllocateRequest_default_instance_.num_bytes_ = GOOGLE_LONGLONG(0);
  ::tpu_driver::_AllocateRequest_default_instance_.shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void AllocateRequest::set_allocated_shape(::xla::ShapeProto* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_size();
  if (shape) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(shape)->GetArena();
    if (message_arena != submessage_arena) {
      shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shape, submessage_arena);
    }
    set_has_shape();
    size_.shape_ = shape;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.AllocateRequest.shape)
}
void AllocateRequest::clear_shape() {
  if (has_shape()) {
    delete size_.shape_;
    clear_has_size();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocateRequest::kCoreIdFieldNumber;
const int AllocateRequest::kRegionFieldNumber;
const int AllocateRequest::kNumBytesFieldNumber;
const int AllocateRequest::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocateRequest::AllocateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_AllocateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.AllocateRequest)
}
AllocateRequest::AllocateRequest(const AllocateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&core_id_, &from.core_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&region_) -
    reinterpret_cast<char*>(&core_id_)) + sizeof(region_));
  clear_has_size();
  switch (from.size_case()) {
    case kNumBytes: {
      set_num_bytes(from.num_bytes());
      break;
    }
    case kShape: {
      mutable_shape()->::xla::ShapeProto::MergeFrom(from.shape());
      break;
    }
    case SIZE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tpu_driver.AllocateRequest)
}

void AllocateRequest::SharedCtor() {
  core_id_ = 0;
  region_ = 1;
  clear_has_size();
}

AllocateRequest::~AllocateRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.AllocateRequest)
  SharedDtor();
}

void AllocateRequest::SharedDtor() {
  if (has_size()) {
    clear_size();
  }
}

void AllocateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllocateRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllocateRequest& AllocateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_AllocateRequest.base);
  return *internal_default_instance();
}


void AllocateRequest::clear_size() {
// @@protoc_insertion_point(one_of_clear_start:tpu_driver.AllocateRequest)
  switch (size_case()) {
    case kNumBytes: {
      // No need to clear
      break;
    }
    case kShape: {
      delete size_.shape_;
      break;
    }
    case SIZE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SIZE_NOT_SET;
}


void AllocateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.AllocateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    core_id_ = 0;
    region_ = 1;
  }
  clear_size();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllocateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.AllocateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 core_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_core_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &core_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .tpu_driver.MemoryRegion region = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tpu_driver::MemoryRegion_IsValid(value)) {
            set_region(static_cast< ::tpu_driver::MemoryRegion >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 num_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_.num_bytes_)));
          set_has_num_bytes();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .xla.ShapeProto shape = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.AllocateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.AllocateRequest)
  return false;
#undef DO_
}

void AllocateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.AllocateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 core_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->core_id(), output);
  }

  // required .tpu_driver.MemoryRegion region = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->region(), output);
  }

  switch (size_case()) {
    case kNumBytes:
      ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->num_bytes(), output);
      break;
    case kShape:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_shape(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.AllocateRequest)
}

::google::protobuf::uint8* AllocateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.AllocateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 core_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->core_id(), target);
  }

  // required .tpu_driver.MemoryRegion region = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->region(), target);
  }

  switch (size_case()) {
    case kNumBytes:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->num_bytes(), target);
      break;
    case kShape:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_shape(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.AllocateRequest)
  return target;
}

size_t AllocateRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tpu_driver.AllocateRequest)
  size_t total_size = 0;

  if (has_core_id()) {
    // required int32 core_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->core_id());
  }

  if (has_region()) {
    // required .tpu_driver.MemoryRegion region = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->region());
  }

  return total_size;
}
size_t AllocateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.AllocateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 core_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->core_id());

    // required .tpu_driver.MemoryRegion region = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->region());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  switch (size_case()) {
    // optional int64 num_bytes = 3;
    case kNumBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->num_bytes());
      break;
    }
    // optional .xla.ShapeProto shape = 4;
    case kShape: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *size_.shape_);
      break;
    }
    case SIZE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllocateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.AllocateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.AllocateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.AllocateRequest)
    MergeFrom(*source);
  }
}

void AllocateRequest::MergeFrom(const AllocateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.AllocateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      core_id_ = from.core_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      region_ = from.region_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.size_case()) {
    case kNumBytes: {
      set_num_bytes(from.num_bytes());
      break;
    }
    case kShape: {
      mutable_shape()->::xla::ShapeProto::MergeFrom(from.shape());
      break;
    }
    case SIZE_NOT_SET: {
      break;
    }
  }
}

void AllocateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.AllocateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateRequest::CopyFrom(const AllocateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.AllocateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AllocateRequest::Swap(AllocateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocateRequest::InternalSwap(AllocateRequest* other) {
  using std::swap;
  swap(core_id_, other->core_id_);
  swap(region_, other->region_);
  swap(size_, other->size_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllocateRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllocateTupleRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocateTupleRequest::kCoreIdFieldNumber;
const int AllocateTupleRequest::kRegionFieldNumber;
const int AllocateTupleRequest::kChildrenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocateTupleRequest::AllocateTupleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_AllocateTupleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.AllocateTupleRequest)
}
AllocateTupleRequest::AllocateTupleRequest(const AllocateTupleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      children_(from.children_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&core_id_, &from.core_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&region_) -
    reinterpret_cast<char*>(&core_id_)) + sizeof(region_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.AllocateTupleRequest)
}

void AllocateTupleRequest::SharedCtor() {
  core_id_ = 0;
  region_ = 1;
}

AllocateTupleRequest::~AllocateTupleRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.AllocateTupleRequest)
  SharedDtor();
}

void AllocateTupleRequest::SharedDtor() {
}

void AllocateTupleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllocateTupleRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllocateTupleRequest& AllocateTupleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_AllocateTupleRequest.base);
  return *internal_default_instance();
}


void AllocateTupleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.AllocateTupleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    core_id_ = 0;
    region_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllocateTupleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.AllocateTupleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 core_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_core_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &core_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .tpu_driver.MemoryRegion region = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tpu_driver::MemoryRegion_IsValid(value)) {
            set_region(static_cast< ::tpu_driver::MemoryRegion >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 children = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_children())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_children())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.AllocateTupleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.AllocateTupleRequest)
  return false;
#undef DO_
}

void AllocateTupleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.AllocateTupleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 core_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->core_id(), output);
  }

  // required .tpu_driver.MemoryRegion region = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->region(), output);
  }

  // repeated int64 children = 3;
  for (int i = 0, n = this->children_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->children(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.AllocateTupleRequest)
}

::google::protobuf::uint8* AllocateTupleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.AllocateTupleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 core_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->core_id(), target);
  }

  // required .tpu_driver.MemoryRegion region = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->region(), target);
  }

  // repeated int64 children = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->children_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.AllocateTupleRequest)
  return target;
}

size_t AllocateTupleRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tpu_driver.AllocateTupleRequest)
  size_t total_size = 0;

  if (has_core_id()) {
    // required int32 core_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->core_id());
  }

  if (has_region()) {
    // required .tpu_driver.MemoryRegion region = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->region());
  }

  return total_size;
}
size_t AllocateTupleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.AllocateTupleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 core_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->core_id());

    // required .tpu_driver.MemoryRegion region = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->region());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int64 children = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->children_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->children_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllocateTupleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.AllocateTupleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocateTupleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocateTupleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.AllocateTupleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.AllocateTupleRequest)
    MergeFrom(*source);
  }
}

void AllocateTupleRequest::MergeFrom(const AllocateTupleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.AllocateTupleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      core_id_ = from.core_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      region_ = from.region_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AllocateTupleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.AllocateTupleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateTupleRequest::CopyFrom(const AllocateTupleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.AllocateTupleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateTupleRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AllocateTupleRequest::Swap(AllocateTupleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocateTupleRequest::InternalSwap(AllocateTupleRequest* other) {
  using std::swap;
  children_.InternalSwap(&other->children_);
  swap(core_id_, other->core_id_);
  swap(region_, other->region_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllocateTupleRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeallocateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeallocateRequest::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeallocateRequest::DeallocateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_DeallocateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.DeallocateRequest)
}
DeallocateRequest::DeallocateRequest(const DeallocateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_ = from.handle_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.DeallocateRequest)
}

void DeallocateRequest::SharedCtor() {
  handle_ = GOOGLE_LONGLONG(0);
}

DeallocateRequest::~DeallocateRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.DeallocateRequest)
  SharedDtor();
}

void DeallocateRequest::SharedDtor() {
}

void DeallocateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeallocateRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeallocateRequest& DeallocateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_DeallocateRequest.base);
  return *internal_default_instance();
}


void DeallocateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.DeallocateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeallocateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.DeallocateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.DeallocateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.DeallocateRequest)
  return false;
#undef DO_
}

void DeallocateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.DeallocateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.DeallocateRequest)
}

::google::protobuf::uint8* DeallocateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.DeallocateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.DeallocateRequest)
  return target;
}

size_t DeallocateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.DeallocateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 handle = 1;
  if (has_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->handle());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeallocateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.DeallocateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeallocateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeallocateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.DeallocateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.DeallocateRequest)
    MergeFrom(*source);
  }
}

void DeallocateRequest::MergeFrom(const DeallocateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.DeallocateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_handle()) {
    set_handle(from.handle());
  }
}

void DeallocateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.DeallocateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeallocateRequest::CopyFrom(const DeallocateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.DeallocateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeallocateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DeallocateRequest::Swap(DeallocateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeallocateRequest::InternalSwap(DeallocateRequest* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeallocateRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferToDeviceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferToDeviceRequest::kTargetHandleFieldNumber;
const int TransferToDeviceRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferToDeviceRequest::TransferToDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferToDeviceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.TransferToDeviceRequest)
}
TransferToDeviceRequest::TransferToDeviceRequest(const TransferToDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  target_handle_ = from.target_handle_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.TransferToDeviceRequest)
}

void TransferToDeviceRequest::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_handle_ = GOOGLE_LONGLONG(0);
}

TransferToDeviceRequest::~TransferToDeviceRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.TransferToDeviceRequest)
  SharedDtor();
}

void TransferToDeviceRequest::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferToDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferToDeviceRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferToDeviceRequest& TransferToDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferToDeviceRequest.base);
  return *internal_default_instance();
}


void TransferToDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.TransferToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  target_handle_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransferToDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.TransferToDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 target_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.TransferToDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.TransferToDeviceRequest)
  return false;
#undef DO_
}

void TransferToDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.TransferToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 target_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->target_handle(), output);
  }

  // required bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.TransferToDeviceRequest)
}

::google::protobuf::uint8* TransferToDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.TransferToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 target_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->target_handle(), target);
  }

  // required bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.TransferToDeviceRequest)
  return target;
}

size_t TransferToDeviceRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tpu_driver.TransferToDeviceRequest)
  size_t total_size = 0;

  if (has_data()) {
    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (has_target_handle()) {
    // required int64 target_handle = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target_handle());
  }

  return total_size;
}
size_t TransferToDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.TransferToDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

    // required int64 target_handle = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target_handle());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferToDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.TransferToDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferToDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferToDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.TransferToDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.TransferToDeviceRequest)
    MergeFrom(*source);
  }
}

void TransferToDeviceRequest::MergeFrom(const TransferToDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.TransferToDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      target_handle_ = from.target_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransferToDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.TransferToDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferToDeviceRequest::CopyFrom(const TransferToDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.TransferToDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferToDeviceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TransferToDeviceRequest::Swap(TransferToDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferToDeviceRequest::InternalSwap(TransferToDeviceRequest* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_handle_, other->target_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferToDeviceRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferFromDeviceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferFromDeviceRequest::kSourceHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferFromDeviceRequest::TransferFromDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.TransferFromDeviceRequest)
}
TransferFromDeviceRequest::TransferFromDeviceRequest(const TransferFromDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_handle_ = from.source_handle_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.TransferFromDeviceRequest)
}

void TransferFromDeviceRequest::SharedCtor() {
  source_handle_ = GOOGLE_LONGLONG(0);
}

TransferFromDeviceRequest::~TransferFromDeviceRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.TransferFromDeviceRequest)
  SharedDtor();
}

void TransferFromDeviceRequest::SharedDtor() {
}

void TransferFromDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferFromDeviceRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferFromDeviceRequest& TransferFromDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceRequest.base);
  return *internal_default_instance();
}


void TransferFromDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.TransferFromDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_handle_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransferFromDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.TransferFromDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 source_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_source_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.TransferFromDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.TransferFromDeviceRequest)
  return false;
#undef DO_
}

void TransferFromDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.TransferFromDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 source_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->source_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.TransferFromDeviceRequest)
}

::google::protobuf::uint8* TransferFromDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.TransferFromDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 source_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->source_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.TransferFromDeviceRequest)
  return target;
}

size_t TransferFromDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.TransferFromDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 source_handle = 1;
  if (has_source_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->source_handle());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferFromDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.TransferFromDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferFromDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferFromDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.TransferFromDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.TransferFromDeviceRequest)
    MergeFrom(*source);
  }
}

void TransferFromDeviceRequest::MergeFrom(const TransferFromDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.TransferFromDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_handle()) {
    set_source_handle(from.source_handle());
  }
}

void TransferFromDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.TransferFromDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferFromDeviceRequest::CopyFrom(const TransferFromDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.TransferFromDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferFromDeviceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void TransferFromDeviceRequest::Swap(TransferFromDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferFromDeviceRequest::InternalSwap(TransferFromDeviceRequest* other) {
  using std::swap;
  swap(source_handle_, other->source_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferFromDeviceRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferFromDeviceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferFromDeviceResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferFromDeviceResponse::TransferFromDeviceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.TransferFromDeviceResponse)
}
TransferFromDeviceResponse::TransferFromDeviceResponse(const TransferFromDeviceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:tpu_driver.TransferFromDeviceResponse)
}

void TransferFromDeviceResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TransferFromDeviceResponse::~TransferFromDeviceResponse() {
  // @@protoc_insertion_point(destructor:tpu_driver.TransferFromDeviceResponse)
  SharedDtor();
}

void TransferFromDeviceResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferFromDeviceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferFromDeviceResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferFromDeviceResponse& TransferFromDeviceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceResponse.base);
  return *internal_default_instance();
}


void TransferFromDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.TransferFromDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransferFromDeviceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.TransferFromDeviceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.TransferFromDeviceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.TransferFromDeviceResponse)
  return false;
#undef DO_
}

void TransferFromDeviceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.TransferFromDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.TransferFromDeviceResponse)
}

::google::protobuf::uint8* TransferFromDeviceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.TransferFromDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.TransferFromDeviceResponse)
  return target;
}

size_t TransferFromDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.TransferFromDeviceResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes data = 2;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferFromDeviceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.TransferFromDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferFromDeviceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferFromDeviceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.TransferFromDeviceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.TransferFromDeviceResponse)
    MergeFrom(*source);
  }
}

void TransferFromDeviceResponse::MergeFrom(const TransferFromDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.TransferFromDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    set_has_data();
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TransferFromDeviceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.TransferFromDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferFromDeviceResponse::CopyFrom(const TransferFromDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.TransferFromDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferFromDeviceResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void TransferFromDeviceResponse::Swap(TransferFromDeviceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferFromDeviceResponse::InternalSwap(TransferFromDeviceResponse* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferFromDeviceResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferFromDeviceToDeviceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferFromDeviceToDeviceRequest::kSourceHandleFieldNumber;
const int TransferFromDeviceToDeviceRequest::kTargetHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferFromDeviceToDeviceRequest::TransferFromDeviceToDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceToDeviceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.TransferFromDeviceToDeviceRequest)
}
TransferFromDeviceToDeviceRequest::TransferFromDeviceToDeviceRequest(const TransferFromDeviceToDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_handle_, &from.source_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_handle_) -
    reinterpret_cast<char*>(&source_handle_)) + sizeof(target_handle_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.TransferFromDeviceToDeviceRequest)
}

void TransferFromDeviceToDeviceRequest::SharedCtor() {
  ::memset(&source_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_handle_) -
      reinterpret_cast<char*>(&source_handle_)) + sizeof(target_handle_));
}

TransferFromDeviceToDeviceRequest::~TransferFromDeviceToDeviceRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.TransferFromDeviceToDeviceRequest)
  SharedDtor();
}

void TransferFromDeviceToDeviceRequest::SharedDtor() {
}

void TransferFromDeviceToDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferFromDeviceToDeviceRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferFromDeviceToDeviceRequest& TransferFromDeviceToDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_TransferFromDeviceToDeviceRequest.base);
  return *internal_default_instance();
}


void TransferFromDeviceToDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&source_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_handle_) -
        reinterpret_cast<char*>(&source_handle_)) + sizeof(target_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransferFromDeviceToDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 source_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_source_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 target_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.TransferFromDeviceToDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.TransferFromDeviceToDeviceRequest)
  return false;
#undef DO_
}

void TransferFromDeviceToDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 source_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->source_handle(), output);
  }

  // required int64 target_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->target_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.TransferFromDeviceToDeviceRequest)
}

::google::protobuf::uint8* TransferFromDeviceToDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 source_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->source_handle(), target);
  }

  // required int64 target_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->target_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.TransferFromDeviceToDeviceRequest)
  return target;
}

size_t TransferFromDeviceToDeviceRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  size_t total_size = 0;

  if (has_source_handle()) {
    // required int64 source_handle = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->source_handle());
  }

  if (has_target_handle()) {
    // required int64 target_handle = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target_handle());
  }

  return total_size;
}
size_t TransferFromDeviceToDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 source_handle = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->source_handle());

    // required int64 target_handle = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target_handle());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferFromDeviceToDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferFromDeviceToDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferFromDeviceToDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.TransferFromDeviceToDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.TransferFromDeviceToDeviceRequest)
    MergeFrom(*source);
  }
}

void TransferFromDeviceToDeviceRequest::MergeFrom(const TransferFromDeviceToDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      source_handle_ = from.source_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_handle_ = from.target_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransferFromDeviceToDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferFromDeviceToDeviceRequest::CopyFrom(const TransferFromDeviceToDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.TransferFromDeviceToDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferFromDeviceToDeviceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TransferFromDeviceToDeviceRequest::Swap(TransferFromDeviceToDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferFromDeviceToDeviceRequest::InternalSwap(TransferFromDeviceToDeviceRequest* other) {
  using std::swap;
  swap(source_handle_, other->source_handle_);
  swap(target_handle_, other->target_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferFromDeviceToDeviceRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompileRequest::InitAsDefaultInstance() {
  ::tpu_driver::_CompileRequest_default_instance_._instance.get_mutable()->hlo_program_ = const_cast< ::xla::HloProto*>(
      ::xla::HloProto::internal_default_instance());
}
void CompileRequest::clear_hlo_program() {
  if (hlo_program_ != NULL) hlo_program_->Clear();
  clear_has_hlo_program();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompileRequest::kHloProgramFieldNumber;
const int CompileRequest::kNumReplicasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompileRequest::CompileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.CompileRequest)
}
CompileRequest::CompileRequest(const CompileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hlo_program()) {
    hlo_program_ = new ::xla::HloProto(*from.hlo_program_);
  } else {
    hlo_program_ = NULL;
  }
  num_replicas_ = from.num_replicas_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.CompileRequest)
}

void CompileRequest::SharedCtor() {
  ::memset(&hlo_program_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_replicas_) -
      reinterpret_cast<char*>(&hlo_program_)) + sizeof(num_replicas_));
}

CompileRequest::~CompileRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.CompileRequest)
  SharedDtor();
}

void CompileRequest::SharedDtor() {
  if (this != internal_default_instance()) delete hlo_program_;
}

void CompileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompileRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompileRequest& CompileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompileRequest.base);
  return *internal_default_instance();
}


void CompileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.CompileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(hlo_program_ != NULL);
    hlo_program_->Clear();
  }
  num_replicas_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CompileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.CompileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .xla.HloProto hlo_program = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hlo_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 num_replicas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_replicas();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_replicas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.CompileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.CompileRequest)
  return false;
#undef DO_
}

void CompileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.CompileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .xla.HloProto hlo_program = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_hlo_program(), output);
  }

  // optional int64 num_replicas = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->num_replicas(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.CompileRequest)
}

::google::protobuf::uint8* CompileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.CompileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .xla.HloProto hlo_program = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_hlo_program(), deterministic, target);
  }

  // optional int64 num_replicas = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->num_replicas(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.CompileRequest)
  return target;
}

size_t CompileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.CompileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .xla.HloProto hlo_program = 1;
  if (has_hlo_program()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hlo_program_);
  }
  // optional int64 num_replicas = 2;
  if (has_num_replicas()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_replicas());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.CompileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.CompileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.CompileRequest)
    MergeFrom(*source);
  }
}

void CompileRequest::MergeFrom(const CompileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.CompileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_hlo_program()->::xla::HloProto::MergeFrom(from.hlo_program());
    }
    if (cached_has_bits & 0x00000002u) {
      num_replicas_ = from.num_replicas_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CompileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.CompileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompileRequest::CopyFrom(const CompileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.CompileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompileRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CompileRequest::Swap(CompileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompileRequest::InternalSwap(CompileRequest* other) {
  using std::swap;
  swap(hlo_program_, other->hlo_program_);
  swap(num_replicas_, other->num_replicas_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompileRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompiledProgramMetadata::InitAsDefaultInstance() {
  ::tpu_driver::_CompiledProgramMetadata_default_instance_._instance.get_mutable()->program_shape_ = const_cast< ::xla::ProgramShapeProto*>(
      ::xla::ProgramShapeProto::internal_default_instance());
}
void CompiledProgramMetadata::clear_program_shape() {
  if (program_shape_ != NULL) program_shape_->Clear();
  clear_has_program_shape();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompiledProgramMetadata::kProgramShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompiledProgramMetadata::CompiledProgramMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompiledProgramMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.CompiledProgramMetadata)
}
CompiledProgramMetadata::CompiledProgramMetadata(const CompiledProgramMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_program_shape()) {
    program_shape_ = new ::xla::ProgramShapeProto(*from.program_shape_);
  } else {
    program_shape_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tpu_driver.CompiledProgramMetadata)
}

void CompiledProgramMetadata::SharedCtor() {
  program_shape_ = NULL;
}

CompiledProgramMetadata::~CompiledProgramMetadata() {
  // @@protoc_insertion_point(destructor:tpu_driver.CompiledProgramMetadata)
  SharedDtor();
}

void CompiledProgramMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete program_shape_;
}

void CompiledProgramMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompiledProgramMetadata::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompiledProgramMetadata& CompiledProgramMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompiledProgramMetadata.base);
  return *internal_default_instance();
}


void CompiledProgramMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.CompiledProgramMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(program_shape_ != NULL);
    program_shape_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CompiledProgramMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.CompiledProgramMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .xla.ProgramShapeProto program_shape = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_program_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.CompiledProgramMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.CompiledProgramMetadata)
  return false;
#undef DO_
}

void CompiledProgramMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.CompiledProgramMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .xla.ProgramShapeProto program_shape = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_program_shape(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.CompiledProgramMetadata)
}

::google::protobuf::uint8* CompiledProgramMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.CompiledProgramMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .xla.ProgramShapeProto program_shape = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_program_shape(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.CompiledProgramMetadata)
  return target;
}

size_t CompiledProgramMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.CompiledProgramMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .xla.ProgramShapeProto program_shape = 1;
  if (has_program_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *program_shape_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompiledProgramMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.CompiledProgramMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const CompiledProgramMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompiledProgramMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.CompiledProgramMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.CompiledProgramMetadata)
    MergeFrom(*source);
  }
}

void CompiledProgramMetadata::MergeFrom(const CompiledProgramMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.CompiledProgramMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_program_shape()) {
    mutable_program_shape()->::xla::ProgramShapeProto::MergeFrom(from.program_shape());
  }
}

void CompiledProgramMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.CompiledProgramMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompiledProgramMetadata::CopyFrom(const CompiledProgramMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.CompiledProgramMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompiledProgramMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CompiledProgramMetadata::Swap(CompiledProgramMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompiledProgramMetadata::InternalSwap(CompiledProgramMetadata* other) {
  using std::swap;
  swap(program_shape_, other->program_shape_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompiledProgramMetadata::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompileResponse::InitAsDefaultInstance() {
  ::tpu_driver::_CompileResponse_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::tpu_driver::CompiledProgramMetadata*>(
      ::tpu_driver::CompiledProgramMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompileResponse::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompileResponse::CompileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.CompileResponse)
}
CompileResponse::CompileResponse(const CompileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metadata()) {
    metadata_ = new ::tpu_driver::CompiledProgramMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tpu_driver.CompileResponse)
}

void CompileResponse::SharedCtor() {
  metadata_ = NULL;
}

CompileResponse::~CompileResponse() {
  // @@protoc_insertion_point(destructor:tpu_driver.CompileResponse)
  SharedDtor();
}

void CompileResponse::SharedDtor() {
  if (this != internal_default_instance()) delete metadata_;
}

void CompileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompileResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompileResponse& CompileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CompileResponse.base);
  return *internal_default_instance();
}


void CompileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.CompileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(metadata_ != NULL);
    metadata_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CompileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.CompileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .tpu_driver.CompiledProgramMetadata metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.CompileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.CompileResponse)
  return false;
#undef DO_
}

void CompileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.CompileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tpu_driver.CompiledProgramMetadata metadata = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_metadata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.CompileResponse)
}

::google::protobuf::uint8* CompileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.CompileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tpu_driver.CompiledProgramMetadata metadata = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_metadata(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.CompileResponse)
  return target;
}

size_t CompileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.CompileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .tpu_driver.CompiledProgramMetadata metadata = 1;
  if (has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metadata_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.CompileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CompileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.CompileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.CompileResponse)
    MergeFrom(*source);
  }
}

void CompileResponse::MergeFrom(const CompileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.CompileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_metadata()) {
    mutable_metadata()->::tpu_driver::CompiledProgramMetadata::MergeFrom(from.metadata());
  }
}

void CompileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.CompileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompileResponse::CopyFrom(const CompileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.CompileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompileResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_metadata()) {
    if (!this->metadata_->IsInitialized()) return false;
  }
  return true;
}

void CompileResponse::Swap(CompileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompileResponse::InternalSwap(CompileResponse* other) {
  using std::swap;
  swap(metadata_, other->metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompileResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadProgramRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadProgramRequest::kCoreIdFieldNumber;
const int LoadProgramRequest::kCompiledProgramHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadProgramRequest::LoadProgramRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_LoadProgramRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.LoadProgramRequest)
}
LoadProgramRequest::LoadProgramRequest(const LoadProgramRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&compiled_program_handle_, &from.compiled_program_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&core_id_) -
    reinterpret_cast<char*>(&compiled_program_handle_)) + sizeof(core_id_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.LoadProgramRequest)
}

void LoadProgramRequest::SharedCtor() {
  ::memset(&compiled_program_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&core_id_) -
      reinterpret_cast<char*>(&compiled_program_handle_)) + sizeof(core_id_));
}

LoadProgramRequest::~LoadProgramRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.LoadProgramRequest)
  SharedDtor();
}

void LoadProgramRequest::SharedDtor() {
}

void LoadProgramRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoadProgramRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadProgramRequest& LoadProgramRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_LoadProgramRequest.base);
  return *internal_default_instance();
}


void LoadProgramRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.LoadProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&compiled_program_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&core_id_) -
        reinterpret_cast<char*>(&compiled_program_handle_)) + sizeof(core_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoadProgramRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.LoadProgramRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 core_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_core_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &core_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 compiled_program_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_compiled_program_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compiled_program_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.LoadProgramRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.LoadProgramRequest)
  return false;
#undef DO_
}

void LoadProgramRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.LoadProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 core_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->core_id(), output);
  }

  // required int64 compiled_program_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->compiled_program_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.LoadProgramRequest)
}

::google::protobuf::uint8* LoadProgramRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.LoadProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 core_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->core_id(), target);
  }

  // required int64 compiled_program_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->compiled_program_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.LoadProgramRequest)
  return target;
}

size_t LoadProgramRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tpu_driver.LoadProgramRequest)
  size_t total_size = 0;

  if (has_compiled_program_handle()) {
    // required int64 compiled_program_handle = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compiled_program_handle());
  }

  if (has_core_id()) {
    // required int32 core_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->core_id());
  }

  return total_size;
}
size_t LoadProgramRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.LoadProgramRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 compiled_program_handle = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compiled_program_handle());

    // required int32 core_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->core_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadProgramRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.LoadProgramRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadProgramRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadProgramRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.LoadProgramRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.LoadProgramRequest)
    MergeFrom(*source);
  }
}

void LoadProgramRequest::MergeFrom(const LoadProgramRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.LoadProgramRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      compiled_program_handle_ = from.compiled_program_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      core_id_ = from.core_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoadProgramRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.LoadProgramRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadProgramRequest::CopyFrom(const LoadProgramRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.LoadProgramRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadProgramRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LoadProgramRequest::Swap(LoadProgramRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadProgramRequest::InternalSwap(LoadProgramRequest* other) {
  using std::swap;
  swap(compiled_program_handle_, other->compiled_program_handle_);
  swap(core_id_, other->core_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoadProgramRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnloadProgramRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnloadProgramRequest::kLoadedProgramHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnloadProgramRequest::UnloadProgramRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_UnloadProgramRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.UnloadProgramRequest)
}
UnloadProgramRequest::UnloadProgramRequest(const UnloadProgramRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loaded_program_handle_ = from.loaded_program_handle_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.UnloadProgramRequest)
}

void UnloadProgramRequest::SharedCtor() {
  loaded_program_handle_ = GOOGLE_LONGLONG(0);
}

UnloadProgramRequest::~UnloadProgramRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.UnloadProgramRequest)
  SharedDtor();
}

void UnloadProgramRequest::SharedDtor() {
}

void UnloadProgramRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnloadProgramRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnloadProgramRequest& UnloadProgramRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_UnloadProgramRequest.base);
  return *internal_default_instance();
}


void UnloadProgramRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.UnloadProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loaded_program_handle_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnloadProgramRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.UnloadProgramRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 loaded_program_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loaded_program_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &loaded_program_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.UnloadProgramRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.UnloadProgramRequest)
  return false;
#undef DO_
}

void UnloadProgramRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.UnloadProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 loaded_program_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->loaded_program_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.UnloadProgramRequest)
}

::google::protobuf::uint8* UnloadProgramRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.UnloadProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 loaded_program_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->loaded_program_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.UnloadProgramRequest)
  return target;
}

size_t UnloadProgramRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.UnloadProgramRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 loaded_program_handle = 1;
  if (has_loaded_program_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->loaded_program_handle());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnloadProgramRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.UnloadProgramRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnloadProgramRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnloadProgramRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.UnloadProgramRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.UnloadProgramRequest)
    MergeFrom(*source);
  }
}

void UnloadProgramRequest::MergeFrom(const UnloadProgramRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.UnloadProgramRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_loaded_program_handle()) {
    set_loaded_program_handle(from.loaded_program_handle());
  }
}

void UnloadProgramRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.UnloadProgramRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnloadProgramRequest::CopyFrom(const UnloadProgramRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.UnloadProgramRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnloadProgramRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UnloadProgramRequest::Swap(UnloadProgramRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnloadProgramRequest::InternalSwap(UnloadProgramRequest* other) {
  using std::swap;
  swap(loaded_program_handle_, other->loaded_program_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnloadProgramRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteRequest::InitAsDefaultInstance() {
  ::tpu_driver::_ExecuteRequest_default_instance_._instance.get_mutable()->device_assignment_ = const_cast< ::xla::DeviceAssignmentProto*>(
      ::xla::DeviceAssignmentProto::internal_default_instance());
}
void ExecuteRequest::clear_device_assignment() {
  if (device_assignment_ != NULL) device_assignment_->Clear();
  clear_has_device_assignment();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteRequest::kLoadedProgramHandleFieldNumber;
const int ExecuteRequest::kInputHandleFieldNumber;
const int ExecuteRequest::kOutputHandleFieldNumber;
const int ExecuteRequest::kDeviceAssignmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteRequest::ExecuteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_ExecuteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.ExecuteRequest)
}
ExecuteRequest::ExecuteRequest(const ExecuteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      input_handle_(from.input_handle_),
      output_handle_(from.output_handle_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device_assignment()) {
    device_assignment_ = new ::xla::DeviceAssignmentProto(*from.device_assignment_);
  } else {
    device_assignment_ = NULL;
  }
  loaded_program_handle_ = from.loaded_program_handle_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.ExecuteRequest)
}

void ExecuteRequest::SharedCtor() {
  ::memset(&device_assignment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loaded_program_handle_) -
      reinterpret_cast<char*>(&device_assignment_)) + sizeof(loaded_program_handle_));
}

ExecuteRequest::~ExecuteRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.ExecuteRequest)
  SharedDtor();
}

void ExecuteRequest::SharedDtor() {
  if (this != internal_default_instance()) delete device_assignment_;
}

void ExecuteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteRequest& ExecuteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_ExecuteRequest.base);
  return *internal_default_instance();
}


void ExecuteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_handle_.Clear();
  output_handle_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(device_assignment_ != NULL);
    device_assignment_->Clear();
  }
  loaded_program_handle_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExecuteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.ExecuteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 loaded_program_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loaded_program_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &loaded_program_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 input_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_input_handle())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_input_handle())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 output_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_output_handle())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_output_handle())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .xla.DeviceAssignmentProto device_assignment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.ExecuteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.ExecuteRequest)
  return false;
#undef DO_
}

void ExecuteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 loaded_program_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->loaded_program_handle(), output);
  }

  // repeated int64 input_handle = 2;
  for (int i = 0, n = this->input_handle_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->input_handle(i), output);
  }

  // repeated int64 output_handle = 3;
  for (int i = 0, n = this->output_handle_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->output_handle(i), output);
  }

  // optional .xla.DeviceAssignmentProto device_assignment = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_device_assignment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.ExecuteRequest)
}

::google::protobuf::uint8* ExecuteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 loaded_program_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->loaded_program_handle(), target);
  }

  // repeated int64 input_handle = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(2, this->input_handle_, target);

  // repeated int64 output_handle = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->output_handle_, target);

  // optional .xla.DeviceAssignmentProto device_assignment = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_device_assignment(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.ExecuteRequest)
  return target;
}

size_t ExecuteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.ExecuteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 loaded_program_handle = 1;
  if (has_loaded_program_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->loaded_program_handle());
  }
  // repeated int64 input_handle = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->input_handle_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->input_handle_size());
    total_size += data_size;
  }

  // repeated int64 output_handle = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->output_handle_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->output_handle_size());
    total_size += data_size;
  }

  // optional .xla.DeviceAssignmentProto device_assignment = 4;
  if (has_device_assignment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_assignment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.ExecuteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.ExecuteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.ExecuteRequest)
    MergeFrom(*source);
  }
}

void ExecuteRequest::MergeFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.ExecuteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_handle_.MergeFrom(from.input_handle_);
  output_handle_.MergeFrom(from.output_handle_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_device_assignment()->::xla::DeviceAssignmentProto::MergeFrom(from.device_assignment());
    }
    if (cached_has_bits & 0x00000002u) {
      loaded_program_handle_ = from.loaded_program_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExecuteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteRequest::CopyFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void ExecuteRequest::Swap(ExecuteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteRequest::InternalSwap(ExecuteRequest* other) {
  using std::swap;
  input_handle_.InternalSwap(&other->input_handle_);
  output_handle_.InternalSwap(&other->output_handle_);
  swap(device_assignment_, other->device_assignment_);
  swap(loaded_program_handle_, other->loaded_program_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamRequest_Entry::InitAsDefaultInstance() {
  ::tpu_driver::_StreamRequest_Entry_default_instance_.alloc_ = const_cast< ::tpu_driver::AllocateRequest*>(
      ::tpu_driver::AllocateRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.alloc_tuple_ = const_cast< ::tpu_driver::AllocateTupleRequest*>(
      ::tpu_driver::AllocateTupleRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.dealloc_ = const_cast< ::tpu_driver::DeallocateRequest*>(
      ::tpu_driver::DeallocateRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.transfer_to_ = const_cast< ::tpu_driver::TransferToDeviceRequest*>(
      ::tpu_driver::TransferToDeviceRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.transfer_from_ = const_cast< ::tpu_driver::TransferFromDeviceRequest*>(
      ::tpu_driver::TransferFromDeviceRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.transfer_from_to_ = const_cast< ::tpu_driver::TransferFromDeviceToDeviceRequest*>(
      ::tpu_driver::TransferFromDeviceToDeviceRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.compile_ = const_cast< ::tpu_driver::CompileRequest*>(
      ::tpu_driver::CompileRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.load_ = const_cast< ::tpu_driver::LoadProgramRequest*>(
      ::tpu_driver::LoadProgramRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.unload_ = const_cast< ::tpu_driver::UnloadProgramRequest*>(
      ::tpu_driver::UnloadProgramRequest::internal_default_instance());
  ::tpu_driver::_StreamRequest_Entry_default_instance_.execute_ = const_cast< ::tpu_driver::ExecuteRequest*>(
      ::tpu_driver::ExecuteRequest::internal_default_instance());
}
void StreamRequest_Entry::set_allocated_alloc(::tpu_driver::AllocateRequest* alloc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (alloc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alloc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alloc, submessage_arena);
    }
    set_has_alloc();
    request_.alloc_ = alloc;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.alloc)
}
void StreamRequest_Entry::set_allocated_alloc_tuple(::tpu_driver::AllocateTupleRequest* alloc_tuple) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (alloc_tuple) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alloc_tuple = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alloc_tuple, submessage_arena);
    }
    set_has_alloc_tuple();
    request_.alloc_tuple_ = alloc_tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.alloc_tuple)
}
void StreamRequest_Entry::set_allocated_dealloc(::tpu_driver::DeallocateRequest* dealloc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (dealloc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dealloc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dealloc, submessage_arena);
    }
    set_has_dealloc();
    request_.dealloc_ = dealloc;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.dealloc)
}
void StreamRequest_Entry::set_allocated_transfer_to(::tpu_driver::TransferToDeviceRequest* transfer_to) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (transfer_to) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transfer_to = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transfer_to, submessage_arena);
    }
    set_has_transfer_to();
    request_.transfer_to_ = transfer_to;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.transfer_to)
}
void StreamRequest_Entry::set_allocated_transfer_from(::tpu_driver::TransferFromDeviceRequest* transfer_from) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (transfer_from) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transfer_from = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transfer_from, submessage_arena);
    }
    set_has_transfer_from();
    request_.transfer_from_ = transfer_from;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.transfer_from)
}
void StreamRequest_Entry::set_allocated_transfer_from_to(::tpu_driver::TransferFromDeviceToDeviceRequest* transfer_from_to) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (transfer_from_to) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transfer_from_to = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transfer_from_to, submessage_arena);
    }
    set_has_transfer_from_to();
    request_.transfer_from_to_ = transfer_from_to;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.transfer_from_to)
}
void StreamRequest_Entry::set_allocated_compile(::tpu_driver::CompileRequest* compile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (compile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      compile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, compile, submessage_arena);
    }
    set_has_compile();
    request_.compile_ = compile;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.compile)
}
void StreamRequest_Entry::set_allocated_load(::tpu_driver::LoadProgramRequest* load) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (load) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      load = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, load, submessage_arena);
    }
    set_has_load();
    request_.load_ = load;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.load)
}
void StreamRequest_Entry::set_allocated_unload(::tpu_driver::UnloadProgramRequest* unload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (unload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unload, submessage_arena);
    }
    set_has_unload();
    request_.unload_ = unload;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.unload)
}
void StreamRequest_Entry::set_allocated_execute(::tpu_driver::ExecuteRequest* execute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (execute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      execute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execute, submessage_arena);
    }
    set_has_execute();
    request_.execute_ = execute;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamRequest.Entry.execute)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamRequest_Entry::kAllocFieldNumber;
const int StreamRequest_Entry::kAllocTupleFieldNumber;
const int StreamRequest_Entry::kDeallocFieldNumber;
const int StreamRequest_Entry::kTransferToFieldNumber;
const int StreamRequest_Entry::kTransferFromFieldNumber;
const int StreamRequest_Entry::kTransferFromToFieldNumber;
const int StreamRequest_Entry::kCompileFieldNumber;
const int StreamRequest_Entry::kLoadFieldNumber;
const int StreamRequest_Entry::kUnloadFieldNumber;
const int StreamRequest_Entry::kExecuteFieldNumber;
const int StreamRequest_Entry::kWaitForIdFieldNumber;
const int StreamRequest_Entry::kOperationIdFieldNumber;
const int StreamRequest_Entry::kThreadIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamRequest_Entry::StreamRequest_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamRequest_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.StreamRequest.Entry)
}
StreamRequest_Entry::StreamRequest_Entry(const StreamRequest_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      wait_for_id_(from.wait_for_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&operation_id_, &from.operation_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&thread_id_) -
    reinterpret_cast<char*>(&operation_id_)) + sizeof(thread_id_));
  clear_has_request();
  switch (from.request_case()) {
    case kAlloc: {
      mutable_alloc()->::tpu_driver::AllocateRequest::MergeFrom(from.alloc());
      break;
    }
    case kAllocTuple: {
      mutable_alloc_tuple()->::tpu_driver::AllocateTupleRequest::MergeFrom(from.alloc_tuple());
      break;
    }
    case kDealloc: {
      mutable_dealloc()->::tpu_driver::DeallocateRequest::MergeFrom(from.dealloc());
      break;
    }
    case kTransferTo: {
      mutable_transfer_to()->::tpu_driver::TransferToDeviceRequest::MergeFrom(from.transfer_to());
      break;
    }
    case kTransferFrom: {
      mutable_transfer_from()->::tpu_driver::TransferFromDeviceRequest::MergeFrom(from.transfer_from());
      break;
    }
    case kTransferFromTo: {
      mutable_transfer_from_to()->::tpu_driver::TransferFromDeviceToDeviceRequest::MergeFrom(from.transfer_from_to());
      break;
    }
    case kCompile: {
      mutable_compile()->::tpu_driver::CompileRequest::MergeFrom(from.compile());
      break;
    }
    case kLoad: {
      mutable_load()->::tpu_driver::LoadProgramRequest::MergeFrom(from.load());
      break;
    }
    case kUnload: {
      mutable_unload()->::tpu_driver::UnloadProgramRequest::MergeFrom(from.unload());
      break;
    }
    case kExecute: {
      mutable_execute()->::tpu_driver::ExecuteRequest::MergeFrom(from.execute());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tpu_driver.StreamRequest.Entry)
}

void StreamRequest_Entry::SharedCtor() {
  ::memset(&operation_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thread_id_) -
      reinterpret_cast<char*>(&operation_id_)) + sizeof(thread_id_));
  clear_has_request();
}

StreamRequest_Entry::~StreamRequest_Entry() {
  // @@protoc_insertion_point(destructor:tpu_driver.StreamRequest.Entry)
  SharedDtor();
}

void StreamRequest_Entry::SharedDtor() {
  if (has_request()) {
    clear_request();
  }
}

void StreamRequest_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamRequest_Entry::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamRequest_Entry& StreamRequest_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamRequest_Entry.base);
  return *internal_default_instance();
}


void StreamRequest_Entry::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:tpu_driver.StreamRequest.Entry)
  switch (request_case()) {
    case kAlloc: {
      delete request_.alloc_;
      break;
    }
    case kAllocTuple: {
      delete request_.alloc_tuple_;
      break;
    }
    case kDealloc: {
      delete request_.dealloc_;
      break;
    }
    case kTransferTo: {
      delete request_.transfer_to_;
      break;
    }
    case kTransferFrom: {
      delete request_.transfer_from_;
      break;
    }
    case kTransferFromTo: {
      delete request_.transfer_from_to_;
      break;
    }
    case kCompile: {
      delete request_.compile_;
      break;
    }
    case kLoad: {
      delete request_.load_;
      break;
    }
    case kUnload: {
      delete request_.unload_;
      break;
    }
    case kExecute: {
      delete request_.execute_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void StreamRequest_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.StreamRequest.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wait_for_id_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&operation_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&thread_id_) -
        reinterpret_cast<char*>(&operation_id_)) + sizeof(thread_id_));
  }
  clear_request();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StreamRequest_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.StreamRequest.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tpu_driver.AllocateRequest alloc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alloc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.AllocateTupleRequest alloc_tuple = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alloc_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.DeallocateRequest dealloc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dealloc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.TransferToDeviceRequest transfer_to = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.TransferFromDeviceRequest transfer_from = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.CompileRequest compile = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_compile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.LoadProgramRequest load = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_load()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.UnloadProgramRequest unload = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.ExecuteRequest execute = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.TransferFromDeviceToDeviceRequest transfer_from_to = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_from_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 wait_for_id = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 160u, input, this->mutable_wait_for_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_wait_for_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 operation_id = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_operation_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &operation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 thread_id = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_thread_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &thread_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.StreamRequest.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.StreamRequest.Entry)
  return false;
#undef DO_
}

void StreamRequest_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.StreamRequest.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (request_case()) {
    case kAlloc:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_alloc(), output);
      break;
    case kAllocTuple:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_alloc_tuple(), output);
      break;
    case kDealloc:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_dealloc(), output);
      break;
    case kTransferTo:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_transfer_to(), output);
      break;
    case kTransferFrom:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_transfer_from(), output);
      break;
    case kCompile:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_compile(), output);
      break;
    case kLoad:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_load(), output);
      break;
    case kUnload:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_unload(), output);
      break;
    case kExecute:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        9, this->_internal_execute(), output);
      break;
    case kTransferFromTo:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, this->_internal_transfer_from_to(), output);
      break;
    default: ;
  }
  // repeated int64 wait_for_id = 20;
  for (int i = 0, n = this->wait_for_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      20, this->wait_for_id(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 operation_id = 21;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->operation_id(), output);
  }

  // optional int64 thread_id = 22;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->thread_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.StreamRequest.Entry)
}

::google::protobuf::uint8* StreamRequest_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.StreamRequest.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (request_case()) {
    case kAlloc:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_alloc(), deterministic, target);
      break;
    case kAllocTuple:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_alloc_tuple(), deterministic, target);
      break;
    case kDealloc:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_dealloc(), deterministic, target);
      break;
    case kTransferTo:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_transfer_to(), deterministic, target);
      break;
    case kTransferFrom:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_transfer_from(), deterministic, target);
      break;
    case kCompile:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_compile(), deterministic, target);
      break;
    case kLoad:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          7, this->_internal_load(), deterministic, target);
      break;
    case kUnload:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          8, this->_internal_unload(), deterministic, target);
      break;
    case kExecute:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          9, this->_internal_execute(), deterministic, target);
      break;
    case kTransferFromTo:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          10, this->_internal_transfer_from_to(), deterministic, target);
      break;
    default: ;
  }
  // repeated int64 wait_for_id = 20;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(20, this->wait_for_id_, target);

  cached_has_bits = _has_bits_[0];
  // required int64 operation_id = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->operation_id(), target);
  }

  // optional int64 thread_id = 22;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->thread_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.StreamRequest.Entry)
  return target;
}

size_t StreamRequest_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.StreamRequest.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 operation_id = 21;
  if (has_operation_id()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->operation_id());
  }
  // repeated int64 wait_for_id = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->wait_for_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->wait_for_id_size());
    total_size += data_size;
  }

  // optional int64 thread_id = 22;
  if (has_thread_id()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->thread_id());
  }

  switch (request_case()) {
    // optional .tpu_driver.AllocateRequest alloc = 1;
    case kAlloc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.alloc_);
      break;
    }
    // optional .tpu_driver.AllocateTupleRequest alloc_tuple = 2;
    case kAllocTuple: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.alloc_tuple_);
      break;
    }
    // optional .tpu_driver.DeallocateRequest dealloc = 3;
    case kDealloc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.dealloc_);
      break;
    }
    // optional .tpu_driver.TransferToDeviceRequest transfer_to = 4;
    case kTransferTo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.transfer_to_);
      break;
    }
    // optional .tpu_driver.TransferFromDeviceRequest transfer_from = 5;
    case kTransferFrom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.transfer_from_);
      break;
    }
    // optional .tpu_driver.TransferFromDeviceToDeviceRequest transfer_from_to = 10;
    case kTransferFromTo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.transfer_from_to_);
      break;
    }
    // optional .tpu_driver.CompileRequest compile = 6;
    case kCompile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.compile_);
      break;
    }
    // optional .tpu_driver.LoadProgramRequest load = 7;
    case kLoad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.load_);
      break;
    }
    // optional .tpu_driver.UnloadProgramRequest unload = 8;
    case kUnload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.unload_);
      break;
    }
    // optional .tpu_driver.ExecuteRequest execute = 9;
    case kExecute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.execute_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamRequest_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.StreamRequest.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamRequest_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamRequest_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.StreamRequest.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.StreamRequest.Entry)
    MergeFrom(*source);
  }
}

void StreamRequest_Entry::MergeFrom(const StreamRequest_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.StreamRequest.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  wait_for_id_.MergeFrom(from.wait_for_id_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      operation_id_ = from.operation_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      thread_id_ = from.thread_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.request_case()) {
    case kAlloc: {
      mutable_alloc()->::tpu_driver::AllocateRequest::MergeFrom(from.alloc());
      break;
    }
    case kAllocTuple: {
      mutable_alloc_tuple()->::tpu_driver::AllocateTupleRequest::MergeFrom(from.alloc_tuple());
      break;
    }
    case kDealloc: {
      mutable_dealloc()->::tpu_driver::DeallocateRequest::MergeFrom(from.dealloc());
      break;
    }
    case kTransferTo: {
      mutable_transfer_to()->::tpu_driver::TransferToDeviceRequest::MergeFrom(from.transfer_to());
      break;
    }
    case kTransferFrom: {
      mutable_transfer_from()->::tpu_driver::TransferFromDeviceRequest::MergeFrom(from.transfer_from());
      break;
    }
    case kTransferFromTo: {
      mutable_transfer_from_to()->::tpu_driver::TransferFromDeviceToDeviceRequest::MergeFrom(from.transfer_from_to());
      break;
    }
    case kCompile: {
      mutable_compile()->::tpu_driver::CompileRequest::MergeFrom(from.compile());
      break;
    }
    case kLoad: {
      mutable_load()->::tpu_driver::LoadProgramRequest::MergeFrom(from.load());
      break;
    }
    case kUnload: {
      mutable_unload()->::tpu_driver::UnloadProgramRequest::MergeFrom(from.unload());
      break;
    }
    case kExecute: {
      mutable_execute()->::tpu_driver::ExecuteRequest::MergeFrom(from.execute());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void StreamRequest_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.StreamRequest.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamRequest_Entry::CopyFrom(const StreamRequest_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.StreamRequest.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamRequest_Entry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  switch (request_case()) {
    case kAlloc: {
      if (has_alloc()) {
        if (!this->alloc().IsInitialized()) return false;
      }
      break;
    }
    case kAllocTuple: {
      if (has_alloc_tuple()) {
        if (!this->alloc_tuple().IsInitialized()) return false;
      }
      break;
    }
    case kDealloc: {
      if (has_dealloc()) {
        if (!this->dealloc().IsInitialized()) return false;
      }
      break;
    }
    case kTransferTo: {
      if (has_transfer_to()) {
        if (!this->transfer_to().IsInitialized()) return false;
      }
      break;
    }
    case kTransferFrom: {
      if (has_transfer_from()) {
        if (!this->transfer_from().IsInitialized()) return false;
      }
      break;
    }
    case kTransferFromTo: {
      if (has_transfer_from_to()) {
        if (!this->transfer_from_to().IsInitialized()) return false;
      }
      break;
    }
    case kCompile: {
      if (has_compile()) {
        if (!this->compile().IsInitialized()) return false;
      }
      break;
    }
    case kLoad: {
      if (has_load()) {
        if (!this->load().IsInitialized()) return false;
      }
      break;
    }
    case kUnload: {
      if (has_unload()) {
        if (!this->unload().IsInitialized()) return false;
      }
      break;
    }
    case kExecute: {
      if (has_execute()) {
        if (!this->execute().IsInitialized()) return false;
      }
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  return true;
}

void StreamRequest_Entry::Swap(StreamRequest_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamRequest_Entry::InternalSwap(StreamRequest_Entry* other) {
  using std::swap;
  wait_for_id_.InternalSwap(&other->wait_for_id_);
  swap(operation_id_, other->operation_id_);
  swap(thread_id_, other->thread_id_);
  swap(request_, other->request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamRequest_Entry::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamRequest::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamRequest::StreamRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.StreamRequest)
}
StreamRequest::StreamRequest(const StreamRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entry_(from.entry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tpu_driver.StreamRequest)
}

void StreamRequest::SharedCtor() {
}

StreamRequest::~StreamRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.StreamRequest)
  SharedDtor();
}

void StreamRequest::SharedDtor() {
}

void StreamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamRequest& StreamRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamRequest.base);
  return *internal_default_instance();
}


void StreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.StreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entry_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StreamRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.StreamRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tpu_driver.StreamRequest.Entry entry = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.StreamRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.StreamRequest)
  return false;
#undef DO_
}

void StreamRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.StreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tpu_driver.StreamRequest.Entry entry = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30,
      this->entry(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.StreamRequest)
}

::google::protobuf::uint8* StreamRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.StreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tpu_driver.StreamRequest.Entry entry = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->entry(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.StreamRequest)
  return target;
}

size_t StreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.StreamRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tpu_driver.StreamRequest.Entry entry = 30;
  {
    unsigned int count = static_cast<unsigned int>(this->entry_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entry(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.StreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.StreamRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.StreamRequest)
    MergeFrom(*source);
  }
}

void StreamRequest::MergeFrom(const StreamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.StreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entry_.MergeFrom(from.entry_);
}

void StreamRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.StreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamRequest::CopyFrom(const StreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.StreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->entry())) return false;
  return true;
}

void StreamRequest::Swap(StreamRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamRequest::InternalSwap(StreamRequest* other) {
  using std::swap;
  CastToBase(&entry_)->InternalSwap(CastToBase(&other->entry_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamResponse_Entry::InitAsDefaultInstance() {
  ::tpu_driver::_StreamResponse_Entry_default_instance_.transfer_from_ = const_cast< ::tpu_driver::TransferFromDeviceResponse*>(
      ::tpu_driver::TransferFromDeviceResponse::internal_default_instance());
  ::tpu_driver::_StreamResponse_Entry_default_instance_.compile_ = const_cast< ::tpu_driver::CompileResponse*>(
      ::tpu_driver::CompileResponse::internal_default_instance());
  ::tpu_driver::_StreamResponse_Entry_default_instance_._instance.get_mutable()->status_ = const_cast< ::tpu_driver::StatusMessage*>(
      ::tpu_driver::StatusMessage::internal_default_instance());
}
void StreamResponse_Entry::set_allocated_transfer_from(::tpu_driver::TransferFromDeviceResponse* transfer_from) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (transfer_from) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transfer_from = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transfer_from, submessage_arena);
    }
    set_has_transfer_from();
    response_.transfer_from_ = transfer_from;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamResponse.Entry.transfer_from)
}
void StreamResponse_Entry::set_allocated_compile(::tpu_driver::CompileResponse* compile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (compile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      compile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, compile, submessage_arena);
    }
    set_has_compile();
    response_.compile_ = compile;
  }
  // @@protoc_insertion_point(field_set_allocated:tpu_driver.StreamResponse.Entry.compile)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamResponse_Entry::kTransferFromFieldNumber;
const int StreamResponse_Entry::kCompileFieldNumber;
const int StreamResponse_Entry::kStatusFieldNumber;
const int StreamResponse_Entry::kOperationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamResponse_Entry::StreamResponse_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamResponse_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.StreamResponse.Entry)
}
StreamResponse_Entry::StreamResponse_Entry(const StreamResponse_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::tpu_driver::StatusMessage(*from.status_);
  } else {
    status_ = NULL;
  }
  operation_id_ = from.operation_id_;
  clear_has_response();
  switch (from.response_case()) {
    case kTransferFrom: {
      mutable_transfer_from()->::tpu_driver::TransferFromDeviceResponse::MergeFrom(from.transfer_from());
      break;
    }
    case kCompile: {
      mutable_compile()->::tpu_driver::CompileResponse::MergeFrom(from.compile());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tpu_driver.StreamResponse.Entry)
}

void StreamResponse_Entry::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_id_) -
      reinterpret_cast<char*>(&status_)) + sizeof(operation_id_));
  clear_has_response();
}

StreamResponse_Entry::~StreamResponse_Entry() {
  // @@protoc_insertion_point(destructor:tpu_driver.StreamResponse.Entry)
  SharedDtor();
}

void StreamResponse_Entry::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
  if (has_response()) {
    clear_response();
  }
}

void StreamResponse_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamResponse_Entry::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamResponse_Entry& StreamResponse_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamResponse_Entry.base);
  return *internal_default_instance();
}


void StreamResponse_Entry::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:tpu_driver.StreamResponse.Entry)
  switch (response_case()) {
    case kTransferFrom: {
      delete response_.transfer_from_;
      break;
    }
    case kCompile: {
      delete response_.compile_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void StreamResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.StreamResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(status_ != NULL);
    status_->Clear();
  }
  operation_id_ = GOOGLE_LONGLONG(0);
  clear_response();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StreamResponse_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.StreamResponse.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tpu_driver.TransferFromDeviceResponse transfer_from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.CompileResponse compile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_compile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .tpu_driver.StatusMessage status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 operation_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_operation_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &operation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.StreamResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.StreamResponse.Entry)
  return false;
#undef DO_
}

void StreamResponse_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.StreamResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (response_case()) {
    case kTransferFrom:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_transfer_from(), output);
      break;
    case kCompile:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_compile(), output);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // required .tpu_driver.StatusMessage status = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_status(), output);
  }

  // required int64 operation_id = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->operation_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.StreamResponse.Entry)
}

::google::protobuf::uint8* StreamResponse_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.StreamResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (response_case()) {
    case kTransferFrom:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_transfer_from(), deterministic, target);
      break;
    case kCompile:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_compile(), deterministic, target);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // required .tpu_driver.StatusMessage status = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_status(), deterministic, target);
  }

  // required int64 operation_id = 11;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->operation_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.StreamResponse.Entry)
  return target;
}

size_t StreamResponse_Entry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tpu_driver.StreamResponse.Entry)
  size_t total_size = 0;

  if (has_status()) {
    // required .tpu_driver.StatusMessage status = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (has_operation_id()) {
    // required int64 operation_id = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->operation_id());
  }

  return total_size;
}
size_t StreamResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.StreamResponse.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .tpu_driver.StatusMessage status = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);

    // required int64 operation_id = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->operation_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  switch (response_case()) {
    // optional .tpu_driver.TransferFromDeviceResponse transfer_from = 3;
    case kTransferFrom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.transfer_from_);
      break;
    }
    // optional .tpu_driver.CompileResponse compile = 4;
    case kCompile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.compile_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamResponse_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.StreamResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamResponse_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamResponse_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.StreamResponse.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.StreamResponse.Entry)
    MergeFrom(*source);
  }
}

void StreamResponse_Entry::MergeFrom(const StreamResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.StreamResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_status()->::tpu_driver::StatusMessage::MergeFrom(from.status());
    }
    if (cached_has_bits & 0x00000002u) {
      operation_id_ = from.operation_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.response_case()) {
    case kTransferFrom: {
      mutable_transfer_from()->::tpu_driver::TransferFromDeviceResponse::MergeFrom(from.transfer_from());
      break;
    }
    case kCompile: {
      mutable_compile()->::tpu_driver::CompileResponse::MergeFrom(from.compile());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void StreamResponse_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.StreamResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamResponse_Entry::CopyFrom(const StreamResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.StreamResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamResponse_Entry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_status()) {
    if (!this->status_->IsInitialized()) return false;
  }
  switch (response_case()) {
    case kTransferFrom: {
      if (has_transfer_from()) {
        if (!this->transfer_from().IsInitialized()) return false;
      }
      break;
    }
    case kCompile: {
      if (has_compile()) {
        if (!this->compile().IsInitialized()) return false;
      }
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  return true;
}

void StreamResponse_Entry::Swap(StreamResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamResponse_Entry::InternalSwap(StreamResponse_Entry* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(operation_id_, other->operation_id_);
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamResponse_Entry::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamResponse::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamResponse::StreamResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.StreamResponse)
}
StreamResponse::StreamResponse(const StreamResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entry_(from.entry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tpu_driver.StreamResponse)
}

void StreamResponse::SharedCtor() {
}

StreamResponse::~StreamResponse() {
  // @@protoc_insertion_point(destructor:tpu_driver.StreamResponse)
  SharedDtor();
}

void StreamResponse::SharedDtor() {
}

void StreamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamResponse& StreamResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_StreamResponse.base);
  return *internal_default_instance();
}


void StreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.StreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entry_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StreamResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.StreamResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tpu_driver.StreamResponse.Entry entry = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.StreamResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.StreamResponse)
  return false;
#undef DO_
}

void StreamResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.StreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tpu_driver.StreamResponse.Entry entry = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->entry(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.StreamResponse)
}

::google::protobuf::uint8* StreamResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.StreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tpu_driver.StreamResponse.Entry entry = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->entry(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.StreamResponse)
  return target;
}

size_t StreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.StreamResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tpu_driver.StreamResponse.Entry entry = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->entry_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entry(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.StreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.StreamResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.StreamResponse)
    MergeFrom(*source);
  }
}

void StreamResponse::MergeFrom(const StreamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.StreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entry_.MergeFrom(from.entry_);
}

void StreamResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.StreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamResponse::CopyFrom(const StreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.StreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->entry())) return false;
  return true;
}

void StreamResponse::Swap(StreamResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamResponse::InternalSwap(StreamResponse* other) {
  using std::swap;
  CastToBase(&entry_)->InternalSwap(CastToBase(&other->entry_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenRequest::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenRequest::OpenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_OpenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.OpenRequest)
}
OpenRequest::OpenRequest(const OpenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_version_ = from.client_version_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.OpenRequest)
}

void OpenRequest::SharedCtor() {
  client_version_ = 0;
}

OpenRequest::~OpenRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.OpenRequest)
  SharedDtor();
}

void OpenRequest::SharedDtor() {
}

void OpenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpenRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenRequest& OpenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_OpenRequest.base);
  return *internal_default_instance();
}


void OpenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.OpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_version_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.OpenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_version = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_client_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.OpenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.OpenRequest)
  return false;
#undef DO_
}

void OpenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.OpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 client_version = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.OpenRequest)
}

::google::protobuf::uint8* OpenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.OpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 client_version = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.OpenRequest)
  return target;
}

size_t OpenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.OpenRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 client_version = 1 [default = 0];
  if (has_client_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.OpenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.OpenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.OpenRequest)
    MergeFrom(*source);
  }
}

void OpenRequest::MergeFrom(const OpenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.OpenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_client_version()) {
    set_client_version(from.client_version());
  }
}

void OpenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.OpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenRequest::CopyFrom(const OpenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.OpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenRequest::IsInitialized() const {
  return true;
}

void OpenRequest::Swap(OpenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenRequest::InternalSwap(OpenRequest* other) {
  using std::swap;
  swap(client_version_, other->client_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpenRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpenResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenResponse::kClientIdFieldNumber;
const int OpenResponse::kMaxIdleTimeSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenResponse::OpenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_OpenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.OpenResponse)
}
OpenResponse::OpenResponse(const OpenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_id_, &from.client_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_idle_time_seconds_) -
    reinterpret_cast<char*>(&client_id_)) + sizeof(max_idle_time_seconds_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.OpenResponse)
}

void OpenResponse::SharedCtor() {
  client_id_ = 0u;
  max_idle_time_seconds_ = 3600;
}

OpenResponse::~OpenResponse() {
  // @@protoc_insertion_point(destructor:tpu_driver.OpenResponse)
  SharedDtor();
}

void OpenResponse::SharedDtor() {
}

void OpenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpenResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenResponse& OpenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_OpenResponse.base);
  return *internal_default_instance();
}


void OpenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.OpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    client_id_ = 0u;
    max_idle_time_seconds_ = 3600;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.OpenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_client_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_idle_time_seconds = 2 [default = 3600];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_max_idle_time_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_idle_time_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.OpenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.OpenResponse)
  return false;
#undef DO_
}

void OpenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.OpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 client_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_id(), output);
  }

  // optional int32 max_idle_time_seconds = 2 [default = 3600];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_idle_time_seconds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.OpenResponse)
}

::google::protobuf::uint8* OpenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.OpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 client_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_id(), target);
  }

  // optional int32 max_idle_time_seconds = 2 [default = 3600];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_idle_time_seconds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.OpenResponse)
  return target;
}

size_t OpenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.OpenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 client_id = 1;
  if (has_client_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_id());
  }
  // optional int32 max_idle_time_seconds = 2 [default = 3600];
  if (has_max_idle_time_seconds()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_idle_time_seconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.OpenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.OpenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.OpenResponse)
    MergeFrom(*source);
  }
}

void OpenResponse::MergeFrom(const OpenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.OpenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      client_id_ = from.client_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      max_idle_time_seconds_ = from.max_idle_time_seconds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.OpenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenResponse::CopyFrom(const OpenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.OpenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void OpenResponse::Swap(OpenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenResponse::InternalSwap(OpenResponse* other) {
  using std::swap;
  swap(client_id_, other->client_id_);
  swap(max_idle_time_seconds_, other->max_idle_time_seconds_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpenResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseRequest::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseRequest::CloseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CloseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.CloseRequest)
}
CloseRequest::CloseRequest(const CloseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_id_ = from.client_id_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.CloseRequest)
}

void CloseRequest::SharedCtor() {
  client_id_ = 0u;
}

CloseRequest::~CloseRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.CloseRequest)
  SharedDtor();
}

void CloseRequest::SharedDtor() {
}

void CloseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloseRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseRequest& CloseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CloseRequest.base);
  return *internal_default_instance();
}


void CloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.CloseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_client_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.CloseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.CloseRequest)
  return false;
#undef DO_
}

void CloseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed32 client_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->client_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.CloseRequest)
}

::google::protobuf::uint8* CloseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed32 client_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->client_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.CloseRequest)
  return target;
}

size_t CloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.CloseRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required fixed32 client_id = 1;
  if (has_client_id()) {
    total_size += 1 + 4;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.CloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.CloseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.CloseRequest)
    MergeFrom(*source);
  }
}

void CloseRequest::MergeFrom(const CloseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.CloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_client_id()) {
    set_client_id(from.client_id());
  }
}

void CloseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.CloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseRequest::CopyFrom(const CloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.CloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CloseRequest::Swap(CloseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseRequest::InternalSwap(CloseRequest* other) {
  using std::swap;
  swap(client_id_, other->client_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloseRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseResponse::CloseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CloseResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.CloseResponse)
}
CloseResponse::CloseResponse(const CloseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tpu_driver.CloseResponse)
}

void CloseResponse::SharedCtor() {
}

CloseResponse::~CloseResponse() {
  // @@protoc_insertion_point(destructor:tpu_driver.CloseResponse)
  SharedDtor();
}

void CloseResponse::SharedDtor() {
}

void CloseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloseResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseResponse& CloseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_CloseResponse.base);
  return *internal_default_instance();
}


void CloseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.CloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.CloseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.CloseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.CloseResponse)
  return false;
#undef DO_
}

void CloseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.CloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.CloseResponse)
}

::google::protobuf::uint8* CloseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.CloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.CloseResponse)
  return target;
}

size_t CloseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.CloseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.CloseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.CloseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.CloseResponse)
    MergeFrom(*source);
  }
}

void CloseResponse::MergeFrom(const CloseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.CloseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CloseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.CloseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseResponse::CopyFrom(const CloseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.CloseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseResponse::IsInitialized() const {
  return true;
}

void CloseResponse::Swap(CloseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseResponse::InternalSwap(CloseResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloseResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetRequest::ResetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_ResetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.ResetRequest)
}
ResetRequest::ResetRequest(const ResetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tpu_driver.ResetRequest)
}

void ResetRequest::SharedCtor() {
}

ResetRequest::~ResetRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.ResetRequest)
  SharedDtor();
}

void ResetRequest::SharedDtor() {
}

void ResetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetRequest& ResetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_ResetRequest.base);
  return *internal_default_instance();
}


void ResetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.ResetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.ResetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.ResetRequest)
  return false;
#undef DO_
}

void ResetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.ResetRequest)
}

::google::protobuf::uint8* ResetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.ResetRequest)
  return target;
}

size_t ResetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.ResetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.ResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.ResetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.ResetRequest)
    MergeFrom(*source);
  }
}

void ResetRequest::MergeFrom(const ResetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.ResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.ResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetRequest::CopyFrom(const ResetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.ResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetRequest::IsInitialized() const {
  return true;
}

void ResetRequest::Swap(ResetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetRequest::InternalSwap(ResetRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetResponse::ResetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_ResetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.ResetResponse)
}
ResetResponse::ResetResponse(const ResetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tpu_driver.ResetResponse)
}

void ResetResponse::SharedCtor() {
}

ResetResponse::~ResetResponse() {
  // @@protoc_insertion_point(destructor:tpu_driver.ResetResponse)
  SharedDtor();
}

void ResetResponse::SharedDtor() {
}

void ResetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetResponse& ResetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_ResetResponse.base);
  return *internal_default_instance();
}


void ResetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.ResetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.ResetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.ResetResponse)
  return false;
#undef DO_
}

void ResetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.ResetResponse)
}

::google::protobuf::uint8* ResetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.ResetResponse)
  return target;
}

size_t ResetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.ResetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.ResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.ResetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.ResetResponse)
    MergeFrom(*source);
  }
}

void ResetResponse::MergeFrom(const ResetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.ResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.ResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetResponse::CopyFrom(const ResetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.ResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetResponse::IsInitialized() const {
  return true;
}

void ResetResponse::Swap(ResetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetResponse::InternalSwap(ResetResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuerySystemInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuerySystemInfoRequest::QuerySystemInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_QuerySystemInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.QuerySystemInfoRequest)
}
QuerySystemInfoRequest::QuerySystemInfoRequest(const QuerySystemInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tpu_driver.QuerySystemInfoRequest)
}

void QuerySystemInfoRequest::SharedCtor() {
}

QuerySystemInfoRequest::~QuerySystemInfoRequest() {
  // @@protoc_insertion_point(destructor:tpu_driver.QuerySystemInfoRequest)
  SharedDtor();
}

void QuerySystemInfoRequest::SharedDtor() {
}

void QuerySystemInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuerySystemInfoRequest::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuerySystemInfoRequest& QuerySystemInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_QuerySystemInfoRequest.base);
  return *internal_default_instance();
}


void QuerySystemInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.QuerySystemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QuerySystemInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.QuerySystemInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.QuerySystemInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.QuerySystemInfoRequest)
  return false;
#undef DO_
}

void QuerySystemInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.QuerySystemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.QuerySystemInfoRequest)
}

::google::protobuf::uint8* QuerySystemInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.QuerySystemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.QuerySystemInfoRequest)
  return target;
}

size_t QuerySystemInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.QuerySystemInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuerySystemInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.QuerySystemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QuerySystemInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuerySystemInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.QuerySystemInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.QuerySystemInfoRequest)
    MergeFrom(*source);
  }
}

void QuerySystemInfoRequest::MergeFrom(const QuerySystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.QuerySystemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void QuerySystemInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.QuerySystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuerySystemInfoRequest::CopyFrom(const QuerySystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.QuerySystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySystemInfoRequest::IsInitialized() const {
  return true;
}

void QuerySystemInfoRequest::Swap(QuerySystemInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuerySystemInfoRequest::InternalSwap(QuerySystemInfoRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuerySystemInfoRequest::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuerySystemInfoResponse::InitAsDefaultInstance() {
  ::tpu_driver::_QuerySystemInfoResponse_default_instance_._instance.get_mutable()->system_info_ = const_cast< ::tpu_driver::SystemInfo*>(
      ::tpu_driver::SystemInfo::internal_default_instance());
}
void QuerySystemInfoResponse::clear_system_info() {
  if (system_info_ != NULL) system_info_->Clear();
  clear_has_system_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuerySystemInfoResponse::kSystemInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuerySystemInfoResponse::QuerySystemInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_QuerySystemInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.QuerySystemInfoResponse)
}
QuerySystemInfoResponse::QuerySystemInfoResponse(const QuerySystemInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_system_info()) {
    system_info_ = new ::tpu_driver::SystemInfo(*from.system_info_);
  } else {
    system_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tpu_driver.QuerySystemInfoResponse)
}

void QuerySystemInfoResponse::SharedCtor() {
  system_info_ = NULL;
}

QuerySystemInfoResponse::~QuerySystemInfoResponse() {
  // @@protoc_insertion_point(destructor:tpu_driver.QuerySystemInfoResponse)
  SharedDtor();
}

void QuerySystemInfoResponse::SharedDtor() {
  if (this != internal_default_instance()) delete system_info_;
}

void QuerySystemInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuerySystemInfoResponse::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuerySystemInfoResponse& QuerySystemInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::scc_info_QuerySystemInfoResponse.base);
  return *internal_default_instance();
}


void QuerySystemInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.QuerySystemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(system_info_ != NULL);
    system_info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QuerySystemInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.QuerySystemInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .tpu_driver.SystemInfo system_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.QuerySystemInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.QuerySystemInfoResponse)
  return false;
#undef DO_
}

void QuerySystemInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.QuerySystemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tpu_driver.SystemInfo system_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_system_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.QuerySystemInfoResponse)
}

::google::protobuf::uint8* QuerySystemInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.QuerySystemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tpu_driver.SystemInfo system_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_system_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.QuerySystemInfoResponse)
  return target;
}

size_t QuerySystemInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.QuerySystemInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .tpu_driver.SystemInfo system_info = 1;
  if (has_system_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_info_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuerySystemInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.QuerySystemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QuerySystemInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuerySystemInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.QuerySystemInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.QuerySystemInfoResponse)
    MergeFrom(*source);
  }
}

void QuerySystemInfoResponse::MergeFrom(const QuerySystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.QuerySystemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_system_info()) {
    mutable_system_info()->::tpu_driver::SystemInfo::MergeFrom(from.system_info());
  }
}

void QuerySystemInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.QuerySystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuerySystemInfoResponse::CopyFrom(const QuerySystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.QuerySystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySystemInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_system_info()) {
    if (!this->system_info_->IsInitialized()) return false;
  }
  return true;
}

void QuerySystemInfoResponse::Swap(QuerySystemInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuerySystemInfoResponse::InternalSwap(QuerySystemInfoResponse* other) {
  using std::swap;
  swap(system_info_, other->system_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuerySystemInfoResponse::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tpu_driver
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::StatusMessage* Arena::CreateMaybeMessage< ::tpu_driver::StatusMessage >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::StatusMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::AllocateRequest* Arena::CreateMaybeMessage< ::tpu_driver::AllocateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::AllocateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::AllocateTupleRequest* Arena::CreateMaybeMessage< ::tpu_driver::AllocateTupleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::AllocateTupleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::DeallocateRequest* Arena::CreateMaybeMessage< ::tpu_driver::DeallocateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::DeallocateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::TransferToDeviceRequest* Arena::CreateMaybeMessage< ::tpu_driver::TransferToDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::TransferToDeviceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::TransferFromDeviceRequest* Arena::CreateMaybeMessage< ::tpu_driver::TransferFromDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::TransferFromDeviceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::TransferFromDeviceResponse* Arena::CreateMaybeMessage< ::tpu_driver::TransferFromDeviceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::TransferFromDeviceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::TransferFromDeviceToDeviceRequest* Arena::CreateMaybeMessage< ::tpu_driver::TransferFromDeviceToDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::TransferFromDeviceToDeviceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::CompileRequest* Arena::CreateMaybeMessage< ::tpu_driver::CompileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::CompileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::CompiledProgramMetadata* Arena::CreateMaybeMessage< ::tpu_driver::CompiledProgramMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::CompiledProgramMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::CompileResponse* Arena::CreateMaybeMessage< ::tpu_driver::CompileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::CompileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::LoadProgramRequest* Arena::CreateMaybeMessage< ::tpu_driver::LoadProgramRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::LoadProgramRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::UnloadProgramRequest* Arena::CreateMaybeMessage< ::tpu_driver::UnloadProgramRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::UnloadProgramRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::ExecuteRequest* Arena::CreateMaybeMessage< ::tpu_driver::ExecuteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::ExecuteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::StreamRequest_Entry* Arena::CreateMaybeMessage< ::tpu_driver::StreamRequest_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::StreamRequest_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::StreamRequest* Arena::CreateMaybeMessage< ::tpu_driver::StreamRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::StreamRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::StreamResponse_Entry* Arena::CreateMaybeMessage< ::tpu_driver::StreamResponse_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::StreamResponse_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::StreamResponse* Arena::CreateMaybeMessage< ::tpu_driver::StreamResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::StreamResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::OpenRequest* Arena::CreateMaybeMessage< ::tpu_driver::OpenRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::OpenRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::OpenResponse* Arena::CreateMaybeMessage< ::tpu_driver::OpenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::OpenResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::CloseRequest* Arena::CreateMaybeMessage< ::tpu_driver::CloseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::CloseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::CloseResponse* Arena::CreateMaybeMessage< ::tpu_driver::CloseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::CloseResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::ResetRequest* Arena::CreateMaybeMessage< ::tpu_driver::ResetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::ResetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::ResetResponse* Arena::CreateMaybeMessage< ::tpu_driver::ResetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::ResetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::QuerySystemInfoRequest* Arena::CreateMaybeMessage< ::tpu_driver::QuerySystemInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::QuerySystemInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::QuerySystemInfoResponse* Arena::CreateMaybeMessage< ::tpu_driver::QuerySystemInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::QuerySystemInfoResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
