// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/python/tpu_driver/tpu_driver.proto

#include "tensorflow/compiler/xla/python/tpu_driver/tpu_driver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChipCoordinate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CpuInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TpuCoreInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TpuDriverConfig_GrpcConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TpuChipInfo;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto
namespace tpu_driver {
class ChipCoordinateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChipCoordinate>
      _instance;
} _ChipCoordinate_default_instance_;
class TpuCoreInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpuCoreInfo>
      _instance;
} _TpuCoreInfo_default_instance_;
class TpuChipInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpuChipInfo>
      _instance;
} _TpuChipInfo_default_instance_;
class CpuInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CpuInfo>
      _instance;
} _CpuInfo_default_instance_;
class SystemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemInfo>
      _instance;
} _SystemInfo_default_instance_;
class TpuDriverConfig_GrpcConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpuDriverConfig_GrpcConfig>
      _instance;
} _TpuDriverConfig_GrpcConfig_default_instance_;
class TpuDriverConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpuDriverConfig>
      _instance;
} _TpuDriverConfig_default_instance_;
}  // namespace tpu_driver
namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto {
static void InitDefaultsChipCoordinate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_ChipCoordinate_default_instance_;
    new (ptr) ::tpu_driver::ChipCoordinate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::ChipCoordinate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChipCoordinate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChipCoordinate}, {}};

static void InitDefaultsTpuCoreInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_TpuCoreInfo_default_instance_;
    new (ptr) ::tpu_driver::TpuCoreInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::TpuCoreInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TpuCoreInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTpuCoreInfo}, {}};

static void InitDefaultsTpuChipInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_TpuChipInfo_default_instance_;
    new (ptr) ::tpu_driver::TpuChipInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::TpuChipInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TpuChipInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTpuChipInfo}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuCoreInfo.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_ChipCoordinate.base,}};

static void InitDefaultsCpuInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_CpuInfo_default_instance_;
    new (ptr) ::tpu_driver::CpuInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::CpuInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CpuInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCpuInfo}, {}};

static void InitDefaultsSystemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_SystemInfo_default_instance_;
    new (ptr) ::tpu_driver::SystemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::SystemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SystemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSystemInfo}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuChipInfo.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_CpuInfo.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuCoreInfo.base,}};

static void InitDefaultsTpuDriverConfig_GrpcConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_TpuDriverConfig_GrpcConfig_default_instance_;
    new (ptr) ::tpu_driver::TpuDriverConfig_GrpcConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::TpuDriverConfig_GrpcConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TpuDriverConfig_GrpcConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTpuDriverConfig_GrpcConfig}, {}};

static void InitDefaultsTpuDriverConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tpu_driver::_TpuDriverConfig_default_instance_;
    new (ptr) ::tpu_driver::TpuDriverConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tpu_driver::TpuDriverConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TpuDriverConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTpuDriverConfig}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuDriverConfig_GrpcConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ChipCoordinate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TpuCoreInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TpuChipInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CpuInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TpuDriverConfig_GrpcConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TpuDriverConfig.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ChipCoordinate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ChipCoordinate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ChipCoordinate, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ChipCoordinate, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::ChipCoordinate, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuCoreInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuCoreInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuCoreInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuCoreInfo, core_on_chip_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuCoreInfo, core_on_host_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuCoreInfo, hbm_bytes_available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuCoreInfo, hbm_bytes_allocatable_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuChipInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuChipInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuChipInfo, core_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuChipInfo, host_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuChipInfo, chip_coord_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CpuInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CpuInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CpuInfo, num_cpu_cores_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CpuInfo, cpu_load_average_1min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CpuInfo, ram_bytes_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::CpuInfo, ram_bytes_available_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, tpu_chip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, local_core_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, host_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, host_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, chip_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::SystemInfo, core_count_),
  ~0u,
  0,
  ~0u,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuDriverConfig_GrpcConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuDriverConfig_GrpcConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuDriverConfig_GrpcConfig, connection_timeout_secs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuDriverConfig_GrpcConfig, keepalive_timeout_secs_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuDriverConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuDriverConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuDriverConfig, worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tpu_driver::TpuDriverConfig, grpc_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::tpu_driver::ChipCoordinate)},
  { 11, 21, sizeof(::tpu_driver::TpuCoreInfo)},
  { 26, 34, sizeof(::tpu_driver::TpuChipInfo)},
  { 37, 46, sizeof(::tpu_driver::CpuInfo)},
  { 50, 62, sizeof(::tpu_driver::SystemInfo)},
  { 69, 76, sizeof(::tpu_driver::TpuDriverConfig_GrpcConfig)},
  { 78, 85, sizeof(::tpu_driver::TpuDriverConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_ChipCoordinate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_TpuCoreInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_TpuChipInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_CpuInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_SystemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_TpuDriverConfig_GrpcConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tpu_driver::_TpuDriverConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/compiler/xla/python/tpu_driver/tpu_driver.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n:tensorflow/compiler/xla/python/tpu_dri"
      "ver/tpu_driver.proto\022\ntpu_driver\"1\n\016Chip"
      "Coordinate\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022\t\n\001z\030\003 "
      "\002(\005\"\215\001\n\013TpuCoreInfo\022\n\n\002id\030\001 \002(\005\022\032\n\022core_"
      "on_chip_index\030\002 \001(\005\022\032\n\022core_on_host_inde"
      "x\030\003 \001(\005\022\033\n\023hbm_bytes_available\030d \001(\003\022\035\n\025"
      "hbm_bytes_allocatable\030e \001(\003\"u\n\013TpuChipIn"
      "fo\022%\n\004core\030\001 \003(\0132\027.tpu_driver.TpuCoreInf"
      "o\022\017\n\007host_id\030\002 \001(\005\022.\n\nchip_coord\030\003 \001(\0132\032"
      ".tpu_driver.ChipCoordinate\"u\n\007CpuInfo\022\025\n"
      "\rnum_cpu_cores\030\001 \002(\005\022\035\n\025cpu_load_average"
      "_1min\030\002 \002(\002\022\027\n\017ram_bytes_total\030d \002(\003\022\033\n\023"
      "ram_bytes_available\030e \002(\003\"\323\001\n\nSystemInfo"
      "\022)\n\010tpu_chip\030\001 \003(\0132\027.tpu_driver.TpuChipI"
      "nfo\022 \n\003cpu\030\002 \002(\0132\023.tpu_driver.CpuInfo\022+\n"
      "\nlocal_core\030\003 \003(\0132\027.tpu_driver.TpuCoreIn"
      "fo\022\017\n\007host_id\030\004 \001(\005\022\022\n\nhost_count\030\005 \001(\005\022"
      "\022\n\nchip_count\030\006 \001(\005\022\022\n\ncore_count\030\007 \001(\005\""
      "\256\001\n\017TpuDriverConfig\022\016\n\006worker\030\001 \001(\t\0224\n\004g"
      "rpc\030\002 \001(\0132&.tpu_driver.TpuDriverConfig.G"
      "rpcConfig\032U\n\nGrpcConfig\022#\n\027connection_ti"
      "meout_secs\030\001 \001(\003:\00230\022\"\n\026keepalive_timeou"
      "t_secs\030\002 \001(\003:\00230*\027\n\014MemoryRegion\022\007\n\003HBM\020"
      "\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 921);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/compiler/xla/python/tpu_driver/tpu_driver.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto
namespace tpu_driver {
const ::google::protobuf::EnumDescriptor* MemoryRegion_descriptor() {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_enum_descriptors[0];
}
bool MemoryRegion_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ChipCoordinate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChipCoordinate::kXFieldNumber;
const int ChipCoordinate::kYFieldNumber;
const int ChipCoordinate::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChipCoordinate::ChipCoordinate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_ChipCoordinate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.ChipCoordinate)
}
ChipCoordinate::ChipCoordinate(const ChipCoordinate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.ChipCoordinate)
}

void ChipCoordinate::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

ChipCoordinate::~ChipCoordinate() {
  // @@protoc_insertion_point(destructor:tpu_driver.ChipCoordinate)
  SharedDtor();
}

void ChipCoordinate::SharedDtor() {
}

void ChipCoordinate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChipCoordinate::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChipCoordinate& ChipCoordinate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_ChipCoordinate.base);
  return *internal_default_instance();
}


void ChipCoordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.ChipCoordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChipCoordinate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.ChipCoordinate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.ChipCoordinate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.ChipCoordinate)
  return false;
#undef DO_
}

void ChipCoordinate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.ChipCoordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // required int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.ChipCoordinate)
}

::google::protobuf::uint8* ChipCoordinate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.ChipCoordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // required int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.ChipCoordinate)
  return target;
}

size_t ChipCoordinate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tpu_driver.ChipCoordinate)
  size_t total_size = 0;

  if (has_x()) {
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  if (has_z()) {
    // required int32 z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  return total_size;
}
size_t ChipCoordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.ChipCoordinate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

    // required int32 z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChipCoordinate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.ChipCoordinate)
  GOOGLE_DCHECK_NE(&from, this);
  const ChipCoordinate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChipCoordinate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.ChipCoordinate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.ChipCoordinate)
    MergeFrom(*source);
  }
}

void ChipCoordinate::MergeFrom(const ChipCoordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.ChipCoordinate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChipCoordinate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.ChipCoordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChipCoordinate::CopyFrom(const ChipCoordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.ChipCoordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChipCoordinate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ChipCoordinate::Swap(ChipCoordinate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChipCoordinate::InternalSwap(ChipCoordinate* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChipCoordinate::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpuCoreInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpuCoreInfo::kIdFieldNumber;
const int TpuCoreInfo::kCoreOnChipIndexFieldNumber;
const int TpuCoreInfo::kCoreOnHostIndexFieldNumber;
const int TpuCoreInfo::kHbmBytesAvailableFieldNumber;
const int TpuCoreInfo::kHbmBytesAllocatableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpuCoreInfo::TpuCoreInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuCoreInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.TpuCoreInfo)
}
TpuCoreInfo::TpuCoreInfo(const TpuCoreInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&hbm_bytes_allocatable_) -
    reinterpret_cast<char*>(&id_)) + sizeof(hbm_bytes_allocatable_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.TpuCoreInfo)
}

void TpuCoreInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hbm_bytes_allocatable_) -
      reinterpret_cast<char*>(&id_)) + sizeof(hbm_bytes_allocatable_));
}

TpuCoreInfo::~TpuCoreInfo() {
  // @@protoc_insertion_point(destructor:tpu_driver.TpuCoreInfo)
  SharedDtor();
}

void TpuCoreInfo::SharedDtor() {
}

void TpuCoreInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TpuCoreInfo::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpuCoreInfo& TpuCoreInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuCoreInfo.base);
  return *internal_default_instance();
}


void TpuCoreInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.TpuCoreInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hbm_bytes_allocatable_) -
        reinterpret_cast<char*>(&id_)) + sizeof(hbm_bytes_allocatable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TpuCoreInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.TpuCoreInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 core_on_chip_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_core_on_chip_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &core_on_chip_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 core_on_host_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_core_on_host_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &core_on_host_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 hbm_bytes_available = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {
          set_has_hbm_bytes_available();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hbm_bytes_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 hbm_bytes_allocatable = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 808 & 0xFF */)) {
          set_has_hbm_bytes_allocatable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hbm_bytes_allocatable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.TpuCoreInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.TpuCoreInfo)
  return false;
#undef DO_
}

void TpuCoreInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.TpuCoreInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 core_on_chip_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->core_on_chip_index(), output);
  }

  // optional int32 core_on_host_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->core_on_host_index(), output);
  }

  // optional int64 hbm_bytes_available = 100;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(100, this->hbm_bytes_available(), output);
  }

  // optional int64 hbm_bytes_allocatable = 101;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(101, this->hbm_bytes_allocatable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.TpuCoreInfo)
}

::google::protobuf::uint8* TpuCoreInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.TpuCoreInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 core_on_chip_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->core_on_chip_index(), target);
  }

  // optional int32 core_on_host_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->core_on_host_index(), target);
  }

  // optional int64 hbm_bytes_available = 100;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(100, this->hbm_bytes_available(), target);
  }

  // optional int64 hbm_bytes_allocatable = 101;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(101, this->hbm_bytes_allocatable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.TpuCoreInfo)
  return target;
}

size_t TpuCoreInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.TpuCoreInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  if (_has_bits_[0 / 32] & 30u) {
    // optional int32 core_on_chip_index = 2;
    if (has_core_on_chip_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->core_on_chip_index());
    }

    // optional int32 core_on_host_index = 3;
    if (has_core_on_host_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->core_on_host_index());
    }

    // optional int64 hbm_bytes_available = 100;
    if (has_hbm_bytes_available()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->hbm_bytes_available());
    }

    // optional int64 hbm_bytes_allocatable = 101;
    if (has_hbm_bytes_allocatable()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->hbm_bytes_allocatable());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpuCoreInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.TpuCoreInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TpuCoreInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpuCoreInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.TpuCoreInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.TpuCoreInfo)
    MergeFrom(*source);
  }
}

void TpuCoreInfo::MergeFrom(const TpuCoreInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.TpuCoreInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      core_on_chip_index_ = from.core_on_chip_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      core_on_host_index_ = from.core_on_host_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      hbm_bytes_available_ = from.hbm_bytes_available_;
    }
    if (cached_has_bits & 0x00000010u) {
      hbm_bytes_allocatable_ = from.hbm_bytes_allocatable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TpuCoreInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.TpuCoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpuCoreInfo::CopyFrom(const TpuCoreInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.TpuCoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpuCoreInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void TpuCoreInfo::Swap(TpuCoreInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpuCoreInfo::InternalSwap(TpuCoreInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(core_on_chip_index_, other->core_on_chip_index_);
  swap(core_on_host_index_, other->core_on_host_index_);
  swap(hbm_bytes_available_, other->hbm_bytes_available_);
  swap(hbm_bytes_allocatable_, other->hbm_bytes_allocatable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TpuCoreInfo::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpuChipInfo::InitAsDefaultInstance() {
  ::tpu_driver::_TpuChipInfo_default_instance_._instance.get_mutable()->chip_coord_ = const_cast< ::tpu_driver::ChipCoordinate*>(
      ::tpu_driver::ChipCoordinate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpuChipInfo::kCoreFieldNumber;
const int TpuChipInfo::kHostIdFieldNumber;
const int TpuChipInfo::kChipCoordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpuChipInfo::TpuChipInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuChipInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.TpuChipInfo)
}
TpuChipInfo::TpuChipInfo(const TpuChipInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      core_(from.core_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chip_coord()) {
    chip_coord_ = new ::tpu_driver::ChipCoordinate(*from.chip_coord_);
  } else {
    chip_coord_ = NULL;
  }
  host_id_ = from.host_id_;
  // @@protoc_insertion_point(copy_constructor:tpu_driver.TpuChipInfo)
}

void TpuChipInfo::SharedCtor() {
  ::memset(&chip_coord_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_id_) -
      reinterpret_cast<char*>(&chip_coord_)) + sizeof(host_id_));
}

TpuChipInfo::~TpuChipInfo() {
  // @@protoc_insertion_point(destructor:tpu_driver.TpuChipInfo)
  SharedDtor();
}

void TpuChipInfo::SharedDtor() {
  if (this != internal_default_instance()) delete chip_coord_;
}

void TpuChipInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TpuChipInfo::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpuChipInfo& TpuChipInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuChipInfo.base);
  return *internal_default_instance();
}


void TpuChipInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.TpuChipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  core_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(chip_coord_ != NULL);
    chip_coord_->Clear();
  }
  host_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TpuChipInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.TpuChipInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tpu_driver.TpuCoreInfo core = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_core()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 host_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_host_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.ChipCoordinate chip_coord = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chip_coord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.TpuChipInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.TpuChipInfo)
  return false;
#undef DO_
}

void TpuChipInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.TpuChipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tpu_driver.TpuCoreInfo core = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->core_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->core(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 host_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->host_id(), output);
  }

  // optional .tpu_driver.ChipCoordinate chip_coord = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_chip_coord(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.TpuChipInfo)
}

::google::protobuf::uint8* TpuChipInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.TpuChipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tpu_driver.TpuCoreInfo core = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->core_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->core(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 host_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->host_id(), target);
  }

  // optional .tpu_driver.ChipCoordinate chip_coord = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_chip_coord(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.TpuChipInfo)
  return target;
}

size_t TpuChipInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.TpuChipInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tpu_driver.TpuCoreInfo core = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->core_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->core(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .tpu_driver.ChipCoordinate chip_coord = 3;
    if (has_chip_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chip_coord_);
    }

    // optional int32 host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->host_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpuChipInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.TpuChipInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TpuChipInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpuChipInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.TpuChipInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.TpuChipInfo)
    MergeFrom(*source);
  }
}

void TpuChipInfo::MergeFrom(const TpuChipInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.TpuChipInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  core_.MergeFrom(from.core_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_chip_coord()->::tpu_driver::ChipCoordinate::MergeFrom(from.chip_coord());
    }
    if (cached_has_bits & 0x00000002u) {
      host_id_ = from.host_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TpuChipInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.TpuChipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpuChipInfo::CopyFrom(const TpuChipInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.TpuChipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpuChipInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->core())) return false;
  if (has_chip_coord()) {
    if (!this->chip_coord_->IsInitialized()) return false;
  }
  return true;
}

void TpuChipInfo::Swap(TpuChipInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpuChipInfo::InternalSwap(TpuChipInfo* other) {
  using std::swap;
  CastToBase(&core_)->InternalSwap(CastToBase(&other->core_));
  swap(chip_coord_, other->chip_coord_);
  swap(host_id_, other->host_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TpuChipInfo::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CpuInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CpuInfo::kNumCpuCoresFieldNumber;
const int CpuInfo::kCpuLoadAverage1MinFieldNumber;
const int CpuInfo::kRamBytesTotalFieldNumber;
const int CpuInfo::kRamBytesAvailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CpuInfo::CpuInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_CpuInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.CpuInfo)
}
CpuInfo::CpuInfo(const CpuInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_cpu_cores_, &from.num_cpu_cores_,
    static_cast<size_t>(reinterpret_cast<char*>(&ram_bytes_available_) -
    reinterpret_cast<char*>(&num_cpu_cores_)) + sizeof(ram_bytes_available_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.CpuInfo)
}

void CpuInfo::SharedCtor() {
  ::memset(&num_cpu_cores_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ram_bytes_available_) -
      reinterpret_cast<char*>(&num_cpu_cores_)) + sizeof(ram_bytes_available_));
}

CpuInfo::~CpuInfo() {
  // @@protoc_insertion_point(destructor:tpu_driver.CpuInfo)
  SharedDtor();
}

void CpuInfo::SharedDtor() {
}

void CpuInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CpuInfo::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CpuInfo& CpuInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_CpuInfo.base);
  return *internal_default_instance();
}


void CpuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.CpuInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&num_cpu_cores_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ram_bytes_available_) -
        reinterpret_cast<char*>(&num_cpu_cores_)) + sizeof(ram_bytes_available_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CpuInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.CpuInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 num_cpu_cores = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_cpu_cores();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_cpu_cores_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float cpu_load_average_1min = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_cpu_load_average_1min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cpu_load_average_1min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 ram_bytes_total = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {
          set_has_ram_bytes_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ram_bytes_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 ram_bytes_available = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 808 & 0xFF */)) {
          set_has_ram_bytes_available();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ram_bytes_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.CpuInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.CpuInfo)
  return false;
#undef DO_
}

void CpuInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.CpuInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 num_cpu_cores = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_cpu_cores(), output);
  }

  // required float cpu_load_average_1min = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->cpu_load_average_1min(), output);
  }

  // required int64 ram_bytes_total = 100;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(100, this->ram_bytes_total(), output);
  }

  // required int64 ram_bytes_available = 101;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(101, this->ram_bytes_available(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.CpuInfo)
}

::google::protobuf::uint8* CpuInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.CpuInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 num_cpu_cores = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_cpu_cores(), target);
  }

  // required float cpu_load_average_1min = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->cpu_load_average_1min(), target);
  }

  // required int64 ram_bytes_total = 100;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(100, this->ram_bytes_total(), target);
  }

  // required int64 ram_bytes_available = 101;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(101, this->ram_bytes_available(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.CpuInfo)
  return target;
}

size_t CpuInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tpu_driver.CpuInfo)
  size_t total_size = 0;

  if (has_num_cpu_cores()) {
    // required int32 num_cpu_cores = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_cpu_cores());
  }

  if (has_cpu_load_average_1min()) {
    // required float cpu_load_average_1min = 2;
    total_size += 1 + 4;
  }

  if (has_ram_bytes_total()) {
    // required int64 ram_bytes_total = 100;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ram_bytes_total());
  }

  if (has_ram_bytes_available()) {
    // required int64 ram_bytes_available = 101;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ram_bytes_available());
  }

  return total_size;
}
size_t CpuInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.CpuInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 num_cpu_cores = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_cpu_cores());

    // required float cpu_load_average_1min = 2;
    total_size += 1 + 4;

    // required int64 ram_bytes_total = 100;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ram_bytes_total());

    // required int64 ram_bytes_available = 101;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ram_bytes_available());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CpuInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.CpuInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CpuInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CpuInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.CpuInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.CpuInfo)
    MergeFrom(*source);
  }
}

void CpuInfo::MergeFrom(const CpuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.CpuInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      num_cpu_cores_ = from.num_cpu_cores_;
    }
    if (cached_has_bits & 0x00000002u) {
      cpu_load_average_1min_ = from.cpu_load_average_1min_;
    }
    if (cached_has_bits & 0x00000004u) {
      ram_bytes_total_ = from.ram_bytes_total_;
    }
    if (cached_has_bits & 0x00000008u) {
      ram_bytes_available_ = from.ram_bytes_available_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CpuInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.CpuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuInfo::CopyFrom(const CpuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.CpuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void CpuInfo::Swap(CpuInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CpuInfo::InternalSwap(CpuInfo* other) {
  using std::swap;
  swap(num_cpu_cores_, other->num_cpu_cores_);
  swap(cpu_load_average_1min_, other->cpu_load_average_1min_);
  swap(ram_bytes_total_, other->ram_bytes_total_);
  swap(ram_bytes_available_, other->ram_bytes_available_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CpuInfo::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemInfo::InitAsDefaultInstance() {
  ::tpu_driver::_SystemInfo_default_instance_._instance.get_mutable()->cpu_ = const_cast< ::tpu_driver::CpuInfo*>(
      ::tpu_driver::CpuInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemInfo::kTpuChipFieldNumber;
const int SystemInfo::kCpuFieldNumber;
const int SystemInfo::kLocalCoreFieldNumber;
const int SystemInfo::kHostIdFieldNumber;
const int SystemInfo::kHostCountFieldNumber;
const int SystemInfo::kChipCountFieldNumber;
const int SystemInfo::kCoreCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemInfo::SystemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_SystemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.SystemInfo)
}
SystemInfo::SystemInfo(const SystemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tpu_chip_(from.tpu_chip_),
      local_core_(from.local_core_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cpu()) {
    cpu_ = new ::tpu_driver::CpuInfo(*from.cpu_);
  } else {
    cpu_ = NULL;
  }
  ::memcpy(&host_id_, &from.host_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&core_count_) -
    reinterpret_cast<char*>(&host_id_)) + sizeof(core_count_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.SystemInfo)
}

void SystemInfo::SharedCtor() {
  ::memset(&cpu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&core_count_) -
      reinterpret_cast<char*>(&cpu_)) + sizeof(core_count_));
}

SystemInfo::~SystemInfo() {
  // @@protoc_insertion_point(destructor:tpu_driver.SystemInfo)
  SharedDtor();
}

void SystemInfo::SharedDtor() {
  if (this != internal_default_instance()) delete cpu_;
}

void SystemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SystemInfo::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemInfo& SystemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_SystemInfo.base);
  return *internal_default_instance();
}


void SystemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.SystemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tpu_chip_.Clear();
  local_core_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(cpu_ != NULL);
    cpu_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&host_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&core_count_) -
        reinterpret_cast<char*>(&host_id_)) + sizeof(core_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SystemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.SystemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tpu_driver.TpuChipInfo tpu_chip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tpu_chip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .tpu_driver.CpuInfo cpu = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tpu_driver.TpuCoreInfo local_core = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_local_core()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 host_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_host_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 host_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_host_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chip_count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_chip_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chip_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 core_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_core_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &core_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.SystemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.SystemInfo)
  return false;
#undef DO_
}

void SystemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.SystemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tpu_driver.TpuChipInfo tpu_chip = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tpu_chip_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tpu_chip(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required .tpu_driver.CpuInfo cpu = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cpu(), output);
  }

  // repeated .tpu_driver.TpuCoreInfo local_core = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->local_core_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->local_core(static_cast<int>(i)),
      output);
  }

  // optional int32 host_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->host_id(), output);
  }

  // optional int32 host_count = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->host_count(), output);
  }

  // optional int32 chip_count = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->chip_count(), output);
  }

  // optional int32 core_count = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->core_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.SystemInfo)
}

::google::protobuf::uint8* SystemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.SystemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tpu_driver.TpuChipInfo tpu_chip = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tpu_chip_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tpu_chip(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required .tpu_driver.CpuInfo cpu = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cpu(), deterministic, target);
  }

  // repeated .tpu_driver.TpuCoreInfo local_core = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->local_core_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->local_core(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 host_id = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->host_id(), target);
  }

  // optional int32 host_count = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->host_count(), target);
  }

  // optional int32 chip_count = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->chip_count(), target);
  }

  // optional int32 core_count = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->core_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.SystemInfo)
  return target;
}

size_t SystemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.SystemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .tpu_driver.CpuInfo cpu = 2;
  if (has_cpu()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpu_);
  }
  // repeated .tpu_driver.TpuChipInfo tpu_chip = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tpu_chip_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tpu_chip(static_cast<int>(i)));
    }
  }

  // repeated .tpu_driver.TpuCoreInfo local_core = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->local_core_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->local_core(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 30u) {
    // optional int32 host_id = 4;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->host_id());
    }

    // optional int32 host_count = 5;
    if (has_host_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->host_count());
    }

    // optional int32 chip_count = 6;
    if (has_chip_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chip_count());
    }

    // optional int32 core_count = 7;
    if (has_core_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->core_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.SystemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.SystemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.SystemInfo)
    MergeFrom(*source);
  }
}

void SystemInfo::MergeFrom(const SystemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.SystemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tpu_chip_.MergeFrom(from.tpu_chip_);
  local_core_.MergeFrom(from.local_core_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_cpu()->::tpu_driver::CpuInfo::MergeFrom(from.cpu());
    }
    if (cached_has_bits & 0x00000002u) {
      host_id_ = from.host_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      host_count_ = from.host_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      chip_count_ = from.chip_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      core_count_ = from.core_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SystemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.SystemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfo::CopyFrom(const SystemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.SystemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tpu_chip())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->local_core())) return false;
  if (has_cpu()) {
    if (!this->cpu_->IsInitialized()) return false;
  }
  return true;
}

void SystemInfo::Swap(SystemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemInfo::InternalSwap(SystemInfo* other) {
  using std::swap;
  CastToBase(&tpu_chip_)->InternalSwap(CastToBase(&other->tpu_chip_));
  CastToBase(&local_core_)->InternalSwap(CastToBase(&other->local_core_));
  swap(cpu_, other->cpu_);
  swap(host_id_, other->host_id_);
  swap(host_count_, other->host_count_);
  swap(chip_count_, other->chip_count_);
  swap(core_count_, other->core_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SystemInfo::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpuDriverConfig_GrpcConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpuDriverConfig_GrpcConfig::kConnectionTimeoutSecsFieldNumber;
const int TpuDriverConfig_GrpcConfig::kKeepaliveTimeoutSecsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpuDriverConfig_GrpcConfig::TpuDriverConfig_GrpcConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuDriverConfig_GrpcConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.TpuDriverConfig.GrpcConfig)
}
TpuDriverConfig_GrpcConfig::TpuDriverConfig_GrpcConfig(const TpuDriverConfig_GrpcConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&connection_timeout_secs_, &from.connection_timeout_secs_,
    static_cast<size_t>(reinterpret_cast<char*>(&keepalive_timeout_secs_) -
    reinterpret_cast<char*>(&connection_timeout_secs_)) + sizeof(keepalive_timeout_secs_));
  // @@protoc_insertion_point(copy_constructor:tpu_driver.TpuDriverConfig.GrpcConfig)
}

void TpuDriverConfig_GrpcConfig::SharedCtor() {
  connection_timeout_secs_ = GOOGLE_LONGLONG(30);
  keepalive_timeout_secs_ = GOOGLE_LONGLONG(30);
}

TpuDriverConfig_GrpcConfig::~TpuDriverConfig_GrpcConfig() {
  // @@protoc_insertion_point(destructor:tpu_driver.TpuDriverConfig.GrpcConfig)
  SharedDtor();
}

void TpuDriverConfig_GrpcConfig::SharedDtor() {
}

void TpuDriverConfig_GrpcConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TpuDriverConfig_GrpcConfig::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpuDriverConfig_GrpcConfig& TpuDriverConfig_GrpcConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuDriverConfig_GrpcConfig.base);
  return *internal_default_instance();
}


void TpuDriverConfig_GrpcConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    connection_timeout_secs_ = GOOGLE_LONGLONG(30);
    keepalive_timeout_secs_ = GOOGLE_LONGLONG(30);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TpuDriverConfig_GrpcConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 connection_timeout_secs = 1 [default = 30];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_connection_timeout_secs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &connection_timeout_secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 keepalive_timeout_secs = 2 [default = 30];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_keepalive_timeout_secs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &keepalive_timeout_secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.TpuDriverConfig.GrpcConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.TpuDriverConfig.GrpcConfig)
  return false;
#undef DO_
}

void TpuDriverConfig_GrpcConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 connection_timeout_secs = 1 [default = 30];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->connection_timeout_secs(), output);
  }

  // optional int64 keepalive_timeout_secs = 2 [default = 30];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->keepalive_timeout_secs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.TpuDriverConfig.GrpcConfig)
}

::google::protobuf::uint8* TpuDriverConfig_GrpcConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 connection_timeout_secs = 1 [default = 30];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->connection_timeout_secs(), target);
  }

  // optional int64 keepalive_timeout_secs = 2 [default = 30];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->keepalive_timeout_secs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.TpuDriverConfig.GrpcConfig)
  return target;
}

size_t TpuDriverConfig_GrpcConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 connection_timeout_secs = 1 [default = 30];
    if (has_connection_timeout_secs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->connection_timeout_secs());
    }

    // optional int64 keepalive_timeout_secs = 2 [default = 30];
    if (has_keepalive_timeout_secs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->keepalive_timeout_secs());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpuDriverConfig_GrpcConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const TpuDriverConfig_GrpcConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpuDriverConfig_GrpcConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.TpuDriverConfig.GrpcConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.TpuDriverConfig.GrpcConfig)
    MergeFrom(*source);
  }
}

void TpuDriverConfig_GrpcConfig::MergeFrom(const TpuDriverConfig_GrpcConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      connection_timeout_secs_ = from.connection_timeout_secs_;
    }
    if (cached_has_bits & 0x00000002u) {
      keepalive_timeout_secs_ = from.keepalive_timeout_secs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TpuDriverConfig_GrpcConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpuDriverConfig_GrpcConfig::CopyFrom(const TpuDriverConfig_GrpcConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.TpuDriverConfig.GrpcConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpuDriverConfig_GrpcConfig::IsInitialized() const {
  return true;
}

void TpuDriverConfig_GrpcConfig::Swap(TpuDriverConfig_GrpcConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpuDriverConfig_GrpcConfig::InternalSwap(TpuDriverConfig_GrpcConfig* other) {
  using std::swap;
  swap(connection_timeout_secs_, other->connection_timeout_secs_);
  swap(keepalive_timeout_secs_, other->keepalive_timeout_secs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TpuDriverConfig_GrpcConfig::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpuDriverConfig::InitAsDefaultInstance() {
  ::tpu_driver::_TpuDriverConfig_default_instance_._instance.get_mutable()->grpc_ = const_cast< ::tpu_driver::TpuDriverConfig_GrpcConfig*>(
      ::tpu_driver::TpuDriverConfig_GrpcConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpuDriverConfig::kWorkerFieldNumber;
const int TpuDriverConfig::kGrpcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpuDriverConfig::TpuDriverConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuDriverConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tpu_driver.TpuDriverConfig)
}
TpuDriverConfig::TpuDriverConfig(const TpuDriverConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_worker()) {
    worker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_);
  }
  if (from.has_grpc()) {
    grpc_ = new ::tpu_driver::TpuDriverConfig_GrpcConfig(*from.grpc_);
  } else {
    grpc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tpu_driver.TpuDriverConfig)
}

void TpuDriverConfig::SharedCtor() {
  worker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grpc_ = NULL;
}

TpuDriverConfig::~TpuDriverConfig() {
  // @@protoc_insertion_point(destructor:tpu_driver.TpuDriverConfig)
  SharedDtor();
}

void TpuDriverConfig::SharedDtor() {
  worker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete grpc_;
}

void TpuDriverConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TpuDriverConfig::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpuDriverConfig& TpuDriverConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::scc_info_TpuDriverConfig.base);
  return *internal_default_instance();
}


void TpuDriverConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tpu_driver.TpuDriverConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      worker_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(grpc_ != NULL);
      grpc_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TpuDriverConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tpu_driver.TpuDriverConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string worker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->worker().data(), static_cast<int>(this->worker().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tpu_driver.TpuDriverConfig.worker");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tpu_driver.TpuDriverConfig.GrpcConfig grpc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_grpc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tpu_driver.TpuDriverConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tpu_driver.TpuDriverConfig)
  return false;
#undef DO_
}

void TpuDriverConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tpu_driver.TpuDriverConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string worker = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->worker().data(), static_cast<int>(this->worker().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tpu_driver.TpuDriverConfig.worker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->worker(), output);
  }

  // optional .tpu_driver.TpuDriverConfig.GrpcConfig grpc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_grpc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tpu_driver.TpuDriverConfig)
}

::google::protobuf::uint8* TpuDriverConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tpu_driver.TpuDriverConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string worker = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->worker().data(), static_cast<int>(this->worker().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tpu_driver.TpuDriverConfig.worker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->worker(), target);
  }

  // optional .tpu_driver.TpuDriverConfig.GrpcConfig grpc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_grpc(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpu_driver.TpuDriverConfig)
  return target;
}

size_t TpuDriverConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpu_driver.TpuDriverConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string worker = 1;
    if (has_worker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->worker());
    }

    // optional .tpu_driver.TpuDriverConfig.GrpcConfig grpc = 2;
    if (has_grpc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *grpc_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpuDriverConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tpu_driver.TpuDriverConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const TpuDriverConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpuDriverConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tpu_driver.TpuDriverConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tpu_driver.TpuDriverConfig)
    MergeFrom(*source);
  }
}

void TpuDriverConfig::MergeFrom(const TpuDriverConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tpu_driver.TpuDriverConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_worker();
      worker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_grpc()->::tpu_driver::TpuDriverConfig_GrpcConfig::MergeFrom(from.grpc());
    }
  }
}

void TpuDriverConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tpu_driver.TpuDriverConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpuDriverConfig::CopyFrom(const TpuDriverConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpu_driver.TpuDriverConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpuDriverConfig::IsInitialized() const {
  return true;
}

void TpuDriverConfig::Swap(TpuDriverConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpuDriverConfig::InternalSwap(TpuDriverConfig* other) {
  using std::swap;
  worker_.Swap(&other->worker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(grpc_, other->grpc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TpuDriverConfig::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fpython_2ftpu_5fdriver_2ftpu_5fdriver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tpu_driver
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::ChipCoordinate* Arena::CreateMaybeMessage< ::tpu_driver::ChipCoordinate >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::ChipCoordinate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::TpuCoreInfo* Arena::CreateMaybeMessage< ::tpu_driver::TpuCoreInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::TpuCoreInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::TpuChipInfo* Arena::CreateMaybeMessage< ::tpu_driver::TpuChipInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::TpuChipInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::CpuInfo* Arena::CreateMaybeMessage< ::tpu_driver::CpuInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::CpuInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::SystemInfo* Arena::CreateMaybeMessage< ::tpu_driver::SystemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::SystemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::TpuDriverConfig_GrpcConfig* Arena::CreateMaybeMessage< ::tpu_driver::TpuDriverConfig_GrpcConfig >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::TpuDriverConfig_GrpcConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tpu_driver::TpuDriverConfig* Arena::CreateMaybeMessage< ::tpu_driver::TpuDriverConfig >(Arena* arena) {
  return Arena::CreateInternal< ::tpu_driver::TpuDriverConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
