// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/service/hlo.proto

#include "tensorflow/compiler/xla/service/hlo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BufferAllocationProto_Assigned;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CrossProgramPrefetch;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DynamicParameterBindingProto_Binding;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EntryFunctionAttributes_ShapeIndex;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HeapSimulatorTrace_Event;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HloInputOutputAliasProto_AliasEntryProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HloInstructionProto_SliceDimensions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HloModuleProto_ProfileInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HloPassMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HloScheduleProto_InstructionSequence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogicalBufferProto_Location;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<19> scc_info_HloInstructionProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BufferAllocationProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BufferAssignmentProto_BufferAlias;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DynamicParameterBindingProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EntryFunctionAttributes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EntryFunctionAttributes_BufferParameterAttributes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HeapSimulatorTrace;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HloInputOutputAliasProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HloScheduleProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HloScheduleProto_SequencesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LogicalBufferProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_HloComputationProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_HloProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_BufferAssignmentProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_HloModuleProto;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto
namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CholeskyOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConvolutionDimensionNumbers;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CustomCallOutputOperandAliasing;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DotDimensionNumbers;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GatherDimensionNumbers;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParameterReplication;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PrecisionConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReplicaGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScatterDimensionNumbers;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SourceTarget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TriangularSolveOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FrontendAttributes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LiteralProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OpMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PaddingConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProgramShapeProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShapeProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Window;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_OpSharding;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto
namespace xla {
class HloInstructionProto_SliceDimensionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloInstructionProto_SliceDimensions>
      _instance;
} _HloInstructionProto_SliceDimensions_default_instance_;
class HloInstructionProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloInstructionProto>
      _instance;
} _HloInstructionProto_default_instance_;
class HloComputationProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloComputationProto>
      _instance;
} _HloComputationProto_default_instance_;
class HloScheduleProto_InstructionSequenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloScheduleProto_InstructionSequence>
      _instance;
} _HloScheduleProto_InstructionSequence_default_instance_;
class HloScheduleProto_SequencesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloScheduleProto_SequencesEntry_DoNotUse>
      _instance;
} _HloScheduleProto_SequencesEntry_DoNotUse_default_instance_;
class HloScheduleProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloScheduleProto>
      _instance;
} _HloScheduleProto_default_instance_;
class HloInputOutputAliasProto_AliasEntryProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloInputOutputAliasProto_AliasEntryProto>
      _instance;
} _HloInputOutputAliasProto_AliasEntryProto_default_instance_;
class HloInputOutputAliasProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloInputOutputAliasProto>
      _instance;
} _HloInputOutputAliasProto_default_instance_;
class DynamicParameterBindingProto_BindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DynamicParameterBindingProto_Binding>
      _instance;
} _DynamicParameterBindingProto_Binding_default_instance_;
class DynamicParameterBindingProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DynamicParameterBindingProto>
      _instance;
} _DynamicParameterBindingProto_default_instance_;
class CrossProgramPrefetchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CrossProgramPrefetch>
      _instance;
} _CrossProgramPrefetch_default_instance_;
class HloModuleProto_ProfileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloModuleProto_ProfileInfo>
      _instance;
} _HloModuleProto_ProfileInfo_default_instance_;
class HloModuleProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloModuleProto>
      _instance;
} _HloModuleProto_default_instance_;
class LogicalBufferProto_LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicalBufferProto_Location>
      _instance;
} _LogicalBufferProto_Location_default_instance_;
class LogicalBufferProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicalBufferProto>
      _instance;
} _LogicalBufferProto_default_instance_;
class BufferAllocationProto_AssignedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BufferAllocationProto_Assigned>
      _instance;
} _BufferAllocationProto_Assigned_default_instance_;
class BufferAllocationProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BufferAllocationProto>
      _instance;
} _BufferAllocationProto_default_instance_;
class HeapSimulatorTrace_EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeapSimulatorTrace_Event>
      _instance;
} _HeapSimulatorTrace_Event_default_instance_;
class HeapSimulatorTraceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeapSimulatorTrace>
      _instance;
} _HeapSimulatorTrace_default_instance_;
class HloModuleGroupProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloModuleGroupProto>
      _instance;
} _HloModuleGroupProto_default_instance_;
class BufferAssignmentProto_BufferAliasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BufferAssignmentProto_BufferAlias>
      _instance;
} _BufferAssignmentProto_BufferAlias_default_instance_;
class BufferAssignmentProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BufferAssignmentProto>
      _instance;
} _BufferAssignmentProto_default_instance_;
class HloProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloProto>
      _instance;
} _HloProto_default_instance_;
class HloSnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloSnapshot>
      _instance;
} _HloSnapshot_default_instance_;
class HloModuleMetadataProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloModuleMetadataProto>
      _instance;
} _HloModuleMetadataProto_default_instance_;
class HloPassMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloPassMetadata>
      _instance;
} _HloPassMetadata_default_instance_;
class EntryFunctionAttributes_ShapeIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntryFunctionAttributes_ShapeIndex>
      _instance;
} _EntryFunctionAttributes_ShapeIndex_default_instance_;
class EntryFunctionAttributes_BufferParameterAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntryFunctionAttributes_BufferParameterAttributes>
      _instance;
} _EntryFunctionAttributes_BufferParameterAttributes_default_instance_;
class EntryFunctionAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntryFunctionAttributes>
      _instance;
} _EntryFunctionAttributes_default_instance_;
class GpuBefExecutableProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GpuBefExecutableProto>
      _instance;
} _GpuBefExecutableProto_default_instance_;
}  // namespace xla
namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto {
static void InitDefaultsHloInstructionProto_SliceDimensions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloInstructionProto_SliceDimensions_default_instance_;
    new (ptr) ::xla::HloInstructionProto_SliceDimensions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloInstructionProto_SliceDimensions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HloInstructionProto_SliceDimensions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHloInstructionProto_SliceDimensions}, {}};

static void InitDefaultsHloInstructionProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloInstructionProto_default_instance_;
    new (ptr) ::xla::HloInstructionProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloInstructionProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<19> scc_info_HloInstructionProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 19, InitDefaultsHloInstructionProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpMetadata.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_Window.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ConvolutionDimensionNumbers.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInstructionProto_SliceDimensions.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PaddingConfig.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DotDimensionNumbers.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GatherDimensionNumbers.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpSharding.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ReplicaGroup.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ScatterDimensionNumbers.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PrecisionConfig.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_SourceTarget.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_TriangularSolveOptions.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_CholeskyOptions.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ParameterReplication.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_CustomCallOutputOperandAliasing.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_FrontendAttributes.base,}};

static void InitDefaultsHloComputationProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloComputationProto_default_instance_;
    new (ptr) ::xla::HloComputationProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloComputationProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_HloComputationProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsHloComputationProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInstructionProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ProgramShapeProto.base,}};

static void InitDefaultsHloScheduleProto_InstructionSequence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloScheduleProto_InstructionSequence_default_instance_;
    new (ptr) ::xla::HloScheduleProto_InstructionSequence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloScheduleProto_InstructionSequence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HloScheduleProto_InstructionSequence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHloScheduleProto_InstructionSequence}, {}};

static void InitDefaultsHloScheduleProto_SequencesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloScheduleProto_SequencesEntry_DoNotUse_default_instance_;
    new (ptr) ::xla::HloScheduleProto_SequencesEntry_DoNotUse();
  }
  ::xla::HloScheduleProto_SequencesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HloScheduleProto_SequencesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHloScheduleProto_SequencesEntry_DoNotUse}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto_InstructionSequence.base,}};

static void InitDefaultsHloScheduleProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloScheduleProto_default_instance_;
    new (ptr) ::xla::HloScheduleProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloScheduleProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HloScheduleProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHloScheduleProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto_SequencesEntry_DoNotUse.base,}};

static void InitDefaultsHloInputOutputAliasProto_AliasEntryProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloInputOutputAliasProto_AliasEntryProto_default_instance_;
    new (ptr) ::xla::HloInputOutputAliasProto_AliasEntryProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloInputOutputAliasProto_AliasEntryProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HloInputOutputAliasProto_AliasEntryProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHloInputOutputAliasProto_AliasEntryProto}, {}};

static void InitDefaultsHloInputOutputAliasProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloInputOutputAliasProto_default_instance_;
    new (ptr) ::xla::HloInputOutputAliasProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloInputOutputAliasProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HloInputOutputAliasProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHloInputOutputAliasProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInputOutputAliasProto_AliasEntryProto.base,}};

static void InitDefaultsDynamicParameterBindingProto_Binding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DynamicParameterBindingProto_Binding_default_instance_;
    new (ptr) ::xla::DynamicParameterBindingProto_Binding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DynamicParameterBindingProto_Binding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DynamicParameterBindingProto_Binding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDynamicParameterBindingProto_Binding}, {}};

static void InitDefaultsDynamicParameterBindingProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DynamicParameterBindingProto_default_instance_;
    new (ptr) ::xla::DynamicParameterBindingProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DynamicParameterBindingProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DynamicParameterBindingProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDynamicParameterBindingProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_DynamicParameterBindingProto_Binding.base,}};

static void InitDefaultsCrossProgramPrefetch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_CrossProgramPrefetch_default_instance_;
    new (ptr) ::xla::CrossProgramPrefetch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::CrossProgramPrefetch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CrossProgramPrefetch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCrossProgramPrefetch}, {}};

static void InitDefaultsHloModuleProto_ProfileInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloModuleProto_ProfileInfo_default_instance_;
    new (ptr) ::xla::HloModuleProto_ProfileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloModuleProto_ProfileInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HloModuleProto_ProfileInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHloModuleProto_ProfileInfo}, {}};

static void InitDefaultsHloModuleProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloModuleProto_default_instance_;
    new (ptr) ::xla::HloModuleProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloModuleProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_HloModuleProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsHloModuleProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloComputationProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ProgramShapeProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInputOutputAliasProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_DynamicParameterBindingProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_CrossProgramPrefetch.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpSharding.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto_ProfileInfo.base,}};

static void InitDefaultsLogicalBufferProto_Location() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_LogicalBufferProto_Location_default_instance_;
    new (ptr) ::xla::LogicalBufferProto_Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::LogicalBufferProto_Location::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogicalBufferProto_Location =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogicalBufferProto_Location}, {}};

static void InitDefaultsLogicalBufferProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_LogicalBufferProto_default_instance_;
    new (ptr) ::xla::LogicalBufferProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::LogicalBufferProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogicalBufferProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogicalBufferProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto_Location.base,}};

static void InitDefaultsBufferAllocationProto_Assigned() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_BufferAllocationProto_Assigned_default_instance_;
    new (ptr) ::xla::BufferAllocationProto_Assigned();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::BufferAllocationProto_Assigned::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BufferAllocationProto_Assigned =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBufferAllocationProto_Assigned}, {}};

static void InitDefaultsBufferAllocationProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_BufferAllocationProto_default_instance_;
    new (ptr) ::xla::BufferAllocationProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::BufferAllocationProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BufferAllocationProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBufferAllocationProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAllocationProto_Assigned.base,}};

static void InitDefaultsHeapSimulatorTrace_Event() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HeapSimulatorTrace_Event_default_instance_;
    new (ptr) ::xla::HeapSimulatorTrace_Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HeapSimulatorTrace_Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeapSimulatorTrace_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeapSimulatorTrace_Event}, {}};

static void InitDefaultsHeapSimulatorTrace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HeapSimulatorTrace_default_instance_;
    new (ptr) ::xla::HeapSimulatorTrace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HeapSimulatorTrace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HeapSimulatorTrace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHeapSimulatorTrace}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HeapSimulatorTrace_Event.base,}};

static void InitDefaultsHloModuleGroupProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloModuleGroupProto_default_instance_;
    new (ptr) ::xla::HloModuleGroupProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloModuleGroupProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HloModuleGroupProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHloModuleGroupProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,}};

static void InitDefaultsBufferAssignmentProto_BufferAlias() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_BufferAssignmentProto_BufferAlias_default_instance_;
    new (ptr) ::xla::BufferAssignmentProto_BufferAlias();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::BufferAssignmentProto_BufferAlias::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BufferAssignmentProto_BufferAlias =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBufferAssignmentProto_BufferAlias}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto_Location.base,}};

static void InitDefaultsBufferAssignmentProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_BufferAssignmentProto_default_instance_;
    new (ptr) ::xla::BufferAssignmentProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::BufferAssignmentProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_BufferAssignmentProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsBufferAssignmentProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAssignmentProto_BufferAlias.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAllocationProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HeapSimulatorTrace.base,}};

static void InitDefaultsHloProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloProto_default_instance_;
    new (ptr) ::xla::HloProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_HloProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsHloProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAssignmentProto.base,}};

static void InitDefaultsHloSnapshot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloSnapshot_default_instance_;
    new (ptr) ::xla::HloSnapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloSnapshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_HloSnapshot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsHloSnapshot}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base,}};

static void InitDefaultsHloModuleMetadataProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloModuleMetadataProto_default_instance_;
    new (ptr) ::xla::HloModuleMetadataProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloModuleMetadataProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HloModuleMetadataProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHloModuleMetadataProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloPassMetadata.base,}};

static void InitDefaultsHloPassMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloPassMetadata_default_instance_;
    new (ptr) ::xla::HloPassMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloPassMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HloPassMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHloPassMetadata}, {}};

static void InitDefaultsEntryFunctionAttributes_ShapeIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_EntryFunctionAttributes_ShapeIndex_default_instance_;
    new (ptr) ::xla::EntryFunctionAttributes_ShapeIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::EntryFunctionAttributes_ShapeIndex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntryFunctionAttributes_ShapeIndex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntryFunctionAttributes_ShapeIndex}, {}};

static void InitDefaultsEntryFunctionAttributes_BufferParameterAttributes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_EntryFunctionAttributes_BufferParameterAttributes_default_instance_;
    new (ptr) ::xla::EntryFunctionAttributes_BufferParameterAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::EntryFunctionAttributes_BufferParameterAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EntryFunctionAttributes_BufferParameterAttributes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEntryFunctionAttributes_BufferParameterAttributes}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes_ShapeIndex.base,}};

static void InitDefaultsEntryFunctionAttributes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_EntryFunctionAttributes_default_instance_;
    new (ptr) ::xla::EntryFunctionAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::EntryFunctionAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EntryFunctionAttributes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEntryFunctionAttributes}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes_BufferParameterAttributes.base,}};

static void InitDefaultsGpuBefExecutableProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_GpuBefExecutableProto_default_instance_;
    new (ptr) ::xla::GpuBefExecutableProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::GpuBefExecutableProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GpuBefExecutableProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGpuBefExecutableProto}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HloInstructionProto_SliceDimensions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloInstructionProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloComputationProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloScheduleProto_InstructionSequence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloScheduleProto_SequencesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloScheduleProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloInputOutputAliasProto_AliasEntryProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloInputOutputAliasProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DynamicParameterBindingProto_Binding.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DynamicParameterBindingProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CrossProgramPrefetch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloModuleProto_ProfileInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloModuleProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogicalBufferProto_Location.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogicalBufferProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BufferAllocationProto_Assigned.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BufferAllocationProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeapSimulatorTrace_Event.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeapSimulatorTrace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloModuleGroupProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BufferAssignmentProto_BufferAlias.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BufferAssignmentProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloSnapshot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloModuleMetadataProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HloPassMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntryFunctionAttributes_ShapeIndex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntryFunctionAttributes_BufferParameterAttributes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntryFunctionAttributes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GpuBefExecutableProto.base);
}

::google::protobuf::Metadata file_level_metadata[30];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto_SliceDimensions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto_SliceDimensions, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto_SliceDimensions, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto_SliceDimensions, stride_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, literal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, parameter_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, fusion_kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, tuple_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, window_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, convolution_dimension_numbers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, feature_group_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, batch_group_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, slice_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, exponent_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, mantissa_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, dynamic_slice_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, padding_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, outfeed_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, distribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, epsilon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, feature_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, infeed_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, custom_call_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, outfeed_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, dot_dimension_numbers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, fft_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, fft_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, comparison_direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, gather_dimension_numbers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, gather_slice_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, channel_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, cost_estimate_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, operand_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, control_predecessor_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, called_computation_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, sharding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, backend_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, replica_groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, all_reduce_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, use_global_device_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, is_host_transfer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, is_stable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, scatter_dimension_numbers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, precision_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, source_target_pairs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, domain_entry_sharding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, domain_exit_sharding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, constrain_layout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, operand_shapes_with_layout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, triangular_solve_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, cholesky_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, parameter_replication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, outer_dimension_partitions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, custom_call_has_side_effect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, custom_call_output_operand_aliasing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, custom_call_schedule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, indices_are_sorted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, frontend_attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, unique_indices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, rng_algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, comparison_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, is_cross_program_prefetch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, padding_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInstructionProto, custom_call_api_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloComputationProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloComputationProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloComputationProto, instructions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloComputationProto, program_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloComputationProto, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloComputationProto, root_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloComputationProto, is_fusion_computation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloScheduleProto_InstructionSequence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloScheduleProto_InstructionSequence, instruction_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloScheduleProto_SequencesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloScheduleProto_SequencesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloScheduleProto_SequencesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloScheduleProto_SequencesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloScheduleProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloScheduleProto, sequences_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, output_shape_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, parameter_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, parameter_shape_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInputOutputAliasProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloInputOutputAliasProto, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DynamicParameterBindingProto_Binding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DynamicParameterBindingProto_Binding, dynamic_param_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DynamicParameterBindingProto_Binding, dynamic_param_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DynamicParameterBindingProto_Binding, target_param_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DynamicParameterBindingProto_Binding, target_param_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DynamicParameterBindingProto_Binding, target_param_dim_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DynamicParameterBindingProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DynamicParameterBindingProto, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CrossProgramPrefetch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CrossProgramPrefetch, parameter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CrossProgramPrefetch, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, profile_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, relative_speedup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, profile_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, compilation_event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, entry_computation_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, entry_computation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, computations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, host_program_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, schedule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, input_output_alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, dynamic_parameter_binding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, cross_program_prefetches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, is_dynamic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, spmd_output_sharding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, spmd_parameters_shardings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleProto, profile_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto_Location, computation_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto_Location, instruction_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto_Location, shape_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto, defined_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LogicalBufferProto, color_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto_Assigned, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto_Assigned, logical_buffer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto_Assigned, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto_Assigned, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, is_thread_local_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, is_tuple_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, is_entry_computation_parameter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, is_constant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, parameter_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, parameter_shape_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, maybe_live_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAllocationProto, assigned_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, buffer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, computation_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, instruction_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, share_with_canonical_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace, whole_module_simulation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HeapSimulatorTrace, buffer_allocation_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleGroupProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleGroupProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleGroupProto, hlo_modules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAssignmentProto_BufferAlias, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAssignmentProto_BufferAlias, source_buffer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAssignmentProto_BufferAlias, location_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAssignmentProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAssignmentProto, logical_buffers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAssignmentProto, buffer_aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAssignmentProto, buffer_allocations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::BufferAssignmentProto, heap_simulator_traces_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloProto, hlo_module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloProto, buffer_assignment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloSnapshot, hlo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloSnapshot, arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloSnapshot, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloSnapshot, execution_platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleMetadataProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleMetadataProto, canonical_module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleMetadataProto, module_group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleMetadataProto, original_module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleMetadataProto, partitioned_module_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloModuleMetadataProto, pass_metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, pass_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, pass_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, pipeline_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, dump_filenames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, module_changed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, module_group_module_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, start_timestamp_usec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloPassMetadata, end_timestamp_usec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_ShapeIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_ShapeIndex, indices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_BufferParameterAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_BufferParameterAttributes, lmhlo_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_BufferParameterAttributes, lmhlo_params_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_BufferParameterAttributes, lmhlo_param_shape_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_BufferParameterAttributes, lmhlo_constant_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_BufferParameterAttributes, lmhlo_must_alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes_BufferParameterAttributes, lmhlo_output_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes, buffers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::EntryFunctionAttributes, result_xla_shape_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GpuBefExecutableProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GpuBefExecutableProto, hlo_module_proto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GpuBefExecutableProto, bef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GpuBefExecutableProto, entry_func_attrs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xla::HloInstructionProto_SliceDimensions)},
  { 8, -1, sizeof(::xla::HloInstructionProto)},
  { 81, -1, sizeof(::xla::HloComputationProto)},
  { 92, -1, sizeof(::xla::HloScheduleProto_InstructionSequence)},
  { 98, 105, sizeof(::xla::HloScheduleProto_SequencesEntry_DoNotUse)},
  { 107, -1, sizeof(::xla::HloScheduleProto)},
  { 113, -1, sizeof(::xla::HloInputOutputAliasProto_AliasEntryProto)},
  { 122, -1, sizeof(::xla::HloInputOutputAliasProto)},
  { 128, -1, sizeof(::xla::DynamicParameterBindingProto_Binding)},
  { 138, -1, sizeof(::xla::DynamicParameterBindingProto)},
  { 144, -1, sizeof(::xla::CrossProgramPrefetch)},
  { 151, -1, sizeof(::xla::HloModuleProto_ProfileInfo)},
  { 160, -1, sizeof(::xla::HloModuleProto)},
  { 179, -1, sizeof(::xla::LogicalBufferProto_Location)},
  { 187, -1, sizeof(::xla::LogicalBufferProto)},
  { 196, -1, sizeof(::xla::BufferAllocationProto_Assigned)},
  { 204, -1, sizeof(::xla::BufferAllocationProto)},
  { 220, -1, sizeof(::xla::HeapSimulatorTrace_Event)},
  { 230, -1, sizeof(::xla::HeapSimulatorTrace)},
  { 238, -1, sizeof(::xla::HloModuleGroupProto)},
  { 245, -1, sizeof(::xla::BufferAssignmentProto_BufferAlias)},
  { 252, -1, sizeof(::xla::BufferAssignmentProto)},
  { 261, -1, sizeof(::xla::HloProto)},
  { 268, -1, sizeof(::xla::HloSnapshot)},
  { 277, -1, sizeof(::xla::HloModuleMetadataProto)},
  { 287, -1, sizeof(::xla::HloPassMetadata)},
  { 301, -1, sizeof(::xla::EntryFunctionAttributes_ShapeIndex)},
  { 307, -1, sizeof(::xla::EntryFunctionAttributes_BufferParameterAttributes)},
  { 318, -1, sizeof(::xla::EntryFunctionAttributes)},
  { 325, -1, sizeof(::xla::GpuBefExecutableProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloInstructionProto_SliceDimensions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloInstructionProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloComputationProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloScheduleProto_InstructionSequence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloScheduleProto_SequencesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloScheduleProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloInputOutputAliasProto_AliasEntryProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloInputOutputAliasProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DynamicParameterBindingProto_Binding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DynamicParameterBindingProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_CrossProgramPrefetch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloModuleProto_ProfileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloModuleProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_LogicalBufferProto_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_LogicalBufferProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_BufferAllocationProto_Assigned_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_BufferAllocationProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HeapSimulatorTrace_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HeapSimulatorTrace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloModuleGroupProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_BufferAssignmentProto_BufferAlias_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_BufferAssignmentProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloModuleMetadataProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloPassMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_EntryFunctionAttributes_ShapeIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_EntryFunctionAttributes_BufferParameterAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_EntryFunctionAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_GpuBefExecutableProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/compiler/xla/service/hlo.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)tensorflow/compiler/xla/service/hlo.pr"
      "oto\022\003xla\032&tensorflow/compiler/xla/xla_da"
      "ta.proto\"\237\025\n\023HloInstructionProto\022\014\n\004name"
      "\030\001 \001(\t\022\016\n\006opcode\030\002 \001(\t\022\036\n\005shape\030\003 \001(\0132\017."
      "xla.ShapeProto\022!\n\010metadata\030\007 \001(\0132\017.xla.O"
      "pMetadata\022\"\n\007literal\030\010 \001(\0132\021.xla.Literal"
      "Proto\022\030\n\020parameter_number\030\t \001(\003\022\023\n\013fusio"
      "n_kind\030\013 \001(\t\022\023\n\013tuple_index\030\r \001(\003\022\022\n\ndim"
      "ensions\030\016 \003(\003\022\033\n\006window\030\017 \001(\0132\013.xla.Wind"
      "ow\022G\n\035convolution_dimension_numbers\030\020 \001("
      "\0132 .xla.ConvolutionDimensionNumbers\022\033\n\023f"
      "eature_group_count\0302 \001(\003\022\031\n\021batch_group_"
      "count\030: \001(\003\022B\n\020slice_dimensions\030\021 \003(\0132(."
      "xla.HloInstructionProto.SliceDimensions\022"
      "\025\n\rexponent_bits\030\022 \001(\005\022\025\n\rmantissa_bits\030"
      "\023 \001(\005\022\033\n\023dynamic_slice_sizes\030\024 \003(\003\022*\n\016pa"
      "dding_config\030\025 \001(\0132\022.xla.PaddingConfig\022\026"
      "\n\016outfeed_config\030\026 \001(\014\022-\n\014distribution\030\027"
      " \001(\0162\027.xla.RandomDistribution\022\017\n\007epsilon"
      "\030\030 \001(\002\022\025\n\rfeature_index\030\031 \001(\003\022\022\n\nchannel"
      "_id\030\032 \001(\003\022\025\n\rinfeed_config\030\033 \001(\014\022\032\n\022cust"
      "om_call_target\030\034 \001(\t\022&\n\routfeed_shape\030\035 "
      "\001(\0132\017.xla.ShapeProto\0227\n\025dot_dimension_nu"
      "mbers\030\036 \001(\0132\030.xla.DotDimensionNumbers\022\036\n"
      "\010fft_type\030\037 \001(\0162\014.xla.FftType\022\022\n\nfft_len"
      "gth\030  \003(\003\022\034\n\024comparison_direction\030\? \001(\t\022"
      "=\n\030gather_dimension_numbers\030! \001(\0132\033.xla."
      "GatherDimensionNumbers\022\032\n\022gather_slice_s"
      "izes\030\" \003(\003\022\024\n\014channel_name\030) \001(\t\022\030\n\020cost"
      "_estimate_ns\030* \001(\003\022\n\n\002id\030# \001(\003\022\023\n\013operan"
      "d_ids\030$ \003(\003\022\037\n\027control_predecessor_ids\030%"
      " \003(\003\022\036\n\026called_computation_ids\030& \003(\003\022!\n\010"
      "sharding\030( \001(\0132\017.xla.OpSharding\022\026\n\016backe"
      "nd_config\030+ \001(\014\022)\n\016replica_groups\0301 \003(\0132"
      "\021.xla.ReplicaGroup\022\031\n\rall_reduce_id\030- \001("
      "\003B\002\030\001\022\035\n\025use_global_device_ids\030G \001(\010\022\030\n\020"
      "is_host_transfer\030/ \001(\010\022\021\n\tis_stable\030< \001("
      "\010\022\?\n\031scatter_dimension_numbers\0300 \001(\0132\034.x"
      "la.ScatterDimensionNumbers\022.\n\020precision_"
      "config\0303 \001(\0132\024.xla.PrecisionConfig\022.\n\023so"
      "urce_target_pairs\0304 \003(\0132\021.xla.SourceTarg"
      "et\022.\n\025domain_entry_sharding\0306 \001(\0132\017.xla."
      "OpSharding\022-\n\024domain_exit_sharding\0307 \001(\013"
      "2\017.xla.OpSharding\022\030\n\020constrain_layout\0308 "
      "\001(\010\0223\n\032operand_shapes_with_layout\0309 \003(\0132"
      "\017.xla.ShapeProto\022=\n\030triangular_solve_opt"
      "ions\030; \001(\0132\033.xla.TriangularSolveOptions\022"
      ".\n\020cholesky_options\030> \001(\0132\024.xla.Cholesky"
      "Options\0228\n\025parameter_replication\030= \001(\0132\031"
      ".xla.ParameterReplication\022\"\n\032outer_dimen"
      "sion_partitions\030@ \003(\003\022#\n\033custom_call_has"
      "_side_effect\030A \001(\010\022Q\n#custom_call_output"
      "_operand_aliasing\030J \003(\0132$.xla.CustomCall"
      "OutputOperandAliasing\0225\n\024custom_call_sch"
      "edule\030L \001(\0162\027.xla.CustomCallSchedule\022\r\n\005"
      "delta\030B \001(\003\022\032\n\022indices_are_sorted\030C \001(\010\022"
      "4\n\023frontend_attributes\030D \001(\0132\027.xla.Front"
      "endAttributes\022\026\n\016unique_indices\030E \001(\010\022+\n"
      "\rrng_algorithm\030F \001(\0162\024.xla.RandomAlgorit"
      "hm\022\027\n\017comparison_type\030H \001(\t\022!\n\031is_cross_"
      "program_prefetch\030I \001(\010\022&\n\014padding_type\030K"
      " \001(\0162\020.xla.PaddingType\022:\n\027custom_call_ap"
      "i_version\030M \001(\0162\031.xla.CustomCallApiVersi"
      "on\032\?\n\017SliceDimensions\022\r\n\005start\030\001 \001(\003\022\r\n\005"
      "limit\030\002 \001(\003\022\016\n\006stride\030\003 \001(\003J\004\010\n\020\013J\004\010\014\020\rJ"
      "\004\010\004\020\005J\004\010\005\020\006J\004\010\006\020\007J\004\010,\020-J\004\0105\0206J\004\010.\020/R\016par"
      "ameter_nameR\036fused_instructions_computat"
      "ionR\roperand_namesR\031control_predecessor_"
      "namesR\030called_computation_namesR\021replica"
      "_group_idsR\022custom_call_opaqueR\022all_redu"
      "ce_barrier\"\317\001\n\023HloComputationProto\022\014\n\004na"
      "me\030\001 \001(\t\022.\n\014instructions\030\002 \003(\0132\030.xla.Hlo"
      "InstructionProto\022-\n\rprogram_shape\030\004 \001(\0132"
      "\026.xla.ProgramShapeProto\022\n\n\002id\030\005 \001(\003\022\017\n\007r"
      "oot_id\030\006 \001(\003\022\035\n\025is_fusion_computation\030\007 "
      "\001(\010J\004\010\003\020\004R\troot_name\"\330\001\n\020HloScheduleProt"
      "o\0227\n\tsequences\030\001 \003(\0132$.xla.HloSchedulePr"
      "oto.SequencesEntry\032.\n\023InstructionSequenc"
      "e\022\027\n\017instruction_ids\030\001 \003(\003\032[\n\016SequencesE"
      "ntry\022\013\n\003key\030\001 \001(\003\0228\n\005value\030\002 \001(\0132).xla.H"
      "loScheduleProto.InstructionSequence:\0028\001\""
      "\333\001\n\030HloInputOutputAliasProto\022>\n\007entries\030"
      "\001 \003(\0132-.xla.HloInputOutputAliasProto.Ali"
      "asEntryProto\032\177\n\017AliasEntryProto\022\032\n\022outpu"
      "t_shape_index\030\001 \003(\003\022\030\n\020parameter_number\030"
      "\002 \001(\003\022\035\n\025parameter_shape_index\030\003 \003(\003\022\027\n\004"
      "kind\030\004 \001(\0162\t.xla.Kind\"\362\001\n\034DynamicParamet"
      "erBindingProto\022:\n\007entries\030\001 \003(\0132).xla.Dy"
      "namicParameterBindingProto.Binding\032\225\001\n\007B"
      "inding\022\031\n\021dynamic_param_num\030\001 \001(\003\022\033\n\023dyn"
      "amic_param_index\030\002 \003(\003\022\030\n\020target_param_n"
      "um\030\003 \001(\003\022\032\n\022target_param_index\030\004 \003(\003\022\034\n\024"
      "target_param_dim_num\030\005 \001(\003\"8\n\024CrossProgr"
      "amPrefetch\022\021\n\tparameter\030\001 \001(\003\022\r\n\005index\030\002"
      " \003(\003\"\336\006\n\016HloModuleProto\022\014\n\004name\030\001 \001(\t\022\036\n"
      "\026entry_computation_name\030\002 \001(\t\022\034\n\024entry_c"
      "omputation_id\030\006 \001(\003\022.\n\014computations\030\003 \003("
      "\0132\030.xla.HloComputationProto\0222\n\022host_prog"
      "ram_shape\030\004 \001(\0132\026.xla.ProgramShapeProto\022"
      "\n\n\002id\030\005 \001(\003\022\'\n\010schedule\030\007 \001(\0132\025.xla.HloS"
      "cheduleProto\0229\n\022input_output_alias\030\010 \001(\013"
      "2\035.xla.HloInputOutputAliasProto\022D\n\031dynam"
      "ic_parameter_binding\030\t \001(\0132!.xla.Dynamic"
      "ParameterBindingProto\022;\n\030cross_program_p"
      "refetches\030\n \003(\0132\031.xla.CrossProgramPrefet"
      "ch\022\022\n\nis_dynamic\030\013 \001(\010\022-\n\024spmd_output_sh"
      "arding\030\014 \001(\0132\017.xla.OpSharding\0222\n\031spmd_pa"
      "rameters_shardings\030\016 \003(\0132\017.xla.OpShardin"
      "g\0225\n\014profile_info\030\r \003(\0132\037.xla.HloModuleP"
      "roto.ProfileInfo\032\274\001\n\013ProfileInfo\0225\n\014prof"
      "ile_type\030\001 \001(\0162\037.xla.HloModuleProto.Prof"
      "ileType\022\030\n\020relative_speedup\030\002 \001(\001\022*\n\016pro"
      "file_source\030\003 \001(\0162\022.xla.ProfileSource\0220\n"
      "\021compilation_event\030\004 \001(\0162\025.xla.Compilati"
      "onEvent\"<\n\013ProfileType\022\013\n\007INVALID\020\000\022\010\n\004F"
      "LAG\020\001\022\n\n\006FUSION\020\002\022\n\n\006LAYOUT\020\003\"\310\001\n\022Logica"
      "lBufferProto\022\n\n\002id\030\001 \001(\003\022\014\n\004size\030\002 \001(\003\0224"
      "\n\ndefined_at\030\003 \001(\0132 .xla.LogicalBufferPr"
      "oto.Location\022\r\n\005color\030\004 \001(\003\032S\n\010Location\022"
      "\030\n\020computation_name\030\001 \001(\t\022\030\n\020instruction"
      "_name\030\002 \001(\t\022\023\n\013shape_index\030\003 \003(\003\"\370\002\n\025Buf"
      "ferAllocationProto\022\r\n\005index\030\001 \001(\003\022\014\n\004siz"
      "e\030\002 \001(\003\022\027\n\017is_thread_local\030\003 \001(\010\022\020\n\010is_t"
      "uple\030\013 \001(\010\022&\n\036is_entry_computation_param"
      "eter\030\005 \001(\010\022\023\n\013is_constant\030\014 \001(\010\022\030\n\020param"
      "eter_number\030\006 \001(\003\022\035\n\025parameter_shape_ind"
      "ex\030\n \003(\003\022\026\n\016maybe_live_out\030\007 \001(\010\022\r\n\005colo"
      "r\030\010 \001(\003\0225\n\010assigned\030\t \003(\0132#.xla.BufferAl"
      "locationProto.Assigned\032C\n\010Assigned\022\031\n\021lo"
      "gical_buffer_id\030\001 \001(\003\022\016\n\006offset\030\002 \001(\003\022\014\n"
      "\004size\030\003 \001(\003\"\326\002\n\022HeapSimulatorTrace\022-\n\006ev"
      "ents\030\001 \003(\0132\035.xla.HeapSimulatorTrace.Even"
      "t\022\037\n\027whole_module_simulation\030\002 \001(\010\022\037\n\027bu"
      "ffer_allocation_index\030\003 \001(\003\032\316\001\n\005Event\0220\n"
      "\004kind\030\001 \001(\0162\".xla.HeapSimulatorTrace.Eve"
      "nt.Kind\022\021\n\tbuffer_id\030\002 \001(\003\022\030\n\020computatio"
      "n_name\030\003 \001(\t\022\030\n\020instruction_name\030\004 \001(\t\022\037"
      "\n\027share_with_canonical_id\030\005 \001(\003\"+\n\004Kind\022"
      "\t\n\005ALLOC\020\000\022\010\n\004FREE\020\001\022\016\n\nSHARE_WITH\020\002\"M\n\023"
      "HloModuleGroupProto\022\014\n\004name\030\001 \001(\t\022(\n\013hlo"
      "_modules\030\002 \003(\0132\023.xla.HloModuleProto\"\326\002\n\025"
      "BufferAssignmentProto\0220\n\017logical_buffers"
      "\030\001 \003(\0132\027.xla.LogicalBufferProto\022>\n\016buffe"
      "r_aliases\030\002 \003(\0132&.xla.BufferAssignmentPr"
      "oto.BufferAlias\0226\n\022buffer_allocations\030\003 "
      "\003(\0132\032.xla.BufferAllocationProto\0226\n\025heap_"
      "simulator_traces\030\004 \003(\0132\027.xla.HeapSimulat"
      "orTrace\032[\n\013BufferAlias\022\030\n\020source_buffer_"
      "id\030\001 \001(\003\0222\n\010location\030\002 \001(\0132 .xla.Logical"
      "BufferProto.Location\"~\n\010HloProto\022\'\n\nhlo_"
      "module\030\001 \001(\0132\023.xla.HloModuleProto\0225\n\021buf"
      "fer_assignment\030\003 \001(\0132\032.xla.BufferAssignm"
      "entProtoJ\004\010\002\020\003R\014hlo_ordering\"\216\001\n\013HloSnap"
      "shot\022\032\n\003hlo\030\001 \001(\0132\r.xla.HloProto\022$\n\targu"
      "ments\030\002 \003(\0132\021.xla.LiteralProto\022!\n\006result"
      "\030\003 \001(\0132\021.xla.LiteralProto\022\032\n\022execution_p"
      "latform\030\004 \001(\t\"\271\001\n\026HloModuleMetadataProto"
      "\022\033\n\023canonical_module_id\030\001 \001(\003\022\031\n\021module_"
      "group_name\030\002 \001(\t\022\032\n\022original_module_id\030\003"
      " \001(\003\022\036\n\026partitioned_module_ids\030\004 \003(\003\022+\n\r"
      "pass_metadata\030\005 \003(\0132\024.xla.HloPassMetadat"
      "a\"\352\001\n\017HloPassMetadata\022\017\n\007pass_id\030\001 \001(\003\022\021"
      "\n\tpass_name\030\002 \001(\t\022\025\n\rpipeline_name\030\003 \001(\t"
      "\022\026\n\016dump_filenames\030\004 \003(\t\022\026\n\016module_chang"
      "ed\030\005 \001(\010\022\021\n\tmodule_id\030\006 \001(\003\022\037\n\027module_gr"
      "oup_module_ids\030\007 \003(\003\022\034\n\024start_timestamp_"
      "usec\030\010 \001(\003\022\032\n\022end_timestamp_usec\030\t \001(\003\"\263"
      "\003\n\027EntryFunctionAttributes\022G\n\007buffers\030\001 "
      "\003(\01326.xla.EntryFunctionAttributes.Buffer"
      "ParameterAttributes\022\030\n\020result_xla_shape\030"
      "\002 \001(\t\032\035\n\nShapeIndex\022\017\n\007indices\030\001 \003(\003\032\225\002\n"
      "\031BufferParameterAttributes\022\024\n\014lmhlo_para"
      "ms\030\001 \001(\003\022\034\n\024lmhlo_params_present\030\006 \001(\010\022H"
      "\n\027lmhlo_param_shape_index\030\002 \001(\0132\'.xla.En"
      "tryFunctionAttributes.ShapeIndex\022\033\n\023lmhl"
      "o_constant_name\030\003 \001(\t\022\030\n\020lmhlo_must_alia"
      "s\030\004 \001(\010\022C\n\022lmhlo_output_index\030\005 \001(\0132\'.xl"
      "a.EntryFunctionAttributes.ShapeIndex\"\213\001\n"
      "\025GpuBefExecutableProto\022-\n\020hlo_module_pro"
      "to\030\001 \001(\0132\023.xla.HloModuleProto\022\013\n\003bef\030\002 \001"
      "(\014\0226\n\020entry_func_attrs\030\003 \001(\0132\034.xla.Entry"
      "FunctionAttributes*S\n\022CustomCallSchedule"
      "\022\021\n\rSCHEDULE_NONE\020\000\022\023\n\017SCHEDULE_LATEST\020\001"
      "\022\025\n\021SCHEDULE_EARLIEST\020\002*o\n\024CustomCallApi"
      "Version\022\033\n\027API_VERSION_UNSPECIFIED\020\000\022\030\n\024"
      "API_VERSION_ORIGINAL\020\001\022 \n\034API_VERSION_ST"
      "ATUS_RETURNING\020\002*:\n\004Kind\022\023\n\017UNDEFINED_AL"
      "IAS\020\000\022\r\n\tMAY_ALIAS\020\001\022\016\n\nMUST_ALIAS\020\002B\003\370\001"
      "\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7529);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/compiler/xla/service/hlo.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto
namespace xla {
const ::google::protobuf::EnumDescriptor* HloModuleProto_ProfileType_descriptor() {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_enum_descriptors[0];
}
bool HloModuleProto_ProfileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HloModuleProto_ProfileType HloModuleProto::INVALID;
const HloModuleProto_ProfileType HloModuleProto::FLAG;
const HloModuleProto_ProfileType HloModuleProto::FUSION;
const HloModuleProto_ProfileType HloModuleProto::LAYOUT;
const HloModuleProto_ProfileType HloModuleProto::ProfileType_MIN;
const HloModuleProto_ProfileType HloModuleProto::ProfileType_MAX;
const int HloModuleProto::ProfileType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* HeapSimulatorTrace_Event_Kind_descriptor() {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_enum_descriptors[1];
}
bool HeapSimulatorTrace_Event_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::ALLOC;
const HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::FREE;
const HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::SHARE_WITH;
const HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::Kind_MIN;
const HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::Kind_MAX;
const int HeapSimulatorTrace_Event::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CustomCallSchedule_descriptor() {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_enum_descriptors[2];
}
bool CustomCallSchedule_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CustomCallApiVersion_descriptor() {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_enum_descriptors[3];
}
bool CustomCallApiVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Kind_descriptor() {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_enum_descriptors[4];
}
bool Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void HloInstructionProto_SliceDimensions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloInstructionProto_SliceDimensions::kStartFieldNumber;
const int HloInstructionProto_SliceDimensions::kLimitFieldNumber;
const int HloInstructionProto_SliceDimensions::kStrideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloInstructionProto_SliceDimensions::HloInstructionProto_SliceDimensions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInstructionProto_SliceDimensions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloInstructionProto.SliceDimensions)
}
HloInstructionProto_SliceDimensions::HloInstructionProto_SliceDimensions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInstructionProto_SliceDimensions.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloInstructionProto.SliceDimensions)
}
HloInstructionProto_SliceDimensions::HloInstructionProto_SliceDimensions(const HloInstructionProto_SliceDimensions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&stride_) -
    reinterpret_cast<char*>(&start_)) + sizeof(stride_));
  // @@protoc_insertion_point(copy_constructor:xla.HloInstructionProto.SliceDimensions)
}

void HloInstructionProto_SliceDimensions::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stride_) -
      reinterpret_cast<char*>(&start_)) + sizeof(stride_));
}

HloInstructionProto_SliceDimensions::~HloInstructionProto_SliceDimensions() {
  // @@protoc_insertion_point(destructor:xla.HloInstructionProto.SliceDimensions)
  SharedDtor();
}

void HloInstructionProto_SliceDimensions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HloInstructionProto_SliceDimensions::ArenaDtor(void* object) {
  HloInstructionProto_SliceDimensions* _this = reinterpret_cast< HloInstructionProto_SliceDimensions* >(object);
  (void)_this;
}
void HloInstructionProto_SliceDimensions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloInstructionProto_SliceDimensions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloInstructionProto_SliceDimensions::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloInstructionProto_SliceDimensions& HloInstructionProto_SliceDimensions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInstructionProto_SliceDimensions.base);
  return *internal_default_instance();
}


void HloInstructionProto_SliceDimensions::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloInstructionProto.SliceDimensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stride_) -
      reinterpret_cast<char*>(&start_)) + sizeof(stride_));
  _internal_metadata_.Clear();
}

bool HloInstructionProto_SliceDimensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloInstructionProto.SliceDimensions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 stride = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloInstructionProto.SliceDimensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloInstructionProto.SliceDimensions)
  return false;
#undef DO_
}

void HloInstructionProto_SliceDimensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloInstructionProto.SliceDimensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start = 1;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start(), output);
  }

  // int64 limit = 2;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->limit(), output);
  }

  // int64 stride = 3;
  if (this->stride() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->stride(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloInstructionProto.SliceDimensions)
}

::google::protobuf::uint8* HloInstructionProto_SliceDimensions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloInstructionProto.SliceDimensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start = 1;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start(), target);
  }

  // int64 limit = 2;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->limit(), target);
  }

  // int64 stride = 3;
  if (this->stride() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->stride(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloInstructionProto.SliceDimensions)
  return target;
}

size_t HloInstructionProto_SliceDimensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloInstructionProto.SliceDimensions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 start = 1;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start());
  }

  // int64 limit = 2;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limit());
  }

  // int64 stride = 3;
  if (this->stride() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stride());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloInstructionProto_SliceDimensions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloInstructionProto.SliceDimensions)
  GOOGLE_DCHECK_NE(&from, this);
  const HloInstructionProto_SliceDimensions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloInstructionProto_SliceDimensions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloInstructionProto.SliceDimensions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloInstructionProto.SliceDimensions)
    MergeFrom(*source);
  }
}

void HloInstructionProto_SliceDimensions::MergeFrom(const HloInstructionProto_SliceDimensions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloInstructionProto.SliceDimensions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.stride() != 0) {
    set_stride(from.stride());
  }
}

void HloInstructionProto_SliceDimensions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloInstructionProto.SliceDimensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloInstructionProto_SliceDimensions::CopyFrom(const HloInstructionProto_SliceDimensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloInstructionProto.SliceDimensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloInstructionProto_SliceDimensions::IsInitialized() const {
  return true;
}

void HloInstructionProto_SliceDimensions::Swap(HloInstructionProto_SliceDimensions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloInstructionProto_SliceDimensions* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloInstructionProto_SliceDimensions::UnsafeArenaSwap(HloInstructionProto_SliceDimensions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloInstructionProto_SliceDimensions::InternalSwap(HloInstructionProto_SliceDimensions* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(limit_, other->limit_);
  swap(stride_, other->stride_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloInstructionProto_SliceDimensions::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloInstructionProto::InitAsDefaultInstance() {
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::xla::OpMetadata*>(
      ::xla::OpMetadata::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->literal_ = const_cast< ::xla::LiteralProto*>(
      ::xla::LiteralProto::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->window_ = const_cast< ::xla::Window*>(
      ::xla::Window::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->convolution_dimension_numbers_ = const_cast< ::xla::ConvolutionDimensionNumbers*>(
      ::xla::ConvolutionDimensionNumbers::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->padding_config_ = const_cast< ::xla::PaddingConfig*>(
      ::xla::PaddingConfig::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->outfeed_shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->dot_dimension_numbers_ = const_cast< ::xla::DotDimensionNumbers*>(
      ::xla::DotDimensionNumbers::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->gather_dimension_numbers_ = const_cast< ::xla::GatherDimensionNumbers*>(
      ::xla::GatherDimensionNumbers::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->sharding_ = const_cast< ::xla::OpSharding*>(
      ::xla::OpSharding::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->scatter_dimension_numbers_ = const_cast< ::xla::ScatterDimensionNumbers*>(
      ::xla::ScatterDimensionNumbers::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->precision_config_ = const_cast< ::xla::PrecisionConfig*>(
      ::xla::PrecisionConfig::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->domain_entry_sharding_ = const_cast< ::xla::OpSharding*>(
      ::xla::OpSharding::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->domain_exit_sharding_ = const_cast< ::xla::OpSharding*>(
      ::xla::OpSharding::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->triangular_solve_options_ = const_cast< ::xla::TriangularSolveOptions*>(
      ::xla::TriangularSolveOptions::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->cholesky_options_ = const_cast< ::xla::CholeskyOptions*>(
      ::xla::CholeskyOptions::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->parameter_replication_ = const_cast< ::xla::ParameterReplication*>(
      ::xla::ParameterReplication::internal_default_instance());
  ::xla::_HloInstructionProto_default_instance_._instance.get_mutable()->frontend_attributes_ = const_cast< ::xla::FrontendAttributes*>(
      ::xla::FrontendAttributes::internal_default_instance());
}
void HloInstructionProto::unsafe_arena_set_allocated_shape(
    ::xla::ShapeProto* shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.shape)
}
void HloInstructionProto::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_metadata(
    ::xla::OpMetadata* metadata) {
  if (GetArenaNoVirtual() == NULL) {
    delete metadata_;
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.metadata)
}
void HloInstructionProto::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_literal(
    ::xla::LiteralProto* literal) {
  if (GetArenaNoVirtual() == NULL) {
    delete literal_;
  }
  literal_ = literal;
  if (literal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.literal)
}
void HloInstructionProto::clear_literal() {
  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_window(
    ::xla::Window* window) {
  if (GetArenaNoVirtual() == NULL) {
    delete window_;
  }
  window_ = window;
  if (window) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.window)
}
void HloInstructionProto::clear_window() {
  if (GetArenaNoVirtual() == NULL && window_ != NULL) {
    delete window_;
  }
  window_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_convolution_dimension_numbers(
    ::xla::ConvolutionDimensionNumbers* convolution_dimension_numbers) {
  if (GetArenaNoVirtual() == NULL) {
    delete convolution_dimension_numbers_;
  }
  convolution_dimension_numbers_ = convolution_dimension_numbers;
  if (convolution_dimension_numbers) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.convolution_dimension_numbers)
}
void HloInstructionProto::clear_convolution_dimension_numbers() {
  if (GetArenaNoVirtual() == NULL && convolution_dimension_numbers_ != NULL) {
    delete convolution_dimension_numbers_;
  }
  convolution_dimension_numbers_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_padding_config(
    ::xla::PaddingConfig* padding_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete padding_config_;
  }
  padding_config_ = padding_config;
  if (padding_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.padding_config)
}
void HloInstructionProto::clear_padding_config() {
  if (GetArenaNoVirtual() == NULL && padding_config_ != NULL) {
    delete padding_config_;
  }
  padding_config_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_outfeed_shape(
    ::xla::ShapeProto* outfeed_shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete outfeed_shape_;
  }
  outfeed_shape_ = outfeed_shape;
  if (outfeed_shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.outfeed_shape)
}
void HloInstructionProto::clear_outfeed_shape() {
  if (GetArenaNoVirtual() == NULL && outfeed_shape_ != NULL) {
    delete outfeed_shape_;
  }
  outfeed_shape_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_dot_dimension_numbers(
    ::xla::DotDimensionNumbers* dot_dimension_numbers) {
  if (GetArenaNoVirtual() == NULL) {
    delete dot_dimension_numbers_;
  }
  dot_dimension_numbers_ = dot_dimension_numbers;
  if (dot_dimension_numbers) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.dot_dimension_numbers)
}
void HloInstructionProto::clear_dot_dimension_numbers() {
  if (GetArenaNoVirtual() == NULL && dot_dimension_numbers_ != NULL) {
    delete dot_dimension_numbers_;
  }
  dot_dimension_numbers_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_gather_dimension_numbers(
    ::xla::GatherDimensionNumbers* gather_dimension_numbers) {
  if (GetArenaNoVirtual() == NULL) {
    delete gather_dimension_numbers_;
  }
  gather_dimension_numbers_ = gather_dimension_numbers;
  if (gather_dimension_numbers) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.gather_dimension_numbers)
}
void HloInstructionProto::clear_gather_dimension_numbers() {
  if (GetArenaNoVirtual() == NULL && gather_dimension_numbers_ != NULL) {
    delete gather_dimension_numbers_;
  }
  gather_dimension_numbers_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_sharding(
    ::xla::OpSharding* sharding) {
  if (GetArenaNoVirtual() == NULL) {
    delete sharding_;
  }
  sharding_ = sharding;
  if (sharding) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.sharding)
}
void HloInstructionProto::clear_sharding() {
  if (GetArenaNoVirtual() == NULL && sharding_ != NULL) {
    delete sharding_;
  }
  sharding_ = NULL;
}
void HloInstructionProto::clear_replica_groups() {
  replica_groups_.Clear();
}
void HloInstructionProto::unsafe_arena_set_allocated_scatter_dimension_numbers(
    ::xla::ScatterDimensionNumbers* scatter_dimension_numbers) {
  if (GetArenaNoVirtual() == NULL) {
    delete scatter_dimension_numbers_;
  }
  scatter_dimension_numbers_ = scatter_dimension_numbers;
  if (scatter_dimension_numbers) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.scatter_dimension_numbers)
}
void HloInstructionProto::clear_scatter_dimension_numbers() {
  if (GetArenaNoVirtual() == NULL && scatter_dimension_numbers_ != NULL) {
    delete scatter_dimension_numbers_;
  }
  scatter_dimension_numbers_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_precision_config(
    ::xla::PrecisionConfig* precision_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete precision_config_;
  }
  precision_config_ = precision_config;
  if (precision_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.precision_config)
}
void HloInstructionProto::clear_precision_config() {
  if (GetArenaNoVirtual() == NULL && precision_config_ != NULL) {
    delete precision_config_;
  }
  precision_config_ = NULL;
}
void HloInstructionProto::clear_source_target_pairs() {
  source_target_pairs_.Clear();
}
void HloInstructionProto::unsafe_arena_set_allocated_domain_entry_sharding(
    ::xla::OpSharding* domain_entry_sharding) {
  if (GetArenaNoVirtual() == NULL) {
    delete domain_entry_sharding_;
  }
  domain_entry_sharding_ = domain_entry_sharding;
  if (domain_entry_sharding) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.domain_entry_sharding)
}
void HloInstructionProto::clear_domain_entry_sharding() {
  if (GetArenaNoVirtual() == NULL && domain_entry_sharding_ != NULL) {
    delete domain_entry_sharding_;
  }
  domain_entry_sharding_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_domain_exit_sharding(
    ::xla::OpSharding* domain_exit_sharding) {
  if (GetArenaNoVirtual() == NULL) {
    delete domain_exit_sharding_;
  }
  domain_exit_sharding_ = domain_exit_sharding;
  if (domain_exit_sharding) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.domain_exit_sharding)
}
void HloInstructionProto::clear_domain_exit_sharding() {
  if (GetArenaNoVirtual() == NULL && domain_exit_sharding_ != NULL) {
    delete domain_exit_sharding_;
  }
  domain_exit_sharding_ = NULL;
}
void HloInstructionProto::clear_operand_shapes_with_layout() {
  operand_shapes_with_layout_.Clear();
}
void HloInstructionProto::unsafe_arena_set_allocated_triangular_solve_options(
    ::xla::TriangularSolveOptions* triangular_solve_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete triangular_solve_options_;
  }
  triangular_solve_options_ = triangular_solve_options;
  if (triangular_solve_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.triangular_solve_options)
}
void HloInstructionProto::clear_triangular_solve_options() {
  if (GetArenaNoVirtual() == NULL && triangular_solve_options_ != NULL) {
    delete triangular_solve_options_;
  }
  triangular_solve_options_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_cholesky_options(
    ::xla::CholeskyOptions* cholesky_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete cholesky_options_;
  }
  cholesky_options_ = cholesky_options;
  if (cholesky_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.cholesky_options)
}
void HloInstructionProto::clear_cholesky_options() {
  if (GetArenaNoVirtual() == NULL && cholesky_options_ != NULL) {
    delete cholesky_options_;
  }
  cholesky_options_ = NULL;
}
void HloInstructionProto::unsafe_arena_set_allocated_parameter_replication(
    ::xla::ParameterReplication* parameter_replication) {
  if (GetArenaNoVirtual() == NULL) {
    delete parameter_replication_;
  }
  parameter_replication_ = parameter_replication;
  if (parameter_replication) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.parameter_replication)
}
void HloInstructionProto::clear_parameter_replication() {
  if (GetArenaNoVirtual() == NULL && parameter_replication_ != NULL) {
    delete parameter_replication_;
  }
  parameter_replication_ = NULL;
}
void HloInstructionProto::clear_custom_call_output_operand_aliasing() {
  custom_call_output_operand_aliasing_.Clear();
}
void HloInstructionProto::unsafe_arena_set_allocated_frontend_attributes(
    ::xla::FrontendAttributes* frontend_attributes) {
  if (GetArenaNoVirtual() == NULL) {
    delete frontend_attributes_;
  }
  frontend_attributes_ = frontend_attributes;
  if (frontend_attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloInstructionProto.frontend_attributes)
}
void HloInstructionProto::clear_frontend_attributes() {
  if (GetArenaNoVirtual() == NULL && frontend_attributes_ != NULL) {
    delete frontend_attributes_;
  }
  frontend_attributes_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloInstructionProto::kNameFieldNumber;
const int HloInstructionProto::kOpcodeFieldNumber;
const int HloInstructionProto::kShapeFieldNumber;
const int HloInstructionProto::kMetadataFieldNumber;
const int HloInstructionProto::kLiteralFieldNumber;
const int HloInstructionProto::kParameterNumberFieldNumber;
const int HloInstructionProto::kFusionKindFieldNumber;
const int HloInstructionProto::kTupleIndexFieldNumber;
const int HloInstructionProto::kDimensionsFieldNumber;
const int HloInstructionProto::kWindowFieldNumber;
const int HloInstructionProto::kConvolutionDimensionNumbersFieldNumber;
const int HloInstructionProto::kFeatureGroupCountFieldNumber;
const int HloInstructionProto::kBatchGroupCountFieldNumber;
const int HloInstructionProto::kSliceDimensionsFieldNumber;
const int HloInstructionProto::kExponentBitsFieldNumber;
const int HloInstructionProto::kMantissaBitsFieldNumber;
const int HloInstructionProto::kDynamicSliceSizesFieldNumber;
const int HloInstructionProto::kPaddingConfigFieldNumber;
const int HloInstructionProto::kOutfeedConfigFieldNumber;
const int HloInstructionProto::kDistributionFieldNumber;
const int HloInstructionProto::kEpsilonFieldNumber;
const int HloInstructionProto::kFeatureIndexFieldNumber;
const int HloInstructionProto::kChannelIdFieldNumber;
const int HloInstructionProto::kInfeedConfigFieldNumber;
const int HloInstructionProto::kCustomCallTargetFieldNumber;
const int HloInstructionProto::kOutfeedShapeFieldNumber;
const int HloInstructionProto::kDotDimensionNumbersFieldNumber;
const int HloInstructionProto::kFftTypeFieldNumber;
const int HloInstructionProto::kFftLengthFieldNumber;
const int HloInstructionProto::kComparisonDirectionFieldNumber;
const int HloInstructionProto::kGatherDimensionNumbersFieldNumber;
const int HloInstructionProto::kGatherSliceSizesFieldNumber;
const int HloInstructionProto::kChannelNameFieldNumber;
const int HloInstructionProto::kCostEstimateNsFieldNumber;
const int HloInstructionProto::kIdFieldNumber;
const int HloInstructionProto::kOperandIdsFieldNumber;
const int HloInstructionProto::kControlPredecessorIdsFieldNumber;
const int HloInstructionProto::kCalledComputationIdsFieldNumber;
const int HloInstructionProto::kShardingFieldNumber;
const int HloInstructionProto::kBackendConfigFieldNumber;
const int HloInstructionProto::kReplicaGroupsFieldNumber;
const int HloInstructionProto::kAllReduceIdFieldNumber;
const int HloInstructionProto::kUseGlobalDeviceIdsFieldNumber;
const int HloInstructionProto::kIsHostTransferFieldNumber;
const int HloInstructionProto::kIsStableFieldNumber;
const int HloInstructionProto::kScatterDimensionNumbersFieldNumber;
const int HloInstructionProto::kPrecisionConfigFieldNumber;
const int HloInstructionProto::kSourceTargetPairsFieldNumber;
const int HloInstructionProto::kDomainEntryShardingFieldNumber;
const int HloInstructionProto::kDomainExitShardingFieldNumber;
const int HloInstructionProto::kConstrainLayoutFieldNumber;
const int HloInstructionProto::kOperandShapesWithLayoutFieldNumber;
const int HloInstructionProto::kTriangularSolveOptionsFieldNumber;
const int HloInstructionProto::kCholeskyOptionsFieldNumber;
const int HloInstructionProto::kParameterReplicationFieldNumber;
const int HloInstructionProto::kOuterDimensionPartitionsFieldNumber;
const int HloInstructionProto::kCustomCallHasSideEffectFieldNumber;
const int HloInstructionProto::kCustomCallOutputOperandAliasingFieldNumber;
const int HloInstructionProto::kCustomCallScheduleFieldNumber;
const int HloInstructionProto::kDeltaFieldNumber;
const int HloInstructionProto::kIndicesAreSortedFieldNumber;
const int HloInstructionProto::kFrontendAttributesFieldNumber;
const int HloInstructionProto::kUniqueIndicesFieldNumber;
const int HloInstructionProto::kRngAlgorithmFieldNumber;
const int HloInstructionProto::kComparisonTypeFieldNumber;
const int HloInstructionProto::kIsCrossProgramPrefetchFieldNumber;
const int HloInstructionProto::kPaddingTypeFieldNumber;
const int HloInstructionProto::kCustomCallApiVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloInstructionProto::HloInstructionProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInstructionProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloInstructionProto)
}
HloInstructionProto::HloInstructionProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  dimensions_(arena),
  slice_dimensions_(arena),
  dynamic_slice_sizes_(arena),
  fft_length_(arena),
  gather_slice_sizes_(arena),
  operand_ids_(arena),
  control_predecessor_ids_(arena),
  called_computation_ids_(arena),
  replica_groups_(arena),
  source_target_pairs_(arena),
  operand_shapes_with_layout_(arena),
  outer_dimension_partitions_(arena),
  custom_call_output_operand_aliasing_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInstructionProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloInstructionProto)
}
HloInstructionProto::HloInstructionProto(const HloInstructionProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dimensions_(from.dimensions_),
      slice_dimensions_(from.slice_dimensions_),
      dynamic_slice_sizes_(from.dynamic_slice_sizes_),
      fft_length_(from.fft_length_),
      gather_slice_sizes_(from.gather_slice_sizes_),
      operand_ids_(from.operand_ids_),
      control_predecessor_ids_(from.control_predecessor_ids_),
      called_computation_ids_(from.called_computation_ids_),
      replica_groups_(from.replica_groups_),
      source_target_pairs_(from.source_target_pairs_),
      operand_shapes_with_layout_(from.operand_shapes_with_layout_),
      outer_dimension_partitions_(from.outer_dimension_partitions_),
      custom_call_output_operand_aliasing_(from.custom_call_output_operand_aliasing_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  opcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.opcode().size() > 0) {
    opcode_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opcode(),
      GetArenaNoVirtual());
  }
  fusion_kind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fusion_kind().size() > 0) {
    fusion_kind_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fusion_kind(),
      GetArenaNoVirtual());
  }
  outfeed_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.outfeed_config().size() > 0) {
    outfeed_config_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outfeed_config(),
      GetArenaNoVirtual());
  }
  infeed_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.infeed_config().size() > 0) {
    infeed_config_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infeed_config(),
      GetArenaNoVirtual());
  }
  custom_call_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.custom_call_target().size() > 0) {
    custom_call_target_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_call_target(),
      GetArenaNoVirtual());
  }
  channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_name().size() > 0) {
    channel_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_name(),
      GetArenaNoVirtual());
  }
  backend_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.backend_config().size() > 0) {
    backend_config_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backend_config(),
      GetArenaNoVirtual());
  }
  comparison_direction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comparison_direction().size() > 0) {
    comparison_direction_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comparison_direction(),
      GetArenaNoVirtual());
  }
  comparison_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comparison_type().size() > 0) {
    comparison_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comparison_type(),
      GetArenaNoVirtual());
  }
  if (from.has_shape()) {
    shape_ = new ::xla::ShapeProto(*from.shape_);
  } else {
    shape_ = NULL;
  }
  if (from.has_metadata()) {
    metadata_ = new ::xla::OpMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_literal()) {
    literal_ = new ::xla::LiteralProto(*from.literal_);
  } else {
    literal_ = NULL;
  }
  if (from.has_window()) {
    window_ = new ::xla::Window(*from.window_);
  } else {
    window_ = NULL;
  }
  if (from.has_convolution_dimension_numbers()) {
    convolution_dimension_numbers_ = new ::xla::ConvolutionDimensionNumbers(*from.convolution_dimension_numbers_);
  } else {
    convolution_dimension_numbers_ = NULL;
  }
  if (from.has_padding_config()) {
    padding_config_ = new ::xla::PaddingConfig(*from.padding_config_);
  } else {
    padding_config_ = NULL;
  }
  if (from.has_outfeed_shape()) {
    outfeed_shape_ = new ::xla::ShapeProto(*from.outfeed_shape_);
  } else {
    outfeed_shape_ = NULL;
  }
  if (from.has_dot_dimension_numbers()) {
    dot_dimension_numbers_ = new ::xla::DotDimensionNumbers(*from.dot_dimension_numbers_);
  } else {
    dot_dimension_numbers_ = NULL;
  }
  if (from.has_gather_dimension_numbers()) {
    gather_dimension_numbers_ = new ::xla::GatherDimensionNumbers(*from.gather_dimension_numbers_);
  } else {
    gather_dimension_numbers_ = NULL;
  }
  if (from.has_sharding()) {
    sharding_ = new ::xla::OpSharding(*from.sharding_);
  } else {
    sharding_ = NULL;
  }
  if (from.has_scatter_dimension_numbers()) {
    scatter_dimension_numbers_ = new ::xla::ScatterDimensionNumbers(*from.scatter_dimension_numbers_);
  } else {
    scatter_dimension_numbers_ = NULL;
  }
  if (from.has_precision_config()) {
    precision_config_ = new ::xla::PrecisionConfig(*from.precision_config_);
  } else {
    precision_config_ = NULL;
  }
  if (from.has_domain_entry_sharding()) {
    domain_entry_sharding_ = new ::xla::OpSharding(*from.domain_entry_sharding_);
  } else {
    domain_entry_sharding_ = NULL;
  }
  if (from.has_domain_exit_sharding()) {
    domain_exit_sharding_ = new ::xla::OpSharding(*from.domain_exit_sharding_);
  } else {
    domain_exit_sharding_ = NULL;
  }
  if (from.has_triangular_solve_options()) {
    triangular_solve_options_ = new ::xla::TriangularSolveOptions(*from.triangular_solve_options_);
  } else {
    triangular_solve_options_ = NULL;
  }
  if (from.has_parameter_replication()) {
    parameter_replication_ = new ::xla::ParameterReplication(*from.parameter_replication_);
  } else {
    parameter_replication_ = NULL;
  }
  if (from.has_cholesky_options()) {
    cholesky_options_ = new ::xla::CholeskyOptions(*from.cholesky_options_);
  } else {
    cholesky_options_ = NULL;
  }
  if (from.has_frontend_attributes()) {
    frontend_attributes_ = new ::xla::FrontendAttributes(*from.frontend_attributes_);
  } else {
    frontend_attributes_ = NULL;
  }
  ::memcpy(&parameter_number_, &from.parameter_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&custom_call_schedule_) -
    reinterpret_cast<char*>(&parameter_number_)) + sizeof(custom_call_schedule_));
  // @@protoc_insertion_point(copy_constructor:xla.HloInstructionProto)
}

void HloInstructionProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fusion_kind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outfeed_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  infeed_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_call_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backend_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comparison_direction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comparison_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&custom_call_schedule_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(custom_call_schedule_));
}

HloInstructionProto::~HloInstructionProto() {
  // @@protoc_insertion_point(destructor:xla.HloInstructionProto)
  SharedDtor();
}

void HloInstructionProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fusion_kind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outfeed_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  infeed_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_call_target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backend_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comparison_direction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comparison_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shape_;
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete literal_;
  if (this != internal_default_instance()) delete window_;
  if (this != internal_default_instance()) delete convolution_dimension_numbers_;
  if (this != internal_default_instance()) delete padding_config_;
  if (this != internal_default_instance()) delete outfeed_shape_;
  if (this != internal_default_instance()) delete dot_dimension_numbers_;
  if (this != internal_default_instance()) delete gather_dimension_numbers_;
  if (this != internal_default_instance()) delete sharding_;
  if (this != internal_default_instance()) delete scatter_dimension_numbers_;
  if (this != internal_default_instance()) delete precision_config_;
  if (this != internal_default_instance()) delete domain_entry_sharding_;
  if (this != internal_default_instance()) delete domain_exit_sharding_;
  if (this != internal_default_instance()) delete triangular_solve_options_;
  if (this != internal_default_instance()) delete parameter_replication_;
  if (this != internal_default_instance()) delete cholesky_options_;
  if (this != internal_default_instance()) delete frontend_attributes_;
}

void HloInstructionProto::ArenaDtor(void* object) {
  HloInstructionProto* _this = reinterpret_cast< HloInstructionProto* >(object);
  (void)_this;
}
void HloInstructionProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloInstructionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloInstructionProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloInstructionProto& HloInstructionProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInstructionProto.base);
  return *internal_default_instance();
}


void HloInstructionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloInstructionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  slice_dimensions_.Clear();
  dynamic_slice_sizes_.Clear();
  fft_length_.Clear();
  gather_slice_sizes_.Clear();
  operand_ids_.Clear();
  control_predecessor_ids_.Clear();
  called_computation_ids_.Clear();
  replica_groups_.Clear();
  source_target_pairs_.Clear();
  operand_shapes_with_layout_.Clear();
  outer_dimension_partitions_.Clear();
  custom_call_output_operand_aliasing_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  opcode_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  fusion_kind_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  outfeed_config_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  infeed_config_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  custom_call_target_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  channel_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  backend_config_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  comparison_direction_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  comparison_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
  if (GetArenaNoVirtual() == NULL && window_ != NULL) {
    delete window_;
  }
  window_ = NULL;
  if (GetArenaNoVirtual() == NULL && convolution_dimension_numbers_ != NULL) {
    delete convolution_dimension_numbers_;
  }
  convolution_dimension_numbers_ = NULL;
  if (GetArenaNoVirtual() == NULL && padding_config_ != NULL) {
    delete padding_config_;
  }
  padding_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && outfeed_shape_ != NULL) {
    delete outfeed_shape_;
  }
  outfeed_shape_ = NULL;
  if (GetArenaNoVirtual() == NULL && dot_dimension_numbers_ != NULL) {
    delete dot_dimension_numbers_;
  }
  dot_dimension_numbers_ = NULL;
  if (GetArenaNoVirtual() == NULL && gather_dimension_numbers_ != NULL) {
    delete gather_dimension_numbers_;
  }
  gather_dimension_numbers_ = NULL;
  if (GetArenaNoVirtual() == NULL && sharding_ != NULL) {
    delete sharding_;
  }
  sharding_ = NULL;
  if (GetArenaNoVirtual() == NULL && scatter_dimension_numbers_ != NULL) {
    delete scatter_dimension_numbers_;
  }
  scatter_dimension_numbers_ = NULL;
  if (GetArenaNoVirtual() == NULL && precision_config_ != NULL) {
    delete precision_config_;
  }
  precision_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && domain_entry_sharding_ != NULL) {
    delete domain_entry_sharding_;
  }
  domain_entry_sharding_ = NULL;
  if (GetArenaNoVirtual() == NULL && domain_exit_sharding_ != NULL) {
    delete domain_exit_sharding_;
  }
  domain_exit_sharding_ = NULL;
  if (GetArenaNoVirtual() == NULL && triangular_solve_options_ != NULL) {
    delete triangular_solve_options_;
  }
  triangular_solve_options_ = NULL;
  if (GetArenaNoVirtual() == NULL && parameter_replication_ != NULL) {
    delete parameter_replication_;
  }
  parameter_replication_ = NULL;
  if (GetArenaNoVirtual() == NULL && cholesky_options_ != NULL) {
    delete cholesky_options_;
  }
  cholesky_options_ = NULL;
  if (GetArenaNoVirtual() == NULL && frontend_attributes_ != NULL) {
    delete frontend_attributes_;
  }
  frontend_attributes_ = NULL;
  ::memset(&parameter_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&custom_call_schedule_) -
      reinterpret_cast<char*>(&parameter_number_)) + sizeof(custom_call_schedule_));
  _internal_metadata_.Clear();
}

bool HloInstructionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloInstructionProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloInstructionProto.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string opcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opcode().data(), static_cast<int>(this->opcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloInstructionProto.opcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto shape = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.OpMetadata metadata = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.LiteralProto literal = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_literal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 parameter_number = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parameter_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fusion_kind = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fusion_kind()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fusion_kind().data(), static_cast<int>(this->fusion_kind().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloInstructionProto.fusion_kind"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 tuple_index = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tuple_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 dimensions = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 114u, input, this->mutable_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.Window window = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ConvolutionDimensionNumbers convolution_dimension_numbers = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_convolution_dimension_numbers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.HloInstructionProto.SliceDimensions slice_dimensions = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_slice_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exponent_bits = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exponent_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mantissa_bits = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mantissa_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 dynamic_slice_sizes = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dynamic_slice_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 162u, input, this->mutable_dynamic_slice_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.PaddingConfig padding_config = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_padding_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes outfeed_config = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_outfeed_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.RandomDistribution distribution = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_distribution(static_cast< ::xla::RandomDistribution >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float epsilon = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 feature_index = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &feature_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 channel_id = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes infeed_config = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_infeed_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string custom_call_target = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_call_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->custom_call_target().data(), static_cast<int>(this->custom_call_target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloInstructionProto.custom_call_target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto outfeed_shape = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outfeed_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DotDimensionNumbers dot_dimension_numbers = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dot_dimension_numbers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.FftType fft_type = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fft_type(static_cast< ::xla::FftType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 fft_length = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_fft_length())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 258u, input, this->mutable_fft_length())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.GatherDimensionNumbers gather_dimension_numbers = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gather_dimension_numbers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 gather_slice_sizes = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_gather_slice_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 274u, input, this->mutable_gather_slice_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 operand_ids = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_operand_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 290u, input, this->mutable_operand_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 control_predecessor_ids = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_control_predecessor_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 298u, input, this->mutable_control_predecessor_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 called_computation_ids = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_called_computation_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 306u, input, this->mutable_called_computation_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.OpSharding sharding = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sharding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string channel_name = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_name().data(), static_cast<int>(this->channel_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloInstructionProto.channel_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 cost_estimate_ns = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cost_estimate_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes backend_config = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_backend_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 all_reduce_id = 45 [deprecated = true];
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &all_reduce_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_host_transfer = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_host_transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ScatterDimensionNumbers scatter_dimension_numbers = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scatter_dimension_numbers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.ReplicaGroup replica_groups = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replica_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 feature_group_count = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &feature_group_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.PrecisionConfig precision_config = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_precision_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.SourceTarget source_target_pairs = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_source_target_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.OpSharding domain_entry_sharding = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_domain_entry_sharding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.OpSharding domain_exit_sharding = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_domain_exit_sharding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool constrain_layout = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 448 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &constrain_layout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.ShapeProto operand_shapes_with_layout = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_operand_shapes_with_layout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 batch_group_count = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 464 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &batch_group_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.TriangularSolveOptions triangular_solve_options = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_triangular_solve_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_stable = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_stable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ParameterReplication parameter_replication = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameter_replication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.CholeskyOptions cholesky_options = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cholesky_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comparison_direction = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comparison_direction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comparison_direction().data(), static_cast<int>(this->comparison_direction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloInstructionProto.comparison_direction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 outer_dimension_partitions = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_outer_dimension_partitions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 512 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 514u, input, this->mutable_outer_dimension_partitions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool custom_call_has_side_effect = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 520 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &custom_call_has_side_effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 delta = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 528 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool indices_are_sorted = 67;
      case 67: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 536 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &indices_are_sorted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.FrontendAttributes frontend_attributes = 68;
      case 68: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frontend_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool unique_indices = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 552 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unique_indices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.RandomAlgorithm rng_algorithm = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 560 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rng_algorithm(static_cast< ::xla::RandomAlgorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_global_device_ids = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 568 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_global_device_ids_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comparison_type = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comparison_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comparison_type().data(), static_cast<int>(this->comparison_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloInstructionProto.comparison_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_cross_program_prefetch = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 584 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_cross_program_prefetch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.CustomCallOutputOperandAliasing custom_call_output_operand_aliasing = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_custom_call_output_operand_aliasing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.PaddingType padding_type = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 600 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_padding_type(static_cast< ::xla::PaddingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.CustomCallSchedule custom_call_schedule = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 608 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_custom_call_schedule(static_cast< ::xla::CustomCallSchedule >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.CustomCallApiVersion custom_call_api_version = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 616 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_custom_call_api_version(static_cast< ::xla::CustomCallApiVersion >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloInstructionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloInstructionProto)
  return false;
#undef DO_
}

void HloInstructionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloInstructionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string opcode = 2;
  if (this->opcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opcode().data(), static_cast<int>(this->opcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.opcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->opcode(), output);
  }

  // .xla.ShapeProto shape = 3;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_shape(), output);
  }

  // .xla.OpMetadata metadata = 7;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_metadata(), output);
  }

  // .xla.LiteralProto literal = 8;
  if (this->has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_literal(), output);
  }

  // int64 parameter_number = 9;
  if (this->parameter_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->parameter_number(), output);
  }

  // string fusion_kind = 11;
  if (this->fusion_kind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fusion_kind().data(), static_cast<int>(this->fusion_kind().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.fusion_kind");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->fusion_kind(), output);
  }

  // int64 tuple_index = 13;
  if (this->tuple_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->tuple_index(), output);
  }

  // repeated int64 dimensions = 14;
  if (this->dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->dimensions(i), output);
  }

  // .xla.Window window = 15;
  if (this->has_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_window(), output);
  }

  // .xla.ConvolutionDimensionNumbers convolution_dimension_numbers = 16;
  if (this->has_convolution_dimension_numbers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_convolution_dimension_numbers(), output);
  }

  // repeated .xla.HloInstructionProto.SliceDimensions slice_dimensions = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slice_dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->slice_dimensions(static_cast<int>(i)),
      output);
  }

  // int32 exponent_bits = 18;
  if (this->exponent_bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->exponent_bits(), output);
  }

  // int32 mantissa_bits = 19;
  if (this->mantissa_bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->mantissa_bits(), output);
  }

  // repeated int64 dynamic_slice_sizes = 20;
  if (this->dynamic_slice_sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(20, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dynamic_slice_sizes_cached_byte_size_));
  }
  for (int i = 0, n = this->dynamic_slice_sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->dynamic_slice_sizes(i), output);
  }

  // .xla.PaddingConfig padding_config = 21;
  if (this->has_padding_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_padding_config(), output);
  }

  // bytes outfeed_config = 22;
  if (this->outfeed_config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      22, this->outfeed_config(), output);
  }

  // .xla.RandomDistribution distribution = 23;
  if (this->distribution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->distribution(), output);
  }

  // float epsilon = 24;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->epsilon(), output);
  }

  // int64 feature_index = 25;
  if (this->feature_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->feature_index(), output);
  }

  // int64 channel_id = 26;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->channel_id(), output);
  }

  // bytes infeed_config = 27;
  if (this->infeed_config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      27, this->infeed_config(), output);
  }

  // string custom_call_target = 28;
  if (this->custom_call_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->custom_call_target().data(), static_cast<int>(this->custom_call_target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.custom_call_target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->custom_call_target(), output);
  }

  // .xla.ShapeProto outfeed_shape = 29;
  if (this->has_outfeed_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_outfeed_shape(), output);
  }

  // .xla.DotDimensionNumbers dot_dimension_numbers = 30;
  if (this->has_dot_dimension_numbers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_dot_dimension_numbers(), output);
  }

  // .xla.FftType fft_type = 31;
  if (this->fft_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      31, this->fft_type(), output);
  }

  // repeated int64 fft_length = 32;
  if (this->fft_length_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(32, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fft_length_cached_byte_size_));
  }
  for (int i = 0, n = this->fft_length_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->fft_length(i), output);
  }

  // .xla.GatherDimensionNumbers gather_dimension_numbers = 33;
  if (this->has_gather_dimension_numbers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_gather_dimension_numbers(), output);
  }

  // repeated int64 gather_slice_sizes = 34;
  if (this->gather_slice_sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(34, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gather_slice_sizes_cached_byte_size_));
  }
  for (int i = 0, n = this->gather_slice_sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->gather_slice_sizes(i), output);
  }

  // int64 id = 35;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(35, this->id(), output);
  }

  // repeated int64 operand_ids = 36;
  if (this->operand_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(36, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _operand_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->operand_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->operand_ids(i), output);
  }

  // repeated int64 control_predecessor_ids = 37;
  if (this->control_predecessor_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(37, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _control_predecessor_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->control_predecessor_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->control_predecessor_ids(i), output);
  }

  // repeated int64 called_computation_ids = 38;
  if (this->called_computation_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(38, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _called_computation_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->called_computation_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->called_computation_ids(i), output);
  }

  // .xla.OpSharding sharding = 40;
  if (this->has_sharding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->_internal_sharding(), output);
  }

  // string channel_name = 41;
  if (this->channel_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_name().data(), static_cast<int>(this->channel_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.channel_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->channel_name(), output);
  }

  // int64 cost_estimate_ns = 42;
  if (this->cost_estimate_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(42, this->cost_estimate_ns(), output);
  }

  // bytes backend_config = 43;
  if (this->backend_config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      43, this->backend_config(), output);
  }

  // int64 all_reduce_id = 45 [deprecated = true];
  if (this->all_reduce_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(45, this->all_reduce_id(), output);
  }

  // bool is_host_transfer = 47;
  if (this->is_host_transfer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(47, this->is_host_transfer(), output);
  }

  // .xla.ScatterDimensionNumbers scatter_dimension_numbers = 48;
  if (this->has_scatter_dimension_numbers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->_internal_scatter_dimension_numbers(), output);
  }

  // repeated .xla.ReplicaGroup replica_groups = 49;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_groups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49,
      this->replica_groups(static_cast<int>(i)),
      output);
  }

  // int64 feature_group_count = 50;
  if (this->feature_group_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(50, this->feature_group_count(), output);
  }

  // .xla.PrecisionConfig precision_config = 51;
  if (this->has_precision_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->_internal_precision_config(), output);
  }

  // repeated .xla.SourceTarget source_target_pairs = 52;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_target_pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52,
      this->source_target_pairs(static_cast<int>(i)),
      output);
  }

  // .xla.OpSharding domain_entry_sharding = 54;
  if (this->has_domain_entry_sharding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->_internal_domain_entry_sharding(), output);
  }

  // .xla.OpSharding domain_exit_sharding = 55;
  if (this->has_domain_exit_sharding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->_internal_domain_exit_sharding(), output);
  }

  // bool constrain_layout = 56;
  if (this->constrain_layout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(56, this->constrain_layout(), output);
  }

  // repeated .xla.ShapeProto operand_shapes_with_layout = 57;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operand_shapes_with_layout_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57,
      this->operand_shapes_with_layout(static_cast<int>(i)),
      output);
  }

  // int64 batch_group_count = 58;
  if (this->batch_group_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(58, this->batch_group_count(), output);
  }

  // .xla.TriangularSolveOptions triangular_solve_options = 59;
  if (this->has_triangular_solve_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, this->_internal_triangular_solve_options(), output);
  }

  // bool is_stable = 60;
  if (this->is_stable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(60, this->is_stable(), output);
  }

  // .xla.ParameterReplication parameter_replication = 61;
  if (this->has_parameter_replication()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, this->_internal_parameter_replication(), output);
  }

  // .xla.CholeskyOptions cholesky_options = 62;
  if (this->has_cholesky_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, this->_internal_cholesky_options(), output);
  }

  // string comparison_direction = 63;
  if (this->comparison_direction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comparison_direction().data(), static_cast<int>(this->comparison_direction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.comparison_direction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      63, this->comparison_direction(), output);
  }

  // repeated int64 outer_dimension_partitions = 64;
  if (this->outer_dimension_partitions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(64, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _outer_dimension_partitions_cached_byte_size_));
  }
  for (int i = 0, n = this->outer_dimension_partitions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->outer_dimension_partitions(i), output);
  }

  // bool custom_call_has_side_effect = 65;
  if (this->custom_call_has_side_effect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(65, this->custom_call_has_side_effect(), output);
  }

  // int64 delta = 66;
  if (this->delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(66, this->delta(), output);
  }

  // bool indices_are_sorted = 67;
  if (this->indices_are_sorted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(67, this->indices_are_sorted(), output);
  }

  // .xla.FrontendAttributes frontend_attributes = 68;
  if (this->has_frontend_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      68, this->_internal_frontend_attributes(), output);
  }

  // bool unique_indices = 69;
  if (this->unique_indices() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(69, this->unique_indices(), output);
  }

  // .xla.RandomAlgorithm rng_algorithm = 70;
  if (this->rng_algorithm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      70, this->rng_algorithm(), output);
  }

  // bool use_global_device_ids = 71;
  if (this->use_global_device_ids() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(71, this->use_global_device_ids(), output);
  }

  // string comparison_type = 72;
  if (this->comparison_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comparison_type().data(), static_cast<int>(this->comparison_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.comparison_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      72, this->comparison_type(), output);
  }

  // bool is_cross_program_prefetch = 73;
  if (this->is_cross_program_prefetch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(73, this->is_cross_program_prefetch(), output);
  }

  // repeated .xla.CustomCallOutputOperandAliasing custom_call_output_operand_aliasing = 74;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_call_output_operand_aliasing_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74,
      this->custom_call_output_operand_aliasing(static_cast<int>(i)),
      output);
  }

  // .xla.PaddingType padding_type = 75;
  if (this->padding_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      75, this->padding_type(), output);
  }

  // .xla.CustomCallSchedule custom_call_schedule = 76;
  if (this->custom_call_schedule() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      76, this->custom_call_schedule(), output);
  }

  // .xla.CustomCallApiVersion custom_call_api_version = 77;
  if (this->custom_call_api_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      77, this->custom_call_api_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloInstructionProto)
}

::google::protobuf::uint8* HloInstructionProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloInstructionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string opcode = 2;
  if (this->opcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opcode().data(), static_cast<int>(this->opcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.opcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->opcode(), target);
  }

  // .xla.ShapeProto shape = 3;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_shape(), deterministic, target);
  }

  // .xla.OpMetadata metadata = 7;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_metadata(), deterministic, target);
  }

  // .xla.LiteralProto literal = 8;
  if (this->has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_literal(), deterministic, target);
  }

  // int64 parameter_number = 9;
  if (this->parameter_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->parameter_number(), target);
  }

  // string fusion_kind = 11;
  if (this->fusion_kind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fusion_kind().data(), static_cast<int>(this->fusion_kind().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.fusion_kind");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->fusion_kind(), target);
  }

  // int64 tuple_index = 13;
  if (this->tuple_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->tuple_index(), target);
  }

  // repeated int64 dimensions = 14;
  if (this->dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->dimensions_, target);
  }

  // .xla.Window window = 15;
  if (this->has_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_window(), deterministic, target);
  }

  // .xla.ConvolutionDimensionNumbers convolution_dimension_numbers = 16;
  if (this->has_convolution_dimension_numbers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_convolution_dimension_numbers(), deterministic, target);
  }

  // repeated .xla.HloInstructionProto.SliceDimensions slice_dimensions = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slice_dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->slice_dimensions(static_cast<int>(i)), deterministic, target);
  }

  // int32 exponent_bits = 18;
  if (this->exponent_bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->exponent_bits(), target);
  }

  // int32 mantissa_bits = 19;
  if (this->mantissa_bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->mantissa_bits(), target);
  }

  // repeated int64 dynamic_slice_sizes = 20;
  if (this->dynamic_slice_sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      20,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dynamic_slice_sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->dynamic_slice_sizes_, target);
  }

  // .xla.PaddingConfig padding_config = 21;
  if (this->has_padding_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_padding_config(), deterministic, target);
  }

  // bytes outfeed_config = 22;
  if (this->outfeed_config().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        22, this->outfeed_config(), target);
  }

  // .xla.RandomDistribution distribution = 23;
  if (this->distribution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->distribution(), target);
  }

  // float epsilon = 24;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->epsilon(), target);
  }

  // int64 feature_index = 25;
  if (this->feature_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->feature_index(), target);
  }

  // int64 channel_id = 26;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->channel_id(), target);
  }

  // bytes infeed_config = 27;
  if (this->infeed_config().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        27, this->infeed_config(), target);
  }

  // string custom_call_target = 28;
  if (this->custom_call_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->custom_call_target().data(), static_cast<int>(this->custom_call_target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.custom_call_target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->custom_call_target(), target);
  }

  // .xla.ShapeProto outfeed_shape = 29;
  if (this->has_outfeed_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_outfeed_shape(), deterministic, target);
  }

  // .xla.DotDimensionNumbers dot_dimension_numbers = 30;
  if (this->has_dot_dimension_numbers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_dot_dimension_numbers(), deterministic, target);
  }

  // .xla.FftType fft_type = 31;
  if (this->fft_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      31, this->fft_type(), target);
  }

  // repeated int64 fft_length = 32;
  if (this->fft_length_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      32,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _fft_length_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->fft_length_, target);
  }

  // .xla.GatherDimensionNumbers gather_dimension_numbers = 33;
  if (this->has_gather_dimension_numbers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_gather_dimension_numbers(), deterministic, target);
  }

  // repeated int64 gather_slice_sizes = 34;
  if (this->gather_slice_sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      34,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _gather_slice_sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->gather_slice_sizes_, target);
  }

  // int64 id = 35;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(35, this->id(), target);
  }

  // repeated int64 operand_ids = 36;
  if (this->operand_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      36,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _operand_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->operand_ids_, target);
  }

  // repeated int64 control_predecessor_ids = 37;
  if (this->control_predecessor_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      37,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _control_predecessor_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->control_predecessor_ids_, target);
  }

  // repeated int64 called_computation_ids = 38;
  if (this->called_computation_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      38,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _called_computation_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->called_computation_ids_, target);
  }

  // .xla.OpSharding sharding = 40;
  if (this->has_sharding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->_internal_sharding(), deterministic, target);
  }

  // string channel_name = 41;
  if (this->channel_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_name().data(), static_cast<int>(this->channel_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.channel_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->channel_name(), target);
  }

  // int64 cost_estimate_ns = 42;
  if (this->cost_estimate_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(42, this->cost_estimate_ns(), target);
  }

  // bytes backend_config = 43;
  if (this->backend_config().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        43, this->backend_config(), target);
  }

  // int64 all_reduce_id = 45 [deprecated = true];
  if (this->all_reduce_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(45, this->all_reduce_id(), target);
  }

  // bool is_host_transfer = 47;
  if (this->is_host_transfer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(47, this->is_host_transfer(), target);
  }

  // .xla.ScatterDimensionNumbers scatter_dimension_numbers = 48;
  if (this->has_scatter_dimension_numbers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48, this->_internal_scatter_dimension_numbers(), deterministic, target);
  }

  // repeated .xla.ReplicaGroup replica_groups = 49;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_groups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49, this->replica_groups(static_cast<int>(i)), deterministic, target);
  }

  // int64 feature_group_count = 50;
  if (this->feature_group_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(50, this->feature_group_count(), target);
  }

  // .xla.PrecisionConfig precision_config = 51;
  if (this->has_precision_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->_internal_precision_config(), deterministic, target);
  }

  // repeated .xla.SourceTarget source_target_pairs = 52;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_target_pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->source_target_pairs(static_cast<int>(i)), deterministic, target);
  }

  // .xla.OpSharding domain_entry_sharding = 54;
  if (this->has_domain_entry_sharding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54, this->_internal_domain_entry_sharding(), deterministic, target);
  }

  // .xla.OpSharding domain_exit_sharding = 55;
  if (this->has_domain_exit_sharding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55, this->_internal_domain_exit_sharding(), deterministic, target);
  }

  // bool constrain_layout = 56;
  if (this->constrain_layout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(56, this->constrain_layout(), target);
  }

  // repeated .xla.ShapeProto operand_shapes_with_layout = 57;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operand_shapes_with_layout_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        57, this->operand_shapes_with_layout(static_cast<int>(i)), deterministic, target);
  }

  // int64 batch_group_count = 58;
  if (this->batch_group_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(58, this->batch_group_count(), target);
  }

  // .xla.TriangularSolveOptions triangular_solve_options = 59;
  if (this->has_triangular_solve_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        59, this->_internal_triangular_solve_options(), deterministic, target);
  }

  // bool is_stable = 60;
  if (this->is_stable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(60, this->is_stable(), target);
  }

  // .xla.ParameterReplication parameter_replication = 61;
  if (this->has_parameter_replication()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        61, this->_internal_parameter_replication(), deterministic, target);
  }

  // .xla.CholeskyOptions cholesky_options = 62;
  if (this->has_cholesky_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        62, this->_internal_cholesky_options(), deterministic, target);
  }

  // string comparison_direction = 63;
  if (this->comparison_direction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comparison_direction().data(), static_cast<int>(this->comparison_direction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.comparison_direction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        63, this->comparison_direction(), target);
  }

  // repeated int64 outer_dimension_partitions = 64;
  if (this->outer_dimension_partitions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      64,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _outer_dimension_partitions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->outer_dimension_partitions_, target);
  }

  // bool custom_call_has_side_effect = 65;
  if (this->custom_call_has_side_effect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(65, this->custom_call_has_side_effect(), target);
  }

  // int64 delta = 66;
  if (this->delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(66, this->delta(), target);
  }

  // bool indices_are_sorted = 67;
  if (this->indices_are_sorted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(67, this->indices_are_sorted(), target);
  }

  // .xla.FrontendAttributes frontend_attributes = 68;
  if (this->has_frontend_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        68, this->_internal_frontend_attributes(), deterministic, target);
  }

  // bool unique_indices = 69;
  if (this->unique_indices() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(69, this->unique_indices(), target);
  }

  // .xla.RandomAlgorithm rng_algorithm = 70;
  if (this->rng_algorithm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      70, this->rng_algorithm(), target);
  }

  // bool use_global_device_ids = 71;
  if (this->use_global_device_ids() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(71, this->use_global_device_ids(), target);
  }

  // string comparison_type = 72;
  if (this->comparison_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comparison_type().data(), static_cast<int>(this->comparison_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloInstructionProto.comparison_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        72, this->comparison_type(), target);
  }

  // bool is_cross_program_prefetch = 73;
  if (this->is_cross_program_prefetch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(73, this->is_cross_program_prefetch(), target);
  }

  // repeated .xla.CustomCallOutputOperandAliasing custom_call_output_operand_aliasing = 74;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_call_output_operand_aliasing_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        74, this->custom_call_output_operand_aliasing(static_cast<int>(i)), deterministic, target);
  }

  // .xla.PaddingType padding_type = 75;
  if (this->padding_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      75, this->padding_type(), target);
  }

  // .xla.CustomCallSchedule custom_call_schedule = 76;
  if (this->custom_call_schedule() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      76, this->custom_call_schedule(), target);
  }

  // .xla.CustomCallApiVersion custom_call_api_version = 77;
  if (this->custom_call_api_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      77, this->custom_call_api_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloInstructionProto)
  return target;
}

size_t HloInstructionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloInstructionProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 dimensions = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .xla.HloInstructionProto.SliceDimensions slice_dimensions = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->slice_dimensions_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->slice_dimensions(static_cast<int>(i)));
    }
  }

  // repeated int64 dynamic_slice_sizes = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->dynamic_slice_sizes_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dynamic_slice_sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 fft_length = 32;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->fft_length_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fft_length_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 gather_slice_sizes = 34;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->gather_slice_sizes_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gather_slice_sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 operand_ids = 36;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->operand_ids_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _operand_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 control_predecessor_ids = 37;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->control_predecessor_ids_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _control_predecessor_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 called_computation_ids = 38;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->called_computation_ids_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _called_computation_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .xla.ReplicaGroup replica_groups = 49;
  {
    unsigned int count = static_cast<unsigned int>(this->replica_groups_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replica_groups(static_cast<int>(i)));
    }
  }

  // repeated .xla.SourceTarget source_target_pairs = 52;
  {
    unsigned int count = static_cast<unsigned int>(this->source_target_pairs_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->source_target_pairs(static_cast<int>(i)));
    }
  }

  // repeated .xla.ShapeProto operand_shapes_with_layout = 57;
  {
    unsigned int count = static_cast<unsigned int>(this->operand_shapes_with_layout_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operand_shapes_with_layout(static_cast<int>(i)));
    }
  }

  // repeated int64 outer_dimension_partitions = 64;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->outer_dimension_partitions_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _outer_dimension_partitions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .xla.CustomCallOutputOperandAliasing custom_call_output_operand_aliasing = 74;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_call_output_operand_aliasing_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custom_call_output_operand_aliasing(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string opcode = 2;
  if (this->opcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opcode());
  }

  // string fusion_kind = 11;
  if (this->fusion_kind().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fusion_kind());
  }

  // bytes outfeed_config = 22;
  if (this->outfeed_config().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->outfeed_config());
  }

  // bytes infeed_config = 27;
  if (this->infeed_config().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->infeed_config());
  }

  // string custom_call_target = 28;
  if (this->custom_call_target().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->custom_call_target());
  }

  // string channel_name = 41;
  if (this->channel_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_name());
  }

  // bytes backend_config = 43;
  if (this->backend_config().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->backend_config());
  }

  // string comparison_direction = 63;
  if (this->comparison_direction().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comparison_direction());
  }

  // string comparison_type = 72;
  if (this->comparison_type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comparison_type());
  }

  // .xla.ShapeProto shape = 3;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_);
  }

  // .xla.OpMetadata metadata = 7;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // .xla.LiteralProto literal = 8;
  if (this->has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *literal_);
  }

  // .xla.Window window = 15;
  if (this->has_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *window_);
  }

  // .xla.ConvolutionDimensionNumbers convolution_dimension_numbers = 16;
  if (this->has_convolution_dimension_numbers()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *convolution_dimension_numbers_);
  }

  // .xla.PaddingConfig padding_config = 21;
  if (this->has_padding_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *padding_config_);
  }

  // .xla.ShapeProto outfeed_shape = 29;
  if (this->has_outfeed_shape()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *outfeed_shape_);
  }

  // .xla.DotDimensionNumbers dot_dimension_numbers = 30;
  if (this->has_dot_dimension_numbers()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dot_dimension_numbers_);
  }

  // .xla.GatherDimensionNumbers gather_dimension_numbers = 33;
  if (this->has_gather_dimension_numbers()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gather_dimension_numbers_);
  }

  // .xla.OpSharding sharding = 40;
  if (this->has_sharding()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sharding_);
  }

  // .xla.ScatterDimensionNumbers scatter_dimension_numbers = 48;
  if (this->has_scatter_dimension_numbers()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scatter_dimension_numbers_);
  }

  // .xla.PrecisionConfig precision_config = 51;
  if (this->has_precision_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *precision_config_);
  }

  // .xla.OpSharding domain_entry_sharding = 54;
  if (this->has_domain_entry_sharding()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *domain_entry_sharding_);
  }

  // .xla.OpSharding domain_exit_sharding = 55;
  if (this->has_domain_exit_sharding()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *domain_exit_sharding_);
  }

  // .xla.TriangularSolveOptions triangular_solve_options = 59;
  if (this->has_triangular_solve_options()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *triangular_solve_options_);
  }

  // .xla.ParameterReplication parameter_replication = 61;
  if (this->has_parameter_replication()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameter_replication_);
  }

  // .xla.CholeskyOptions cholesky_options = 62;
  if (this->has_cholesky_options()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cholesky_options_);
  }

  // .xla.FrontendAttributes frontend_attributes = 68;
  if (this->has_frontend_attributes()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *frontend_attributes_);
  }

  // int64 parameter_number = 9;
  if (this->parameter_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->parameter_number());
  }

  // int64 tuple_index = 13;
  if (this->tuple_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tuple_index());
  }

  // int32 exponent_bits = 18;
  if (this->exponent_bits() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exponent_bits());
  }

  // int32 mantissa_bits = 19;
  if (this->mantissa_bits() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mantissa_bits());
  }

  // .xla.RandomDistribution distribution = 23;
  if (this->distribution() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->distribution());
  }

  // float epsilon = 24;
  if (this->epsilon() != 0) {
    total_size += 2 + 4;
  }

  // int64 feature_index = 25;
  if (this->feature_index() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->feature_index());
  }

  // int64 channel_id = 26;
  if (this->channel_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  // int64 id = 35;
  if (this->id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 cost_estimate_ns = 42;
  if (this->cost_estimate_ns() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cost_estimate_ns());
  }

  // int64 all_reduce_id = 45 [deprecated = true];
  if (this->all_reduce_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->all_reduce_id());
  }

  // int64 feature_group_count = 50;
  if (this->feature_group_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->feature_group_count());
  }

  // .xla.FftType fft_type = 31;
  if (this->fft_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fft_type());
  }

  // bool use_global_device_ids = 71;
  if (this->use_global_device_ids() != 0) {
    total_size += 2 + 1;
  }

  // bool is_host_transfer = 47;
  if (this->is_host_transfer() != 0) {
    total_size += 2 + 1;
  }

  // bool is_stable = 60;
  if (this->is_stable() != 0) {
    total_size += 2 + 1;
  }

  // bool constrain_layout = 56;
  if (this->constrain_layout() != 0) {
    total_size += 2 + 1;
  }

  // int64 batch_group_count = 58;
  if (this->batch_group_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->batch_group_count());
  }

  // int64 delta = 66;
  if (this->delta() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->delta());
  }

  // bool custom_call_has_side_effect = 65;
  if (this->custom_call_has_side_effect() != 0) {
    total_size += 2 + 1;
  }

  // bool indices_are_sorted = 67;
  if (this->indices_are_sorted() != 0) {
    total_size += 2 + 1;
  }

  // bool unique_indices = 69;
  if (this->unique_indices() != 0) {
    total_size += 2 + 1;
  }

  // bool is_cross_program_prefetch = 73;
  if (this->is_cross_program_prefetch() != 0) {
    total_size += 2 + 1;
  }

  // .xla.RandomAlgorithm rng_algorithm = 70;
  if (this->rng_algorithm() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rng_algorithm());
  }

  // .xla.CustomCallApiVersion custom_call_api_version = 77;
  if (this->custom_call_api_version() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->custom_call_api_version());
  }

  // .xla.PaddingType padding_type = 75;
  if (this->padding_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->padding_type());
  }

  // .xla.CustomCallSchedule custom_call_schedule = 76;
  if (this->custom_call_schedule() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->custom_call_schedule());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloInstructionProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloInstructionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloInstructionProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloInstructionProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloInstructionProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloInstructionProto)
    MergeFrom(*source);
  }
}

void HloInstructionProto::MergeFrom(const HloInstructionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloInstructionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
  slice_dimensions_.MergeFrom(from.slice_dimensions_);
  dynamic_slice_sizes_.MergeFrom(from.dynamic_slice_sizes_);
  fft_length_.MergeFrom(from.fft_length_);
  gather_slice_sizes_.MergeFrom(from.gather_slice_sizes_);
  operand_ids_.MergeFrom(from.operand_ids_);
  control_predecessor_ids_.MergeFrom(from.control_predecessor_ids_);
  called_computation_ids_.MergeFrom(from.called_computation_ids_);
  replica_groups_.MergeFrom(from.replica_groups_);
  source_target_pairs_.MergeFrom(from.source_target_pairs_);
  operand_shapes_with_layout_.MergeFrom(from.operand_shapes_with_layout_);
  outer_dimension_partitions_.MergeFrom(from.outer_dimension_partitions_);
  custom_call_output_operand_aliasing_.MergeFrom(from.custom_call_output_operand_aliasing_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.opcode().size() > 0) {
    set_opcode(from.opcode());
  }
  if (from.fusion_kind().size() > 0) {
    set_fusion_kind(from.fusion_kind());
  }
  if (from.outfeed_config().size() > 0) {
    set_outfeed_config(from.outfeed_config());
  }
  if (from.infeed_config().size() > 0) {
    set_infeed_config(from.infeed_config());
  }
  if (from.custom_call_target().size() > 0) {
    set_custom_call_target(from.custom_call_target());
  }
  if (from.channel_name().size() > 0) {
    set_channel_name(from.channel_name());
  }
  if (from.backend_config().size() > 0) {
    set_backend_config(from.backend_config());
  }
  if (from.comparison_direction().size() > 0) {
    set_comparison_direction(from.comparison_direction());
  }
  if (from.comparison_type().size() > 0) {
    set_comparison_type(from.comparison_type());
  }
  if (from.has_shape()) {
    mutable_shape()->::xla::ShapeProto::MergeFrom(from.shape());
  }
  if (from.has_metadata()) {
    mutable_metadata()->::xla::OpMetadata::MergeFrom(from.metadata());
  }
  if (from.has_literal()) {
    mutable_literal()->::xla::LiteralProto::MergeFrom(from.literal());
  }
  if (from.has_window()) {
    mutable_window()->::xla::Window::MergeFrom(from.window());
  }
  if (from.has_convolution_dimension_numbers()) {
    mutable_convolution_dimension_numbers()->::xla::ConvolutionDimensionNumbers::MergeFrom(from.convolution_dimension_numbers());
  }
  if (from.has_padding_config()) {
    mutable_padding_config()->::xla::PaddingConfig::MergeFrom(from.padding_config());
  }
  if (from.has_outfeed_shape()) {
    mutable_outfeed_shape()->::xla::ShapeProto::MergeFrom(from.outfeed_shape());
  }
  if (from.has_dot_dimension_numbers()) {
    mutable_dot_dimension_numbers()->::xla::DotDimensionNumbers::MergeFrom(from.dot_dimension_numbers());
  }
  if (from.has_gather_dimension_numbers()) {
    mutable_gather_dimension_numbers()->::xla::GatherDimensionNumbers::MergeFrom(from.gather_dimension_numbers());
  }
  if (from.has_sharding()) {
    mutable_sharding()->::xla::OpSharding::MergeFrom(from.sharding());
  }
  if (from.has_scatter_dimension_numbers()) {
    mutable_scatter_dimension_numbers()->::xla::ScatterDimensionNumbers::MergeFrom(from.scatter_dimension_numbers());
  }
  if (from.has_precision_config()) {
    mutable_precision_config()->::xla::PrecisionConfig::MergeFrom(from.precision_config());
  }
  if (from.has_domain_entry_sharding()) {
    mutable_domain_entry_sharding()->::xla::OpSharding::MergeFrom(from.domain_entry_sharding());
  }
  if (from.has_domain_exit_sharding()) {
    mutable_domain_exit_sharding()->::xla::OpSharding::MergeFrom(from.domain_exit_sharding());
  }
  if (from.has_triangular_solve_options()) {
    mutable_triangular_solve_options()->::xla::TriangularSolveOptions::MergeFrom(from.triangular_solve_options());
  }
  if (from.has_parameter_replication()) {
    mutable_parameter_replication()->::xla::ParameterReplication::MergeFrom(from.parameter_replication());
  }
  if (from.has_cholesky_options()) {
    mutable_cholesky_options()->::xla::CholeskyOptions::MergeFrom(from.cholesky_options());
  }
  if (from.has_frontend_attributes()) {
    mutable_frontend_attributes()->::xla::FrontendAttributes::MergeFrom(from.frontend_attributes());
  }
  if (from.parameter_number() != 0) {
    set_parameter_number(from.parameter_number());
  }
  if (from.tuple_index() != 0) {
    set_tuple_index(from.tuple_index());
  }
  if (from.exponent_bits() != 0) {
    set_exponent_bits(from.exponent_bits());
  }
  if (from.mantissa_bits() != 0) {
    set_mantissa_bits(from.mantissa_bits());
  }
  if (from.distribution() != 0) {
    set_distribution(from.distribution());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
  if (from.feature_index() != 0) {
    set_feature_index(from.feature_index());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.cost_estimate_ns() != 0) {
    set_cost_estimate_ns(from.cost_estimate_ns());
  }
  if (from.all_reduce_id() != 0) {
    set_all_reduce_id(from.all_reduce_id());
  }
  if (from.feature_group_count() != 0) {
    set_feature_group_count(from.feature_group_count());
  }
  if (from.fft_type() != 0) {
    set_fft_type(from.fft_type());
  }
  if (from.use_global_device_ids() != 0) {
    set_use_global_device_ids(from.use_global_device_ids());
  }
  if (from.is_host_transfer() != 0) {
    set_is_host_transfer(from.is_host_transfer());
  }
  if (from.is_stable() != 0) {
    set_is_stable(from.is_stable());
  }
  if (from.constrain_layout() != 0) {
    set_constrain_layout(from.constrain_layout());
  }
  if (from.batch_group_count() != 0) {
    set_batch_group_count(from.batch_group_count());
  }
  if (from.delta() != 0) {
    set_delta(from.delta());
  }
  if (from.custom_call_has_side_effect() != 0) {
    set_custom_call_has_side_effect(from.custom_call_has_side_effect());
  }
  if (from.indices_are_sorted() != 0) {
    set_indices_are_sorted(from.indices_are_sorted());
  }
  if (from.unique_indices() != 0) {
    set_unique_indices(from.unique_indices());
  }
  if (from.is_cross_program_prefetch() != 0) {
    set_is_cross_program_prefetch(from.is_cross_program_prefetch());
  }
  if (from.rng_algorithm() != 0) {
    set_rng_algorithm(from.rng_algorithm());
  }
  if (from.custom_call_api_version() != 0) {
    set_custom_call_api_version(from.custom_call_api_version());
  }
  if (from.padding_type() != 0) {
    set_padding_type(from.padding_type());
  }
  if (from.custom_call_schedule() != 0) {
    set_custom_call_schedule(from.custom_call_schedule());
  }
}

void HloInstructionProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloInstructionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloInstructionProto::CopyFrom(const HloInstructionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloInstructionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloInstructionProto::IsInitialized() const {
  return true;
}

void HloInstructionProto::Swap(HloInstructionProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloInstructionProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloInstructionProto::UnsafeArenaSwap(HloInstructionProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloInstructionProto::InternalSwap(HloInstructionProto* other) {
  using std::swap;
  dimensions_.InternalSwap(&other->dimensions_);
  CastToBase(&slice_dimensions_)->InternalSwap(CastToBase(&other->slice_dimensions_));
  dynamic_slice_sizes_.InternalSwap(&other->dynamic_slice_sizes_);
  fft_length_.InternalSwap(&other->fft_length_);
  gather_slice_sizes_.InternalSwap(&other->gather_slice_sizes_);
  operand_ids_.InternalSwap(&other->operand_ids_);
  control_predecessor_ids_.InternalSwap(&other->control_predecessor_ids_);
  called_computation_ids_.InternalSwap(&other->called_computation_ids_);
  CastToBase(&replica_groups_)->InternalSwap(CastToBase(&other->replica_groups_));
  CastToBase(&source_target_pairs_)->InternalSwap(CastToBase(&other->source_target_pairs_));
  CastToBase(&operand_shapes_with_layout_)->InternalSwap(CastToBase(&other->operand_shapes_with_layout_));
  outer_dimension_partitions_.InternalSwap(&other->outer_dimension_partitions_);
  CastToBase(&custom_call_output_operand_aliasing_)->InternalSwap(CastToBase(&other->custom_call_output_operand_aliasing_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  opcode_.Swap(&other->opcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fusion_kind_.Swap(&other->fusion_kind_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  outfeed_config_.Swap(&other->outfeed_config_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  infeed_config_.Swap(&other->infeed_config_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  custom_call_target_.Swap(&other->custom_call_target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_name_.Swap(&other->channel_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  backend_config_.Swap(&other->backend_config_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comparison_direction_.Swap(&other->comparison_direction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comparison_type_.Swap(&other->comparison_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shape_, other->shape_);
  swap(metadata_, other->metadata_);
  swap(literal_, other->literal_);
  swap(window_, other->window_);
  swap(convolution_dimension_numbers_, other->convolution_dimension_numbers_);
  swap(padding_config_, other->padding_config_);
  swap(outfeed_shape_, other->outfeed_shape_);
  swap(dot_dimension_numbers_, other->dot_dimension_numbers_);
  swap(gather_dimension_numbers_, other->gather_dimension_numbers_);
  swap(sharding_, other->sharding_);
  swap(scatter_dimension_numbers_, other->scatter_dimension_numbers_);
  swap(precision_config_, other->precision_config_);
  swap(domain_entry_sharding_, other->domain_entry_sharding_);
  swap(domain_exit_sharding_, other->domain_exit_sharding_);
  swap(triangular_solve_options_, other->triangular_solve_options_);
  swap(parameter_replication_, other->parameter_replication_);
  swap(cholesky_options_, other->cholesky_options_);
  swap(frontend_attributes_, other->frontend_attributes_);
  swap(parameter_number_, other->parameter_number_);
  swap(tuple_index_, other->tuple_index_);
  swap(exponent_bits_, other->exponent_bits_);
  swap(mantissa_bits_, other->mantissa_bits_);
  swap(distribution_, other->distribution_);
  swap(epsilon_, other->epsilon_);
  swap(feature_index_, other->feature_index_);
  swap(channel_id_, other->channel_id_);
  swap(id_, other->id_);
  swap(cost_estimate_ns_, other->cost_estimate_ns_);
  swap(all_reduce_id_, other->all_reduce_id_);
  swap(feature_group_count_, other->feature_group_count_);
  swap(fft_type_, other->fft_type_);
  swap(use_global_device_ids_, other->use_global_device_ids_);
  swap(is_host_transfer_, other->is_host_transfer_);
  swap(is_stable_, other->is_stable_);
  swap(constrain_layout_, other->constrain_layout_);
  swap(batch_group_count_, other->batch_group_count_);
  swap(delta_, other->delta_);
  swap(custom_call_has_side_effect_, other->custom_call_has_side_effect_);
  swap(indices_are_sorted_, other->indices_are_sorted_);
  swap(unique_indices_, other->unique_indices_);
  swap(is_cross_program_prefetch_, other->is_cross_program_prefetch_);
  swap(rng_algorithm_, other->rng_algorithm_);
  swap(custom_call_api_version_, other->custom_call_api_version_);
  swap(padding_type_, other->padding_type_);
  swap(custom_call_schedule_, other->custom_call_schedule_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloInstructionProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloComputationProto::InitAsDefaultInstance() {
  ::xla::_HloComputationProto_default_instance_._instance.get_mutable()->program_shape_ = const_cast< ::xla::ProgramShapeProto*>(
      ::xla::ProgramShapeProto::internal_default_instance());
}
void HloComputationProto::unsafe_arena_set_allocated_program_shape(
    ::xla::ProgramShapeProto* program_shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete program_shape_;
  }
  program_shape_ = program_shape;
  if (program_shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloComputationProto.program_shape)
}
void HloComputationProto::clear_program_shape() {
  if (GetArenaNoVirtual() == NULL && program_shape_ != NULL) {
    delete program_shape_;
  }
  program_shape_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloComputationProto::kNameFieldNumber;
const int HloComputationProto::kInstructionsFieldNumber;
const int HloComputationProto::kProgramShapeFieldNumber;
const int HloComputationProto::kIdFieldNumber;
const int HloComputationProto::kRootIdFieldNumber;
const int HloComputationProto::kIsFusionComputationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloComputationProto::HloComputationProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloComputationProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloComputationProto)
}
HloComputationProto::HloComputationProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  instructions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloComputationProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloComputationProto)
}
HloComputationProto::HloComputationProto(const HloComputationProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instructions_(from.instructions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_program_shape()) {
    program_shape_ = new ::xla::ProgramShapeProto(*from.program_shape_);
  } else {
    program_shape_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_fusion_computation_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_fusion_computation_));
  // @@protoc_insertion_point(copy_constructor:xla.HloComputationProto)
}

void HloComputationProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&program_shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_fusion_computation_) -
      reinterpret_cast<char*>(&program_shape_)) + sizeof(is_fusion_computation_));
}

HloComputationProto::~HloComputationProto() {
  // @@protoc_insertion_point(destructor:xla.HloComputationProto)
  SharedDtor();
}

void HloComputationProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete program_shape_;
}

void HloComputationProto::ArenaDtor(void* object) {
  HloComputationProto* _this = reinterpret_cast< HloComputationProto* >(object);
  (void)_this;
}
void HloComputationProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloComputationProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloComputationProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloComputationProto& HloComputationProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloComputationProto.base);
  return *internal_default_instance();
}


void HloComputationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloComputationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instructions_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && program_shape_ != NULL) {
    delete program_shape_;
  }
  program_shape_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_fusion_computation_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_fusion_computation_));
  _internal_metadata_.Clear();
}

bool HloComputationProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloComputationProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloComputationProto.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.HloInstructionProto instructions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_instructions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ProgramShapeProto program_shape = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_program_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 root_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &root_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_fusion_computation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fusion_computation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloComputationProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloComputationProto)
  return false;
#undef DO_
}

void HloComputationProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloComputationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloComputationProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .xla.HloInstructionProto instructions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instructions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->instructions(static_cast<int>(i)),
      output);
  }

  // .xla.ProgramShapeProto program_shape = 4;
  if (this->has_program_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_program_shape(), output);
  }

  // int64 id = 5;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->id(), output);
  }

  // int64 root_id = 6;
  if (this->root_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->root_id(), output);
  }

  // bool is_fusion_computation = 7;
  if (this->is_fusion_computation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_fusion_computation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloComputationProto)
}

::google::protobuf::uint8* HloComputationProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloComputationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloComputationProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .xla.HloInstructionProto instructions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instructions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->instructions(static_cast<int>(i)), deterministic, target);
  }

  // .xla.ProgramShapeProto program_shape = 4;
  if (this->has_program_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_program_shape(), deterministic, target);
  }

  // int64 id = 5;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->id(), target);
  }

  // int64 root_id = 6;
  if (this->root_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->root_id(), target);
  }

  // bool is_fusion_computation = 7;
  if (this->is_fusion_computation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_fusion_computation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloComputationProto)
  return target;
}

size_t HloComputationProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloComputationProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.HloInstructionProto instructions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->instructions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->instructions(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .xla.ProgramShapeProto program_shape = 4;
  if (this->has_program_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *program_shape_);
  }

  // int64 id = 5;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 root_id = 6;
  if (this->root_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->root_id());
  }

  // bool is_fusion_computation = 7;
  if (this->is_fusion_computation() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloComputationProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloComputationProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloComputationProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloComputationProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloComputationProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloComputationProto)
    MergeFrom(*source);
  }
}

void HloComputationProto::MergeFrom(const HloComputationProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloComputationProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instructions_.MergeFrom(from.instructions_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_program_shape()) {
    mutable_program_shape()->::xla::ProgramShapeProto::MergeFrom(from.program_shape());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.root_id() != 0) {
    set_root_id(from.root_id());
  }
  if (from.is_fusion_computation() != 0) {
    set_is_fusion_computation(from.is_fusion_computation());
  }
}

void HloComputationProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloComputationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloComputationProto::CopyFrom(const HloComputationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloComputationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloComputationProto::IsInitialized() const {
  return true;
}

void HloComputationProto::Swap(HloComputationProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloComputationProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloComputationProto::UnsafeArenaSwap(HloComputationProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloComputationProto::InternalSwap(HloComputationProto* other) {
  using std::swap;
  CastToBase(&instructions_)->InternalSwap(CastToBase(&other->instructions_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(program_shape_, other->program_shape_);
  swap(id_, other->id_);
  swap(root_id_, other->root_id_);
  swap(is_fusion_computation_, other->is_fusion_computation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloComputationProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloScheduleProto_InstructionSequence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloScheduleProto_InstructionSequence::kInstructionIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloScheduleProto_InstructionSequence::HloScheduleProto_InstructionSequence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto_InstructionSequence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloScheduleProto.InstructionSequence)
}
HloScheduleProto_InstructionSequence::HloScheduleProto_InstructionSequence(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  instruction_ids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto_InstructionSequence.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloScheduleProto.InstructionSequence)
}
HloScheduleProto_InstructionSequence::HloScheduleProto_InstructionSequence(const HloScheduleProto_InstructionSequence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instruction_ids_(from.instruction_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.HloScheduleProto.InstructionSequence)
}

void HloScheduleProto_InstructionSequence::SharedCtor() {
}

HloScheduleProto_InstructionSequence::~HloScheduleProto_InstructionSequence() {
  // @@protoc_insertion_point(destructor:xla.HloScheduleProto.InstructionSequence)
  SharedDtor();
}

void HloScheduleProto_InstructionSequence::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HloScheduleProto_InstructionSequence::ArenaDtor(void* object) {
  HloScheduleProto_InstructionSequence* _this = reinterpret_cast< HloScheduleProto_InstructionSequence* >(object);
  (void)_this;
}
void HloScheduleProto_InstructionSequence::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloScheduleProto_InstructionSequence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloScheduleProto_InstructionSequence::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloScheduleProto_InstructionSequence& HloScheduleProto_InstructionSequence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto_InstructionSequence.base);
  return *internal_default_instance();
}


void HloScheduleProto_InstructionSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloScheduleProto.InstructionSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instruction_ids_.Clear();
  _internal_metadata_.Clear();
}

bool HloScheduleProto_InstructionSequence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloScheduleProto.InstructionSequence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 instruction_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_instruction_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_instruction_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloScheduleProto.InstructionSequence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloScheduleProto.InstructionSequence)
  return false;
#undef DO_
}

void HloScheduleProto_InstructionSequence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloScheduleProto.InstructionSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 instruction_ids = 1;
  if (this->instruction_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _instruction_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->instruction_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->instruction_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloScheduleProto.InstructionSequence)
}

::google::protobuf::uint8* HloScheduleProto_InstructionSequence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloScheduleProto.InstructionSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 instruction_ids = 1;
  if (this->instruction_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _instruction_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->instruction_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloScheduleProto.InstructionSequence)
  return target;
}

size_t HloScheduleProto_InstructionSequence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloScheduleProto.InstructionSequence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 instruction_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->instruction_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _instruction_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloScheduleProto_InstructionSequence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloScheduleProto.InstructionSequence)
  GOOGLE_DCHECK_NE(&from, this);
  const HloScheduleProto_InstructionSequence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloScheduleProto_InstructionSequence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloScheduleProto.InstructionSequence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloScheduleProto.InstructionSequence)
    MergeFrom(*source);
  }
}

void HloScheduleProto_InstructionSequence::MergeFrom(const HloScheduleProto_InstructionSequence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloScheduleProto.InstructionSequence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instruction_ids_.MergeFrom(from.instruction_ids_);
}

void HloScheduleProto_InstructionSequence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloScheduleProto.InstructionSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloScheduleProto_InstructionSequence::CopyFrom(const HloScheduleProto_InstructionSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloScheduleProto.InstructionSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloScheduleProto_InstructionSequence::IsInitialized() const {
  return true;
}

void HloScheduleProto_InstructionSequence::Swap(HloScheduleProto_InstructionSequence* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloScheduleProto_InstructionSequence* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloScheduleProto_InstructionSequence::UnsafeArenaSwap(HloScheduleProto_InstructionSequence* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloScheduleProto_InstructionSequence::InternalSwap(HloScheduleProto_InstructionSequence* other) {
  using std::swap;
  instruction_ids_.InternalSwap(&other->instruction_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloScheduleProto_InstructionSequence::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

HloScheduleProto_SequencesEntry_DoNotUse::HloScheduleProto_SequencesEntry_DoNotUse() {}
HloScheduleProto_SequencesEntry_DoNotUse::HloScheduleProto_SequencesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HloScheduleProto_SequencesEntry_DoNotUse::MergeFrom(const HloScheduleProto_SequencesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HloScheduleProto_SequencesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[4];
}
void HloScheduleProto_SequencesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void HloScheduleProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloScheduleProto::kSequencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloScheduleProto::HloScheduleProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloScheduleProto)
}
HloScheduleProto::HloScheduleProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  sequences_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloScheduleProto)
}
HloScheduleProto::HloScheduleProto(const HloScheduleProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sequences_.MergeFrom(from.sequences_);
  // @@protoc_insertion_point(copy_constructor:xla.HloScheduleProto)
}

void HloScheduleProto::SharedCtor() {
}

HloScheduleProto::~HloScheduleProto() {
  // @@protoc_insertion_point(destructor:xla.HloScheduleProto)
  SharedDtor();
}

void HloScheduleProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HloScheduleProto::ArenaDtor(void* object) {
  HloScheduleProto* _this = reinterpret_cast< HloScheduleProto* >(object);
  (void)_this;
}
void HloScheduleProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloScheduleProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloScheduleProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloScheduleProto& HloScheduleProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloScheduleProto.base);
  return *internal_default_instance();
}


void HloScheduleProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloScheduleProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sequences_.Clear();
  _internal_metadata_.Clear();
}

bool HloScheduleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloScheduleProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, .xla.HloScheduleProto.InstructionSequence> sequences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          HloScheduleProto_SequencesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HloScheduleProto_SequencesEntry_DoNotUse,
              ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence > > parser(&sequences_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloScheduleProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloScheduleProto)
  return false;
#undef DO_
}

void HloScheduleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloScheduleProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .xla.HloScheduleProto.InstructionSequence> sequences = 1;
  if (!this->sequences().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->sequences().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->sequences().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::const_iterator
          it = this->sequences().begin();
          it != this->sequences().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HloScheduleProto_SequencesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sequences_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<HloScheduleProto_SequencesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::const_iterator
          it = this->sequences().begin();
          it != this->sequences().end(); ++it) {
        entry.reset(sequences_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloScheduleProto)
}

::google::protobuf::uint8* HloScheduleProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloScheduleProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .xla.HloScheduleProto.InstructionSequence> sequences = 1;
  if (!this->sequences().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->sequences().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->sequences().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::const_iterator
          it = this->sequences().begin();
          it != this->sequences().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HloScheduleProto_SequencesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sequences_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<HloScheduleProto_SequencesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::const_iterator
          it = this->sequences().begin();
          it != this->sequences().end(); ++it) {
        entry.reset(sequences_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloScheduleProto)
  return target;
}

size_t HloScheduleProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloScheduleProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int64, .xla.HloScheduleProto.InstructionSequence> sequences = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sequences_size());
  {
    ::std::unique_ptr<HloScheduleProto_SequencesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::xla::HloScheduleProto_InstructionSequence >::const_iterator
        it = this->sequences().begin();
        it != this->sequences().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(sequences_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloScheduleProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloScheduleProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloScheduleProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloScheduleProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloScheduleProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloScheduleProto)
    MergeFrom(*source);
  }
}

void HloScheduleProto::MergeFrom(const HloScheduleProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloScheduleProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sequences_.MergeFrom(from.sequences_);
}

void HloScheduleProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloScheduleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloScheduleProto::CopyFrom(const HloScheduleProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloScheduleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloScheduleProto::IsInitialized() const {
  return true;
}

void HloScheduleProto::Swap(HloScheduleProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloScheduleProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloScheduleProto::UnsafeArenaSwap(HloScheduleProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloScheduleProto::InternalSwap(HloScheduleProto* other) {
  using std::swap;
  sequences_.Swap(&other->sequences_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloScheduleProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloInputOutputAliasProto_AliasEntryProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloInputOutputAliasProto_AliasEntryProto::kOutputShapeIndexFieldNumber;
const int HloInputOutputAliasProto_AliasEntryProto::kParameterNumberFieldNumber;
const int HloInputOutputAliasProto_AliasEntryProto::kParameterShapeIndexFieldNumber;
const int HloInputOutputAliasProto_AliasEntryProto::kKindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloInputOutputAliasProto_AliasEntryProto::HloInputOutputAliasProto_AliasEntryProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInputOutputAliasProto_AliasEntryProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloInputOutputAliasProto.AliasEntryProto)
}
HloInputOutputAliasProto_AliasEntryProto::HloInputOutputAliasProto_AliasEntryProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  output_shape_index_(arena),
  parameter_shape_index_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInputOutputAliasProto_AliasEntryProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloInputOutputAliasProto.AliasEntryProto)
}
HloInputOutputAliasProto_AliasEntryProto::HloInputOutputAliasProto_AliasEntryProto(const HloInputOutputAliasProto_AliasEntryProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      output_shape_index_(from.output_shape_index_),
      parameter_shape_index_(from.parameter_shape_index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&parameter_number_, &from.parameter_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&parameter_number_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:xla.HloInputOutputAliasProto.AliasEntryProto)
}

void HloInputOutputAliasProto_AliasEntryProto::SharedCtor() {
  ::memset(&parameter_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&parameter_number_)) + sizeof(kind_));
}

HloInputOutputAliasProto_AliasEntryProto::~HloInputOutputAliasProto_AliasEntryProto() {
  // @@protoc_insertion_point(destructor:xla.HloInputOutputAliasProto.AliasEntryProto)
  SharedDtor();
}

void HloInputOutputAliasProto_AliasEntryProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HloInputOutputAliasProto_AliasEntryProto::ArenaDtor(void* object) {
  HloInputOutputAliasProto_AliasEntryProto* _this = reinterpret_cast< HloInputOutputAliasProto_AliasEntryProto* >(object);
  (void)_this;
}
void HloInputOutputAliasProto_AliasEntryProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloInputOutputAliasProto_AliasEntryProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloInputOutputAliasProto_AliasEntryProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloInputOutputAliasProto_AliasEntryProto& HloInputOutputAliasProto_AliasEntryProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInputOutputAliasProto_AliasEntryProto.base);
  return *internal_default_instance();
}


void HloInputOutputAliasProto_AliasEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_shape_index_.Clear();
  parameter_shape_index_.Clear();
  ::memset(&parameter_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&parameter_number_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

bool HloInputOutputAliasProto_AliasEntryProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 output_shape_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_output_shape_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_output_shape_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 parameter_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parameter_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 parameter_shape_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_parameter_shape_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_parameter_shape_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.Kind kind = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::xla::Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloInputOutputAliasProto.AliasEntryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloInputOutputAliasProto.AliasEntryProto)
  return false;
#undef DO_
}

void HloInputOutputAliasProto_AliasEntryProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 output_shape_index = 1;
  if (this->output_shape_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _output_shape_index_cached_byte_size_));
  }
  for (int i = 0, n = this->output_shape_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->output_shape_index(i), output);
  }

  // int64 parameter_number = 2;
  if (this->parameter_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->parameter_number(), output);
  }

  // repeated int64 parameter_shape_index = 3;
  if (this->parameter_shape_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _parameter_shape_index_cached_byte_size_));
  }
  for (int i = 0, n = this->parameter_shape_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->parameter_shape_index(i), output);
  }

  // .xla.Kind kind = 4;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->kind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloInputOutputAliasProto.AliasEntryProto)
}

::google::protobuf::uint8* HloInputOutputAliasProto_AliasEntryProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 output_shape_index = 1;
  if (this->output_shape_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _output_shape_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->output_shape_index_, target);
  }

  // int64 parameter_number = 2;
  if (this->parameter_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->parameter_number(), target);
  }

  // repeated int64 parameter_shape_index = 3;
  if (this->parameter_shape_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _parameter_shape_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->parameter_shape_index_, target);
  }

  // .xla.Kind kind = 4;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->kind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloInputOutputAliasProto.AliasEntryProto)
  return target;
}

size_t HloInputOutputAliasProto_AliasEntryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 output_shape_index = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->output_shape_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _output_shape_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 parameter_shape_index = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->parameter_shape_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _parameter_shape_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 parameter_number = 2;
  if (this->parameter_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->parameter_number());
  }

  // .xla.Kind kind = 4;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloInputOutputAliasProto_AliasEntryProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloInputOutputAliasProto_AliasEntryProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloInputOutputAliasProto_AliasEntryProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloInputOutputAliasProto.AliasEntryProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloInputOutputAliasProto.AliasEntryProto)
    MergeFrom(*source);
  }
}

void HloInputOutputAliasProto_AliasEntryProto::MergeFrom(const HloInputOutputAliasProto_AliasEntryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_shape_index_.MergeFrom(from.output_shape_index_);
  parameter_shape_index_.MergeFrom(from.parameter_shape_index_);
  if (from.parameter_number() != 0) {
    set_parameter_number(from.parameter_number());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void HloInputOutputAliasProto_AliasEntryProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloInputOutputAliasProto_AliasEntryProto::CopyFrom(const HloInputOutputAliasProto_AliasEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloInputOutputAliasProto_AliasEntryProto::IsInitialized() const {
  return true;
}

void HloInputOutputAliasProto_AliasEntryProto::Swap(HloInputOutputAliasProto_AliasEntryProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloInputOutputAliasProto_AliasEntryProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloInputOutputAliasProto_AliasEntryProto::UnsafeArenaSwap(HloInputOutputAliasProto_AliasEntryProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloInputOutputAliasProto_AliasEntryProto::InternalSwap(HloInputOutputAliasProto_AliasEntryProto* other) {
  using std::swap;
  output_shape_index_.InternalSwap(&other->output_shape_index_);
  parameter_shape_index_.InternalSwap(&other->parameter_shape_index_);
  swap(parameter_number_, other->parameter_number_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloInputOutputAliasProto_AliasEntryProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloInputOutputAliasProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloInputOutputAliasProto::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloInputOutputAliasProto::HloInputOutputAliasProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInputOutputAliasProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloInputOutputAliasProto)
}
HloInputOutputAliasProto::HloInputOutputAliasProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInputOutputAliasProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloInputOutputAliasProto)
}
HloInputOutputAliasProto::HloInputOutputAliasProto(const HloInputOutputAliasProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.HloInputOutputAliasProto)
}

void HloInputOutputAliasProto::SharedCtor() {
}

HloInputOutputAliasProto::~HloInputOutputAliasProto() {
  // @@protoc_insertion_point(destructor:xla.HloInputOutputAliasProto)
  SharedDtor();
}

void HloInputOutputAliasProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HloInputOutputAliasProto::ArenaDtor(void* object) {
  HloInputOutputAliasProto* _this = reinterpret_cast< HloInputOutputAliasProto* >(object);
  (void)_this;
}
void HloInputOutputAliasProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloInputOutputAliasProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloInputOutputAliasProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloInputOutputAliasProto& HloInputOutputAliasProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloInputOutputAliasProto.base);
  return *internal_default_instance();
}


void HloInputOutputAliasProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloInputOutputAliasProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool HloInputOutputAliasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloInputOutputAliasProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.HloInputOutputAliasProto.AliasEntryProto entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloInputOutputAliasProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloInputOutputAliasProto)
  return false;
#undef DO_
}

void HloInputOutputAliasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloInputOutputAliasProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.HloInputOutputAliasProto.AliasEntryProto entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloInputOutputAliasProto)
}

::google::protobuf::uint8* HloInputOutputAliasProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloInputOutputAliasProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.HloInputOutputAliasProto.AliasEntryProto entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloInputOutputAliasProto)
  return target;
}

size_t HloInputOutputAliasProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloInputOutputAliasProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.HloInputOutputAliasProto.AliasEntryProto entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloInputOutputAliasProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloInputOutputAliasProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloInputOutputAliasProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloInputOutputAliasProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloInputOutputAliasProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloInputOutputAliasProto)
    MergeFrom(*source);
  }
}

void HloInputOutputAliasProto::MergeFrom(const HloInputOutputAliasProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloInputOutputAliasProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void HloInputOutputAliasProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloInputOutputAliasProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloInputOutputAliasProto::CopyFrom(const HloInputOutputAliasProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloInputOutputAliasProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloInputOutputAliasProto::IsInitialized() const {
  return true;
}

void HloInputOutputAliasProto::Swap(HloInputOutputAliasProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloInputOutputAliasProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloInputOutputAliasProto::UnsafeArenaSwap(HloInputOutputAliasProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloInputOutputAliasProto::InternalSwap(HloInputOutputAliasProto* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloInputOutputAliasProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DynamicParameterBindingProto_Binding::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicParameterBindingProto_Binding::kDynamicParamNumFieldNumber;
const int DynamicParameterBindingProto_Binding::kDynamicParamIndexFieldNumber;
const int DynamicParameterBindingProto_Binding::kTargetParamNumFieldNumber;
const int DynamicParameterBindingProto_Binding::kTargetParamIndexFieldNumber;
const int DynamicParameterBindingProto_Binding::kTargetParamDimNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicParameterBindingProto_Binding::DynamicParameterBindingProto_Binding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_DynamicParameterBindingProto_Binding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DynamicParameterBindingProto.Binding)
}
DynamicParameterBindingProto_Binding::DynamicParameterBindingProto_Binding(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  dynamic_param_index_(arena),
  target_param_index_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_DynamicParameterBindingProto_Binding.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.DynamicParameterBindingProto.Binding)
}
DynamicParameterBindingProto_Binding::DynamicParameterBindingProto_Binding(const DynamicParameterBindingProto_Binding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dynamic_param_index_(from.dynamic_param_index_),
      target_param_index_(from.target_param_index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dynamic_param_num_, &from.dynamic_param_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_param_dim_num_) -
    reinterpret_cast<char*>(&dynamic_param_num_)) + sizeof(target_param_dim_num_));
  // @@protoc_insertion_point(copy_constructor:xla.DynamicParameterBindingProto.Binding)
}

void DynamicParameterBindingProto_Binding::SharedCtor() {
  ::memset(&dynamic_param_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_param_dim_num_) -
      reinterpret_cast<char*>(&dynamic_param_num_)) + sizeof(target_param_dim_num_));
}

DynamicParameterBindingProto_Binding::~DynamicParameterBindingProto_Binding() {
  // @@protoc_insertion_point(destructor:xla.DynamicParameterBindingProto.Binding)
  SharedDtor();
}

void DynamicParameterBindingProto_Binding::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DynamicParameterBindingProto_Binding::ArenaDtor(void* object) {
  DynamicParameterBindingProto_Binding* _this = reinterpret_cast< DynamicParameterBindingProto_Binding* >(object);
  (void)_this;
}
void DynamicParameterBindingProto_Binding::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DynamicParameterBindingProto_Binding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DynamicParameterBindingProto_Binding::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicParameterBindingProto_Binding& DynamicParameterBindingProto_Binding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_DynamicParameterBindingProto_Binding.base);
  return *internal_default_instance();
}


void DynamicParameterBindingProto_Binding::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DynamicParameterBindingProto.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dynamic_param_index_.Clear();
  target_param_index_.Clear();
  ::memset(&dynamic_param_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_param_dim_num_) -
      reinterpret_cast<char*>(&dynamic_param_num_)) + sizeof(target_param_dim_num_));
  _internal_metadata_.Clear();
}

bool DynamicParameterBindingProto_Binding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DynamicParameterBindingProto.Binding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 dynamic_param_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dynamic_param_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 dynamic_param_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dynamic_param_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_dynamic_param_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 target_param_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_param_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 target_param_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_target_param_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_target_param_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 target_param_dim_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_param_dim_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DynamicParameterBindingProto.Binding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DynamicParameterBindingProto.Binding)
  return false;
#undef DO_
}

void DynamicParameterBindingProto_Binding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DynamicParameterBindingProto.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dynamic_param_num = 1;
  if (this->dynamic_param_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dynamic_param_num(), output);
  }

  // repeated int64 dynamic_param_index = 2;
  if (this->dynamic_param_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dynamic_param_index_cached_byte_size_));
  }
  for (int i = 0, n = this->dynamic_param_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->dynamic_param_index(i), output);
  }

  // int64 target_param_num = 3;
  if (this->target_param_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->target_param_num(), output);
  }

  // repeated int64 target_param_index = 4;
  if (this->target_param_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _target_param_index_cached_byte_size_));
  }
  for (int i = 0, n = this->target_param_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->target_param_index(i), output);
  }

  // int64 target_param_dim_num = 5;
  if (this->target_param_dim_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->target_param_dim_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DynamicParameterBindingProto.Binding)
}

::google::protobuf::uint8* DynamicParameterBindingProto_Binding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DynamicParameterBindingProto.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 dynamic_param_num = 1;
  if (this->dynamic_param_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dynamic_param_num(), target);
  }

  // repeated int64 dynamic_param_index = 2;
  if (this->dynamic_param_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dynamic_param_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->dynamic_param_index_, target);
  }

  // int64 target_param_num = 3;
  if (this->target_param_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->target_param_num(), target);
  }

  // repeated int64 target_param_index = 4;
  if (this->target_param_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _target_param_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->target_param_index_, target);
  }

  // int64 target_param_dim_num = 5;
  if (this->target_param_dim_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->target_param_dim_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DynamicParameterBindingProto.Binding)
  return target;
}

size_t DynamicParameterBindingProto_Binding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DynamicParameterBindingProto.Binding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 dynamic_param_index = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->dynamic_param_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dynamic_param_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 target_param_index = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->target_param_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_param_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 dynamic_param_num = 1;
  if (this->dynamic_param_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dynamic_param_num());
  }

  // int64 target_param_num = 3;
  if (this->target_param_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target_param_num());
  }

  // int64 target_param_dim_num = 5;
  if (this->target_param_dim_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target_param_dim_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DynamicParameterBindingProto_Binding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DynamicParameterBindingProto.Binding)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicParameterBindingProto_Binding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicParameterBindingProto_Binding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DynamicParameterBindingProto.Binding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DynamicParameterBindingProto.Binding)
    MergeFrom(*source);
  }
}

void DynamicParameterBindingProto_Binding::MergeFrom(const DynamicParameterBindingProto_Binding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DynamicParameterBindingProto.Binding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dynamic_param_index_.MergeFrom(from.dynamic_param_index_);
  target_param_index_.MergeFrom(from.target_param_index_);
  if (from.dynamic_param_num() != 0) {
    set_dynamic_param_num(from.dynamic_param_num());
  }
  if (from.target_param_num() != 0) {
    set_target_param_num(from.target_param_num());
  }
  if (from.target_param_dim_num() != 0) {
    set_target_param_dim_num(from.target_param_dim_num());
  }
}

void DynamicParameterBindingProto_Binding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DynamicParameterBindingProto.Binding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicParameterBindingProto_Binding::CopyFrom(const DynamicParameterBindingProto_Binding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DynamicParameterBindingProto.Binding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicParameterBindingProto_Binding::IsInitialized() const {
  return true;
}

void DynamicParameterBindingProto_Binding::Swap(DynamicParameterBindingProto_Binding* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DynamicParameterBindingProto_Binding* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DynamicParameterBindingProto_Binding::UnsafeArenaSwap(DynamicParameterBindingProto_Binding* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DynamicParameterBindingProto_Binding::InternalSwap(DynamicParameterBindingProto_Binding* other) {
  using std::swap;
  dynamic_param_index_.InternalSwap(&other->dynamic_param_index_);
  target_param_index_.InternalSwap(&other->target_param_index_);
  swap(dynamic_param_num_, other->dynamic_param_num_);
  swap(target_param_num_, other->target_param_num_);
  swap(target_param_dim_num_, other->target_param_dim_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DynamicParameterBindingProto_Binding::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DynamicParameterBindingProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicParameterBindingProto::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicParameterBindingProto::DynamicParameterBindingProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_DynamicParameterBindingProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DynamicParameterBindingProto)
}
DynamicParameterBindingProto::DynamicParameterBindingProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_DynamicParameterBindingProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.DynamicParameterBindingProto)
}
DynamicParameterBindingProto::DynamicParameterBindingProto(const DynamicParameterBindingProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.DynamicParameterBindingProto)
}

void DynamicParameterBindingProto::SharedCtor() {
}

DynamicParameterBindingProto::~DynamicParameterBindingProto() {
  // @@protoc_insertion_point(destructor:xla.DynamicParameterBindingProto)
  SharedDtor();
}

void DynamicParameterBindingProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DynamicParameterBindingProto::ArenaDtor(void* object) {
  DynamicParameterBindingProto* _this = reinterpret_cast< DynamicParameterBindingProto* >(object);
  (void)_this;
}
void DynamicParameterBindingProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DynamicParameterBindingProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DynamicParameterBindingProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicParameterBindingProto& DynamicParameterBindingProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_DynamicParameterBindingProto.base);
  return *internal_default_instance();
}


void DynamicParameterBindingProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DynamicParameterBindingProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool DynamicParameterBindingProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DynamicParameterBindingProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.DynamicParameterBindingProto.Binding entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DynamicParameterBindingProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DynamicParameterBindingProto)
  return false;
#undef DO_
}

void DynamicParameterBindingProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DynamicParameterBindingProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.DynamicParameterBindingProto.Binding entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DynamicParameterBindingProto)
}

::google::protobuf::uint8* DynamicParameterBindingProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DynamicParameterBindingProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.DynamicParameterBindingProto.Binding entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DynamicParameterBindingProto)
  return target;
}

size_t DynamicParameterBindingProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DynamicParameterBindingProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.DynamicParameterBindingProto.Binding entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DynamicParameterBindingProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DynamicParameterBindingProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicParameterBindingProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicParameterBindingProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DynamicParameterBindingProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DynamicParameterBindingProto)
    MergeFrom(*source);
  }
}

void DynamicParameterBindingProto::MergeFrom(const DynamicParameterBindingProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DynamicParameterBindingProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void DynamicParameterBindingProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DynamicParameterBindingProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicParameterBindingProto::CopyFrom(const DynamicParameterBindingProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DynamicParameterBindingProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicParameterBindingProto::IsInitialized() const {
  return true;
}

void DynamicParameterBindingProto::Swap(DynamicParameterBindingProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DynamicParameterBindingProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DynamicParameterBindingProto::UnsafeArenaSwap(DynamicParameterBindingProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DynamicParameterBindingProto::InternalSwap(DynamicParameterBindingProto* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DynamicParameterBindingProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CrossProgramPrefetch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CrossProgramPrefetch::kParameterFieldNumber;
const int CrossProgramPrefetch::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CrossProgramPrefetch::CrossProgramPrefetch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_CrossProgramPrefetch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.CrossProgramPrefetch)
}
CrossProgramPrefetch::CrossProgramPrefetch(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  index_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_CrossProgramPrefetch.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.CrossProgramPrefetch)
}
CrossProgramPrefetch::CrossProgramPrefetch(const CrossProgramPrefetch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      index_(from.index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameter_ = from.parameter_;
  // @@protoc_insertion_point(copy_constructor:xla.CrossProgramPrefetch)
}

void CrossProgramPrefetch::SharedCtor() {
  parameter_ = GOOGLE_LONGLONG(0);
}

CrossProgramPrefetch::~CrossProgramPrefetch() {
  // @@protoc_insertion_point(destructor:xla.CrossProgramPrefetch)
  SharedDtor();
}

void CrossProgramPrefetch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CrossProgramPrefetch::ArenaDtor(void* object) {
  CrossProgramPrefetch* _this = reinterpret_cast< CrossProgramPrefetch* >(object);
  (void)_this;
}
void CrossProgramPrefetch::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CrossProgramPrefetch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CrossProgramPrefetch::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CrossProgramPrefetch& CrossProgramPrefetch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_CrossProgramPrefetch.base);
  return *internal_default_instance();
}


void CrossProgramPrefetch::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.CrossProgramPrefetch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_.Clear();
  parameter_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CrossProgramPrefetch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.CrossProgramPrefetch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 parameter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parameter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.CrossProgramPrefetch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.CrossProgramPrefetch)
  return false;
#undef DO_
}

void CrossProgramPrefetch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.CrossProgramPrefetch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 parameter = 1;
  if (this->parameter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->parameter(), output);
  }

  // repeated int64 index = 2;
  if (this->index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _index_cached_byte_size_));
  }
  for (int i = 0, n = this->index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->index(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.CrossProgramPrefetch)
}

::google::protobuf::uint8* CrossProgramPrefetch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.CrossProgramPrefetch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 parameter = 1;
  if (this->parameter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->parameter(), target);
  }

  // repeated int64 index = 2;
  if (this->index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->index_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.CrossProgramPrefetch)
  return target;
}

size_t CrossProgramPrefetch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.CrossProgramPrefetch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 index = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 parameter = 1;
  if (this->parameter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->parameter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CrossProgramPrefetch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.CrossProgramPrefetch)
  GOOGLE_DCHECK_NE(&from, this);
  const CrossProgramPrefetch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CrossProgramPrefetch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.CrossProgramPrefetch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.CrossProgramPrefetch)
    MergeFrom(*source);
  }
}

void CrossProgramPrefetch::MergeFrom(const CrossProgramPrefetch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.CrossProgramPrefetch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  index_.MergeFrom(from.index_);
  if (from.parameter() != 0) {
    set_parameter(from.parameter());
  }
}

void CrossProgramPrefetch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.CrossProgramPrefetch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrossProgramPrefetch::CopyFrom(const CrossProgramPrefetch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.CrossProgramPrefetch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrossProgramPrefetch::IsInitialized() const {
  return true;
}

void CrossProgramPrefetch::Swap(CrossProgramPrefetch* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CrossProgramPrefetch* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CrossProgramPrefetch::UnsafeArenaSwap(CrossProgramPrefetch* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CrossProgramPrefetch::InternalSwap(CrossProgramPrefetch* other) {
  using std::swap;
  index_.InternalSwap(&other->index_);
  swap(parameter_, other->parameter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CrossProgramPrefetch::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloModuleProto_ProfileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloModuleProto_ProfileInfo::kProfileTypeFieldNumber;
const int HloModuleProto_ProfileInfo::kRelativeSpeedupFieldNumber;
const int HloModuleProto_ProfileInfo::kProfileSourceFieldNumber;
const int HloModuleProto_ProfileInfo::kCompilationEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloModuleProto_ProfileInfo::HloModuleProto_ProfileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto_ProfileInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloModuleProto.ProfileInfo)
}
HloModuleProto_ProfileInfo::HloModuleProto_ProfileInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto_ProfileInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloModuleProto.ProfileInfo)
}
HloModuleProto_ProfileInfo::HloModuleProto_ProfileInfo(const HloModuleProto_ProfileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&relative_speedup_, &from.relative_speedup_,
    static_cast<size_t>(reinterpret_cast<char*>(&compilation_event_) -
    reinterpret_cast<char*>(&relative_speedup_)) + sizeof(compilation_event_));
  // @@protoc_insertion_point(copy_constructor:xla.HloModuleProto.ProfileInfo)
}

void HloModuleProto_ProfileInfo::SharedCtor() {
  ::memset(&relative_speedup_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compilation_event_) -
      reinterpret_cast<char*>(&relative_speedup_)) + sizeof(compilation_event_));
}

HloModuleProto_ProfileInfo::~HloModuleProto_ProfileInfo() {
  // @@protoc_insertion_point(destructor:xla.HloModuleProto.ProfileInfo)
  SharedDtor();
}

void HloModuleProto_ProfileInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HloModuleProto_ProfileInfo::ArenaDtor(void* object) {
  HloModuleProto_ProfileInfo* _this = reinterpret_cast< HloModuleProto_ProfileInfo* >(object);
  (void)_this;
}
void HloModuleProto_ProfileInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloModuleProto_ProfileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloModuleProto_ProfileInfo::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloModuleProto_ProfileInfo& HloModuleProto_ProfileInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto_ProfileInfo.base);
  return *internal_default_instance();
}


void HloModuleProto_ProfileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloModuleProto.ProfileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&relative_speedup_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compilation_event_) -
      reinterpret_cast<char*>(&relative_speedup_)) + sizeof(compilation_event_));
  _internal_metadata_.Clear();
}

bool HloModuleProto_ProfileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloModuleProto.ProfileInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloModuleProto.ProfileType profile_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_profile_type(static_cast< ::xla::HloModuleProto_ProfileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double relative_speedup = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &relative_speedup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ProfileSource profile_source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_profile_source(static_cast< ::xla::ProfileSource >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.CompilationEvent compilation_event = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_compilation_event(static_cast< ::xla::CompilationEvent >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloModuleProto.ProfileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloModuleProto.ProfileInfo)
  return false;
#undef DO_
}

void HloModuleProto_ProfileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloModuleProto.ProfileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto.ProfileType profile_type = 1;
  if (this->profile_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->profile_type(), output);
  }

  // double relative_speedup = 2;
  if (this->relative_speedup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->relative_speedup(), output);
  }

  // .xla.ProfileSource profile_source = 3;
  if (this->profile_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->profile_source(), output);
  }

  // .xla.CompilationEvent compilation_event = 4;
  if (this->compilation_event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->compilation_event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloModuleProto.ProfileInfo)
}

::google::protobuf::uint8* HloModuleProto_ProfileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloModuleProto.ProfileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto.ProfileType profile_type = 1;
  if (this->profile_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->profile_type(), target);
  }

  // double relative_speedup = 2;
  if (this->relative_speedup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->relative_speedup(), target);
  }

  // .xla.ProfileSource profile_source = 3;
  if (this->profile_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->profile_source(), target);
  }

  // .xla.CompilationEvent compilation_event = 4;
  if (this->compilation_event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->compilation_event(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloModuleProto.ProfileInfo)
  return target;
}

size_t HloModuleProto_ProfileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloModuleProto.ProfileInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double relative_speedup = 2;
  if (this->relative_speedup() != 0) {
    total_size += 1 + 8;
  }

  // .xla.HloModuleProto.ProfileType profile_type = 1;
  if (this->profile_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->profile_type());
  }

  // .xla.ProfileSource profile_source = 3;
  if (this->profile_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->profile_source());
  }

  // .xla.CompilationEvent compilation_event = 4;
  if (this->compilation_event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->compilation_event());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloModuleProto_ProfileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloModuleProto.ProfileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HloModuleProto_ProfileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloModuleProto_ProfileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloModuleProto.ProfileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloModuleProto.ProfileInfo)
    MergeFrom(*source);
  }
}

void HloModuleProto_ProfileInfo::MergeFrom(const HloModuleProto_ProfileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloModuleProto.ProfileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relative_speedup() != 0) {
    set_relative_speedup(from.relative_speedup());
  }
  if (from.profile_type() != 0) {
    set_profile_type(from.profile_type());
  }
  if (from.profile_source() != 0) {
    set_profile_source(from.profile_source());
  }
  if (from.compilation_event() != 0) {
    set_compilation_event(from.compilation_event());
  }
}

void HloModuleProto_ProfileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloModuleProto.ProfileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloModuleProto_ProfileInfo::CopyFrom(const HloModuleProto_ProfileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloModuleProto.ProfileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloModuleProto_ProfileInfo::IsInitialized() const {
  return true;
}

void HloModuleProto_ProfileInfo::Swap(HloModuleProto_ProfileInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloModuleProto_ProfileInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloModuleProto_ProfileInfo::UnsafeArenaSwap(HloModuleProto_ProfileInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloModuleProto_ProfileInfo::InternalSwap(HloModuleProto_ProfileInfo* other) {
  using std::swap;
  swap(relative_speedup_, other->relative_speedup_);
  swap(profile_type_, other->profile_type_);
  swap(profile_source_, other->profile_source_);
  swap(compilation_event_, other->compilation_event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloModuleProto_ProfileInfo::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloModuleProto::InitAsDefaultInstance() {
  ::xla::_HloModuleProto_default_instance_._instance.get_mutable()->host_program_shape_ = const_cast< ::xla::ProgramShapeProto*>(
      ::xla::ProgramShapeProto::internal_default_instance());
  ::xla::_HloModuleProto_default_instance_._instance.get_mutable()->schedule_ = const_cast< ::xla::HloScheduleProto*>(
      ::xla::HloScheduleProto::internal_default_instance());
  ::xla::_HloModuleProto_default_instance_._instance.get_mutable()->input_output_alias_ = const_cast< ::xla::HloInputOutputAliasProto*>(
      ::xla::HloInputOutputAliasProto::internal_default_instance());
  ::xla::_HloModuleProto_default_instance_._instance.get_mutable()->dynamic_parameter_binding_ = const_cast< ::xla::DynamicParameterBindingProto*>(
      ::xla::DynamicParameterBindingProto::internal_default_instance());
  ::xla::_HloModuleProto_default_instance_._instance.get_mutable()->spmd_output_sharding_ = const_cast< ::xla::OpSharding*>(
      ::xla::OpSharding::internal_default_instance());
}
void HloModuleProto::unsafe_arena_set_allocated_host_program_shape(
    ::xla::ProgramShapeProto* host_program_shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete host_program_shape_;
  }
  host_program_shape_ = host_program_shape;
  if (host_program_shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloModuleProto.host_program_shape)
}
void HloModuleProto::clear_host_program_shape() {
  if (GetArenaNoVirtual() == NULL && host_program_shape_ != NULL) {
    delete host_program_shape_;
  }
  host_program_shape_ = NULL;
}
void HloModuleProto::unsafe_arena_set_allocated_schedule(
    ::xla::HloScheduleProto* schedule) {
  if (GetArenaNoVirtual() == NULL) {
    delete schedule_;
  }
  schedule_ = schedule;
  if (schedule) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloModuleProto.schedule)
}
void HloModuleProto::unsafe_arena_set_allocated_input_output_alias(
    ::xla::HloInputOutputAliasProto* input_output_alias) {
  if (GetArenaNoVirtual() == NULL) {
    delete input_output_alias_;
  }
  input_output_alias_ = input_output_alias;
  if (input_output_alias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloModuleProto.input_output_alias)
}
void HloModuleProto::unsafe_arena_set_allocated_dynamic_parameter_binding(
    ::xla::DynamicParameterBindingProto* dynamic_parameter_binding) {
  if (GetArenaNoVirtual() == NULL) {
    delete dynamic_parameter_binding_;
  }
  dynamic_parameter_binding_ = dynamic_parameter_binding;
  if (dynamic_parameter_binding) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloModuleProto.dynamic_parameter_binding)
}
void HloModuleProto::unsafe_arena_set_allocated_spmd_output_sharding(
    ::xla::OpSharding* spmd_output_sharding) {
  if (GetArenaNoVirtual() == NULL) {
    delete spmd_output_sharding_;
  }
  spmd_output_sharding_ = spmd_output_sharding;
  if (spmd_output_sharding) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloModuleProto.spmd_output_sharding)
}
void HloModuleProto::clear_spmd_output_sharding() {
  if (GetArenaNoVirtual() == NULL && spmd_output_sharding_ != NULL) {
    delete spmd_output_sharding_;
  }
  spmd_output_sharding_ = NULL;
}
void HloModuleProto::clear_spmd_parameters_shardings() {
  spmd_parameters_shardings_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloModuleProto::kNameFieldNumber;
const int HloModuleProto::kEntryComputationNameFieldNumber;
const int HloModuleProto::kEntryComputationIdFieldNumber;
const int HloModuleProto::kComputationsFieldNumber;
const int HloModuleProto::kHostProgramShapeFieldNumber;
const int HloModuleProto::kIdFieldNumber;
const int HloModuleProto::kScheduleFieldNumber;
const int HloModuleProto::kInputOutputAliasFieldNumber;
const int HloModuleProto::kDynamicParameterBindingFieldNumber;
const int HloModuleProto::kCrossProgramPrefetchesFieldNumber;
const int HloModuleProto::kIsDynamicFieldNumber;
const int HloModuleProto::kSpmdOutputShardingFieldNumber;
const int HloModuleProto::kSpmdParametersShardingsFieldNumber;
const int HloModuleProto::kProfileInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloModuleProto::HloModuleProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloModuleProto)
}
HloModuleProto::HloModuleProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  computations_(arena),
  cross_program_prefetches_(arena),
  profile_info_(arena),
  spmd_parameters_shardings_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloModuleProto)
}
HloModuleProto::HloModuleProto(const HloModuleProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      computations_(from.computations_),
      cross_program_prefetches_(from.cross_program_prefetches_),
      profile_info_(from.profile_info_),
      spmd_parameters_shardings_(from.spmd_parameters_shardings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  entry_computation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entry_computation_name().size() > 0) {
    entry_computation_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_computation_name(),
      GetArenaNoVirtual());
  }
  if (from.has_host_program_shape()) {
    host_program_shape_ = new ::xla::ProgramShapeProto(*from.host_program_shape_);
  } else {
    host_program_shape_ = NULL;
  }
  if (from.has_schedule()) {
    schedule_ = new ::xla::HloScheduleProto(*from.schedule_);
  } else {
    schedule_ = NULL;
  }
  if (from.has_input_output_alias()) {
    input_output_alias_ = new ::xla::HloInputOutputAliasProto(*from.input_output_alias_);
  } else {
    input_output_alias_ = NULL;
  }
  if (from.has_dynamic_parameter_binding()) {
    dynamic_parameter_binding_ = new ::xla::DynamicParameterBindingProto(*from.dynamic_parameter_binding_);
  } else {
    dynamic_parameter_binding_ = NULL;
  }
  if (from.has_spmd_output_sharding()) {
    spmd_output_sharding_ = new ::xla::OpSharding(*from.spmd_output_sharding_);
  } else {
    spmd_output_sharding_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_dynamic_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_dynamic_));
  // @@protoc_insertion_point(copy_constructor:xla.HloModuleProto)
}

void HloModuleProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_computation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&host_program_shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dynamic_) -
      reinterpret_cast<char*>(&host_program_shape_)) + sizeof(is_dynamic_));
}

HloModuleProto::~HloModuleProto() {
  // @@protoc_insertion_point(destructor:xla.HloModuleProto)
  SharedDtor();
}

void HloModuleProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_computation_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete host_program_shape_;
  if (this != internal_default_instance()) delete schedule_;
  if (this != internal_default_instance()) delete input_output_alias_;
  if (this != internal_default_instance()) delete dynamic_parameter_binding_;
  if (this != internal_default_instance()) delete spmd_output_sharding_;
}

void HloModuleProto::ArenaDtor(void* object) {
  HloModuleProto* _this = reinterpret_cast< HloModuleProto* >(object);
  (void)_this;
}
void HloModuleProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloModuleProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloModuleProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloModuleProto& HloModuleProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base);
  return *internal_default_instance();
}


void HloModuleProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloModuleProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  computations_.Clear();
  cross_program_prefetches_.Clear();
  profile_info_.Clear();
  spmd_parameters_shardings_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  entry_computation_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && host_program_shape_ != NULL) {
    delete host_program_shape_;
  }
  host_program_shape_ = NULL;
  if (GetArenaNoVirtual() == NULL && schedule_ != NULL) {
    delete schedule_;
  }
  schedule_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_output_alias_ != NULL) {
    delete input_output_alias_;
  }
  input_output_alias_ = NULL;
  if (GetArenaNoVirtual() == NULL && dynamic_parameter_binding_ != NULL) {
    delete dynamic_parameter_binding_;
  }
  dynamic_parameter_binding_ = NULL;
  if (GetArenaNoVirtual() == NULL && spmd_output_sharding_ != NULL) {
    delete spmd_output_sharding_;
  }
  spmd_output_sharding_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dynamic_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_dynamic_));
  _internal_metadata_.Clear();
}

bool HloModuleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloModuleProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloModuleProto.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entry_computation_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entry_computation_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entry_computation_name().data(), static_cast<int>(this->entry_computation_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloModuleProto.entry_computation_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.HloComputationProto computations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_computations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ProgramShapeProto host_program_shape = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_program_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 entry_computation_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &entry_computation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.HloScheduleProto schedule = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schedule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.HloInputOutputAliasProto input_output_alias = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_output_alias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DynamicParameterBindingProto dynamic_parameter_binding = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dynamic_parameter_binding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.CrossProgramPrefetch cross_program_prefetches = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cross_program_prefetches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_dynamic = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dynamic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.OpSharding spmd_output_sharding = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spmd_output_sharding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.HloModuleProto.ProfileInfo profile_info = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_profile_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.OpSharding spmd_parameters_shardings = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_spmd_parameters_shardings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloModuleProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloModuleProto)
  return false;
#undef DO_
}

void HloModuleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloModuleProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloModuleProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string entry_computation_name = 2;
  if (this->entry_computation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entry_computation_name().data(), static_cast<int>(this->entry_computation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloModuleProto.entry_computation_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->entry_computation_name(), output);
  }

  // repeated .xla.HloComputationProto computations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->computations(static_cast<int>(i)),
      output);
  }

  // .xla.ProgramShapeProto host_program_shape = 4;
  if (this->has_host_program_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_host_program_shape(), output);
  }

  // int64 id = 5;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->id(), output);
  }

  // int64 entry_computation_id = 6;
  if (this->entry_computation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->entry_computation_id(), output);
  }

  // .xla.HloScheduleProto schedule = 7;
  if (this->has_schedule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_schedule(), output);
  }

  // .xla.HloInputOutputAliasProto input_output_alias = 8;
  if (this->has_input_output_alias()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_input_output_alias(), output);
  }

  // .xla.DynamicParameterBindingProto dynamic_parameter_binding = 9;
  if (this->has_dynamic_parameter_binding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_dynamic_parameter_binding(), output);
  }

  // repeated .xla.CrossProgramPrefetch cross_program_prefetches = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cross_program_prefetches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->cross_program_prefetches(static_cast<int>(i)),
      output);
  }

  // bool is_dynamic = 11;
  if (this->is_dynamic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_dynamic(), output);
  }

  // .xla.OpSharding spmd_output_sharding = 12;
  if (this->has_spmd_output_sharding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_spmd_output_sharding(), output);
  }

  // repeated .xla.HloModuleProto.ProfileInfo profile_info = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->profile_info(static_cast<int>(i)),
      output);
  }

  // repeated .xla.OpSharding spmd_parameters_shardings = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spmd_parameters_shardings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->spmd_parameters_shardings(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloModuleProto)
}

::google::protobuf::uint8* HloModuleProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloModuleProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloModuleProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string entry_computation_name = 2;
  if (this->entry_computation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entry_computation_name().data(), static_cast<int>(this->entry_computation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloModuleProto.entry_computation_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->entry_computation_name(), target);
  }

  // repeated .xla.HloComputationProto computations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->computations(static_cast<int>(i)), deterministic, target);
  }

  // .xla.ProgramShapeProto host_program_shape = 4;
  if (this->has_host_program_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_host_program_shape(), deterministic, target);
  }

  // int64 id = 5;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->id(), target);
  }

  // int64 entry_computation_id = 6;
  if (this->entry_computation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->entry_computation_id(), target);
  }

  // .xla.HloScheduleProto schedule = 7;
  if (this->has_schedule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_schedule(), deterministic, target);
  }

  // .xla.HloInputOutputAliasProto input_output_alias = 8;
  if (this->has_input_output_alias()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_input_output_alias(), deterministic, target);
  }

  // .xla.DynamicParameterBindingProto dynamic_parameter_binding = 9;
  if (this->has_dynamic_parameter_binding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_dynamic_parameter_binding(), deterministic, target);
  }

  // repeated .xla.CrossProgramPrefetch cross_program_prefetches = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cross_program_prefetches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->cross_program_prefetches(static_cast<int>(i)), deterministic, target);
  }

  // bool is_dynamic = 11;
  if (this->is_dynamic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_dynamic(), target);
  }

  // .xla.OpSharding spmd_output_sharding = 12;
  if (this->has_spmd_output_sharding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_spmd_output_sharding(), deterministic, target);
  }

  // repeated .xla.HloModuleProto.ProfileInfo profile_info = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->profile_info(static_cast<int>(i)), deterministic, target);
  }

  // repeated .xla.OpSharding spmd_parameters_shardings = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spmd_parameters_shardings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->spmd_parameters_shardings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloModuleProto)
  return target;
}

size_t HloModuleProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloModuleProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.HloComputationProto computations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->computations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->computations(static_cast<int>(i)));
    }
  }

  // repeated .xla.CrossProgramPrefetch cross_program_prefetches = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->cross_program_prefetches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cross_program_prefetches(static_cast<int>(i)));
    }
  }

  // repeated .xla.HloModuleProto.ProfileInfo profile_info = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->profile_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->profile_info(static_cast<int>(i)));
    }
  }

  // repeated .xla.OpSharding spmd_parameters_shardings = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->spmd_parameters_shardings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->spmd_parameters_shardings(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string entry_computation_name = 2;
  if (this->entry_computation_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entry_computation_name());
  }

  // .xla.ProgramShapeProto host_program_shape = 4;
  if (this->has_host_program_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_program_shape_);
  }

  // .xla.HloScheduleProto schedule = 7;
  if (this->has_schedule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *schedule_);
  }

  // .xla.HloInputOutputAliasProto input_output_alias = 8;
  if (this->has_input_output_alias()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_output_alias_);
  }

  // .xla.DynamicParameterBindingProto dynamic_parameter_binding = 9;
  if (this->has_dynamic_parameter_binding()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dynamic_parameter_binding_);
  }

  // .xla.OpSharding spmd_output_sharding = 12;
  if (this->has_spmd_output_sharding()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *spmd_output_sharding_);
  }

  // int64 id = 5;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 entry_computation_id = 6;
  if (this->entry_computation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->entry_computation_id());
  }

  // bool is_dynamic = 11;
  if (this->is_dynamic() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloModuleProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloModuleProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloModuleProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloModuleProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloModuleProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloModuleProto)
    MergeFrom(*source);
  }
}

void HloModuleProto::MergeFrom(const HloModuleProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloModuleProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  computations_.MergeFrom(from.computations_);
  cross_program_prefetches_.MergeFrom(from.cross_program_prefetches_);
  profile_info_.MergeFrom(from.profile_info_);
  spmd_parameters_shardings_.MergeFrom(from.spmd_parameters_shardings_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.entry_computation_name().size() > 0) {
    set_entry_computation_name(from.entry_computation_name());
  }
  if (from.has_host_program_shape()) {
    mutable_host_program_shape()->::xla::ProgramShapeProto::MergeFrom(from.host_program_shape());
  }
  if (from.has_schedule()) {
    mutable_schedule()->::xla::HloScheduleProto::MergeFrom(from.schedule());
  }
  if (from.has_input_output_alias()) {
    mutable_input_output_alias()->::xla::HloInputOutputAliasProto::MergeFrom(from.input_output_alias());
  }
  if (from.has_dynamic_parameter_binding()) {
    mutable_dynamic_parameter_binding()->::xla::DynamicParameterBindingProto::MergeFrom(from.dynamic_parameter_binding());
  }
  if (from.has_spmd_output_sharding()) {
    mutable_spmd_output_sharding()->::xla::OpSharding::MergeFrom(from.spmd_output_sharding());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.entry_computation_id() != 0) {
    set_entry_computation_id(from.entry_computation_id());
  }
  if (from.is_dynamic() != 0) {
    set_is_dynamic(from.is_dynamic());
  }
}

void HloModuleProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloModuleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloModuleProto::CopyFrom(const HloModuleProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloModuleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloModuleProto::IsInitialized() const {
  return true;
}

void HloModuleProto::Swap(HloModuleProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloModuleProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloModuleProto::UnsafeArenaSwap(HloModuleProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloModuleProto::InternalSwap(HloModuleProto* other) {
  using std::swap;
  CastToBase(&computations_)->InternalSwap(CastToBase(&other->computations_));
  CastToBase(&cross_program_prefetches_)->InternalSwap(CastToBase(&other->cross_program_prefetches_));
  CastToBase(&profile_info_)->InternalSwap(CastToBase(&other->profile_info_));
  CastToBase(&spmd_parameters_shardings_)->InternalSwap(CastToBase(&other->spmd_parameters_shardings_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  entry_computation_name_.Swap(&other->entry_computation_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(host_program_shape_, other->host_program_shape_);
  swap(schedule_, other->schedule_);
  swap(input_output_alias_, other->input_output_alias_);
  swap(dynamic_parameter_binding_, other->dynamic_parameter_binding_);
  swap(spmd_output_sharding_, other->spmd_output_sharding_);
  swap(id_, other->id_);
  swap(entry_computation_id_, other->entry_computation_id_);
  swap(is_dynamic_, other->is_dynamic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloModuleProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogicalBufferProto_Location::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicalBufferProto_Location::kComputationNameFieldNumber;
const int LogicalBufferProto_Location::kInstructionNameFieldNumber;
const int LogicalBufferProto_Location::kShapeIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicalBufferProto_Location::LogicalBufferProto_Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto_Location.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.LogicalBufferProto.Location)
}
LogicalBufferProto_Location::LogicalBufferProto_Location(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  shape_index_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto_Location.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.LogicalBufferProto.Location)
}
LogicalBufferProto_Location::LogicalBufferProto_Location(const LogicalBufferProto_Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shape_index_(from.shape_index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  computation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.computation_name().size() > 0) {
    computation_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.computation_name(),
      GetArenaNoVirtual());
  }
  instruction_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instruction_name().size() > 0) {
    instruction_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instruction_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:xla.LogicalBufferProto.Location)
}

void LogicalBufferProto_Location::SharedCtor() {
  computation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instruction_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogicalBufferProto_Location::~LogicalBufferProto_Location() {
  // @@protoc_insertion_point(destructor:xla.LogicalBufferProto.Location)
  SharedDtor();
}

void LogicalBufferProto_Location::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  computation_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instruction_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogicalBufferProto_Location::ArenaDtor(void* object) {
  LogicalBufferProto_Location* _this = reinterpret_cast< LogicalBufferProto_Location* >(object);
  (void)_this;
}
void LogicalBufferProto_Location::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LogicalBufferProto_Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogicalBufferProto_Location::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogicalBufferProto_Location& LogicalBufferProto_Location::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto_Location.base);
  return *internal_default_instance();
}


void LogicalBufferProto_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LogicalBufferProto.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_index_.Clear();
  computation_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  instruction_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool LogicalBufferProto_Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.LogicalBufferProto.Location)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string computation_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_computation_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->computation_name().data(), static_cast<int>(this->computation_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.LogicalBufferProto.Location.computation_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instruction_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instruction_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.LogicalBufferProto.Location.instruction_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 shape_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_shape_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_shape_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.LogicalBufferProto.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.LogicalBufferProto.Location)
  return false;
#undef DO_
}

void LogicalBufferProto_Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.LogicalBufferProto.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string computation_name = 1;
  if (this->computation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->computation_name().data(), static_cast<int>(this->computation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.LogicalBufferProto.Location.computation_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->computation_name(), output);
  }

  // string instruction_name = 2;
  if (this->instruction_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.LogicalBufferProto.Location.instruction_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instruction_name(), output);
  }

  // repeated int64 shape_index = 3;
  if (this->shape_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _shape_index_cached_byte_size_));
  }
  for (int i = 0, n = this->shape_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->shape_index(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.LogicalBufferProto.Location)
}

::google::protobuf::uint8* LogicalBufferProto_Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.LogicalBufferProto.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string computation_name = 1;
  if (this->computation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->computation_name().data(), static_cast<int>(this->computation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.LogicalBufferProto.Location.computation_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->computation_name(), target);
  }

  // string instruction_name = 2;
  if (this->instruction_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.LogicalBufferProto.Location.instruction_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instruction_name(), target);
  }

  // repeated int64 shape_index = 3;
  if (this->shape_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _shape_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->shape_index_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.LogicalBufferProto.Location)
  return target;
}

size_t LogicalBufferProto_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.LogicalBufferProto.Location)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 shape_index = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->shape_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _shape_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string computation_name = 1;
  if (this->computation_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->computation_name());
  }

  // string instruction_name = 2;
  if (this->instruction_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instruction_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogicalBufferProto_Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.LogicalBufferProto.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicalBufferProto_Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicalBufferProto_Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.LogicalBufferProto.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.LogicalBufferProto.Location)
    MergeFrom(*source);
  }
}

void LogicalBufferProto_Location::MergeFrom(const LogicalBufferProto_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.LogicalBufferProto.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_index_.MergeFrom(from.shape_index_);
  if (from.computation_name().size() > 0) {
    set_computation_name(from.computation_name());
  }
  if (from.instruction_name().size() > 0) {
    set_instruction_name(from.instruction_name());
  }
}

void LogicalBufferProto_Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.LogicalBufferProto.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicalBufferProto_Location::CopyFrom(const LogicalBufferProto_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LogicalBufferProto.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicalBufferProto_Location::IsInitialized() const {
  return true;
}

void LogicalBufferProto_Location::Swap(LogicalBufferProto_Location* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogicalBufferProto_Location* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LogicalBufferProto_Location::UnsafeArenaSwap(LogicalBufferProto_Location* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogicalBufferProto_Location::InternalSwap(LogicalBufferProto_Location* other) {
  using std::swap;
  shape_index_.InternalSwap(&other->shape_index_);
  computation_name_.Swap(&other->computation_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instruction_name_.Swap(&other->instruction_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogicalBufferProto_Location::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogicalBufferProto::InitAsDefaultInstance() {
  ::xla::_LogicalBufferProto_default_instance_._instance.get_mutable()->defined_at_ = const_cast< ::xla::LogicalBufferProto_Location*>(
      ::xla::LogicalBufferProto_Location::internal_default_instance());
}
void LogicalBufferProto::unsafe_arena_set_allocated_defined_at(
    ::xla::LogicalBufferProto_Location* defined_at) {
  if (GetArenaNoVirtual() == NULL) {
    delete defined_at_;
  }
  defined_at_ = defined_at;
  if (defined_at) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.LogicalBufferProto.defined_at)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicalBufferProto::kIdFieldNumber;
const int LogicalBufferProto::kSizeFieldNumber;
const int LogicalBufferProto::kDefinedAtFieldNumber;
const int LogicalBufferProto::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicalBufferProto::LogicalBufferProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.LogicalBufferProto)
}
LogicalBufferProto::LogicalBufferProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.LogicalBufferProto)
}
LogicalBufferProto::LogicalBufferProto(const LogicalBufferProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_defined_at()) {
    defined_at_ = new ::xla::LogicalBufferProto_Location(*from.defined_at_);
  } else {
    defined_at_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&color_) -
    reinterpret_cast<char*>(&id_)) + sizeof(color_));
  // @@protoc_insertion_point(copy_constructor:xla.LogicalBufferProto)
}

void LogicalBufferProto::SharedCtor() {
  ::memset(&defined_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&defined_at_)) + sizeof(color_));
}

LogicalBufferProto::~LogicalBufferProto() {
  // @@protoc_insertion_point(destructor:xla.LogicalBufferProto)
  SharedDtor();
}

void LogicalBufferProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete defined_at_;
}

void LogicalBufferProto::ArenaDtor(void* object) {
  LogicalBufferProto* _this = reinterpret_cast< LogicalBufferProto* >(object);
  (void)_this;
}
void LogicalBufferProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LogicalBufferProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogicalBufferProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogicalBufferProto& LogicalBufferProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_LogicalBufferProto.base);
  return *internal_default_instance();
}


void LogicalBufferProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LogicalBufferProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && defined_at_ != NULL) {
    delete defined_at_;
  }
  defined_at_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&id_)) + sizeof(color_));
  _internal_metadata_.Clear();
}

bool LogicalBufferProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.LogicalBufferProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.LogicalBufferProto.Location defined_at = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_defined_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 color = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.LogicalBufferProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.LogicalBufferProto)
  return false;
#undef DO_
}

void LogicalBufferProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.LogicalBufferProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  // .xla.LogicalBufferProto.Location defined_at = 3;
  if (this->has_defined_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_defined_at(), output);
  }

  // int64 color = 4;
  if (this->color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->color(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.LogicalBufferProto)
}

::google::protobuf::uint8* LogicalBufferProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.LogicalBufferProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->size(), target);
  }

  // .xla.LogicalBufferProto.Location defined_at = 3;
  if (this->has_defined_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_defined_at(), deterministic, target);
  }

  // int64 color = 4;
  if (this->color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->color(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.LogicalBufferProto)
  return target;
}

size_t LogicalBufferProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.LogicalBufferProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LogicalBufferProto.Location defined_at = 3;
  if (this->has_defined_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *defined_at_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // int64 color = 4;
  if (this->color() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->color());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogicalBufferProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.LogicalBufferProto)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicalBufferProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicalBufferProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.LogicalBufferProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.LogicalBufferProto)
    MergeFrom(*source);
  }
}

void LogicalBufferProto::MergeFrom(const LogicalBufferProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.LogicalBufferProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_defined_at()) {
    mutable_defined_at()->::xla::LogicalBufferProto_Location::MergeFrom(from.defined_at());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.color() != 0) {
    set_color(from.color());
  }
}

void LogicalBufferProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.LogicalBufferProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicalBufferProto::CopyFrom(const LogicalBufferProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LogicalBufferProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicalBufferProto::IsInitialized() const {
  return true;
}

void LogicalBufferProto::Swap(LogicalBufferProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogicalBufferProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LogicalBufferProto::UnsafeArenaSwap(LogicalBufferProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogicalBufferProto::InternalSwap(LogicalBufferProto* other) {
  using std::swap;
  swap(defined_at_, other->defined_at_);
  swap(id_, other->id_);
  swap(size_, other->size_);
  swap(color_, other->color_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogicalBufferProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BufferAllocationProto_Assigned::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferAllocationProto_Assigned::kLogicalBufferIdFieldNumber;
const int BufferAllocationProto_Assigned::kOffsetFieldNumber;
const int BufferAllocationProto_Assigned::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferAllocationProto_Assigned::BufferAllocationProto_Assigned()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAllocationProto_Assigned.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.BufferAllocationProto.Assigned)
}
BufferAllocationProto_Assigned::BufferAllocationProto_Assigned(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAllocationProto_Assigned.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.BufferAllocationProto.Assigned)
}
BufferAllocationProto_Assigned::BufferAllocationProto_Assigned(const BufferAllocationProto_Assigned& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&logical_buffer_id_, &from.logical_buffer_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&logical_buffer_id_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:xla.BufferAllocationProto.Assigned)
}

void BufferAllocationProto_Assigned::SharedCtor() {
  ::memset(&logical_buffer_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&logical_buffer_id_)) + sizeof(size_));
}

BufferAllocationProto_Assigned::~BufferAllocationProto_Assigned() {
  // @@protoc_insertion_point(destructor:xla.BufferAllocationProto.Assigned)
  SharedDtor();
}

void BufferAllocationProto_Assigned::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BufferAllocationProto_Assigned::ArenaDtor(void* object) {
  BufferAllocationProto_Assigned* _this = reinterpret_cast< BufferAllocationProto_Assigned* >(object);
  (void)_this;
}
void BufferAllocationProto_Assigned::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BufferAllocationProto_Assigned::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BufferAllocationProto_Assigned::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BufferAllocationProto_Assigned& BufferAllocationProto_Assigned::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAllocationProto_Assigned.base);
  return *internal_default_instance();
}


void BufferAllocationProto_Assigned::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.BufferAllocationProto.Assigned)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&logical_buffer_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&logical_buffer_id_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

bool BufferAllocationProto_Assigned::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.BufferAllocationProto.Assigned)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 logical_buffer_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &logical_buffer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.BufferAllocationProto.Assigned)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.BufferAllocationProto.Assigned)
  return false;
#undef DO_
}

void BufferAllocationProto_Assigned::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.BufferAllocationProto.Assigned)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 logical_buffer_id = 1;
  if (this->logical_buffer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->logical_buffer_id(), output);
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->offset(), output);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.BufferAllocationProto.Assigned)
}

::google::protobuf::uint8* BufferAllocationProto_Assigned::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.BufferAllocationProto.Assigned)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 logical_buffer_id = 1;
  if (this->logical_buffer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->logical_buffer_id(), target);
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->offset(), target);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.BufferAllocationProto.Assigned)
  return target;
}

size_t BufferAllocationProto_Assigned::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.BufferAllocationProto.Assigned)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 logical_buffer_id = 1;
  if (this->logical_buffer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->logical_buffer_id());
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  // int64 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BufferAllocationProto_Assigned::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.BufferAllocationProto.Assigned)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferAllocationProto_Assigned* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferAllocationProto_Assigned>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.BufferAllocationProto.Assigned)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.BufferAllocationProto.Assigned)
    MergeFrom(*source);
  }
}

void BufferAllocationProto_Assigned::MergeFrom(const BufferAllocationProto_Assigned& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.BufferAllocationProto.Assigned)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.logical_buffer_id() != 0) {
    set_logical_buffer_id(from.logical_buffer_id());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void BufferAllocationProto_Assigned::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.BufferAllocationProto.Assigned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferAllocationProto_Assigned::CopyFrom(const BufferAllocationProto_Assigned& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.BufferAllocationProto.Assigned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferAllocationProto_Assigned::IsInitialized() const {
  return true;
}

void BufferAllocationProto_Assigned::Swap(BufferAllocationProto_Assigned* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BufferAllocationProto_Assigned* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BufferAllocationProto_Assigned::UnsafeArenaSwap(BufferAllocationProto_Assigned* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BufferAllocationProto_Assigned::InternalSwap(BufferAllocationProto_Assigned* other) {
  using std::swap;
  swap(logical_buffer_id_, other->logical_buffer_id_);
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BufferAllocationProto_Assigned::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BufferAllocationProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferAllocationProto::kIndexFieldNumber;
const int BufferAllocationProto::kSizeFieldNumber;
const int BufferAllocationProto::kIsThreadLocalFieldNumber;
const int BufferAllocationProto::kIsTupleFieldNumber;
const int BufferAllocationProto::kIsEntryComputationParameterFieldNumber;
const int BufferAllocationProto::kIsConstantFieldNumber;
const int BufferAllocationProto::kParameterNumberFieldNumber;
const int BufferAllocationProto::kParameterShapeIndexFieldNumber;
const int BufferAllocationProto::kMaybeLiveOutFieldNumber;
const int BufferAllocationProto::kColorFieldNumber;
const int BufferAllocationProto::kAssignedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferAllocationProto::BufferAllocationProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAllocationProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.BufferAllocationProto)
}
BufferAllocationProto::BufferAllocationProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  assigned_(arena),
  parameter_shape_index_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAllocationProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.BufferAllocationProto)
}
BufferAllocationProto::BufferAllocationProto(const BufferAllocationProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      assigned_(from.assigned_),
      parameter_shape_index_(from.parameter_shape_index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&color_) -
    reinterpret_cast<char*>(&index_)) + sizeof(color_));
  // @@protoc_insertion_point(copy_constructor:xla.BufferAllocationProto)
}

void BufferAllocationProto::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&index_)) + sizeof(color_));
}

BufferAllocationProto::~BufferAllocationProto() {
  // @@protoc_insertion_point(destructor:xla.BufferAllocationProto)
  SharedDtor();
}

void BufferAllocationProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BufferAllocationProto::ArenaDtor(void* object) {
  BufferAllocationProto* _this = reinterpret_cast< BufferAllocationProto* >(object);
  (void)_this;
}
void BufferAllocationProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BufferAllocationProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BufferAllocationProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BufferAllocationProto& BufferAllocationProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAllocationProto.base);
  return *internal_default_instance();
}


void BufferAllocationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.BufferAllocationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assigned_.Clear();
  parameter_shape_index_.Clear();
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&index_)) + sizeof(color_));
  _internal_metadata_.Clear();
}

bool BufferAllocationProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.BufferAllocationProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_thread_local = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_thread_local_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_entry_computation_parameter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_entry_computation_parameter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 parameter_number = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parameter_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool maybe_live_out = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maybe_live_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 color = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.BufferAllocationProto.Assigned assigned = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_assigned()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 parameter_shape_index = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_parameter_shape_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 82u, input, this->mutable_parameter_shape_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_tuple = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_tuple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_constant = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_constant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.BufferAllocationProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.BufferAllocationProto)
  return false;
#undef DO_
}

void BufferAllocationProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.BufferAllocationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->index(), output);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  // bool is_thread_local = 3;
  if (this->is_thread_local() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_thread_local(), output);
  }

  // bool is_entry_computation_parameter = 5;
  if (this->is_entry_computation_parameter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_entry_computation_parameter(), output);
  }

  // int64 parameter_number = 6;
  if (this->parameter_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->parameter_number(), output);
  }

  // bool maybe_live_out = 7;
  if (this->maybe_live_out() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->maybe_live_out(), output);
  }

  // int64 color = 8;
  if (this->color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->color(), output);
  }

  // repeated .xla.BufferAllocationProto.Assigned assigned = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assigned_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->assigned(static_cast<int>(i)),
      output);
  }

  // repeated int64 parameter_shape_index = 10;
  if (this->parameter_shape_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _parameter_shape_index_cached_byte_size_));
  }
  for (int i = 0, n = this->parameter_shape_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->parameter_shape_index(i), output);
  }

  // bool is_tuple = 11;
  if (this->is_tuple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_tuple(), output);
  }

  // bool is_constant = 12;
  if (this->is_constant() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_constant(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.BufferAllocationProto)
}

::google::protobuf::uint8* BufferAllocationProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.BufferAllocationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->index(), target);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->size(), target);
  }

  // bool is_thread_local = 3;
  if (this->is_thread_local() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_thread_local(), target);
  }

  // bool is_entry_computation_parameter = 5;
  if (this->is_entry_computation_parameter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_entry_computation_parameter(), target);
  }

  // int64 parameter_number = 6;
  if (this->parameter_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->parameter_number(), target);
  }

  // bool maybe_live_out = 7;
  if (this->maybe_live_out() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->maybe_live_out(), target);
  }

  // int64 color = 8;
  if (this->color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->color(), target);
  }

  // repeated .xla.BufferAllocationProto.Assigned assigned = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assigned_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->assigned(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 parameter_shape_index = 10;
  if (this->parameter_shape_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _parameter_shape_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->parameter_shape_index_, target);
  }

  // bool is_tuple = 11;
  if (this->is_tuple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_tuple(), target);
  }

  // bool is_constant = 12;
  if (this->is_constant() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_constant(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.BufferAllocationProto)
  return target;
}

size_t BufferAllocationProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.BufferAllocationProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.BufferAllocationProto.Assigned assigned = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->assigned_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->assigned(static_cast<int>(i)));
    }
  }

  // repeated int64 parameter_shape_index = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->parameter_shape_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _parameter_shape_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  // int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // int64 parameter_number = 6;
  if (this->parameter_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->parameter_number());
  }

  // bool maybe_live_out = 7;
  if (this->maybe_live_out() != 0) {
    total_size += 1 + 1;
  }

  // bool is_thread_local = 3;
  if (this->is_thread_local() != 0) {
    total_size += 1 + 1;
  }

  // bool is_tuple = 11;
  if (this->is_tuple() != 0) {
    total_size += 1 + 1;
  }

  // bool is_entry_computation_parameter = 5;
  if (this->is_entry_computation_parameter() != 0) {
    total_size += 1 + 1;
  }

  // bool is_constant = 12;
  if (this->is_constant() != 0) {
    total_size += 1 + 1;
  }

  // int64 color = 8;
  if (this->color() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->color());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BufferAllocationProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.BufferAllocationProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferAllocationProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferAllocationProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.BufferAllocationProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.BufferAllocationProto)
    MergeFrom(*source);
  }
}

void BufferAllocationProto::MergeFrom(const BufferAllocationProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.BufferAllocationProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assigned_.MergeFrom(from.assigned_);
  parameter_shape_index_.MergeFrom(from.parameter_shape_index_);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.parameter_number() != 0) {
    set_parameter_number(from.parameter_number());
  }
  if (from.maybe_live_out() != 0) {
    set_maybe_live_out(from.maybe_live_out());
  }
  if (from.is_thread_local() != 0) {
    set_is_thread_local(from.is_thread_local());
  }
  if (from.is_tuple() != 0) {
    set_is_tuple(from.is_tuple());
  }
  if (from.is_entry_computation_parameter() != 0) {
    set_is_entry_computation_parameter(from.is_entry_computation_parameter());
  }
  if (from.is_constant() != 0) {
    set_is_constant(from.is_constant());
  }
  if (from.color() != 0) {
    set_color(from.color());
  }
}

void BufferAllocationProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.BufferAllocationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferAllocationProto::CopyFrom(const BufferAllocationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.BufferAllocationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferAllocationProto::IsInitialized() const {
  return true;
}

void BufferAllocationProto::Swap(BufferAllocationProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BufferAllocationProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BufferAllocationProto::UnsafeArenaSwap(BufferAllocationProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BufferAllocationProto::InternalSwap(BufferAllocationProto* other) {
  using std::swap;
  CastToBase(&assigned_)->InternalSwap(CastToBase(&other->assigned_));
  parameter_shape_index_.InternalSwap(&other->parameter_shape_index_);
  swap(index_, other->index_);
  swap(size_, other->size_);
  swap(parameter_number_, other->parameter_number_);
  swap(maybe_live_out_, other->maybe_live_out_);
  swap(is_thread_local_, other->is_thread_local_);
  swap(is_tuple_, other->is_tuple_);
  swap(is_entry_computation_parameter_, other->is_entry_computation_parameter_);
  swap(is_constant_, other->is_constant_);
  swap(color_, other->color_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BufferAllocationProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeapSimulatorTrace_Event::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeapSimulatorTrace_Event::kKindFieldNumber;
const int HeapSimulatorTrace_Event::kBufferIdFieldNumber;
const int HeapSimulatorTrace_Event::kComputationNameFieldNumber;
const int HeapSimulatorTrace_Event::kInstructionNameFieldNumber;
const int HeapSimulatorTrace_Event::kShareWithCanonicalIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeapSimulatorTrace_Event::HeapSimulatorTrace_Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HeapSimulatorTrace_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HeapSimulatorTrace.Event)
}
HeapSimulatorTrace_Event::HeapSimulatorTrace_Event(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HeapSimulatorTrace_Event.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HeapSimulatorTrace.Event)
}
HeapSimulatorTrace_Event::HeapSimulatorTrace_Event(const HeapSimulatorTrace_Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  computation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.computation_name().size() > 0) {
    computation_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.computation_name(),
      GetArenaNoVirtual());
  }
  instruction_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instruction_name().size() > 0) {
    instruction_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instruction_name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&buffer_id_, &from.buffer_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&buffer_id_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:xla.HeapSimulatorTrace.Event)
}

void HeapSimulatorTrace_Event::SharedCtor() {
  computation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instruction_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&buffer_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&buffer_id_)) + sizeof(kind_));
}

HeapSimulatorTrace_Event::~HeapSimulatorTrace_Event() {
  // @@protoc_insertion_point(destructor:xla.HeapSimulatorTrace.Event)
  SharedDtor();
}

void HeapSimulatorTrace_Event::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  computation_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instruction_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HeapSimulatorTrace_Event::ArenaDtor(void* object) {
  HeapSimulatorTrace_Event* _this = reinterpret_cast< HeapSimulatorTrace_Event* >(object);
  (void)_this;
}
void HeapSimulatorTrace_Event::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HeapSimulatorTrace_Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeapSimulatorTrace_Event::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeapSimulatorTrace_Event& HeapSimulatorTrace_Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HeapSimulatorTrace_Event.base);
  return *internal_default_instance();
}


void HeapSimulatorTrace_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HeapSimulatorTrace.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  computation_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  instruction_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&buffer_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&buffer_id_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

bool HeapSimulatorTrace_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HeapSimulatorTrace.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HeapSimulatorTrace.Event.Kind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::xla::HeapSimulatorTrace_Event_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 buffer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buffer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string computation_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_computation_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->computation_name().data(), static_cast<int>(this->computation_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HeapSimulatorTrace.Event.computation_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instruction_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instruction_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HeapSimulatorTrace.Event.instruction_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 share_with_canonical_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &share_with_canonical_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HeapSimulatorTrace.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HeapSimulatorTrace.Event)
  return false;
#undef DO_
}

void HeapSimulatorTrace_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HeapSimulatorTrace.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HeapSimulatorTrace.Event.Kind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // int64 buffer_id = 2;
  if (this->buffer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->buffer_id(), output);
  }

  // string computation_name = 3;
  if (this->computation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->computation_name().data(), static_cast<int>(this->computation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HeapSimulatorTrace.Event.computation_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->computation_name(), output);
  }

  // string instruction_name = 4;
  if (this->instruction_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HeapSimulatorTrace.Event.instruction_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->instruction_name(), output);
  }

  // int64 share_with_canonical_id = 5;
  if (this->share_with_canonical_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->share_with_canonical_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HeapSimulatorTrace.Event)
}

::google::protobuf::uint8* HeapSimulatorTrace_Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HeapSimulatorTrace.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HeapSimulatorTrace.Event.Kind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // int64 buffer_id = 2;
  if (this->buffer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->buffer_id(), target);
  }

  // string computation_name = 3;
  if (this->computation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->computation_name().data(), static_cast<int>(this->computation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HeapSimulatorTrace.Event.computation_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->computation_name(), target);
  }

  // string instruction_name = 4;
  if (this->instruction_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instruction_name().data(), static_cast<int>(this->instruction_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HeapSimulatorTrace.Event.instruction_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->instruction_name(), target);
  }

  // int64 share_with_canonical_id = 5;
  if (this->share_with_canonical_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->share_with_canonical_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HeapSimulatorTrace.Event)
  return target;
}

size_t HeapSimulatorTrace_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HeapSimulatorTrace.Event)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string computation_name = 3;
  if (this->computation_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->computation_name());
  }

  // string instruction_name = 4;
  if (this->instruction_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instruction_name());
  }

  // int64 buffer_id = 2;
  if (this->buffer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->buffer_id());
  }

  // int64 share_with_canonical_id = 5;
  if (this->share_with_canonical_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->share_with_canonical_id());
  }

  // .xla.HeapSimulatorTrace.Event.Kind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeapSimulatorTrace_Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HeapSimulatorTrace.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const HeapSimulatorTrace_Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeapSimulatorTrace_Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HeapSimulatorTrace.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HeapSimulatorTrace.Event)
    MergeFrom(*source);
  }
}

void HeapSimulatorTrace_Event::MergeFrom(const HeapSimulatorTrace_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HeapSimulatorTrace.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.computation_name().size() > 0) {
    set_computation_name(from.computation_name());
  }
  if (from.instruction_name().size() > 0) {
    set_instruction_name(from.instruction_name());
  }
  if (from.buffer_id() != 0) {
    set_buffer_id(from.buffer_id());
  }
  if (from.share_with_canonical_id() != 0) {
    set_share_with_canonical_id(from.share_with_canonical_id());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void HeapSimulatorTrace_Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HeapSimulatorTrace.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeapSimulatorTrace_Event::CopyFrom(const HeapSimulatorTrace_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HeapSimulatorTrace.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeapSimulatorTrace_Event::IsInitialized() const {
  return true;
}

void HeapSimulatorTrace_Event::Swap(HeapSimulatorTrace_Event* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HeapSimulatorTrace_Event* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HeapSimulatorTrace_Event::UnsafeArenaSwap(HeapSimulatorTrace_Event* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HeapSimulatorTrace_Event::InternalSwap(HeapSimulatorTrace_Event* other) {
  using std::swap;
  computation_name_.Swap(&other->computation_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instruction_name_.Swap(&other->instruction_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(buffer_id_, other->buffer_id_);
  swap(share_with_canonical_id_, other->share_with_canonical_id_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeapSimulatorTrace_Event::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeapSimulatorTrace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeapSimulatorTrace::kEventsFieldNumber;
const int HeapSimulatorTrace::kWholeModuleSimulationFieldNumber;
const int HeapSimulatorTrace::kBufferAllocationIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeapSimulatorTrace::HeapSimulatorTrace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HeapSimulatorTrace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HeapSimulatorTrace)
}
HeapSimulatorTrace::HeapSimulatorTrace(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  events_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HeapSimulatorTrace.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HeapSimulatorTrace)
}
HeapSimulatorTrace::HeapSimulatorTrace(const HeapSimulatorTrace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&buffer_allocation_index_, &from.buffer_allocation_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&whole_module_simulation_) -
    reinterpret_cast<char*>(&buffer_allocation_index_)) + sizeof(whole_module_simulation_));
  // @@protoc_insertion_point(copy_constructor:xla.HeapSimulatorTrace)
}

void HeapSimulatorTrace::SharedCtor() {
  ::memset(&buffer_allocation_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whole_module_simulation_) -
      reinterpret_cast<char*>(&buffer_allocation_index_)) + sizeof(whole_module_simulation_));
}

HeapSimulatorTrace::~HeapSimulatorTrace() {
  // @@protoc_insertion_point(destructor:xla.HeapSimulatorTrace)
  SharedDtor();
}

void HeapSimulatorTrace::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HeapSimulatorTrace::ArenaDtor(void* object) {
  HeapSimulatorTrace* _this = reinterpret_cast< HeapSimulatorTrace* >(object);
  (void)_this;
}
void HeapSimulatorTrace::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HeapSimulatorTrace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeapSimulatorTrace::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeapSimulatorTrace& HeapSimulatorTrace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HeapSimulatorTrace.base);
  return *internal_default_instance();
}


void HeapSimulatorTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HeapSimulatorTrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  ::memset(&buffer_allocation_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whole_module_simulation_) -
      reinterpret_cast<char*>(&buffer_allocation_index_)) + sizeof(whole_module_simulation_));
  _internal_metadata_.Clear();
}

bool HeapSimulatorTrace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HeapSimulatorTrace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.HeapSimulatorTrace.Event events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool whole_module_simulation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &whole_module_simulation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 buffer_allocation_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buffer_allocation_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HeapSimulatorTrace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HeapSimulatorTrace)
  return false;
#undef DO_
}

void HeapSimulatorTrace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HeapSimulatorTrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.HeapSimulatorTrace.Event events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->events(static_cast<int>(i)),
      output);
  }

  // bool whole_module_simulation = 2;
  if (this->whole_module_simulation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->whole_module_simulation(), output);
  }

  // int64 buffer_allocation_index = 3;
  if (this->buffer_allocation_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->buffer_allocation_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HeapSimulatorTrace)
}

::google::protobuf::uint8* HeapSimulatorTrace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HeapSimulatorTrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.HeapSimulatorTrace.Event events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->events(static_cast<int>(i)), deterministic, target);
  }

  // bool whole_module_simulation = 2;
  if (this->whole_module_simulation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->whole_module_simulation(), target);
  }

  // int64 buffer_allocation_index = 3;
  if (this->buffer_allocation_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->buffer_allocation_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HeapSimulatorTrace)
  return target;
}

size_t HeapSimulatorTrace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HeapSimulatorTrace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.HeapSimulatorTrace.Event events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // int64 buffer_allocation_index = 3;
  if (this->buffer_allocation_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->buffer_allocation_index());
  }

  // bool whole_module_simulation = 2;
  if (this->whole_module_simulation() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeapSimulatorTrace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HeapSimulatorTrace)
  GOOGLE_DCHECK_NE(&from, this);
  const HeapSimulatorTrace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeapSimulatorTrace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HeapSimulatorTrace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HeapSimulatorTrace)
    MergeFrom(*source);
  }
}

void HeapSimulatorTrace::MergeFrom(const HeapSimulatorTrace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HeapSimulatorTrace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  if (from.buffer_allocation_index() != 0) {
    set_buffer_allocation_index(from.buffer_allocation_index());
  }
  if (from.whole_module_simulation() != 0) {
    set_whole_module_simulation(from.whole_module_simulation());
  }
}

void HeapSimulatorTrace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HeapSimulatorTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeapSimulatorTrace::CopyFrom(const HeapSimulatorTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HeapSimulatorTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeapSimulatorTrace::IsInitialized() const {
  return true;
}

void HeapSimulatorTrace::Swap(HeapSimulatorTrace* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HeapSimulatorTrace* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HeapSimulatorTrace::UnsafeArenaSwap(HeapSimulatorTrace* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HeapSimulatorTrace::InternalSwap(HeapSimulatorTrace* other) {
  using std::swap;
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  swap(buffer_allocation_index_, other->buffer_allocation_index_);
  swap(whole_module_simulation_, other->whole_module_simulation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeapSimulatorTrace::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloModuleGroupProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloModuleGroupProto::kNameFieldNumber;
const int HloModuleGroupProto::kHloModulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloModuleGroupProto::HloModuleGroupProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleGroupProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloModuleGroupProto)
}
HloModuleGroupProto::HloModuleGroupProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  hlo_modules_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleGroupProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloModuleGroupProto)
}
HloModuleGroupProto::HloModuleGroupProto(const HloModuleGroupProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hlo_modules_(from.hlo_modules_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:xla.HloModuleGroupProto)
}

void HloModuleGroupProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HloModuleGroupProto::~HloModuleGroupProto() {
  // @@protoc_insertion_point(destructor:xla.HloModuleGroupProto)
  SharedDtor();
}

void HloModuleGroupProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HloModuleGroupProto::ArenaDtor(void* object) {
  HloModuleGroupProto* _this = reinterpret_cast< HloModuleGroupProto* >(object);
  (void)_this;
}
void HloModuleGroupProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloModuleGroupProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloModuleGroupProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloModuleGroupProto& HloModuleGroupProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleGroupProto.base);
  return *internal_default_instance();
}


void HloModuleGroupProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloModuleGroupProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hlo_modules_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool HloModuleGroupProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloModuleGroupProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloModuleGroupProto.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.HloModuleProto hlo_modules = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hlo_modules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloModuleGroupProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloModuleGroupProto)
  return false;
#undef DO_
}

void HloModuleGroupProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloModuleGroupProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloModuleGroupProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .xla.HloModuleProto hlo_modules = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hlo_modules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->hlo_modules(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloModuleGroupProto)
}

::google::protobuf::uint8* HloModuleGroupProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloModuleGroupProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloModuleGroupProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .xla.HloModuleProto hlo_modules = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hlo_modules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->hlo_modules(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloModuleGroupProto)
  return target;
}

size_t HloModuleGroupProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloModuleGroupProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.HloModuleProto hlo_modules = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->hlo_modules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hlo_modules(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloModuleGroupProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloModuleGroupProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloModuleGroupProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloModuleGroupProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloModuleGroupProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloModuleGroupProto)
    MergeFrom(*source);
  }
}

void HloModuleGroupProto::MergeFrom(const HloModuleGroupProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloModuleGroupProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hlo_modules_.MergeFrom(from.hlo_modules_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void HloModuleGroupProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloModuleGroupProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloModuleGroupProto::CopyFrom(const HloModuleGroupProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloModuleGroupProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloModuleGroupProto::IsInitialized() const {
  return true;
}

void HloModuleGroupProto::Swap(HloModuleGroupProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloModuleGroupProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloModuleGroupProto::UnsafeArenaSwap(HloModuleGroupProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloModuleGroupProto::InternalSwap(HloModuleGroupProto* other) {
  using std::swap;
  CastToBase(&hlo_modules_)->InternalSwap(CastToBase(&other->hlo_modules_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloModuleGroupProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BufferAssignmentProto_BufferAlias::InitAsDefaultInstance() {
  ::xla::_BufferAssignmentProto_BufferAlias_default_instance_._instance.get_mutable()->location_ = const_cast< ::xla::LogicalBufferProto_Location*>(
      ::xla::LogicalBufferProto_Location::internal_default_instance());
}
void BufferAssignmentProto_BufferAlias::unsafe_arena_set_allocated_location(
    ::xla::LogicalBufferProto_Location* location) {
  if (GetArenaNoVirtual() == NULL) {
    delete location_;
  }
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.BufferAssignmentProto.BufferAlias.location)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferAssignmentProto_BufferAlias::kSourceBufferIdFieldNumber;
const int BufferAssignmentProto_BufferAlias::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferAssignmentProto_BufferAlias::BufferAssignmentProto_BufferAlias()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAssignmentProto_BufferAlias.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.BufferAssignmentProto.BufferAlias)
}
BufferAssignmentProto_BufferAlias::BufferAssignmentProto_BufferAlias(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAssignmentProto_BufferAlias.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.BufferAssignmentProto.BufferAlias)
}
BufferAssignmentProto_BufferAlias::BufferAssignmentProto_BufferAlias(const BufferAssignmentProto_BufferAlias& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::xla::LogicalBufferProto_Location(*from.location_);
  } else {
    location_ = NULL;
  }
  source_buffer_id_ = from.source_buffer_id_;
  // @@protoc_insertion_point(copy_constructor:xla.BufferAssignmentProto.BufferAlias)
}

void BufferAssignmentProto_BufferAlias::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_buffer_id_) -
      reinterpret_cast<char*>(&location_)) + sizeof(source_buffer_id_));
}

BufferAssignmentProto_BufferAlias::~BufferAssignmentProto_BufferAlias() {
  // @@protoc_insertion_point(destructor:xla.BufferAssignmentProto.BufferAlias)
  SharedDtor();
}

void BufferAssignmentProto_BufferAlias::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete location_;
}

void BufferAssignmentProto_BufferAlias::ArenaDtor(void* object) {
  BufferAssignmentProto_BufferAlias* _this = reinterpret_cast< BufferAssignmentProto_BufferAlias* >(object);
  (void)_this;
}
void BufferAssignmentProto_BufferAlias::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BufferAssignmentProto_BufferAlias::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BufferAssignmentProto_BufferAlias::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BufferAssignmentProto_BufferAlias& BufferAssignmentProto_BufferAlias::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAssignmentProto_BufferAlias.base);
  return *internal_default_instance();
}


void BufferAssignmentProto_BufferAlias::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.BufferAssignmentProto.BufferAlias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  source_buffer_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool BufferAssignmentProto_BufferAlias::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.BufferAssignmentProto.BufferAlias)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 source_buffer_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_buffer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.LogicalBufferProto.Location location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.BufferAssignmentProto.BufferAlias)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.BufferAssignmentProto.BufferAlias)
  return false;
#undef DO_
}

void BufferAssignmentProto_BufferAlias::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.BufferAssignmentProto.BufferAlias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 source_buffer_id = 1;
  if (this->source_buffer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->source_buffer_id(), output);
  }

  // .xla.LogicalBufferProto.Location location = 2;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.BufferAssignmentProto.BufferAlias)
}

::google::protobuf::uint8* BufferAssignmentProto_BufferAlias::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.BufferAssignmentProto.BufferAlias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 source_buffer_id = 1;
  if (this->source_buffer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->source_buffer_id(), target);
  }

  // .xla.LogicalBufferProto.Location location = 2;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.BufferAssignmentProto.BufferAlias)
  return target;
}

size_t BufferAssignmentProto_BufferAlias::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.BufferAssignmentProto.BufferAlias)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LogicalBufferProto.Location location = 2;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // int64 source_buffer_id = 1;
  if (this->source_buffer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->source_buffer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BufferAssignmentProto_BufferAlias::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.BufferAssignmentProto.BufferAlias)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferAssignmentProto_BufferAlias* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferAssignmentProto_BufferAlias>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.BufferAssignmentProto.BufferAlias)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.BufferAssignmentProto.BufferAlias)
    MergeFrom(*source);
  }
}

void BufferAssignmentProto_BufferAlias::MergeFrom(const BufferAssignmentProto_BufferAlias& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.BufferAssignmentProto.BufferAlias)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_location()) {
    mutable_location()->::xla::LogicalBufferProto_Location::MergeFrom(from.location());
  }
  if (from.source_buffer_id() != 0) {
    set_source_buffer_id(from.source_buffer_id());
  }
}

void BufferAssignmentProto_BufferAlias::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.BufferAssignmentProto.BufferAlias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferAssignmentProto_BufferAlias::CopyFrom(const BufferAssignmentProto_BufferAlias& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.BufferAssignmentProto.BufferAlias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferAssignmentProto_BufferAlias::IsInitialized() const {
  return true;
}

void BufferAssignmentProto_BufferAlias::Swap(BufferAssignmentProto_BufferAlias* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BufferAssignmentProto_BufferAlias* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BufferAssignmentProto_BufferAlias::UnsafeArenaSwap(BufferAssignmentProto_BufferAlias* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BufferAssignmentProto_BufferAlias::InternalSwap(BufferAssignmentProto_BufferAlias* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(source_buffer_id_, other->source_buffer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BufferAssignmentProto_BufferAlias::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BufferAssignmentProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferAssignmentProto::kLogicalBuffersFieldNumber;
const int BufferAssignmentProto::kBufferAliasesFieldNumber;
const int BufferAssignmentProto::kBufferAllocationsFieldNumber;
const int BufferAssignmentProto::kHeapSimulatorTracesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferAssignmentProto::BufferAssignmentProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAssignmentProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.BufferAssignmentProto)
}
BufferAssignmentProto::BufferAssignmentProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  logical_buffers_(arena),
  buffer_aliases_(arena),
  buffer_allocations_(arena),
  heap_simulator_traces_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAssignmentProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.BufferAssignmentProto)
}
BufferAssignmentProto::BufferAssignmentProto(const BufferAssignmentProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      logical_buffers_(from.logical_buffers_),
      buffer_aliases_(from.buffer_aliases_),
      buffer_allocations_(from.buffer_allocations_),
      heap_simulator_traces_(from.heap_simulator_traces_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.BufferAssignmentProto)
}

void BufferAssignmentProto::SharedCtor() {
}

BufferAssignmentProto::~BufferAssignmentProto() {
  // @@protoc_insertion_point(destructor:xla.BufferAssignmentProto)
  SharedDtor();
}

void BufferAssignmentProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BufferAssignmentProto::ArenaDtor(void* object) {
  BufferAssignmentProto* _this = reinterpret_cast< BufferAssignmentProto* >(object);
  (void)_this;
}
void BufferAssignmentProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BufferAssignmentProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BufferAssignmentProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BufferAssignmentProto& BufferAssignmentProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_BufferAssignmentProto.base);
  return *internal_default_instance();
}


void BufferAssignmentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.BufferAssignmentProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logical_buffers_.Clear();
  buffer_aliases_.Clear();
  buffer_allocations_.Clear();
  heap_simulator_traces_.Clear();
  _internal_metadata_.Clear();
}

bool BufferAssignmentProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.BufferAssignmentProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.LogicalBufferProto logical_buffers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_logical_buffers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.BufferAssignmentProto.BufferAlias buffer_aliases = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_buffer_aliases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.BufferAllocationProto buffer_allocations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_buffer_allocations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.HeapSimulatorTrace heap_simulator_traces = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_heap_simulator_traces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.BufferAssignmentProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.BufferAssignmentProto)
  return false;
#undef DO_
}

void BufferAssignmentProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.BufferAssignmentProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.LogicalBufferProto logical_buffers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logical_buffers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->logical_buffers(static_cast<int>(i)),
      output);
  }

  // repeated .xla.BufferAssignmentProto.BufferAlias buffer_aliases = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffer_aliases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->buffer_aliases(static_cast<int>(i)),
      output);
  }

  // repeated .xla.BufferAllocationProto buffer_allocations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffer_allocations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->buffer_allocations(static_cast<int>(i)),
      output);
  }

  // repeated .xla.HeapSimulatorTrace heap_simulator_traces = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heap_simulator_traces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->heap_simulator_traces(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.BufferAssignmentProto)
}

::google::protobuf::uint8* BufferAssignmentProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.BufferAssignmentProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.LogicalBufferProto logical_buffers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logical_buffers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->logical_buffers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .xla.BufferAssignmentProto.BufferAlias buffer_aliases = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffer_aliases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->buffer_aliases(static_cast<int>(i)), deterministic, target);
  }

  // repeated .xla.BufferAllocationProto buffer_allocations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffer_allocations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->buffer_allocations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .xla.HeapSimulatorTrace heap_simulator_traces = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heap_simulator_traces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->heap_simulator_traces(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.BufferAssignmentProto)
  return target;
}

size_t BufferAssignmentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.BufferAssignmentProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.LogicalBufferProto logical_buffers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->logical_buffers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->logical_buffers(static_cast<int>(i)));
    }
  }

  // repeated .xla.BufferAssignmentProto.BufferAlias buffer_aliases = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->buffer_aliases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buffer_aliases(static_cast<int>(i)));
    }
  }

  // repeated .xla.BufferAllocationProto buffer_allocations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->buffer_allocations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buffer_allocations(static_cast<int>(i)));
    }
  }

  // repeated .xla.HeapSimulatorTrace heap_simulator_traces = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->heap_simulator_traces_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->heap_simulator_traces(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BufferAssignmentProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.BufferAssignmentProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferAssignmentProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferAssignmentProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.BufferAssignmentProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.BufferAssignmentProto)
    MergeFrom(*source);
  }
}

void BufferAssignmentProto::MergeFrom(const BufferAssignmentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.BufferAssignmentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  logical_buffers_.MergeFrom(from.logical_buffers_);
  buffer_aliases_.MergeFrom(from.buffer_aliases_);
  buffer_allocations_.MergeFrom(from.buffer_allocations_);
  heap_simulator_traces_.MergeFrom(from.heap_simulator_traces_);
}

void BufferAssignmentProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.BufferAssignmentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferAssignmentProto::CopyFrom(const BufferAssignmentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.BufferAssignmentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferAssignmentProto::IsInitialized() const {
  return true;
}

void BufferAssignmentProto::Swap(BufferAssignmentProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BufferAssignmentProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BufferAssignmentProto::UnsafeArenaSwap(BufferAssignmentProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BufferAssignmentProto::InternalSwap(BufferAssignmentProto* other) {
  using std::swap;
  CastToBase(&logical_buffers_)->InternalSwap(CastToBase(&other->logical_buffers_));
  CastToBase(&buffer_aliases_)->InternalSwap(CastToBase(&other->buffer_aliases_));
  CastToBase(&buffer_allocations_)->InternalSwap(CastToBase(&other->buffer_allocations_));
  CastToBase(&heap_simulator_traces_)->InternalSwap(CastToBase(&other->heap_simulator_traces_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BufferAssignmentProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloProto::InitAsDefaultInstance() {
  ::xla::_HloProto_default_instance_._instance.get_mutable()->hlo_module_ = const_cast< ::xla::HloModuleProto*>(
      ::xla::HloModuleProto::internal_default_instance());
  ::xla::_HloProto_default_instance_._instance.get_mutable()->buffer_assignment_ = const_cast< ::xla::BufferAssignmentProto*>(
      ::xla::BufferAssignmentProto::internal_default_instance());
}
void HloProto::unsafe_arena_set_allocated_hlo_module(
    ::xla::HloModuleProto* hlo_module) {
  if (GetArenaNoVirtual() == NULL) {
    delete hlo_module_;
  }
  hlo_module_ = hlo_module;
  if (hlo_module) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloProto.hlo_module)
}
void HloProto::unsafe_arena_set_allocated_buffer_assignment(
    ::xla::BufferAssignmentProto* buffer_assignment) {
  if (GetArenaNoVirtual() == NULL) {
    delete buffer_assignment_;
  }
  buffer_assignment_ = buffer_assignment;
  if (buffer_assignment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloProto.buffer_assignment)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloProto::kHloModuleFieldNumber;
const int HloProto::kBufferAssignmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloProto::HloProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloProto)
}
HloProto::HloProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloProto)
}
HloProto::HloProto(const HloProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hlo_module()) {
    hlo_module_ = new ::xla::HloModuleProto(*from.hlo_module_);
  } else {
    hlo_module_ = NULL;
  }
  if (from.has_buffer_assignment()) {
    buffer_assignment_ = new ::xla::BufferAssignmentProto(*from.buffer_assignment_);
  } else {
    buffer_assignment_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.HloProto)
}

void HloProto::SharedCtor() {
  ::memset(&hlo_module_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_assignment_) -
      reinterpret_cast<char*>(&hlo_module_)) + sizeof(buffer_assignment_));
}

HloProto::~HloProto() {
  // @@protoc_insertion_point(destructor:xla.HloProto)
  SharedDtor();
}

void HloProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete hlo_module_;
  if (this != internal_default_instance()) delete buffer_assignment_;
}

void HloProto::ArenaDtor(void* object) {
  HloProto* _this = reinterpret_cast< HloProto* >(object);
  (void)_this;
}
void HloProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloProto& HloProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloProto.base);
  return *internal_default_instance();
}


void HloProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hlo_module_ != NULL) {
    delete hlo_module_;
  }
  hlo_module_ = NULL;
  if (GetArenaNoVirtual() == NULL && buffer_assignment_ != NULL) {
    delete buffer_assignment_;
  }
  buffer_assignment_ = NULL;
  _internal_metadata_.Clear();
}

bool HloProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloModuleProto hlo_module = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hlo_module()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.BufferAssignmentProto buffer_assignment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buffer_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloProto)
  return false;
#undef DO_
}

void HloProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto hlo_module = 1;
  if (this->has_hlo_module()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_hlo_module(), output);
  }

  // .xla.BufferAssignmentProto buffer_assignment = 3;
  if (this->has_buffer_assignment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_buffer_assignment(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloProto)
}

::google::protobuf::uint8* HloProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto hlo_module = 1;
  if (this->has_hlo_module()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_hlo_module(), deterministic, target);
  }

  // .xla.BufferAssignmentProto buffer_assignment = 3;
  if (this->has_buffer_assignment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_buffer_assignment(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloProto)
  return target;
}

size_t HloProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.HloModuleProto hlo_module = 1;
  if (this->has_hlo_module()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hlo_module_);
  }

  // .xla.BufferAssignmentProto buffer_assignment = 3;
  if (this->has_buffer_assignment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *buffer_assignment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloProto)
    MergeFrom(*source);
  }
}

void HloProto::MergeFrom(const HloProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hlo_module()) {
    mutable_hlo_module()->::xla::HloModuleProto::MergeFrom(from.hlo_module());
  }
  if (from.has_buffer_assignment()) {
    mutable_buffer_assignment()->::xla::BufferAssignmentProto::MergeFrom(from.buffer_assignment());
  }
}

void HloProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloProto::CopyFrom(const HloProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloProto::IsInitialized() const {
  return true;
}

void HloProto::Swap(HloProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloProto::UnsafeArenaSwap(HloProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloProto::InternalSwap(HloProto* other) {
  using std::swap;
  swap(hlo_module_, other->hlo_module_);
  swap(buffer_assignment_, other->buffer_assignment_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloSnapshot::InitAsDefaultInstance() {
  ::xla::_HloSnapshot_default_instance_._instance.get_mutable()->hlo_ = const_cast< ::xla::HloProto*>(
      ::xla::HloProto::internal_default_instance());
  ::xla::_HloSnapshot_default_instance_._instance.get_mutable()->result_ = const_cast< ::xla::LiteralProto*>(
      ::xla::LiteralProto::internal_default_instance());
}
void HloSnapshot::unsafe_arena_set_allocated_hlo(
    ::xla::HloProto* hlo) {
  if (GetArenaNoVirtual() == NULL) {
    delete hlo_;
  }
  hlo_ = hlo;
  if (hlo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloSnapshot.hlo)
}
void HloSnapshot::clear_arguments() {
  arguments_.Clear();
}
void HloSnapshot::unsafe_arena_set_allocated_result(
    ::xla::LiteralProto* result) {
  if (GetArenaNoVirtual() == NULL) {
    delete result_;
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloSnapshot.result)
}
void HloSnapshot::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloSnapshot::kHloFieldNumber;
const int HloSnapshot::kArgumentsFieldNumber;
const int HloSnapshot::kResultFieldNumber;
const int HloSnapshot::kExecutionPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloSnapshot::HloSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloSnapshot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloSnapshot)
}
HloSnapshot::HloSnapshot(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  arguments_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloSnapshot.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloSnapshot)
}
HloSnapshot::HloSnapshot(const HloSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  execution_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.execution_platform().size() > 0) {
    execution_platform_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execution_platform(),
      GetArenaNoVirtual());
  }
  if (from.has_hlo()) {
    hlo_ = new ::xla::HloProto(*from.hlo_);
  } else {
    hlo_ = NULL;
  }
  if (from.has_result()) {
    result_ = new ::xla::LiteralProto(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.HloSnapshot)
}

void HloSnapshot::SharedCtor() {
  execution_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hlo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&hlo_)) + sizeof(result_));
}

HloSnapshot::~HloSnapshot() {
  // @@protoc_insertion_point(destructor:xla.HloSnapshot)
  SharedDtor();
}

void HloSnapshot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  execution_platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hlo_;
  if (this != internal_default_instance()) delete result_;
}

void HloSnapshot::ArenaDtor(void* object) {
  HloSnapshot* _this = reinterpret_cast< HloSnapshot* >(object);
  (void)_this;
}
void HloSnapshot::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloSnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloSnapshot::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloSnapshot& HloSnapshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloSnapshot.base);
  return *internal_default_instance();
}


void HloSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  execution_platform_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && hlo_ != NULL) {
    delete hlo_;
  }
  hlo_ = NULL;
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  _internal_metadata_.Clear();
}

bool HloSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloSnapshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloProto hlo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hlo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.LiteralProto arguments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.LiteralProto result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string execution_platform = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_execution_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->execution_platform().data(), static_cast<int>(this->execution_platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloSnapshot.execution_platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloSnapshot)
  return false;
#undef DO_
}

void HloSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloProto hlo = 1;
  if (this->has_hlo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_hlo(), output);
  }

  // repeated .xla.LiteralProto arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->arguments(static_cast<int>(i)),
      output);
  }

  // .xla.LiteralProto result = 3;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_result(), output);
  }

  // string execution_platform = 4;
  if (this->execution_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execution_platform().data(), static_cast<int>(this->execution_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloSnapshot.execution_platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->execution_platform(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloSnapshot)
}

::google::protobuf::uint8* HloSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloProto hlo = 1;
  if (this->has_hlo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_hlo(), deterministic, target);
  }

  // repeated .xla.LiteralProto arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  // .xla.LiteralProto result = 3;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_result(), deterministic, target);
  }

  // string execution_platform = 4;
  if (this->execution_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execution_platform().data(), static_cast<int>(this->execution_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloSnapshot.execution_platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->execution_platform(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloSnapshot)
  return target;
}

size_t HloSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloSnapshot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.LiteralProto arguments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // string execution_platform = 4;
  if (this->execution_platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->execution_platform());
  }

  // .xla.HloProto hlo = 1;
  if (this->has_hlo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hlo_);
  }

  // .xla.LiteralProto result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const HloSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloSnapshot)
    MergeFrom(*source);
  }
}

void HloSnapshot::MergeFrom(const HloSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.execution_platform().size() > 0) {
    set_execution_platform(from.execution_platform());
  }
  if (from.has_hlo()) {
    mutable_hlo()->::xla::HloProto::MergeFrom(from.hlo());
  }
  if (from.has_result()) {
    mutable_result()->::xla::LiteralProto::MergeFrom(from.result());
  }
}

void HloSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloSnapshot::CopyFrom(const HloSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloSnapshot::IsInitialized() const {
  return true;
}

void HloSnapshot::Swap(HloSnapshot* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloSnapshot* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloSnapshot::UnsafeArenaSwap(HloSnapshot* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloSnapshot::InternalSwap(HloSnapshot* other) {
  using std::swap;
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  execution_platform_.Swap(&other->execution_platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hlo_, other->hlo_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloSnapshot::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloModuleMetadataProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloModuleMetadataProto::kCanonicalModuleIdFieldNumber;
const int HloModuleMetadataProto::kModuleGroupNameFieldNumber;
const int HloModuleMetadataProto::kOriginalModuleIdFieldNumber;
const int HloModuleMetadataProto::kPartitionedModuleIdsFieldNumber;
const int HloModuleMetadataProto::kPassMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloModuleMetadataProto::HloModuleMetadataProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleMetadataProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloModuleMetadataProto)
}
HloModuleMetadataProto::HloModuleMetadataProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  partitioned_module_ids_(arena),
  pass_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleMetadataProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloModuleMetadataProto)
}
HloModuleMetadataProto::HloModuleMetadataProto(const HloModuleMetadataProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      partitioned_module_ids_(from.partitioned_module_ids_),
      pass_metadata_(from.pass_metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.module_group_name().size() > 0) {
    module_group_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_group_name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&canonical_module_id_, &from.canonical_module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&original_module_id_) -
    reinterpret_cast<char*>(&canonical_module_id_)) + sizeof(original_module_id_));
  // @@protoc_insertion_point(copy_constructor:xla.HloModuleMetadataProto)
}

void HloModuleMetadataProto::SharedCtor() {
  module_group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&canonical_module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&original_module_id_) -
      reinterpret_cast<char*>(&canonical_module_id_)) + sizeof(original_module_id_));
}

HloModuleMetadataProto::~HloModuleMetadataProto() {
  // @@protoc_insertion_point(destructor:xla.HloModuleMetadataProto)
  SharedDtor();
}

void HloModuleMetadataProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  module_group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HloModuleMetadataProto::ArenaDtor(void* object) {
  HloModuleMetadataProto* _this = reinterpret_cast< HloModuleMetadataProto* >(object);
  (void)_this;
}
void HloModuleMetadataProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloModuleMetadataProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloModuleMetadataProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloModuleMetadataProto& HloModuleMetadataProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleMetadataProto.base);
  return *internal_default_instance();
}


void HloModuleMetadataProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloModuleMetadataProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partitioned_module_ids_.Clear();
  pass_metadata_.Clear();
  module_group_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&canonical_module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&original_module_id_) -
      reinterpret_cast<char*>(&canonical_module_id_)) + sizeof(original_module_id_));
  _internal_metadata_.Clear();
}

bool HloModuleMetadataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloModuleMetadataProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 canonical_module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &canonical_module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string module_group_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->module_group_name().data(), static_cast<int>(this->module_group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloModuleMetadataProto.module_group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 original_module_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &original_module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 partitioned_module_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_partitioned_module_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_partitioned_module_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.HloPassMetadata pass_metadata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pass_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloModuleMetadataProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloModuleMetadataProto)
  return false;
#undef DO_
}

void HloModuleMetadataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloModuleMetadataProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 canonical_module_id = 1;
  if (this->canonical_module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->canonical_module_id(), output);
  }

  // string module_group_name = 2;
  if (this->module_group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_group_name().data(), static_cast<int>(this->module_group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloModuleMetadataProto.module_group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->module_group_name(), output);
  }

  // int64 original_module_id = 3;
  if (this->original_module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->original_module_id(), output);
  }

  // repeated int64 partitioned_module_ids = 4;
  if (this->partitioned_module_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _partitioned_module_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->partitioned_module_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->partitioned_module_ids(i), output);
  }

  // repeated .xla.HloPassMetadata pass_metadata = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pass_metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->pass_metadata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloModuleMetadataProto)
}

::google::protobuf::uint8* HloModuleMetadataProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloModuleMetadataProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 canonical_module_id = 1;
  if (this->canonical_module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->canonical_module_id(), target);
  }

  // string module_group_name = 2;
  if (this->module_group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_group_name().data(), static_cast<int>(this->module_group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloModuleMetadataProto.module_group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->module_group_name(), target);
  }

  // int64 original_module_id = 3;
  if (this->original_module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->original_module_id(), target);
  }

  // repeated int64 partitioned_module_ids = 4;
  if (this->partitioned_module_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _partitioned_module_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->partitioned_module_ids_, target);
  }

  // repeated .xla.HloPassMetadata pass_metadata = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pass_metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->pass_metadata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloModuleMetadataProto)
  return target;
}

size_t HloModuleMetadataProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloModuleMetadataProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 partitioned_module_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->partitioned_module_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _partitioned_module_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .xla.HloPassMetadata pass_metadata = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->pass_metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pass_metadata(static_cast<int>(i)));
    }
  }

  // string module_group_name = 2;
  if (this->module_group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->module_group_name());
  }

  // int64 canonical_module_id = 1;
  if (this->canonical_module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->canonical_module_id());
  }

  // int64 original_module_id = 3;
  if (this->original_module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->original_module_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloModuleMetadataProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloModuleMetadataProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HloModuleMetadataProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloModuleMetadataProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloModuleMetadataProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloModuleMetadataProto)
    MergeFrom(*source);
  }
}

void HloModuleMetadataProto::MergeFrom(const HloModuleMetadataProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloModuleMetadataProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partitioned_module_ids_.MergeFrom(from.partitioned_module_ids_);
  pass_metadata_.MergeFrom(from.pass_metadata_);
  if (from.module_group_name().size() > 0) {
    set_module_group_name(from.module_group_name());
  }
  if (from.canonical_module_id() != 0) {
    set_canonical_module_id(from.canonical_module_id());
  }
  if (from.original_module_id() != 0) {
    set_original_module_id(from.original_module_id());
  }
}

void HloModuleMetadataProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloModuleMetadataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloModuleMetadataProto::CopyFrom(const HloModuleMetadataProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloModuleMetadataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloModuleMetadataProto::IsInitialized() const {
  return true;
}

void HloModuleMetadataProto::Swap(HloModuleMetadataProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloModuleMetadataProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloModuleMetadataProto::UnsafeArenaSwap(HloModuleMetadataProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloModuleMetadataProto::InternalSwap(HloModuleMetadataProto* other) {
  using std::swap;
  partitioned_module_ids_.InternalSwap(&other->partitioned_module_ids_);
  CastToBase(&pass_metadata_)->InternalSwap(CastToBase(&other->pass_metadata_));
  module_group_name_.Swap(&other->module_group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(canonical_module_id_, other->canonical_module_id_);
  swap(original_module_id_, other->original_module_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloModuleMetadataProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HloPassMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloPassMetadata::kPassIdFieldNumber;
const int HloPassMetadata::kPassNameFieldNumber;
const int HloPassMetadata::kPipelineNameFieldNumber;
const int HloPassMetadata::kDumpFilenamesFieldNumber;
const int HloPassMetadata::kModuleChangedFieldNumber;
const int HloPassMetadata::kModuleIdFieldNumber;
const int HloPassMetadata::kModuleGroupModuleIdsFieldNumber;
const int HloPassMetadata::kStartTimestampUsecFieldNumber;
const int HloPassMetadata::kEndTimestampUsecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloPassMetadata::HloPassMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloPassMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloPassMetadata)
}
HloPassMetadata::HloPassMetadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  dump_filenames_(arena),
  module_group_module_ids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloPassMetadata.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloPassMetadata)
}
HloPassMetadata::HloPassMetadata(const HloPassMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dump_filenames_(from.dump_filenames_),
      module_group_module_ids_(from.module_group_module_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pass_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pass_name().size() > 0) {
    pass_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_name(),
      GetArenaNoVirtual());
  }
  pipeline_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pipeline_name().size() > 0) {
    pipeline_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pipeline_name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&pass_id_, &from.pass_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&module_changed_) -
    reinterpret_cast<char*>(&pass_id_)) + sizeof(module_changed_));
  // @@protoc_insertion_point(copy_constructor:xla.HloPassMetadata)
}

void HloPassMetadata::SharedCtor() {
  pass_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pipeline_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pass_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_changed_) -
      reinterpret_cast<char*>(&pass_id_)) + sizeof(module_changed_));
}

HloPassMetadata::~HloPassMetadata() {
  // @@protoc_insertion_point(destructor:xla.HloPassMetadata)
  SharedDtor();
}

void HloPassMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  pass_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pipeline_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HloPassMetadata::ArenaDtor(void* object) {
  HloPassMetadata* _this = reinterpret_cast< HloPassMetadata* >(object);
  (void)_this;
}
void HloPassMetadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloPassMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloPassMetadata::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloPassMetadata& HloPassMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloPassMetadata.base);
  return *internal_default_instance();
}


void HloPassMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloPassMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dump_filenames_.Clear();
  module_group_module_ids_.Clear();
  pass_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pipeline_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&pass_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_changed_) -
      reinterpret_cast<char*>(&pass_id_)) + sizeof(module_changed_));
  _internal_metadata_.Clear();
}

bool HloPassMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloPassMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 pass_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pass_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pass_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pass_name().data(), static_cast<int>(this->pass_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloPassMetadata.pass_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pipeline_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pipeline_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pipeline_name().data(), static_cast<int>(this->pipeline_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloPassMetadata.pipeline_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string dump_filenames = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_dump_filenames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dump_filenames(this->dump_filenames_size() - 1).data(),
            static_cast<int>(this->dump_filenames(this->dump_filenames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloPassMetadata.dump_filenames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool module_changed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &module_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 module_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 module_group_module_ids = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_module_group_module_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 58u, input, this->mutable_module_group_module_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 start_timestamp_usec = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_timestamp_usec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 end_timestamp_usec = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_timestamp_usec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloPassMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloPassMetadata)
  return false;
#undef DO_
}

void HloPassMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloPassMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pass_id = 1;
  if (this->pass_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pass_id(), output);
  }

  // string pass_name = 2;
  if (this->pass_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass_name().data(), static_cast<int>(this->pass_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloPassMetadata.pass_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pass_name(), output);
  }

  // string pipeline_name = 3;
  if (this->pipeline_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_name().data(), static_cast<int>(this->pipeline_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloPassMetadata.pipeline_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pipeline_name(), output);
  }

  // repeated string dump_filenames = 4;
  for (int i = 0, n = this->dump_filenames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dump_filenames(i).data(), static_cast<int>(this->dump_filenames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloPassMetadata.dump_filenames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->dump_filenames(i), output);
  }

  // bool module_changed = 5;
  if (this->module_changed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->module_changed(), output);
  }

  // int64 module_id = 6;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->module_id(), output);
  }

  // repeated int64 module_group_module_ids = 7;
  if (this->module_group_module_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _module_group_module_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->module_group_module_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->module_group_module_ids(i), output);
  }

  // int64 start_timestamp_usec = 8;
  if (this->start_timestamp_usec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->start_timestamp_usec(), output);
  }

  // int64 end_timestamp_usec = 9;
  if (this->end_timestamp_usec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->end_timestamp_usec(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloPassMetadata)
}

::google::protobuf::uint8* HloPassMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloPassMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pass_id = 1;
  if (this->pass_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pass_id(), target);
  }

  // string pass_name = 2;
  if (this->pass_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass_name().data(), static_cast<int>(this->pass_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloPassMetadata.pass_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pass_name(), target);
  }

  // string pipeline_name = 3;
  if (this->pipeline_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_name().data(), static_cast<int>(this->pipeline_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloPassMetadata.pipeline_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pipeline_name(), target);
  }

  // repeated string dump_filenames = 4;
  for (int i = 0, n = this->dump_filenames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dump_filenames(i).data(), static_cast<int>(this->dump_filenames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloPassMetadata.dump_filenames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->dump_filenames(i), target);
  }

  // bool module_changed = 5;
  if (this->module_changed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->module_changed(), target);
  }

  // int64 module_id = 6;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->module_id(), target);
  }

  // repeated int64 module_group_module_ids = 7;
  if (this->module_group_module_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _module_group_module_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->module_group_module_ids_, target);
  }

  // int64 start_timestamp_usec = 8;
  if (this->start_timestamp_usec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->start_timestamp_usec(), target);
  }

  // int64 end_timestamp_usec = 9;
  if (this->end_timestamp_usec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->end_timestamp_usec(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloPassMetadata)
  return target;
}

size_t HloPassMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloPassMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string dump_filenames = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->dump_filenames_size());
  for (int i = 0, n = this->dump_filenames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dump_filenames(i));
  }

  // repeated int64 module_group_module_ids = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->module_group_module_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _module_group_module_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string pass_name = 2;
  if (this->pass_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass_name());
  }

  // string pipeline_name = 3;
  if (this->pipeline_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pipeline_name());
  }

  // int64 pass_id = 1;
  if (this->pass_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pass_id());
  }

  // int64 module_id = 6;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->module_id());
  }

  // int64 start_timestamp_usec = 8;
  if (this->start_timestamp_usec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_timestamp_usec());
  }

  // int64 end_timestamp_usec = 9;
  if (this->end_timestamp_usec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end_timestamp_usec());
  }

  // bool module_changed = 5;
  if (this->module_changed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloPassMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloPassMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const HloPassMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloPassMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloPassMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloPassMetadata)
    MergeFrom(*source);
  }
}

void HloPassMetadata::MergeFrom(const HloPassMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloPassMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dump_filenames_.MergeFrom(from.dump_filenames_);
  module_group_module_ids_.MergeFrom(from.module_group_module_ids_);
  if (from.pass_name().size() > 0) {
    set_pass_name(from.pass_name());
  }
  if (from.pipeline_name().size() > 0) {
    set_pipeline_name(from.pipeline_name());
  }
  if (from.pass_id() != 0) {
    set_pass_id(from.pass_id());
  }
  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
  if (from.start_timestamp_usec() != 0) {
    set_start_timestamp_usec(from.start_timestamp_usec());
  }
  if (from.end_timestamp_usec() != 0) {
    set_end_timestamp_usec(from.end_timestamp_usec());
  }
  if (from.module_changed() != 0) {
    set_module_changed(from.module_changed());
  }
}

void HloPassMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloPassMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloPassMetadata::CopyFrom(const HloPassMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloPassMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloPassMetadata::IsInitialized() const {
  return true;
}

void HloPassMetadata::Swap(HloPassMetadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloPassMetadata* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloPassMetadata::UnsafeArenaSwap(HloPassMetadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloPassMetadata::InternalSwap(HloPassMetadata* other) {
  using std::swap;
  dump_filenames_.InternalSwap(CastToBase(&other->dump_filenames_));
  module_group_module_ids_.InternalSwap(&other->module_group_module_ids_);
  pass_name_.Swap(&other->pass_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pipeline_name_.Swap(&other->pipeline_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pass_id_, other->pass_id_);
  swap(module_id_, other->module_id_);
  swap(start_timestamp_usec_, other->start_timestamp_usec_);
  swap(end_timestamp_usec_, other->end_timestamp_usec_);
  swap(module_changed_, other->module_changed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloPassMetadata::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntryFunctionAttributes_ShapeIndex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntryFunctionAttributes_ShapeIndex::kIndicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntryFunctionAttributes_ShapeIndex::EntryFunctionAttributes_ShapeIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes_ShapeIndex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.EntryFunctionAttributes.ShapeIndex)
}
EntryFunctionAttributes_ShapeIndex::EntryFunctionAttributes_ShapeIndex(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  indices_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes_ShapeIndex.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.EntryFunctionAttributes.ShapeIndex)
}
EntryFunctionAttributes_ShapeIndex::EntryFunctionAttributes_ShapeIndex(const EntryFunctionAttributes_ShapeIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      indices_(from.indices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.EntryFunctionAttributes.ShapeIndex)
}

void EntryFunctionAttributes_ShapeIndex::SharedCtor() {
}

EntryFunctionAttributes_ShapeIndex::~EntryFunctionAttributes_ShapeIndex() {
  // @@protoc_insertion_point(destructor:xla.EntryFunctionAttributes.ShapeIndex)
  SharedDtor();
}

void EntryFunctionAttributes_ShapeIndex::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void EntryFunctionAttributes_ShapeIndex::ArenaDtor(void* object) {
  EntryFunctionAttributes_ShapeIndex* _this = reinterpret_cast< EntryFunctionAttributes_ShapeIndex* >(object);
  (void)_this;
}
void EntryFunctionAttributes_ShapeIndex::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EntryFunctionAttributes_ShapeIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntryFunctionAttributes_ShapeIndex::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntryFunctionAttributes_ShapeIndex& EntryFunctionAttributes_ShapeIndex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes_ShapeIndex.base);
  return *internal_default_instance();
}


void EntryFunctionAttributes_ShapeIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.EntryFunctionAttributes.ShapeIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indices_.Clear();
  _internal_metadata_.Clear();
}

bool EntryFunctionAttributes_ShapeIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.EntryFunctionAttributes.ShapeIndex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 indices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_indices())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_indices())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.EntryFunctionAttributes.ShapeIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.EntryFunctionAttributes.ShapeIndex)
  return false;
#undef DO_
}

void EntryFunctionAttributes_ShapeIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.EntryFunctionAttributes.ShapeIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 indices = 1;
  if (this->indices_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _indices_cached_byte_size_));
  }
  for (int i = 0, n = this->indices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->indices(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.EntryFunctionAttributes.ShapeIndex)
}

::google::protobuf::uint8* EntryFunctionAttributes_ShapeIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.EntryFunctionAttributes.ShapeIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 indices = 1;
  if (this->indices_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _indices_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->indices_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.EntryFunctionAttributes.ShapeIndex)
  return target;
}

size_t EntryFunctionAttributes_ShapeIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.EntryFunctionAttributes.ShapeIndex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 indices = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->indices_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _indices_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntryFunctionAttributes_ShapeIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.EntryFunctionAttributes.ShapeIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const EntryFunctionAttributes_ShapeIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntryFunctionAttributes_ShapeIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.EntryFunctionAttributes.ShapeIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.EntryFunctionAttributes.ShapeIndex)
    MergeFrom(*source);
  }
}

void EntryFunctionAttributes_ShapeIndex::MergeFrom(const EntryFunctionAttributes_ShapeIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.EntryFunctionAttributes.ShapeIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indices_.MergeFrom(from.indices_);
}

void EntryFunctionAttributes_ShapeIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.EntryFunctionAttributes.ShapeIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntryFunctionAttributes_ShapeIndex::CopyFrom(const EntryFunctionAttributes_ShapeIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.EntryFunctionAttributes.ShapeIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntryFunctionAttributes_ShapeIndex::IsInitialized() const {
  return true;
}

void EntryFunctionAttributes_ShapeIndex::Swap(EntryFunctionAttributes_ShapeIndex* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EntryFunctionAttributes_ShapeIndex* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EntryFunctionAttributes_ShapeIndex::UnsafeArenaSwap(EntryFunctionAttributes_ShapeIndex* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EntryFunctionAttributes_ShapeIndex::InternalSwap(EntryFunctionAttributes_ShapeIndex* other) {
  using std::swap;
  indices_.InternalSwap(&other->indices_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntryFunctionAttributes_ShapeIndex::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntryFunctionAttributes_BufferParameterAttributes::InitAsDefaultInstance() {
  ::xla::_EntryFunctionAttributes_BufferParameterAttributes_default_instance_._instance.get_mutable()->lmhlo_param_shape_index_ = const_cast< ::xla::EntryFunctionAttributes_ShapeIndex*>(
      ::xla::EntryFunctionAttributes_ShapeIndex::internal_default_instance());
  ::xla::_EntryFunctionAttributes_BufferParameterAttributes_default_instance_._instance.get_mutable()->lmhlo_output_index_ = const_cast< ::xla::EntryFunctionAttributes_ShapeIndex*>(
      ::xla::EntryFunctionAttributes_ShapeIndex::internal_default_instance());
}
void EntryFunctionAttributes_BufferParameterAttributes::unsafe_arena_set_allocated_lmhlo_param_shape_index(
    ::xla::EntryFunctionAttributes_ShapeIndex* lmhlo_param_shape_index) {
  if (GetArenaNoVirtual() == NULL) {
    delete lmhlo_param_shape_index_;
  }
  lmhlo_param_shape_index_ = lmhlo_param_shape_index;
  if (lmhlo_param_shape_index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.EntryFunctionAttributes.BufferParameterAttributes.lmhlo_param_shape_index)
}
void EntryFunctionAttributes_BufferParameterAttributes::unsafe_arena_set_allocated_lmhlo_output_index(
    ::xla::EntryFunctionAttributes_ShapeIndex* lmhlo_output_index) {
  if (GetArenaNoVirtual() == NULL) {
    delete lmhlo_output_index_;
  }
  lmhlo_output_index_ = lmhlo_output_index;
  if (lmhlo_output_index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.EntryFunctionAttributes.BufferParameterAttributes.lmhlo_output_index)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntryFunctionAttributes_BufferParameterAttributes::kLmhloParamsFieldNumber;
const int EntryFunctionAttributes_BufferParameterAttributes::kLmhloParamsPresentFieldNumber;
const int EntryFunctionAttributes_BufferParameterAttributes::kLmhloParamShapeIndexFieldNumber;
const int EntryFunctionAttributes_BufferParameterAttributes::kLmhloConstantNameFieldNumber;
const int EntryFunctionAttributes_BufferParameterAttributes::kLmhloMustAliasFieldNumber;
const int EntryFunctionAttributes_BufferParameterAttributes::kLmhloOutputIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntryFunctionAttributes_BufferParameterAttributes::EntryFunctionAttributes_BufferParameterAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes_BufferParameterAttributes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.EntryFunctionAttributes.BufferParameterAttributes)
}
EntryFunctionAttributes_BufferParameterAttributes::EntryFunctionAttributes_BufferParameterAttributes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes_BufferParameterAttributes.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.EntryFunctionAttributes.BufferParameterAttributes)
}
EntryFunctionAttributes_BufferParameterAttributes::EntryFunctionAttributes_BufferParameterAttributes(const EntryFunctionAttributes_BufferParameterAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lmhlo_constant_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lmhlo_constant_name().size() > 0) {
    lmhlo_constant_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lmhlo_constant_name(),
      GetArenaNoVirtual());
  }
  if (from.has_lmhlo_param_shape_index()) {
    lmhlo_param_shape_index_ = new ::xla::EntryFunctionAttributes_ShapeIndex(*from.lmhlo_param_shape_index_);
  } else {
    lmhlo_param_shape_index_ = NULL;
  }
  if (from.has_lmhlo_output_index()) {
    lmhlo_output_index_ = new ::xla::EntryFunctionAttributes_ShapeIndex(*from.lmhlo_output_index_);
  } else {
    lmhlo_output_index_ = NULL;
  }
  ::memcpy(&lmhlo_params_, &from.lmhlo_params_,
    static_cast<size_t>(reinterpret_cast<char*>(&lmhlo_must_alias_) -
    reinterpret_cast<char*>(&lmhlo_params_)) + sizeof(lmhlo_must_alias_));
  // @@protoc_insertion_point(copy_constructor:xla.EntryFunctionAttributes.BufferParameterAttributes)
}

void EntryFunctionAttributes_BufferParameterAttributes::SharedCtor() {
  lmhlo_constant_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lmhlo_param_shape_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lmhlo_must_alias_) -
      reinterpret_cast<char*>(&lmhlo_param_shape_index_)) + sizeof(lmhlo_must_alias_));
}

EntryFunctionAttributes_BufferParameterAttributes::~EntryFunctionAttributes_BufferParameterAttributes() {
  // @@protoc_insertion_point(destructor:xla.EntryFunctionAttributes.BufferParameterAttributes)
  SharedDtor();
}

void EntryFunctionAttributes_BufferParameterAttributes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  lmhlo_constant_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete lmhlo_param_shape_index_;
  if (this != internal_default_instance()) delete lmhlo_output_index_;
}

void EntryFunctionAttributes_BufferParameterAttributes::ArenaDtor(void* object) {
  EntryFunctionAttributes_BufferParameterAttributes* _this = reinterpret_cast< EntryFunctionAttributes_BufferParameterAttributes* >(object);
  (void)_this;
}
void EntryFunctionAttributes_BufferParameterAttributes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EntryFunctionAttributes_BufferParameterAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntryFunctionAttributes_BufferParameterAttributes::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntryFunctionAttributes_BufferParameterAttributes& EntryFunctionAttributes_BufferParameterAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes_BufferParameterAttributes.base);
  return *internal_default_instance();
}


void EntryFunctionAttributes_BufferParameterAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lmhlo_constant_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && lmhlo_param_shape_index_ != NULL) {
    delete lmhlo_param_shape_index_;
  }
  lmhlo_param_shape_index_ = NULL;
  if (GetArenaNoVirtual() == NULL && lmhlo_output_index_ != NULL) {
    delete lmhlo_output_index_;
  }
  lmhlo_output_index_ = NULL;
  ::memset(&lmhlo_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lmhlo_must_alias_) -
      reinterpret_cast<char*>(&lmhlo_params_)) + sizeof(lmhlo_must_alias_));
  _internal_metadata_.Clear();
}

bool EntryFunctionAttributes_BufferParameterAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 lmhlo_params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lmhlo_params_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.EntryFunctionAttributes.ShapeIndex lmhlo_param_shape_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lmhlo_param_shape_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lmhlo_constant_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lmhlo_constant_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lmhlo_constant_name().data(), static_cast<int>(this->lmhlo_constant_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.EntryFunctionAttributes.BufferParameterAttributes.lmhlo_constant_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool lmhlo_must_alias = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lmhlo_must_alias_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.EntryFunctionAttributes.ShapeIndex lmhlo_output_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lmhlo_output_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool lmhlo_params_present = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lmhlo_params_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.EntryFunctionAttributes.BufferParameterAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.EntryFunctionAttributes.BufferParameterAttributes)
  return false;
#undef DO_
}

void EntryFunctionAttributes_BufferParameterAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 lmhlo_params = 1;
  if (this->lmhlo_params() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->lmhlo_params(), output);
  }

  // .xla.EntryFunctionAttributes.ShapeIndex lmhlo_param_shape_index = 2;
  if (this->has_lmhlo_param_shape_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_lmhlo_param_shape_index(), output);
  }

  // string lmhlo_constant_name = 3;
  if (this->lmhlo_constant_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lmhlo_constant_name().data(), static_cast<int>(this->lmhlo_constant_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.EntryFunctionAttributes.BufferParameterAttributes.lmhlo_constant_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->lmhlo_constant_name(), output);
  }

  // bool lmhlo_must_alias = 4;
  if (this->lmhlo_must_alias() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->lmhlo_must_alias(), output);
  }

  // .xla.EntryFunctionAttributes.ShapeIndex lmhlo_output_index = 5;
  if (this->has_lmhlo_output_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_lmhlo_output_index(), output);
  }

  // bool lmhlo_params_present = 6;
  if (this->lmhlo_params_present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->lmhlo_params_present(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.EntryFunctionAttributes.BufferParameterAttributes)
}

::google::protobuf::uint8* EntryFunctionAttributes_BufferParameterAttributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 lmhlo_params = 1;
  if (this->lmhlo_params() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->lmhlo_params(), target);
  }

  // .xla.EntryFunctionAttributes.ShapeIndex lmhlo_param_shape_index = 2;
  if (this->has_lmhlo_param_shape_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_lmhlo_param_shape_index(), deterministic, target);
  }

  // string lmhlo_constant_name = 3;
  if (this->lmhlo_constant_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lmhlo_constant_name().data(), static_cast<int>(this->lmhlo_constant_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.EntryFunctionAttributes.BufferParameterAttributes.lmhlo_constant_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->lmhlo_constant_name(), target);
  }

  // bool lmhlo_must_alias = 4;
  if (this->lmhlo_must_alias() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->lmhlo_must_alias(), target);
  }

  // .xla.EntryFunctionAttributes.ShapeIndex lmhlo_output_index = 5;
  if (this->has_lmhlo_output_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_lmhlo_output_index(), deterministic, target);
  }

  // bool lmhlo_params_present = 6;
  if (this->lmhlo_params_present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->lmhlo_params_present(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.EntryFunctionAttributes.BufferParameterAttributes)
  return target;
}

size_t EntryFunctionAttributes_BufferParameterAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string lmhlo_constant_name = 3;
  if (this->lmhlo_constant_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lmhlo_constant_name());
  }

  // .xla.EntryFunctionAttributes.ShapeIndex lmhlo_param_shape_index = 2;
  if (this->has_lmhlo_param_shape_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lmhlo_param_shape_index_);
  }

  // .xla.EntryFunctionAttributes.ShapeIndex lmhlo_output_index = 5;
  if (this->has_lmhlo_output_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lmhlo_output_index_);
  }

  // int64 lmhlo_params = 1;
  if (this->lmhlo_params() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lmhlo_params());
  }

  // bool lmhlo_params_present = 6;
  if (this->lmhlo_params_present() != 0) {
    total_size += 1 + 1;
  }

  // bool lmhlo_must_alias = 4;
  if (this->lmhlo_must_alias() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntryFunctionAttributes_BufferParameterAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const EntryFunctionAttributes_BufferParameterAttributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntryFunctionAttributes_BufferParameterAttributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.EntryFunctionAttributes.BufferParameterAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.EntryFunctionAttributes.BufferParameterAttributes)
    MergeFrom(*source);
  }
}

void EntryFunctionAttributes_BufferParameterAttributes::MergeFrom(const EntryFunctionAttributes_BufferParameterAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lmhlo_constant_name().size() > 0) {
    set_lmhlo_constant_name(from.lmhlo_constant_name());
  }
  if (from.has_lmhlo_param_shape_index()) {
    mutable_lmhlo_param_shape_index()->::xla::EntryFunctionAttributes_ShapeIndex::MergeFrom(from.lmhlo_param_shape_index());
  }
  if (from.has_lmhlo_output_index()) {
    mutable_lmhlo_output_index()->::xla::EntryFunctionAttributes_ShapeIndex::MergeFrom(from.lmhlo_output_index());
  }
  if (from.lmhlo_params() != 0) {
    set_lmhlo_params(from.lmhlo_params());
  }
  if (from.lmhlo_params_present() != 0) {
    set_lmhlo_params_present(from.lmhlo_params_present());
  }
  if (from.lmhlo_must_alias() != 0) {
    set_lmhlo_must_alias(from.lmhlo_must_alias());
  }
}

void EntryFunctionAttributes_BufferParameterAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntryFunctionAttributes_BufferParameterAttributes::CopyFrom(const EntryFunctionAttributes_BufferParameterAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.EntryFunctionAttributes.BufferParameterAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntryFunctionAttributes_BufferParameterAttributes::IsInitialized() const {
  return true;
}

void EntryFunctionAttributes_BufferParameterAttributes::Swap(EntryFunctionAttributes_BufferParameterAttributes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EntryFunctionAttributes_BufferParameterAttributes* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EntryFunctionAttributes_BufferParameterAttributes::UnsafeArenaSwap(EntryFunctionAttributes_BufferParameterAttributes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EntryFunctionAttributes_BufferParameterAttributes::InternalSwap(EntryFunctionAttributes_BufferParameterAttributes* other) {
  using std::swap;
  lmhlo_constant_name_.Swap(&other->lmhlo_constant_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(lmhlo_param_shape_index_, other->lmhlo_param_shape_index_);
  swap(lmhlo_output_index_, other->lmhlo_output_index_);
  swap(lmhlo_params_, other->lmhlo_params_);
  swap(lmhlo_params_present_, other->lmhlo_params_present_);
  swap(lmhlo_must_alias_, other->lmhlo_must_alias_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntryFunctionAttributes_BufferParameterAttributes::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntryFunctionAttributes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntryFunctionAttributes::kBuffersFieldNumber;
const int EntryFunctionAttributes::kResultXlaShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntryFunctionAttributes::EntryFunctionAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.EntryFunctionAttributes)
}
EntryFunctionAttributes::EntryFunctionAttributes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  buffers_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.EntryFunctionAttributes)
}
EntryFunctionAttributes::EntryFunctionAttributes(const EntryFunctionAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      buffers_(from.buffers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_xla_shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result_xla_shape().size() > 0) {
    result_xla_shape_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_xla_shape(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:xla.EntryFunctionAttributes)
}

void EntryFunctionAttributes::SharedCtor() {
  result_xla_shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EntryFunctionAttributes::~EntryFunctionAttributes() {
  // @@protoc_insertion_point(destructor:xla.EntryFunctionAttributes)
  SharedDtor();
}

void EntryFunctionAttributes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  result_xla_shape_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntryFunctionAttributes::ArenaDtor(void* object) {
  EntryFunctionAttributes* _this = reinterpret_cast< EntryFunctionAttributes* >(object);
  (void)_this;
}
void EntryFunctionAttributes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EntryFunctionAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntryFunctionAttributes::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntryFunctionAttributes& EntryFunctionAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_EntryFunctionAttributes.base);
  return *internal_default_instance();
}


void EntryFunctionAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.EntryFunctionAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffers_.Clear();
  result_xla_shape_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool EntryFunctionAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.EntryFunctionAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.EntryFunctionAttributes.BufferParameterAttributes buffers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_buffers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result_xla_shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_xla_shape()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result_xla_shape().data(), static_cast<int>(this->result_xla_shape().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.EntryFunctionAttributes.result_xla_shape"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.EntryFunctionAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.EntryFunctionAttributes)
  return false;
#undef DO_
}

void EntryFunctionAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.EntryFunctionAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.EntryFunctionAttributes.BufferParameterAttributes buffers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->buffers(static_cast<int>(i)),
      output);
  }

  // string result_xla_shape = 2;
  if (this->result_xla_shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_xla_shape().data(), static_cast<int>(this->result_xla_shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.EntryFunctionAttributes.result_xla_shape");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result_xla_shape(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.EntryFunctionAttributes)
}

::google::protobuf::uint8* EntryFunctionAttributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.EntryFunctionAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.EntryFunctionAttributes.BufferParameterAttributes buffers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->buffers(static_cast<int>(i)), deterministic, target);
  }

  // string result_xla_shape = 2;
  if (this->result_xla_shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_xla_shape().data(), static_cast<int>(this->result_xla_shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.EntryFunctionAttributes.result_xla_shape");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result_xla_shape(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.EntryFunctionAttributes)
  return target;
}

size_t EntryFunctionAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.EntryFunctionAttributes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.EntryFunctionAttributes.BufferParameterAttributes buffers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->buffers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buffers(static_cast<int>(i)));
    }
  }

  // string result_xla_shape = 2;
  if (this->result_xla_shape().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result_xla_shape());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntryFunctionAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.EntryFunctionAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const EntryFunctionAttributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntryFunctionAttributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.EntryFunctionAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.EntryFunctionAttributes)
    MergeFrom(*source);
  }
}

void EntryFunctionAttributes::MergeFrom(const EntryFunctionAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.EntryFunctionAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffers_.MergeFrom(from.buffers_);
  if (from.result_xla_shape().size() > 0) {
    set_result_xla_shape(from.result_xla_shape());
  }
}

void EntryFunctionAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.EntryFunctionAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntryFunctionAttributes::CopyFrom(const EntryFunctionAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.EntryFunctionAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntryFunctionAttributes::IsInitialized() const {
  return true;
}

void EntryFunctionAttributes::Swap(EntryFunctionAttributes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EntryFunctionAttributes* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EntryFunctionAttributes::UnsafeArenaSwap(EntryFunctionAttributes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EntryFunctionAttributes::InternalSwap(EntryFunctionAttributes* other) {
  using std::swap;
  CastToBase(&buffers_)->InternalSwap(CastToBase(&other->buffers_));
  result_xla_shape_.Swap(&other->result_xla_shape_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntryFunctionAttributes::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GpuBefExecutableProto::InitAsDefaultInstance() {
  ::xla::_GpuBefExecutableProto_default_instance_._instance.get_mutable()->hlo_module_proto_ = const_cast< ::xla::HloModuleProto*>(
      ::xla::HloModuleProto::internal_default_instance());
  ::xla::_GpuBefExecutableProto_default_instance_._instance.get_mutable()->entry_func_attrs_ = const_cast< ::xla::EntryFunctionAttributes*>(
      ::xla::EntryFunctionAttributes::internal_default_instance());
}
void GpuBefExecutableProto::unsafe_arena_set_allocated_hlo_module_proto(
    ::xla::HloModuleProto* hlo_module_proto) {
  if (GetArenaNoVirtual() == NULL) {
    delete hlo_module_proto_;
  }
  hlo_module_proto_ = hlo_module_proto;
  if (hlo_module_proto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.GpuBefExecutableProto.hlo_module_proto)
}
void GpuBefExecutableProto::unsafe_arena_set_allocated_entry_func_attrs(
    ::xla::EntryFunctionAttributes* entry_func_attrs) {
  if (GetArenaNoVirtual() == NULL) {
    delete entry_func_attrs_;
  }
  entry_func_attrs_ = entry_func_attrs;
  if (entry_func_attrs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.GpuBefExecutableProto.entry_func_attrs)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GpuBefExecutableProto::kHloModuleProtoFieldNumber;
const int GpuBefExecutableProto::kBefFieldNumber;
const int GpuBefExecutableProto::kEntryFuncAttrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpuBefExecutableProto::GpuBefExecutableProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_GpuBefExecutableProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.GpuBefExecutableProto)
}
GpuBefExecutableProto::GpuBefExecutableProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_GpuBefExecutableProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.GpuBefExecutableProto)
}
GpuBefExecutableProto::GpuBefExecutableProto(const GpuBefExecutableProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bef_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bef().size() > 0) {
    bef_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bef(),
      GetArenaNoVirtual());
  }
  if (from.has_hlo_module_proto()) {
    hlo_module_proto_ = new ::xla::HloModuleProto(*from.hlo_module_proto_);
  } else {
    hlo_module_proto_ = NULL;
  }
  if (from.has_entry_func_attrs()) {
    entry_func_attrs_ = new ::xla::EntryFunctionAttributes(*from.entry_func_attrs_);
  } else {
    entry_func_attrs_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.GpuBefExecutableProto)
}

void GpuBefExecutableProto::SharedCtor() {
  bef_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hlo_module_proto_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entry_func_attrs_) -
      reinterpret_cast<char*>(&hlo_module_proto_)) + sizeof(entry_func_attrs_));
}

GpuBefExecutableProto::~GpuBefExecutableProto() {
  // @@protoc_insertion_point(destructor:xla.GpuBefExecutableProto)
  SharedDtor();
}

void GpuBefExecutableProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  bef_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hlo_module_proto_;
  if (this != internal_default_instance()) delete entry_func_attrs_;
}

void GpuBefExecutableProto::ArenaDtor(void* object) {
  GpuBefExecutableProto* _this = reinterpret_cast< GpuBefExecutableProto* >(object);
  (void)_this;
}
void GpuBefExecutableProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GpuBefExecutableProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GpuBefExecutableProto::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GpuBefExecutableProto& GpuBefExecutableProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_GpuBefExecutableProto.base);
  return *internal_default_instance();
}


void GpuBefExecutableProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.GpuBefExecutableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bef_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && hlo_module_proto_ != NULL) {
    delete hlo_module_proto_;
  }
  hlo_module_proto_ = NULL;
  if (GetArenaNoVirtual() == NULL && entry_func_attrs_ != NULL) {
    delete entry_func_attrs_;
  }
  entry_func_attrs_ = NULL;
  _internal_metadata_.Clear();
}

bool GpuBefExecutableProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.GpuBefExecutableProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloModuleProto hlo_module_proto = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hlo_module_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bef = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bef()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.EntryFunctionAttributes entry_func_attrs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entry_func_attrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.GpuBefExecutableProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.GpuBefExecutableProto)
  return false;
#undef DO_
}

void GpuBefExecutableProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.GpuBefExecutableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto hlo_module_proto = 1;
  if (this->has_hlo_module_proto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_hlo_module_proto(), output);
  }

  // bytes bef = 2;
  if (this->bef().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->bef(), output);
  }

  // .xla.EntryFunctionAttributes entry_func_attrs = 3;
  if (this->has_entry_func_attrs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_entry_func_attrs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.GpuBefExecutableProto)
}

::google::protobuf::uint8* GpuBefExecutableProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.GpuBefExecutableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto hlo_module_proto = 1;
  if (this->has_hlo_module_proto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_hlo_module_proto(), deterministic, target);
  }

  // bytes bef = 2;
  if (this->bef().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->bef(), target);
  }

  // .xla.EntryFunctionAttributes entry_func_attrs = 3;
  if (this->has_entry_func_attrs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_entry_func_attrs(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.GpuBefExecutableProto)
  return target;
}

size_t GpuBefExecutableProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.GpuBefExecutableProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bef = 2;
  if (this->bef().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bef());
  }

  // .xla.HloModuleProto hlo_module_proto = 1;
  if (this->has_hlo_module_proto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hlo_module_proto_);
  }

  // .xla.EntryFunctionAttributes entry_func_attrs = 3;
  if (this->has_entry_func_attrs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entry_func_attrs_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuBefExecutableProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.GpuBefExecutableProto)
  GOOGLE_DCHECK_NE(&from, this);
  const GpuBefExecutableProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GpuBefExecutableProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.GpuBefExecutableProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.GpuBefExecutableProto)
    MergeFrom(*source);
  }
}

void GpuBefExecutableProto::MergeFrom(const GpuBefExecutableProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.GpuBefExecutableProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bef().size() > 0) {
    set_bef(from.bef());
  }
  if (from.has_hlo_module_proto()) {
    mutable_hlo_module_proto()->::xla::HloModuleProto::MergeFrom(from.hlo_module_proto());
  }
  if (from.has_entry_func_attrs()) {
    mutable_entry_func_attrs()->::xla::EntryFunctionAttributes::MergeFrom(from.entry_func_attrs());
  }
}

void GpuBefExecutableProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.GpuBefExecutableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GpuBefExecutableProto::CopyFrom(const GpuBefExecutableProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.GpuBefExecutableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuBefExecutableProto::IsInitialized() const {
  return true;
}

void GpuBefExecutableProto::Swap(GpuBefExecutableProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GpuBefExecutableProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GpuBefExecutableProto::UnsafeArenaSwap(GpuBefExecutableProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GpuBefExecutableProto::InternalSwap(GpuBefExecutableProto* other) {
  using std::swap;
  bef_.Swap(&other->bef_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hlo_module_proto_, other->hlo_module_proto_);
  swap(entry_func_attrs_, other->entry_func_attrs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GpuBefExecutableProto::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace xla
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloInstructionProto_SliceDimensions* Arena::CreateMaybeMessage< ::xla::HloInstructionProto_SliceDimensions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloInstructionProto_SliceDimensions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloInstructionProto* Arena::CreateMaybeMessage< ::xla::HloInstructionProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloInstructionProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloComputationProto* Arena::CreateMaybeMessage< ::xla::HloComputationProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloComputationProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloScheduleProto_InstructionSequence* Arena::CreateMaybeMessage< ::xla::HloScheduleProto_InstructionSequence >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloScheduleProto_InstructionSequence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloScheduleProto_SequencesEntry_DoNotUse* Arena::CreateMaybeMessage< ::xla::HloScheduleProto_SequencesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloScheduleProto_SequencesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloScheduleProto* Arena::CreateMaybeMessage< ::xla::HloScheduleProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloScheduleProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloInputOutputAliasProto_AliasEntryProto* Arena::CreateMaybeMessage< ::xla::HloInputOutputAliasProto_AliasEntryProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloInputOutputAliasProto_AliasEntryProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloInputOutputAliasProto* Arena::CreateMaybeMessage< ::xla::HloInputOutputAliasProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloInputOutputAliasProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DynamicParameterBindingProto_Binding* Arena::CreateMaybeMessage< ::xla::DynamicParameterBindingProto_Binding >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::DynamicParameterBindingProto_Binding >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DynamicParameterBindingProto* Arena::CreateMaybeMessage< ::xla::DynamicParameterBindingProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::DynamicParameterBindingProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::CrossProgramPrefetch* Arena::CreateMaybeMessage< ::xla::CrossProgramPrefetch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::CrossProgramPrefetch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloModuleProto_ProfileInfo* Arena::CreateMaybeMessage< ::xla::HloModuleProto_ProfileInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloModuleProto_ProfileInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloModuleProto* Arena::CreateMaybeMessage< ::xla::HloModuleProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloModuleProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::LogicalBufferProto_Location* Arena::CreateMaybeMessage< ::xla::LogicalBufferProto_Location >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::LogicalBufferProto_Location >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::LogicalBufferProto* Arena::CreateMaybeMessage< ::xla::LogicalBufferProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::LogicalBufferProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::BufferAllocationProto_Assigned* Arena::CreateMaybeMessage< ::xla::BufferAllocationProto_Assigned >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::BufferAllocationProto_Assigned >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::BufferAllocationProto* Arena::CreateMaybeMessage< ::xla::BufferAllocationProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::BufferAllocationProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HeapSimulatorTrace_Event* Arena::CreateMaybeMessage< ::xla::HeapSimulatorTrace_Event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HeapSimulatorTrace_Event >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HeapSimulatorTrace* Arena::CreateMaybeMessage< ::xla::HeapSimulatorTrace >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HeapSimulatorTrace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloModuleGroupProto* Arena::CreateMaybeMessage< ::xla::HloModuleGroupProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloModuleGroupProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::BufferAssignmentProto_BufferAlias* Arena::CreateMaybeMessage< ::xla::BufferAssignmentProto_BufferAlias >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::BufferAssignmentProto_BufferAlias >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::BufferAssignmentProto* Arena::CreateMaybeMessage< ::xla::BufferAssignmentProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::BufferAssignmentProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloProto* Arena::CreateMaybeMessage< ::xla::HloProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloSnapshot* Arena::CreateMaybeMessage< ::xla::HloSnapshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloSnapshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloModuleMetadataProto* Arena::CreateMaybeMessage< ::xla::HloModuleMetadataProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloModuleMetadataProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloPassMetadata* Arena::CreateMaybeMessage< ::xla::HloPassMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloPassMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::EntryFunctionAttributes_ShapeIndex* Arena::CreateMaybeMessage< ::xla::EntryFunctionAttributes_ShapeIndex >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::EntryFunctionAttributes_ShapeIndex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::EntryFunctionAttributes_BufferParameterAttributes* Arena::CreateMaybeMessage< ::xla::EntryFunctionAttributes_BufferParameterAttributes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::EntryFunctionAttributes_BufferParameterAttributes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::EntryFunctionAttributes* Arena::CreateMaybeMessage< ::xla::EntryFunctionAttributes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::EntryFunctionAttributes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::GpuBefExecutableProto* Arena::CreateMaybeMessage< ::xla::GpuBefExecutableProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::GpuBefExecutableProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
