// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/service/hlo_execution_profile_data.proto

#include "tensorflow/compiler/xla/service/hlo_execution_profile_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fprofile_5fprinter_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fprofile_5fprinter_5fdata_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_HloProfilePrinterData;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fprofile_5fprinter_5fdata_2eproto
namespace xla {
class HloExecutionProfileDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloExecutionProfileData>
      _instance;
} _HloExecutionProfileData_default_instance_;
}  // namespace xla
namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto {
static void InitDefaultsHloExecutionProfileData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloExecutionProfileData_default_instance_;
    new (ptr) ::xla::HloExecutionProfileData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloExecutionProfileData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HloExecutionProfileData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHloExecutionProfileData}, {
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fprofile_5fprinter_5fdata_2eproto::scc_info_HloProfilePrinterData.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HloExecutionProfileData.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloExecutionProfileData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloExecutionProfileData, printer_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloExecutionProfileData, profile_counters_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xla::HloExecutionProfileData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloExecutionProfileData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/compiler/xla/service/hlo_execution_profile_data.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n@tensorflow/compiler/xla/service/hlo_ex"
      "ecution_profile_data.proto\022\003xla\032>tensorf"
      "low/compiler/xla/service/hlo_profile_pri"
      "nter_data.proto\"e\n\027HloExecutionProfileDa"
      "ta\0220\n\014printer_data\030\001 \001(\0132\032.xla.HloProfil"
      "ePrinterData\022\030\n\020profile_counters\030\002 \003(\003B\003"
      "\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 251);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/compiler/xla/service/hlo_execution_profile_data.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fprofile_5fprinter_5fdata_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto
namespace xla {

// ===================================================================

void HloExecutionProfileData::InitAsDefaultInstance() {
  ::xla::_HloExecutionProfileData_default_instance_._instance.get_mutable()->printer_data_ = const_cast< ::xla::HloProfilePrinterData*>(
      ::xla::HloProfilePrinterData::internal_default_instance());
}
void HloExecutionProfileData::unsafe_arena_set_allocated_printer_data(
    ::xla::HloProfilePrinterData* printer_data) {
  if (GetArenaNoVirtual() == NULL) {
    delete printer_data_;
  }
  printer_data_ = printer_data;
  if (printer_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.HloExecutionProfileData.printer_data)
}
void HloExecutionProfileData::clear_printer_data() {
  if (GetArenaNoVirtual() == NULL && printer_data_ != NULL) {
    delete printer_data_;
  }
  printer_data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloExecutionProfileData::kPrinterDataFieldNumber;
const int HloExecutionProfileData::kProfileCountersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloExecutionProfileData::HloExecutionProfileData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::scc_info_HloExecutionProfileData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloExecutionProfileData)
}
HloExecutionProfileData::HloExecutionProfileData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  profile_counters_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::scc_info_HloExecutionProfileData.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloExecutionProfileData)
}
HloExecutionProfileData::HloExecutionProfileData(const HloExecutionProfileData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      profile_counters_(from.profile_counters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_printer_data()) {
    printer_data_ = new ::xla::HloProfilePrinterData(*from.printer_data_);
  } else {
    printer_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.HloExecutionProfileData)
}

void HloExecutionProfileData::SharedCtor() {
  printer_data_ = NULL;
}

HloExecutionProfileData::~HloExecutionProfileData() {
  // @@protoc_insertion_point(destructor:xla.HloExecutionProfileData)
  SharedDtor();
}

void HloExecutionProfileData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete printer_data_;
}

void HloExecutionProfileData::ArenaDtor(void* object) {
  HloExecutionProfileData* _this = reinterpret_cast< HloExecutionProfileData* >(object);
  (void)_this;
}
void HloExecutionProfileData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HloExecutionProfileData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloExecutionProfileData::descriptor() {
  ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloExecutionProfileData& HloExecutionProfileData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::scc_info_HloExecutionProfileData.base);
  return *internal_default_instance();
}


void HloExecutionProfileData::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloExecutionProfileData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  profile_counters_.Clear();
  if (GetArenaNoVirtual() == NULL && printer_data_ != NULL) {
    delete printer_data_;
  }
  printer_data_ = NULL;
  _internal_metadata_.Clear();
}

bool HloExecutionProfileData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloExecutionProfileData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloProfilePrinterData printer_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_printer_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 profile_counters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_profile_counters())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_profile_counters())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloExecutionProfileData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloExecutionProfileData)
  return false;
#undef DO_
}

void HloExecutionProfileData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloExecutionProfileData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloProfilePrinterData printer_data = 1;
  if (this->has_printer_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_printer_data(), output);
  }

  // repeated int64 profile_counters = 2;
  if (this->profile_counters_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _profile_counters_cached_byte_size_));
  }
  for (int i = 0, n = this->profile_counters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->profile_counters(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloExecutionProfileData)
}

::google::protobuf::uint8* HloExecutionProfileData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloExecutionProfileData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloProfilePrinterData printer_data = 1;
  if (this->has_printer_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_printer_data(), deterministic, target);
  }

  // repeated int64 profile_counters = 2;
  if (this->profile_counters_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _profile_counters_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->profile_counters_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloExecutionProfileData)
  return target;
}

size_t HloExecutionProfileData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloExecutionProfileData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 profile_counters = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->profile_counters_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _profile_counters_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .xla.HloProfilePrinterData printer_data = 1;
  if (this->has_printer_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *printer_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloExecutionProfileData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloExecutionProfileData)
  GOOGLE_DCHECK_NE(&from, this);
  const HloExecutionProfileData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloExecutionProfileData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloExecutionProfileData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloExecutionProfileData)
    MergeFrom(*source);
  }
}

void HloExecutionProfileData::MergeFrom(const HloExecutionProfileData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloExecutionProfileData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  profile_counters_.MergeFrom(from.profile_counters_);
  if (from.has_printer_data()) {
    mutable_printer_data()->::xla::HloProfilePrinterData::MergeFrom(from.printer_data());
  }
}

void HloExecutionProfileData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloExecutionProfileData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloExecutionProfileData::CopyFrom(const HloExecutionProfileData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloExecutionProfileData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloExecutionProfileData::IsInitialized() const {
  return true;
}

void HloExecutionProfileData::Swap(HloExecutionProfileData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HloExecutionProfileData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HloExecutionProfileData::UnsafeArenaSwap(HloExecutionProfileData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HloExecutionProfileData::InternalSwap(HloExecutionProfileData* other) {
  using std::swap;
  profile_counters_.InternalSwap(&other->profile_counters_);
  swap(printer_data_, other->printer_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloExecutionProfileData::GetMetadata() const {
  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace xla
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloExecutionProfileData* Arena::CreateMaybeMessage< ::xla::HloExecutionProfileData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloExecutionProfileData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
