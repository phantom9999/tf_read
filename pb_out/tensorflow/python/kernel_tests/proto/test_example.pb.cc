// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/python/kernel_tests/proto/test_example.proto

#include "tensorflow/python/kernel_tests/proto/test_example.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InnerMessageValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PrimitiveValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RepeatedMessageValue_NestedMessageValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FieldSpec;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MiddleMessageValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TestValue;
}  // namespace protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto
namespace tensorflow {
namespace contrib {
namespace proto {
class TestCaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestCase>
      _instance;
} _TestCase_default_instance_;
class FieldSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldSpec>
      _instance;
} _FieldSpec_default_instance_;
class TestValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestValue>
      _instance;
} _TestValue_default_instance_;
class PackedTestValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackedTestValue>
      _instance;
} _PackedTestValue_default_instance_;
class PrimitiveValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrimitiveValue>
      _instance;
} _PrimitiveValue_default_instance_;
class ExtraFieldsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtraFields>
      _instance;
} _ExtraFields_default_instance_;
class InnerMessageValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InnerMessageValue>
      _instance;
} _InnerMessageValue_default_instance_;
class MiddleMessageValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MiddleMessageValue>
      _instance;
} _MiddleMessageValue_default_instance_;
class MessageValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageValue>
      _instance;
} _MessageValue_default_instance_;
class RepeatedMessageValue_NestedMessageValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RepeatedMessageValue_NestedMessageValue>
      _instance;
} _RepeatedMessageValue_NestedMessageValue_default_instance_;
class RepeatedMessageValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RepeatedMessageValue>
      _instance;
} _RepeatedMessageValue_default_instance_;
}  // namespace proto
}  // namespace contrib
}  // namespace tensorflow
namespace protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto {
static void InitDefaultsTestCase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_TestCase_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::TestCase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::TestCase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TestCase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTestCase}, {
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_TestValue.base,
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_FieldSpec.base,}};

static void InitDefaultsFieldSpec() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_FieldSpec_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::FieldSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::FieldSpec::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FieldSpec =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFieldSpec}, {
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_TestValue.base,}};

static void InitDefaultsTestValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.DefaultConstruct();
  *::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get_mutable() = ::std::string("a", 1);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get_mutable());
  ::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.DefaultConstruct();
  *::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get_mutable() = ::std::string("a longer default string", 23);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get_mutable());
  {
    void* ptr = &::tensorflow::contrib::proto::_TestValue_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::TestValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::TestValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestValue}, {
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_PrimitiveValue.base,}};

static void InitDefaultsPackedTestValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.DefaultConstruct();
  *::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get_mutable() = ::std::string("a", 1);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get_mutable());
  ::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.DefaultConstruct();
  *::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get_mutable() = ::std::string("a longer default string", 23);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get_mutable());
  {
    void* ptr = &::tensorflow::contrib::proto::_PackedTestValue_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::PackedTestValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::PackedTestValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PackedTestValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPackedTestValue}, {
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_PrimitiveValue.base,}};

static void InitDefaultsPrimitiveValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_PrimitiveValue_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::PrimitiveValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::PrimitiveValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrimitiveValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrimitiveValue}, {}};

static void InitDefaultsExtraFields() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_ExtraFields_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::ExtraFields();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::ExtraFields::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExtraFields =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExtraFields}, {}};

static void InitDefaultsInnerMessageValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_InnerMessageValue_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::InnerMessageValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::InnerMessageValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InnerMessageValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInnerMessageValue}, {}};

static void InitDefaultsMiddleMessageValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_MiddleMessageValue_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::MiddleMessageValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::MiddleMessageValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MiddleMessageValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMiddleMessageValue}, {
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_InnerMessageValue.base,}};

static void InitDefaultsMessageValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_MessageValue_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::MessageValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::MessageValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MessageValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessageValue}, {
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_MiddleMessageValue.base,}};

static void InitDefaultsRepeatedMessageValue_NestedMessageValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_RepeatedMessageValue_NestedMessageValue_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RepeatedMessageValue_NestedMessageValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRepeatedMessageValue_NestedMessageValue}, {}};

static void InitDefaultsRepeatedMessageValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::contrib::proto::_RepeatedMessageValue_default_instance_;
    new (ptr) ::tensorflow::contrib::proto::RepeatedMessageValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::contrib::proto::RepeatedMessageValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RepeatedMessageValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRepeatedMessageValue}, {
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_RepeatedMessageValue_NestedMessageValue.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestCase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldSpec.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PackedTestValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrimitiveValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExtraFields.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InnerMessageValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MiddleMessageValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RepeatedMessageValue_NestedMessageValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RepeatedMessageValue.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestCase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestCase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestCase, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestCase, shapes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestCase, sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestCase, fields_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::FieldSpec, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::FieldSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::FieldSpec, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::FieldSpec, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::FieldSpec, value_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, _internal_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, _extensions_),
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, double_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, float_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, int64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, uint64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, int32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, fixed64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, fixed32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, bool_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, bytes_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, uint32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, sfixed32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, sfixed64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, sint32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, sint64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, message_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, enum_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, double_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, float_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, int64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, uint64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, int32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, fixed64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, fixed32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, bool_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, string_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, bytes_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, uint32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, sfixed32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, sfixed64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, sint32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, sint64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::TestValue, enum_value_with_default_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  2,
  4,
  3,
  6,
  5,
  7,
  8,
  9,
  0,
  1,
  10,
  11,
  12,
  14,
  13,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, double_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, float_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, int64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, uint64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, int32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, fixed64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, fixed32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, bool_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, bytes_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, uint32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, sfixed32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, sfixed64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, sint32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, sint64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, message_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, enum_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, double_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, float_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, int64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, uint64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, int32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, fixed64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, fixed32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, bool_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, string_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, bytes_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, uint32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, sfixed32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, sfixed64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, sint32_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, sint64_value_with_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PackedTestValue, enum_value_with_default_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  2,
  4,
  3,
  6,
  5,
  7,
  8,
  9,
  0,
  1,
  10,
  11,
  12,
  14,
  13,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, double_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, float_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, int64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, uint64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, int32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, fixed64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, fixed32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, bool_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, bytes_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, uint32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, sfixed32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, sfixed64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, sint32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::PrimitiveValue, sint64_value_),
  2,
  4,
  3,
  6,
  5,
  7,
  8,
  9,
  0,
  1,
  10,
  11,
  12,
  13,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::ExtraFields, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::ExtraFields, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::ExtraFields, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::ExtraFields, bool_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::InnerMessageValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::InnerMessageValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::InnerMessageValue, float_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::InnerMessageValue, bytes_values_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MiddleMessageValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MiddleMessageValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MiddleMessageValue, int32_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MiddleMessageValue, message_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MiddleMessageValue, uint32_value_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MessageValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MessageValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MessageValue, double_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::MessageValue, message_value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue, float_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue, bytes_values_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::RepeatedMessageValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::RepeatedMessageValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::contrib::proto::RepeatedMessageValue, message_values_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::tensorflow::contrib::proto::TestCase)},
  { 13, 21, sizeof(::tensorflow::contrib::proto::FieldSpec)},
  { 24, 62, sizeof(::tensorflow::contrib::proto::TestValue)},
  { 95, 133, sizeof(::tensorflow::contrib::proto::PackedTestValue)},
  { 166, 186, sizeof(::tensorflow::contrib::proto::PrimitiveValue)},
  { 201, 208, sizeof(::tensorflow::contrib::proto::ExtraFields)},
  { 210, 217, sizeof(::tensorflow::contrib::proto::InnerMessageValue)},
  { 219, 227, sizeof(::tensorflow::contrib::proto::MiddleMessageValue)},
  { 230, 237, sizeof(::tensorflow::contrib::proto::MessageValue)},
  { 239, 246, sizeof(::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue)},
  { 248, 254, sizeof(::tensorflow::contrib::proto::RepeatedMessageValue)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_TestCase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_FieldSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_TestValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_PackedTestValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_PrimitiveValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_ExtraFields_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_InnerMessageValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_MiddleMessageValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_MessageValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_RepeatedMessageValue_NestedMessageValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::contrib::proto::_RepeatedMessageValue_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/python/kernel_tests/proto/test_example.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n7tensorflow/python/kernel_tests/proto/t"
      "est_example.proto\022\030tensorflow.contrib.pr"
      "oto\032%tensorflow/core/framework/types.pro"
      "to\"\223\001\n\010TestCase\0223\n\006values\030\001 \003(\0132#.tensor"
      "flow.contrib.proto.TestValue\022\016\n\006shapes\030\002"
      " \003(\005\022\r\n\005sizes\030\003 \003(\005\0223\n\006fields\030\004 \003(\0132#.te"
      "nsorflow.contrib.proto.FieldSpec\"r\n\tFiel"
      "dSpec\022\014\n\004name\030\001 \001(\t\022#\n\005dtype\030\002 \001(\0162\024.ten"
      "sorflow.DataType\0222\n\005value\030\003 \001(\0132#.tensor"
      "flow.contrib.proto.TestValue\"\362\010\n\tTestVal"
      "ue\022\024\n\014double_value\030\001 \003(\001\022\023\n\013float_value\030"
      "\002 \003(\002\022\023\n\013int64_value\030\003 \003(\003\022\024\n\014uint64_val"
      "ue\030\004 \003(\004\022\023\n\013int32_value\030\005 \003(\005\022\025\n\rfixed64"
      "_value\030\006 \003(\006\022\025\n\rfixed32_value\030\007 \003(\007\022\022\n\nb"
      "ool_value\030\010 \003(\010\022\024\n\014string_value\030\t \003(\t\022\023\n"
      "\013bytes_value\030\014 \003(\014\022\024\n\014uint32_value\030\r \003(\r"
      "\022\026\n\016sfixed32_value\030\017 \003(\017\022\026\n\016sfixed64_val"
      "ue\030\020 \003(\020\022\024\n\014sint32_value\030\021 \003(\021\022\024\n\014sint64"
      "_value\030\022 \003(\022\022\?\n\rmessage_value\030\023 \003(\0132(.te"
      "nsorflow.contrib.proto.PrimitiveValue\0223\n"
      "\nenum_value\030# \003(\0162\037.tensorflow.contrib.p"
      "roto.Color\022$\n\031double_value_with_default\030"
      "\024 \001(\001:\0011\022#\n\030float_value_with_default\030\025 \001"
      "(\002:\0012\022#\n\030int64_value_with_default\030\026 \001(\003:"
      "\0013\022$\n\031uint64_value_with_default\030\027 \001(\004:\0014"
      "\022#\n\030int32_value_with_default\030\030 \001(\005:\0015\022%\n"
      "\032fixed64_value_with_default\030\031 \001(\006:\0016\022%\n\032"
      "fixed32_value_with_default\030\032 \001(\007:\0017\022%\n\027b"
      "ool_value_with_default\030\033 \001(\010:\004true\022$\n\031st"
      "ring_value_with_default\030\034 \001(\t:\001a\0229\n\030byte"
      "s_value_with_default\030\035 \001(\014:\027a longer def"
      "ault string\022$\n\031uint32_value_with_default"
      "\030\036 \001(\r:\0019\022\'\n\033sfixed32_value_with_default"
      "\030\037 \001(\017:\00210\022\'\n\033sfixed64_value_with_defaul"
      "t\030  \001(\020:\00211\022%\n\031sint32_value_with_default"
      "\030! \001(\021:\00212\022%\n\031sint64_value_with_default\030"
      "\" \001(\022:\00213\022G\n\027enum_value_with_default\030$ \001"
      "(\0162\037.tensorflow.contrib.proto.Color:\005GRE"
      "EN*\005\010d\020\310\001\"\245\t\n\017PackedTestValue\022\030\n\014double_"
      "value\030\001 \003(\001B\002\020\001\022\027\n\013float_value\030\002 \003(\002B\002\020\001"
      "\022\027\n\013int64_value\030\003 \003(\003B\002\020\001\022\030\n\014uint64_valu"
      "e\030\004 \003(\004B\002\020\001\022\027\n\013int32_value\030\005 \003(\005B\002\020\001\022\031\n\r"
      "fixed64_value\030\006 \003(\006B\002\020\001\022\031\n\rfixed32_value"
      "\030\007 \003(\007B\002\020\001\022\026\n\nbool_value\030\010 \003(\010B\002\020\001\022\024\n\014st"
      "ring_value\030\t \003(\t\022\023\n\013bytes_value\030\014 \003(\014\022\030\n"
      "\014uint32_value\030\r \003(\rB\002\020\001\022\032\n\016sfixed32_valu"
      "e\030\017 \003(\017B\002\020\001\022\032\n\016sfixed64_value\030\020 \003(\020B\002\020\001\022"
      "\030\n\014sint32_value\030\021 \003(\021B\002\020\001\022\030\n\014sint64_valu"
      "e\030\022 \003(\022B\002\020\001\022\?\n\rmessage_value\030\023 \003(\0132(.ten"
      "sorflow.contrib.proto.PrimitiveValue\0223\n\n"
      "enum_value\030# \003(\0162\037.tensorflow.contrib.pr"
      "oto.Color\022$\n\031double_value_with_default\030\024"
      " \001(\001:\0011\022#\n\030float_value_with_default\030\025 \001("
      "\002:\0012\022#\n\030int64_value_with_default\030\026 \001(\003:\001"
      "3\022$\n\031uint64_value_with_default\030\027 \001(\004:\0014\022"
      "#\n\030int32_value_with_default\030\030 \001(\005:\0015\022%\n\032"
      "fixed64_value_with_default\030\031 \001(\006:\0016\022%\n\032f"
      "ixed32_value_with_default\030\032 \001(\007:\0017\022%\n\027bo"
      "ol_value_with_default\030\033 \001(\010:\004true\022$\n\031str"
      "ing_value_with_default\030\034 \001(\t:\001a\0229\n\030bytes"
      "_value_with_default\030\035 \001(\014:\027a longer defa"
      "ult string\022$\n\031uint32_value_with_default\030"
      "\036 \001(\r:\0019\022\'\n\033sfixed32_value_with_default\030"
      "\037 \001(\017:\00210\022\'\n\033sfixed64_value_with_default"
      "\030  \001(\020:\00211\022%\n\031sint32_value_with_default\030"
      "! \001(\021:\00212\022%\n\031sint64_value_with_default\030\""
      " \001(\022:\00213\022G\n\027enum_value_with_default\030$ \001("
      "\0162\037.tensorflow.contrib.proto.Color:\005GREE"
      "N\"\332\002\n\016PrimitiveValue\022\024\n\014double_value\030\001 \001"
      "(\001\022\023\n\013float_value\030\002 \001(\002\022\023\n\013int64_value\030\003"
      " \001(\003\022\024\n\014uint64_value\030\004 \001(\004\022\023\n\013int32_valu"
      "e\030\005 \001(\005\022\025\n\rfixed64_value\030\006 \001(\006\022\025\n\rfixed3"
      "2_value\030\007 \001(\007\022\022\n\nbool_value\030\010 \001(\010\022\024\n\014str"
      "ing_value\030\t \001(\t\022\023\n\013bytes_value\030\014 \001(\014\022\024\n\014"
      "uint32_value\030\r \001(\r\022\026\n\016sfixed32_value\030\017 \001"
      "(\017\022\026\n\016sfixed64_value\030\020 \001(\020\022\024\n\014sint32_val"
      "ue\030\021 \001(\021\022\024\n\014sint64_value\030\022 \001(\022\"9\n\013ExtraF"
      "ields\022\025\n\014string_value\030\360\r \001(\t\022\023\n\nbool_val"
      "ue\030\361\r \001(\010\">\n\021InnerMessageValue\022\023\n\013float_"
      "value\030\002 \001(\002\022\024\n\014bytes_values\030\010 \003(\014\"\204\001\n\022Mi"
      "ddleMessageValue\022\024\n\014int32_values\030\005 \003(\005\022B"
      "\n\rmessage_value\030\013 \001(\0132+.tensorflow.contr"
      "ib.proto.InnerMessageValue\022\024\n\014uint32_val"
      "ue\030\r \001(\r\"i\n\014MessageValue\022\024\n\014double_value"
      "\030\001 \001(\001\022C\n\rmessage_value\030\013 \001(\0132,.tensorfl"
      "ow.contrib.proto.MiddleMessageValue\"\262\001\n\024"
      "RepeatedMessageValue\022Y\n\016message_values\030\013"
      " \003(\0132A.tensorflow.contrib.proto.Repeated"
      "MessageValue.NestedMessageValue\032\?\n\022Neste"
      "dMessageValue\022\023\n\013float_value\030\002 \001(\002\022\024\n\014by"
      "tes_values\030\010 \003(\014*U\n\005Color\022\007\n\003RED\020\000\022\n\n\006OR"
      "ANGE\020\001\022\n\n\006YELLOW\020\002\022\t\n\005GREEN\020\003\022\010\n\004BLUE\020\004\022"
      "\n\n\006INDIGO\020\005\022\n\n\006VIOLET\020\006:`\n\text_value\022#.t"
      "ensorflow.contrib.proto.TestValue\030d \003(\0132"
      "(.tensorflow.contrib.proto.PrimitiveValu"
      "e"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3801);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/python/kernel_tests/proto/test_example.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto
namespace tensorflow {
namespace contrib {
namespace proto {
const ::google::protobuf::EnumDescriptor* Color_descriptor() {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_enum_descriptors[0];
}
bool Color_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TestCase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestCase::kValuesFieldNumber;
const int TestCase::kShapesFieldNumber;
const int TestCase::kSizesFieldNumber;
const int TestCase::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestCase::TestCase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_TestCase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.TestCase)
}
TestCase::TestCase(const TestCase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      values_(from.values_),
      shapes_(from.shapes_),
      sizes_(from.sizes_),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.TestCase)
}

void TestCase::SharedCtor() {
}

TestCase::~TestCase() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.TestCase)
  SharedDtor();
}

void TestCase::SharedDtor() {
}

void TestCase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestCase::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestCase& TestCase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_TestCase.base);
  return *internal_default_instance();
}


void TestCase::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.TestCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  shapes_.Clear();
  sizes_.Clear();
  fields_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestCase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.TestCase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.contrib.proto.TestValue values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 shapes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_shapes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_shapes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 sizes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.contrib.proto.FieldSpec fields = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.TestCase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.TestCase)
  return false;
#undef DO_
}

void TestCase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.TestCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.contrib.proto.TestValue values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->values(static_cast<int>(i)),
      output);
  }

  // repeated int32 shapes = 2;
  for (int i = 0, n = this->shapes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->shapes(i), output);
  }

  // repeated int32 sizes = 3;
  for (int i = 0, n = this->sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->sizes(i), output);
  }

  // repeated .tensorflow.contrib.proto.FieldSpec fields = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->fields(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.TestCase)
}

::google::protobuf::uint8* TestCase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.TestCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.contrib.proto.TestValue values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 shapes = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->shapes_, target);

  // repeated int32 sizes = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->sizes_, target);

  // repeated .tensorflow.contrib.proto.FieldSpec fields = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.TestCase)
  return target;
}

size_t TestCase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.TestCase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tensorflow.contrib.proto.TestValue values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  // repeated int32 shapes = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->shapes_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->shapes_size());
    total_size += data_size;
  }

  // repeated int32 sizes = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->sizes_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->sizes_size());
    total_size += data_size;
  }

  // repeated .tensorflow.contrib.proto.FieldSpec fields = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestCase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.TestCase)
  GOOGLE_DCHECK_NE(&from, this);
  const TestCase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestCase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.TestCase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.TestCase)
    MergeFrom(*source);
  }
}

void TestCase::MergeFrom(const TestCase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.TestCase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  shapes_.MergeFrom(from.shapes_);
  sizes_.MergeFrom(from.sizes_);
  fields_.MergeFrom(from.fields_);
}

void TestCase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.TestCase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestCase::CopyFrom(const TestCase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.TestCase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestCase::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->values())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->fields())) return false;
  return true;
}

void TestCase::Swap(TestCase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestCase::InternalSwap(TestCase* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  shapes_.InternalSwap(&other->shapes_);
  sizes_.InternalSwap(&other->sizes_);
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestCase::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldSpec::InitAsDefaultInstance() {
  ::tensorflow::contrib::proto::_FieldSpec_default_instance_._instance.get_mutable()->value_ = const_cast< ::tensorflow::contrib::proto::TestValue*>(
      ::tensorflow::contrib::proto::TestValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldSpec::kNameFieldNumber;
const int FieldSpec::kDtypeFieldNumber;
const int FieldSpec::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldSpec::FieldSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_FieldSpec.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.FieldSpec)
}
FieldSpec::FieldSpec(const FieldSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_value()) {
    value_ = new ::tensorflow::contrib::proto::TestValue(*from.value_);
  } else {
    value_ = NULL;
  }
  dtype_ = from.dtype_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.FieldSpec)
}

void FieldSpec::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dtype_) -
      reinterpret_cast<char*>(&value_)) + sizeof(dtype_));
}

FieldSpec::~FieldSpec() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.FieldSpec)
  SharedDtor();
}

void FieldSpec::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void FieldSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldSpec::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldSpec& FieldSpec::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_FieldSpec.base);
  return *internal_default_instance();
}


void FieldSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.FieldSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->Clear();
    }
  }
  dtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FieldSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.FieldSpec)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tensorflow.contrib.proto.FieldSpec.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tensorflow.DataType dtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tensorflow::DataType_IsValid(value)) {
            set_dtype(static_cast< ::tensorflow::DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tensorflow.contrib.proto.TestValue value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.FieldSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.FieldSpec)
  return false;
#undef DO_
}

void FieldSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.FieldSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.FieldSpec.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .tensorflow.DataType dtype = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->dtype(), output);
  }

  // optional .tensorflow.contrib.proto.TestValue value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.FieldSpec)
}

::google::protobuf::uint8* FieldSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.FieldSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.FieldSpec.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .tensorflow.DataType dtype = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->dtype(), target);
  }

  // optional .tensorflow.contrib.proto.TestValue value = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.FieldSpec)
  return target;
}

size_t FieldSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.FieldSpec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .tensorflow.contrib.proto.TestValue value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_);
    }

    // optional .tensorflow.DataType dtype = 2;
    if (has_dtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.FieldSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.FieldSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.FieldSpec)
    MergeFrom(*source);
  }
}

void FieldSpec::MergeFrom(const FieldSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.FieldSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_value()->::tensorflow::contrib::proto::TestValue::MergeFrom(from.value());
    }
    if (cached_has_bits & 0x00000004u) {
      dtype_ = from.dtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FieldSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.FieldSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldSpec::CopyFrom(const FieldSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.FieldSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldSpec::IsInitialized() const {
  if (has_value()) {
    if (!this->value_->IsInitialized()) return false;
  }
  return true;
}

void FieldSpec::Swap(FieldSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldSpec::InternalSwap(FieldSpec* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(dtype_, other->dtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldSpec::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestValue::InitAsDefaultInstance() {
}
::google::protobuf::internal::ExplicitlyConstructed<::std::string> TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_;
::google::protobuf::internal::ExplicitlyConstructed<::std::string> TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestValue::kDoubleValueFieldNumber;
const int TestValue::kFloatValueFieldNumber;
const int TestValue::kInt64ValueFieldNumber;
const int TestValue::kUint64ValueFieldNumber;
const int TestValue::kInt32ValueFieldNumber;
const int TestValue::kFixed64ValueFieldNumber;
const int TestValue::kFixed32ValueFieldNumber;
const int TestValue::kBoolValueFieldNumber;
const int TestValue::kStringValueFieldNumber;
const int TestValue::kBytesValueFieldNumber;
const int TestValue::kUint32ValueFieldNumber;
const int TestValue::kSfixed32ValueFieldNumber;
const int TestValue::kSfixed64ValueFieldNumber;
const int TestValue::kSint32ValueFieldNumber;
const int TestValue::kSint64ValueFieldNumber;
const int TestValue::kMessageValueFieldNumber;
const int TestValue::kEnumValueFieldNumber;
const int TestValue::kDoubleValueWithDefaultFieldNumber;
const int TestValue::kFloatValueWithDefaultFieldNumber;
const int TestValue::kInt64ValueWithDefaultFieldNumber;
const int TestValue::kUint64ValueWithDefaultFieldNumber;
const int TestValue::kInt32ValueWithDefaultFieldNumber;
const int TestValue::kFixed64ValueWithDefaultFieldNumber;
const int TestValue::kFixed32ValueWithDefaultFieldNumber;
const int TestValue::kBoolValueWithDefaultFieldNumber;
const int TestValue::kStringValueWithDefaultFieldNumber;
const int TestValue::kBytesValueWithDefaultFieldNumber;
const int TestValue::kUint32ValueWithDefaultFieldNumber;
const int TestValue::kSfixed32ValueWithDefaultFieldNumber;
const int TestValue::kSfixed64ValueWithDefaultFieldNumber;
const int TestValue::kSint32ValueWithDefaultFieldNumber;
const int TestValue::kSint64ValueWithDefaultFieldNumber;
const int TestValue::kEnumValueWithDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestValue::TestValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_TestValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.TestValue)
}
TestValue::TestValue(const TestValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      double_value_(from.double_value_),
      float_value_(from.float_value_),
      int64_value_(from.int64_value_),
      uint64_value_(from.uint64_value_),
      int32_value_(from.int32_value_),
      fixed64_value_(from.fixed64_value_),
      fixed32_value_(from.fixed32_value_),
      bool_value_(from.bool_value_),
      string_value_(from.string_value_),
      bytes_value_(from.bytes_value_),
      uint32_value_(from.uint32_value_),
      sfixed32_value_(from.sfixed32_value_),
      sfixed64_value_(from.sfixed64_value_),
      sint32_value_(from.sint32_value_),
      sint64_value_(from.sint64_value_),
      message_value_(from.message_value_),
      enum_value_(from.enum_value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  string_value_with_default_.UnsafeSetDefault(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get());
  if (from.has_string_value_with_default()) {
    string_value_with_default_.AssignWithDefault(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get(), from.string_value_with_default_);
  }
  bytes_value_with_default_.UnsafeSetDefault(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get());
  if (from.has_bytes_value_with_default()) {
    bytes_value_with_default_.AssignWithDefault(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get(), from.bytes_value_with_default_);
  }
  ::memcpy(&double_value_with_default_, &from.double_value_with_default_,
    static_cast<size_t>(reinterpret_cast<char*>(&enum_value_with_default_) -
    reinterpret_cast<char*>(&double_value_with_default_)) + sizeof(enum_value_with_default_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.TestValue)
}

void TestValue::SharedCtor() {
  string_value_with_default_.UnsafeSetDefault(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get());
  bytes_value_with_default_.UnsafeSetDefault(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get());
  double_value_with_default_ = 1;
  int64_value_with_default_ = GOOGLE_LONGLONG(3);
  float_value_with_default_ = 2;
  int32_value_with_default_ = 5;
  uint64_value_with_default_ = GOOGLE_ULONGLONG(4);
  fixed64_value_with_default_ = GOOGLE_ULONGLONG(6);
  fixed32_value_with_default_ = 7u;
  bool_value_with_default_ = true;
  uint32_value_with_default_ = 9u;
  sfixed32_value_with_default_ = 10;
  sfixed64_value_with_default_ = GOOGLE_LONGLONG(11);
  sint64_value_with_default_ = GOOGLE_LONGLONG(13);
  sint32_value_with_default_ = 12;
  enum_value_with_default_ = 3;
}

TestValue::~TestValue() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.TestValue)
  SharedDtor();
}

void TestValue::SharedDtor() {
  string_value_with_default_.DestroyNoArena(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get());
  bytes_value_with_default_.DestroyNoArena(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get());
}

void TestValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestValue::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestValue& TestValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_TestValue.base);
  return *internal_default_instance();
}


void TestValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.TestValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  double_value_.Clear();
  float_value_.Clear();
  int64_value_.Clear();
  uint64_value_.Clear();
  int32_value_.Clear();
  fixed64_value_.Clear();
  fixed32_value_.Clear();
  bool_value_.Clear();
  string_value_.Clear();
  bytes_value_.Clear();
  uint32_value_.Clear();
  sfixed32_value_.Clear();
  sfixed64_value_.Clear();
  sint32_value_.Clear();
  sint64_value_.Clear();
  message_value_.Clear();
  enum_value_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      string_value_with_default_.UnsafeMutablePointer()->assign(*&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      bytes_value_with_default_.UnsafeMutablePointer()->assign(*&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get());
    }
    double_value_with_default_ = 1;
    int64_value_with_default_ = GOOGLE_LONGLONG(3);
    float_value_with_default_ = 2;
    int32_value_with_default_ = 5;
    uint64_value_with_default_ = GOOGLE_ULONGLONG(4);
    fixed64_value_with_default_ = GOOGLE_ULONGLONG(6);
  }
  if (cached_has_bits & 65280u) {
    fixed32_value_with_default_ = 7u;
    bool_value_with_default_ = true;
    uint32_value_with_default_ = 9u;
    sfixed32_value_with_default_ = 10;
    sfixed64_value_with_default_ = GOOGLE_LONGLONG(11);
    sint64_value_with_default_ = GOOGLE_LONGLONG(13);
    sint32_value_with_default_ = 12;
    enum_value_with_default_ = 3;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.TestValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double double_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_double_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float float_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_float_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_float_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 int64_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_int64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 uint64_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32u, input, this->mutable_uint64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uint64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 int32_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_int32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 fixed64_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 49u, input, this->mutable_fixed64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_fixed64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 fixed32_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 61u, input, this->mutable_fixed32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_fixed32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool bool_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 64u, input, this->mutable_bool_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bool_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string string_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value(this->string_value_size() - 1).data(),
            static_cast<int>(this->string_value(this->string_value_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tensorflow.contrib.proto.TestValue.string_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes bytes_value = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_bytes_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 uint32_value = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 104u, input, this->mutable_uint32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uint32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 sfixed32_value = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 125u, input, this->mutable_sfixed32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_sfixed32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 sfixed64_value = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 129u, input, this->mutable_sfixed64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_sfixed64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 sint32_value = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 136u, input, this->mutable_sint32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_sint32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 sint64_value = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 144u, input, this->mutable_sint64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_sint64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.contrib.proto.PrimitiveValue message_value = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_message_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double double_value_with_default = 20 [default = 1];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {
          set_has_double_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float float_value_with_default = 21 [default = 2];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {
          set_has_float_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 int64_value_with_default = 22 [default = 3];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_int64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uint64_value_with_default = 23 [default = 4];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_uint64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 int32_value_with_default = 24 [default = 5];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_int32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 fixed64_value_with_default = 25 [default = 6];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {
          set_has_fixed64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &fixed64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 fixed32_value_with_default = 26 [default = 7];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(213u /* 213 & 0xFF */)) {
          set_has_fixed32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &fixed32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value_with_default = 27 [default = true];
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_bool_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value_with_default = 28 [default = "a"];
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value_with_default()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value_with_default().data(), static_cast<int>(this->string_value_with_default().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tensorflow.contrib.proto.TestValue.string_value_with_default");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes_value_with_default = 29 [default = "a longer default string"];
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_value_with_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uint32_value_with_default = 30 [default = 9];
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_uint32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uint32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed32 sfixed32_value_with_default = 31 [default = 10];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(253u /* 253 & 0xFF */)) {
          set_has_sfixed32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &sfixed32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 sfixed64_value_with_default = 32 [default = 11];
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1u /* 257 & 0xFF */)) {
          set_has_sfixed64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &sfixed64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 sint32_value_with_default = 33 [default = 12];
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_sint32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sint32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 sint64_value_with_default = 34 [default = 13];
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          set_has_sint64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sint64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.contrib.proto.Color enum_value = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tensorflow::contrib::proto::Color_IsValid(value)) {
            add_enum_value(static_cast< ::tensorflow::contrib::proto::Color >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                35, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 35,
                 ::tensorflow::contrib::proto::Color_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_enum_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tensorflow.contrib.proto.Color enum_value_with_default = 36 [default = GREEN];
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tensorflow::contrib::proto::Color_IsValid(value)) {
            set_enum_value_with_default(static_cast< ::tensorflow::contrib::proto::Color >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                36, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        if ((800u <= tag && tag < 1600u)) {
          DO_(_extensions_.ParseField(tag, input,
              internal_default_instance(),
              _internal_metadata_.mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.TestValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.TestValue)
  return false;
#undef DO_
}

void TestValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.TestValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double double_value = 1;
  for (int i = 0, n = this->double_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->double_value(i), output);
  }

  // repeated float float_value = 2;
  for (int i = 0, n = this->float_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->float_value(i), output);
  }

  // repeated int64 int64_value = 3;
  for (int i = 0, n = this->int64_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->int64_value(i), output);
  }

  // repeated uint64 uint64_value = 4;
  for (int i = 0, n = this->uint64_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->uint64_value(i), output);
  }

  // repeated int32 int32_value = 5;
  for (int i = 0, n = this->int32_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->int32_value(i), output);
  }

  // repeated fixed64 fixed64_value = 6;
  for (int i = 0, n = this->fixed64_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      6, this->fixed64_value(i), output);
  }

  // repeated fixed32 fixed32_value = 7;
  for (int i = 0, n = this->fixed32_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      7, this->fixed32_value(i), output);
  }

  // repeated bool bool_value = 8;
  for (int i = 0, n = this->bool_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      8, this->bool_value(i), output);
  }

  // repeated string string_value = 9;
  for (int i = 0, n = this->string_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value(i).data(), static_cast<int>(this->string_value(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.TestValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->string_value(i), output);
  }

  // repeated bytes bytes_value = 12;
  for (int i = 0, n = this->bytes_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      12, this->bytes_value(i), output);
  }

  // repeated uint32 uint32_value = 13;
  for (int i = 0, n = this->uint32_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      13, this->uint32_value(i), output);
  }

  // repeated sfixed32 sfixed32_value = 15;
  for (int i = 0, n = this->sfixed32_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      15, this->sfixed32_value(i), output);
  }

  // repeated sfixed64 sfixed64_value = 16;
  for (int i = 0, n = this->sfixed64_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      16, this->sfixed64_value(i), output);
  }

  // repeated sint32 sint32_value = 17;
  for (int i = 0, n = this->sint32_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      17, this->sint32_value(i), output);
  }

  // repeated sint64 sint64_value = 18;
  for (int i = 0, n = this->sint64_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      18, this->sint64_value(i), output);
  }

  // repeated .tensorflow.contrib.proto.PrimitiveValue message_value = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->message_value(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional double double_value_with_default = 20 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->double_value_with_default(), output);
  }

  // optional float float_value_with_default = 21 [default = 2];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->float_value_with_default(), output);
  }

  // optional int64 int64_value_with_default = 22 [default = 3];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->int64_value_with_default(), output);
  }

  // optional uint64 uint64_value_with_default = 23 [default = 4];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(23, this->uint64_value_with_default(), output);
  }

  // optional int32 int32_value_with_default = 24 [default = 5];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->int32_value_with_default(), output);
  }

  // optional fixed64 fixed64_value_with_default = 25 [default = 6];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(25, this->fixed64_value_with_default(), output);
  }

  // optional fixed32 fixed32_value_with_default = 26 [default = 7];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(26, this->fixed32_value_with_default(), output);
  }

  // optional bool bool_value_with_default = 27 [default = true];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->bool_value_with_default(), output);
  }

  // optional string string_value_with_default = 28 [default = "a"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value_with_default().data(), static_cast<int>(this->string_value_with_default().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.TestValue.string_value_with_default");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->string_value_with_default(), output);
  }

  // optional bytes bytes_value_with_default = 29 [default = "a longer default string"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      29, this->bytes_value_with_default(), output);
  }

  // optional uint32 uint32_value_with_default = 30 [default = 9];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->uint32_value_with_default(), output);
  }

  // optional sfixed32 sfixed32_value_with_default = 31 [default = 10];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(31, this->sfixed32_value_with_default(), output);
  }

  // optional sfixed64 sfixed64_value_with_default = 32 [default = 11];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(32, this->sfixed64_value_with_default(), output);
  }

  // optional sint32 sint32_value_with_default = 33 [default = 12];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(33, this->sint32_value_with_default(), output);
  }

  // optional sint64 sint64_value_with_default = 34 [default = 13];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(34, this->sint64_value_with_default(), output);
  }

  // repeated .tensorflow.contrib.proto.Color enum_value = 35;
  for (int i = 0, n = this->enum_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      35, this->enum_value(i), output);
  }

  // optional .tensorflow.contrib.proto.Color enum_value_with_default = 36 [default = GREEN];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      36, this->enum_value_with_default(), output);
  }

  // Extension range [100, 200)
  _extensions_.SerializeWithCachedSizes(
      100, 200, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.TestValue)
}

::google::protobuf::uint8* TestValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.TestValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double double_value = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->double_value_, target);

  // repeated float float_value = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->float_value_, target);

  // repeated int64 int64_value = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->int64_value_, target);

  // repeated uint64 uint64_value = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(4, this->uint64_value_, target);

  // repeated int32 int32_value = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->int32_value_, target);

  // repeated fixed64 fixed64_value = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(6, this->fixed64_value_, target);

  // repeated fixed32 fixed32_value = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed32ToArray(7, this->fixed32_value_, target);

  // repeated bool bool_value = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteBoolToArray(8, this->bool_value_, target);

  // repeated string string_value = 9;
  for (int i = 0, n = this->string_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value(i).data(), static_cast<int>(this->string_value(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.TestValue.string_value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->string_value(i), target);
  }

  // repeated bytes bytes_value = 12;
  for (int i = 0, n = this->bytes_value_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(12, this->bytes_value(i), target);
  }

  // repeated uint32 uint32_value = 13;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(13, this->uint32_value_, target);

  // repeated sfixed32 sfixed32_value = 15;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSFixed32ToArray(15, this->sfixed32_value_, target);

  // repeated sfixed64 sfixed64_value = 16;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSFixed64ToArray(16, this->sfixed64_value_, target);

  // repeated sint32 sint32_value = 17;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(17, this->sint32_value_, target);

  // repeated sint64 sint64_value = 18;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt64ToArray(18, this->sint64_value_, target);

  // repeated .tensorflow.contrib.proto.PrimitiveValue message_value = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->message_value(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional double double_value_with_default = 20 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->double_value_with_default(), target);
  }

  // optional float float_value_with_default = 21 [default = 2];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->float_value_with_default(), target);
  }

  // optional int64 int64_value_with_default = 22 [default = 3];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->int64_value_with_default(), target);
  }

  // optional uint64 uint64_value_with_default = 23 [default = 4];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(23, this->uint64_value_with_default(), target);
  }

  // optional int32 int32_value_with_default = 24 [default = 5];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->int32_value_with_default(), target);
  }

  // optional fixed64 fixed64_value_with_default = 25 [default = 6];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(25, this->fixed64_value_with_default(), target);
  }

  // optional fixed32 fixed32_value_with_default = 26 [default = 7];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(26, this->fixed32_value_with_default(), target);
  }

  // optional bool bool_value_with_default = 27 [default = true];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->bool_value_with_default(), target);
  }

  // optional string string_value_with_default = 28 [default = "a"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value_with_default().data(), static_cast<int>(this->string_value_with_default().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.TestValue.string_value_with_default");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->string_value_with_default(), target);
  }

  // optional bytes bytes_value_with_default = 29 [default = "a longer default string"];
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        29, this->bytes_value_with_default(), target);
  }

  // optional uint32 uint32_value_with_default = 30 [default = 9];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->uint32_value_with_default(), target);
  }

  // optional sfixed32 sfixed32_value_with_default = 31 [default = 10];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(31, this->sfixed32_value_with_default(), target);
  }

  // optional sfixed64 sfixed64_value_with_default = 32 [default = 11];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(32, this->sfixed64_value_with_default(), target);
  }

  // optional sint32 sint32_value_with_default = 33 [default = 12];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(33, this->sint32_value_with_default(), target);
  }

  // optional sint64 sint64_value_with_default = 34 [default = 13];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(34, this->sint64_value_with_default(), target);
  }

  // repeated .tensorflow.contrib.proto.Color enum_value = 35;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    35, this->enum_value_, target);

  // optional .tensorflow.contrib.proto.Color enum_value_with_default = 36 [default = GREEN];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      36, this->enum_value_with_default(), target);
  }

  // Extension range [100, 200)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      100, 200, deterministic, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.TestValue)
  return target;
}

size_t TestValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.TestValue)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double double_value = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->double_value_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->double_value_size());
    total_size += data_size;
  }

  // repeated float float_value = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->float_value_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->float_value_size());
    total_size += data_size;
  }

  // repeated int64 int64_value = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->int64_value_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->int64_value_size());
    total_size += data_size;
  }

  // repeated uint64 uint64_value = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->uint64_value_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->uint64_value_size());
    total_size += data_size;
  }

  // repeated int32 int32_value = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->int32_value_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->int32_value_size());
    total_size += data_size;
  }

  // repeated fixed64 fixed64_value = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->fixed64_value_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->fixed64_value_size());
    total_size += data_size;
  }

  // repeated fixed32 fixed32_value = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->fixed32_value_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->fixed32_value_size());
    total_size += data_size;
  }

  // repeated bool bool_value = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->bool_value_size());
    size_t data_size = 1UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bool_value_size());
    total_size += data_size;
  }

  // repeated string string_value = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->string_value_size());
  for (int i = 0, n = this->string_value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->string_value(i));
  }

  // repeated bytes bytes_value = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bytes_value_size());
  for (int i = 0, n = this->bytes_value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->bytes_value(i));
  }

  // repeated uint32 uint32_value = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uint32_value_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->uint32_value_size());
    total_size += data_size;
  }

  // repeated sfixed32 sfixed32_value = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->sfixed32_value_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->sfixed32_value_size());
    total_size += data_size;
  }

  // repeated sfixed64 sfixed64_value = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->sfixed64_value_size());
    size_t data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->sfixed64_value_size());
    total_size += data_size;
  }

  // repeated sint32 sint32_value = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->sint32_value_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->sint32_value_size());
    total_size += data_size;
  }

  // repeated sint64 sint64_value = 18;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->sint64_value_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->sint64_value_size());
    total_size += data_size;
  }

  // repeated .tensorflow.contrib.proto.PrimitiveValue message_value = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->message_value_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->message_value(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.contrib.proto.Color enum_value = 35;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->enum_value_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->enum_value(static_cast<int>(i)));
    }
    total_size += (2UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string string_value_with_default = 28 [default = "a"];
    if (has_string_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value_with_default());
    }

    // optional bytes bytes_value_with_default = 29 [default = "a longer default string"];
    if (has_bytes_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_value_with_default());
    }

    // optional double double_value_with_default = 20 [default = 1];
    if (has_double_value_with_default()) {
      total_size += 2 + 8;
    }

    // optional int64 int64_value_with_default = 22 [default = 3];
    if (has_int64_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value_with_default());
    }

    // optional float float_value_with_default = 21 [default = 2];
    if (has_float_value_with_default()) {
      total_size += 2 + 4;
    }

    // optional int32 int32_value_with_default = 24 [default = 5];
    if (has_int32_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32_value_with_default());
    }

    // optional uint64 uint64_value_with_default = 23 [default = 4];
    if (has_uint64_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64_value_with_default());
    }

    // optional fixed64 fixed64_value_with_default = 25 [default = 6];
    if (has_fixed64_value_with_default()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional fixed32 fixed32_value_with_default = 26 [default = 7];
    if (has_fixed32_value_with_default()) {
      total_size += 2 + 4;
    }

    // optional bool bool_value_with_default = 27 [default = true];
    if (has_bool_value_with_default()) {
      total_size += 2 + 1;
    }

    // optional uint32 uint32_value_with_default = 30 [default = 9];
    if (has_uint32_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint32_value_with_default());
    }

    // optional sfixed32 sfixed32_value_with_default = 31 [default = 10];
    if (has_sfixed32_value_with_default()) {
      total_size += 2 + 4;
    }

    // optional sfixed64 sfixed64_value_with_default = 32 [default = 11];
    if (has_sfixed64_value_with_default()) {
      total_size += 2 + 8;
    }

    // optional sint64 sint64_value_with_default = 34 [default = 13];
    if (has_sint64_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sint64_value_with_default());
    }

    // optional sint32 sint32_value_with_default = 33 [default = 12];
    if (has_sint32_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sint32_value_with_default());
    }

    // optional .tensorflow.contrib.proto.Color enum_value_with_default = 36 [default = GREEN];
    if (has_enum_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_value_with_default());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.TestValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TestValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.TestValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.TestValue)
    MergeFrom(*source);
  }
}

void TestValue::MergeFrom(const TestValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.TestValue)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  double_value_.MergeFrom(from.double_value_);
  float_value_.MergeFrom(from.float_value_);
  int64_value_.MergeFrom(from.int64_value_);
  uint64_value_.MergeFrom(from.uint64_value_);
  int32_value_.MergeFrom(from.int32_value_);
  fixed64_value_.MergeFrom(from.fixed64_value_);
  fixed32_value_.MergeFrom(from.fixed32_value_);
  bool_value_.MergeFrom(from.bool_value_);
  string_value_.MergeFrom(from.string_value_);
  bytes_value_.MergeFrom(from.bytes_value_);
  uint32_value_.MergeFrom(from.uint32_value_);
  sfixed32_value_.MergeFrom(from.sfixed32_value_);
  sfixed64_value_.MergeFrom(from.sfixed64_value_);
  sint32_value_.MergeFrom(from.sint32_value_);
  sint64_value_.MergeFrom(from.sint64_value_);
  message_value_.MergeFrom(from.message_value_);
  enum_value_.MergeFrom(from.enum_value_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string_value_with_default();
      string_value_with_default_.AssignWithDefault(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get(), from.string_value_with_default_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bytes_value_with_default();
      bytes_value_with_default_.AssignWithDefault(&::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get(), from.bytes_value_with_default_);
    }
    if (cached_has_bits & 0x00000004u) {
      double_value_with_default_ = from.double_value_with_default_;
    }
    if (cached_has_bits & 0x00000008u) {
      int64_value_with_default_ = from.int64_value_with_default_;
    }
    if (cached_has_bits & 0x00000010u) {
      float_value_with_default_ = from.float_value_with_default_;
    }
    if (cached_has_bits & 0x00000020u) {
      int32_value_with_default_ = from.int32_value_with_default_;
    }
    if (cached_has_bits & 0x00000040u) {
      uint64_value_with_default_ = from.uint64_value_with_default_;
    }
    if (cached_has_bits & 0x00000080u) {
      fixed64_value_with_default_ = from.fixed64_value_with_default_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      fixed32_value_with_default_ = from.fixed32_value_with_default_;
    }
    if (cached_has_bits & 0x00000200u) {
      bool_value_with_default_ = from.bool_value_with_default_;
    }
    if (cached_has_bits & 0x00000400u) {
      uint32_value_with_default_ = from.uint32_value_with_default_;
    }
    if (cached_has_bits & 0x00000800u) {
      sfixed32_value_with_default_ = from.sfixed32_value_with_default_;
    }
    if (cached_has_bits & 0x00001000u) {
      sfixed64_value_with_default_ = from.sfixed64_value_with_default_;
    }
    if (cached_has_bits & 0x00002000u) {
      sint64_value_with_default_ = from.sint64_value_with_default_;
    }
    if (cached_has_bits & 0x00004000u) {
      sint32_value_with_default_ = from.sint32_value_with_default_;
    }
    if (cached_has_bits & 0x00008000u) {
      enum_value_with_default_ = from.enum_value_with_default_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.TestValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestValue::CopyFrom(const TestValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.TestValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestValue::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  return true;
}

void TestValue::Swap(TestValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestValue::InternalSwap(TestValue* other) {
  using std::swap;
  double_value_.InternalSwap(&other->double_value_);
  float_value_.InternalSwap(&other->float_value_);
  int64_value_.InternalSwap(&other->int64_value_);
  uint64_value_.InternalSwap(&other->uint64_value_);
  int32_value_.InternalSwap(&other->int32_value_);
  fixed64_value_.InternalSwap(&other->fixed64_value_);
  fixed32_value_.InternalSwap(&other->fixed32_value_);
  bool_value_.InternalSwap(&other->bool_value_);
  string_value_.InternalSwap(CastToBase(&other->string_value_));
  bytes_value_.InternalSwap(CastToBase(&other->bytes_value_));
  uint32_value_.InternalSwap(&other->uint32_value_);
  sfixed32_value_.InternalSwap(&other->sfixed32_value_);
  sfixed64_value_.InternalSwap(&other->sfixed64_value_);
  sint32_value_.InternalSwap(&other->sint32_value_);
  sint64_value_.InternalSwap(&other->sint64_value_);
  CastToBase(&message_value_)->InternalSwap(CastToBase(&other->message_value_));
  enum_value_.InternalSwap(&other->enum_value_);
  string_value_with_default_.Swap(&other->string_value_with_default_, &::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get(),
    GetArenaNoVirtual());
  bytes_value_with_default_.Swap(&other->bytes_value_with_default_, &::tensorflow::contrib::proto::TestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get(),
    GetArenaNoVirtual());
  swap(double_value_with_default_, other->double_value_with_default_);
  swap(int64_value_with_default_, other->int64_value_with_default_);
  swap(float_value_with_default_, other->float_value_with_default_);
  swap(int32_value_with_default_, other->int32_value_with_default_);
  swap(uint64_value_with_default_, other->uint64_value_with_default_);
  swap(fixed64_value_with_default_, other->fixed64_value_with_default_);
  swap(fixed32_value_with_default_, other->fixed32_value_with_default_);
  swap(bool_value_with_default_, other->bool_value_with_default_);
  swap(uint32_value_with_default_, other->uint32_value_with_default_);
  swap(sfixed32_value_with_default_, other->sfixed32_value_with_default_);
  swap(sfixed64_value_with_default_, other->sfixed64_value_with_default_);
  swap(sint64_value_with_default_, other->sint64_value_with_default_);
  swap(sint32_value_with_default_, other->sint32_value_with_default_);
  swap(enum_value_with_default_, other->enum_value_with_default_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestValue::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PackedTestValue::InitAsDefaultInstance() {
}
::google::protobuf::internal::ExplicitlyConstructed<::std::string> PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_;
::google::protobuf::internal::ExplicitlyConstructed<::std::string> PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackedTestValue::kDoubleValueFieldNumber;
const int PackedTestValue::kFloatValueFieldNumber;
const int PackedTestValue::kInt64ValueFieldNumber;
const int PackedTestValue::kUint64ValueFieldNumber;
const int PackedTestValue::kInt32ValueFieldNumber;
const int PackedTestValue::kFixed64ValueFieldNumber;
const int PackedTestValue::kFixed32ValueFieldNumber;
const int PackedTestValue::kBoolValueFieldNumber;
const int PackedTestValue::kStringValueFieldNumber;
const int PackedTestValue::kBytesValueFieldNumber;
const int PackedTestValue::kUint32ValueFieldNumber;
const int PackedTestValue::kSfixed32ValueFieldNumber;
const int PackedTestValue::kSfixed64ValueFieldNumber;
const int PackedTestValue::kSint32ValueFieldNumber;
const int PackedTestValue::kSint64ValueFieldNumber;
const int PackedTestValue::kMessageValueFieldNumber;
const int PackedTestValue::kEnumValueFieldNumber;
const int PackedTestValue::kDoubleValueWithDefaultFieldNumber;
const int PackedTestValue::kFloatValueWithDefaultFieldNumber;
const int PackedTestValue::kInt64ValueWithDefaultFieldNumber;
const int PackedTestValue::kUint64ValueWithDefaultFieldNumber;
const int PackedTestValue::kInt32ValueWithDefaultFieldNumber;
const int PackedTestValue::kFixed64ValueWithDefaultFieldNumber;
const int PackedTestValue::kFixed32ValueWithDefaultFieldNumber;
const int PackedTestValue::kBoolValueWithDefaultFieldNumber;
const int PackedTestValue::kStringValueWithDefaultFieldNumber;
const int PackedTestValue::kBytesValueWithDefaultFieldNumber;
const int PackedTestValue::kUint32ValueWithDefaultFieldNumber;
const int PackedTestValue::kSfixed32ValueWithDefaultFieldNumber;
const int PackedTestValue::kSfixed64ValueWithDefaultFieldNumber;
const int PackedTestValue::kSint32ValueWithDefaultFieldNumber;
const int PackedTestValue::kSint64ValueWithDefaultFieldNumber;
const int PackedTestValue::kEnumValueWithDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackedTestValue::PackedTestValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_PackedTestValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.PackedTestValue)
}
PackedTestValue::PackedTestValue(const PackedTestValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      double_value_(from.double_value_),
      float_value_(from.float_value_),
      int64_value_(from.int64_value_),
      uint64_value_(from.uint64_value_),
      int32_value_(from.int32_value_),
      fixed64_value_(from.fixed64_value_),
      fixed32_value_(from.fixed32_value_),
      bool_value_(from.bool_value_),
      string_value_(from.string_value_),
      bytes_value_(from.bytes_value_),
      uint32_value_(from.uint32_value_),
      sfixed32_value_(from.sfixed32_value_),
      sfixed64_value_(from.sfixed64_value_),
      sint32_value_(from.sint32_value_),
      sint64_value_(from.sint64_value_),
      message_value_(from.message_value_),
      enum_value_(from.enum_value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_value_with_default_.UnsafeSetDefault(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get());
  if (from.has_string_value_with_default()) {
    string_value_with_default_.AssignWithDefault(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get(), from.string_value_with_default_);
  }
  bytes_value_with_default_.UnsafeSetDefault(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get());
  if (from.has_bytes_value_with_default()) {
    bytes_value_with_default_.AssignWithDefault(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get(), from.bytes_value_with_default_);
  }
  ::memcpy(&double_value_with_default_, &from.double_value_with_default_,
    static_cast<size_t>(reinterpret_cast<char*>(&enum_value_with_default_) -
    reinterpret_cast<char*>(&double_value_with_default_)) + sizeof(enum_value_with_default_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.PackedTestValue)
}

void PackedTestValue::SharedCtor() {
  string_value_with_default_.UnsafeSetDefault(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get());
  bytes_value_with_default_.UnsafeSetDefault(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get());
  double_value_with_default_ = 1;
  int64_value_with_default_ = GOOGLE_LONGLONG(3);
  float_value_with_default_ = 2;
  int32_value_with_default_ = 5;
  uint64_value_with_default_ = GOOGLE_ULONGLONG(4);
  fixed64_value_with_default_ = GOOGLE_ULONGLONG(6);
  fixed32_value_with_default_ = 7u;
  bool_value_with_default_ = true;
  uint32_value_with_default_ = 9u;
  sfixed32_value_with_default_ = 10;
  sfixed64_value_with_default_ = GOOGLE_LONGLONG(11);
  sint64_value_with_default_ = GOOGLE_LONGLONG(13);
  sint32_value_with_default_ = 12;
  enum_value_with_default_ = 3;
}

PackedTestValue::~PackedTestValue() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.PackedTestValue)
  SharedDtor();
}

void PackedTestValue::SharedDtor() {
  string_value_with_default_.DestroyNoArena(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get());
  bytes_value_with_default_.DestroyNoArena(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get());
}

void PackedTestValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PackedTestValue::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PackedTestValue& PackedTestValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_PackedTestValue.base);
  return *internal_default_instance();
}


void PackedTestValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.PackedTestValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  double_value_.Clear();
  float_value_.Clear();
  int64_value_.Clear();
  uint64_value_.Clear();
  int32_value_.Clear();
  fixed64_value_.Clear();
  fixed32_value_.Clear();
  bool_value_.Clear();
  string_value_.Clear();
  bytes_value_.Clear();
  uint32_value_.Clear();
  sfixed32_value_.Clear();
  sfixed64_value_.Clear();
  sint32_value_.Clear();
  sint64_value_.Clear();
  message_value_.Clear();
  enum_value_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      string_value_with_default_.UnsafeMutablePointer()->assign(*&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      bytes_value_with_default_.UnsafeMutablePointer()->assign(*&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get());
    }
    double_value_with_default_ = 1;
    int64_value_with_default_ = GOOGLE_LONGLONG(3);
    float_value_with_default_ = 2;
    int32_value_with_default_ = 5;
    uint64_value_with_default_ = GOOGLE_ULONGLONG(4);
    fixed64_value_with_default_ = GOOGLE_ULONGLONG(6);
  }
  if (cached_has_bits & 65280u) {
    fixed32_value_with_default_ = 7u;
    bool_value_with_default_ = true;
    uint32_value_with_default_ = 9u;
    sfixed32_value_with_default_ = 10;
    sfixed64_value_with_default_ = GOOGLE_LONGLONG(11);
    sint64_value_with_default_ = GOOGLE_LONGLONG(13);
    sint32_value_with_default_ = 12;
    enum_value_with_default_ = 3;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PackedTestValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.PackedTestValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double double_value = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_double_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float float_value = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_float_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_float_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 int64_value = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_int64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 uint64_value = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uint64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_uint64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 int32_value = 5 [packed = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_int32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 fixed64_value = 6 [packed = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_fixed64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 50u, input, this->mutable_fixed64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 fixed32_value = 7 [packed = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_fixed32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 58u, input, this->mutable_fixed32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool bool_value = 8 [packed = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bool_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 66u, input, this->mutable_bool_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string string_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value(this->string_value_size() - 1).data(),
            static_cast<int>(this->string_value(this->string_value_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tensorflow.contrib.proto.PackedTestValue.string_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes bytes_value = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_bytes_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 uint32_value = 13 [packed = true];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uint32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 106u, input, this->mutable_uint32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 sfixed32_value = 15 [packed = true];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_sfixed32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 122u, input, this->mutable_sfixed32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 sfixed64_value = 16 [packed = true];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_sfixed64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 130u, input, this->mutable_sfixed64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 sint32_value = 17 [packed = true];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_sint32_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 138u, input, this->mutable_sint32_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 sint64_value = 18 [packed = true];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_sint64_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 146u, input, this->mutable_sint64_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.contrib.proto.PrimitiveValue message_value = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_message_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double double_value_with_default = 20 [default = 1];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {
          set_has_double_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float float_value_with_default = 21 [default = 2];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {
          set_has_float_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 int64_value_with_default = 22 [default = 3];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_int64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uint64_value_with_default = 23 [default = 4];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_uint64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 int32_value_with_default = 24 [default = 5];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_int32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 fixed64_value_with_default = 25 [default = 6];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {
          set_has_fixed64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &fixed64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 fixed32_value_with_default = 26 [default = 7];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(213u /* 213 & 0xFF */)) {
          set_has_fixed32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &fixed32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value_with_default = 27 [default = true];
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_bool_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value_with_default = 28 [default = "a"];
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value_with_default()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value_with_default().data(), static_cast<int>(this->string_value_with_default().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tensorflow.contrib.proto.PackedTestValue.string_value_with_default");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes_value_with_default = 29 [default = "a longer default string"];
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_value_with_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uint32_value_with_default = 30 [default = 9];
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_uint32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uint32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed32 sfixed32_value_with_default = 31 [default = 10];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(253u /* 253 & 0xFF */)) {
          set_has_sfixed32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &sfixed32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 sfixed64_value_with_default = 32 [default = 11];
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1u /* 257 & 0xFF */)) {
          set_has_sfixed64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &sfixed64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 sint32_value_with_default = 33 [default = 12];
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_sint32_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sint32_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 sint64_value_with_default = 34 [default = 13];
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          set_has_sint64_value_with_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sint64_value_with_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.contrib.proto.Color enum_value = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tensorflow::contrib::proto::Color_IsValid(value)) {
            add_enum_value(static_cast< ::tensorflow::contrib::proto::Color >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                35, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 35,
                 ::tensorflow::contrib::proto::Color_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_enum_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tensorflow.contrib.proto.Color enum_value_with_default = 36 [default = GREEN];
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::tensorflow::contrib::proto::Color_IsValid(value)) {
            set_enum_value_with_default(static_cast< ::tensorflow::contrib::proto::Color >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                36, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.PackedTestValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.PackedTestValue)
  return false;
#undef DO_
}

void PackedTestValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.PackedTestValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double double_value = 1 [packed = true];
  if (this->double_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _double_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->double_value().data(), this->double_value_size(), output);
  }

  // repeated float float_value = 2 [packed = true];
  if (this->float_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _float_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->float_value().data(), this->float_value_size(), output);
  }

  // repeated int64 int64_value = 3 [packed = true];
  if (this->int64_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _int64_value_cached_byte_size_));
  }
  for (int i = 0, n = this->int64_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->int64_value(i), output);
  }

  // repeated uint64 uint64_value = 4 [packed = true];
  if (this->uint64_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uint64_value_cached_byte_size_));
  }
  for (int i = 0, n = this->uint64_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->uint64_value(i), output);
  }

  // repeated int32 int32_value = 5 [packed = true];
  if (this->int32_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _int32_value_cached_byte_size_));
  }
  for (int i = 0, n = this->int32_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->int32_value(i), output);
  }

  // repeated fixed64 fixed64_value = 6 [packed = true];
  if (this->fixed64_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fixed64_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->fixed64_value().data(), this->fixed64_value_size(), output);
  }

  // repeated fixed32 fixed32_value = 7 [packed = true];
  if (this->fixed32_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fixed32_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->fixed32_value().data(), this->fixed32_value_size(), output);
  }

  // repeated bool bool_value = 8 [packed = true];
  if (this->bool_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bool_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->bool_value().data(), this->bool_value_size(), output);
  }

  // repeated string string_value = 9;
  for (int i = 0, n = this->string_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value(i).data(), static_cast<int>(this->string_value(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.PackedTestValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->string_value(i), output);
  }

  // repeated bytes bytes_value = 12;
  for (int i = 0, n = this->bytes_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      12, this->bytes_value(i), output);
  }

  // repeated uint32 uint32_value = 13 [packed = true];
  if (this->uint32_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uint32_value_cached_byte_size_));
  }
  for (int i = 0, n = this->uint32_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uint32_value(i), output);
  }

  // repeated sfixed32 sfixed32_value = 15 [packed = true];
  if (this->sfixed32_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sfixed32_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->sfixed32_value().data(), this->sfixed32_value_size(), output);
  }

  // repeated sfixed64 sfixed64_value = 16 [packed = true];
  if (this->sfixed64_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sfixed64_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->sfixed64_value().data(), this->sfixed64_value_size(), output);
  }

  // repeated sint32 sint32_value = 17 [packed = true];
  if (this->sint32_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sint32_value_cached_byte_size_));
  }
  for (int i = 0, n = this->sint32_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->sint32_value(i), output);
  }

  // repeated sint64 sint64_value = 18 [packed = true];
  if (this->sint64_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(18, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sint64_value_cached_byte_size_));
  }
  for (int i = 0, n = this->sint64_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->sint64_value(i), output);
  }

  // repeated .tensorflow.contrib.proto.PrimitiveValue message_value = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->message_value(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional double double_value_with_default = 20 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->double_value_with_default(), output);
  }

  // optional float float_value_with_default = 21 [default = 2];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->float_value_with_default(), output);
  }

  // optional int64 int64_value_with_default = 22 [default = 3];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->int64_value_with_default(), output);
  }

  // optional uint64 uint64_value_with_default = 23 [default = 4];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(23, this->uint64_value_with_default(), output);
  }

  // optional int32 int32_value_with_default = 24 [default = 5];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->int32_value_with_default(), output);
  }

  // optional fixed64 fixed64_value_with_default = 25 [default = 6];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(25, this->fixed64_value_with_default(), output);
  }

  // optional fixed32 fixed32_value_with_default = 26 [default = 7];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(26, this->fixed32_value_with_default(), output);
  }

  // optional bool bool_value_with_default = 27 [default = true];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->bool_value_with_default(), output);
  }

  // optional string string_value_with_default = 28 [default = "a"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value_with_default().data(), static_cast<int>(this->string_value_with_default().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.PackedTestValue.string_value_with_default");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->string_value_with_default(), output);
  }

  // optional bytes bytes_value_with_default = 29 [default = "a longer default string"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      29, this->bytes_value_with_default(), output);
  }

  // optional uint32 uint32_value_with_default = 30 [default = 9];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->uint32_value_with_default(), output);
  }

  // optional sfixed32 sfixed32_value_with_default = 31 [default = 10];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(31, this->sfixed32_value_with_default(), output);
  }

  // optional sfixed64 sfixed64_value_with_default = 32 [default = 11];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(32, this->sfixed64_value_with_default(), output);
  }

  // optional sint32 sint32_value_with_default = 33 [default = 12];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(33, this->sint32_value_with_default(), output);
  }

  // optional sint64 sint64_value_with_default = 34 [default = 13];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(34, this->sint64_value_with_default(), output);
  }

  // repeated .tensorflow.contrib.proto.Color enum_value = 35;
  for (int i = 0, n = this->enum_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      35, this->enum_value(i), output);
  }

  // optional .tensorflow.contrib.proto.Color enum_value_with_default = 36 [default = GREEN];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      36, this->enum_value_with_default(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.PackedTestValue)
}

::google::protobuf::uint8* PackedTestValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.PackedTestValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double double_value = 1 [packed = true];
  if (this->double_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _double_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->double_value_, target);
  }

  // repeated float float_value = 2 [packed = true];
  if (this->float_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _float_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->float_value_, target);
  }

  // repeated int64 int64_value = 3 [packed = true];
  if (this->int64_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _int64_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->int64_value_, target);
  }

  // repeated uint64 uint64_value = 4 [packed = true];
  if (this->uint64_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _uint64_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->uint64_value_, target);
  }

  // repeated int32 int32_value = 5 [packed = true];
  if (this->int32_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _int32_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->int32_value_, target);
  }

  // repeated fixed64 fixed64_value = 6 [packed = true];
  if (this->fixed64_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _fixed64_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->fixed64_value_, target);
  }

  // repeated fixed32 fixed32_value = 7 [packed = true];
  if (this->fixed32_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _fixed32_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->fixed32_value_, target);
  }

  // repeated bool bool_value = 8 [packed = true];
  if (this->bool_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _bool_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->bool_value_, target);
  }

  // repeated string string_value = 9;
  for (int i = 0, n = this->string_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value(i).data(), static_cast<int>(this->string_value(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.PackedTestValue.string_value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->string_value(i), target);
  }

  // repeated bytes bytes_value = 12;
  for (int i = 0, n = this->bytes_value_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(12, this->bytes_value(i), target);
  }

  // repeated uint32 uint32_value = 13 [packed = true];
  if (this->uint32_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _uint32_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uint32_value_, target);
  }

  // repeated sfixed32 sfixed32_value = 15 [packed = true];
  if (this->sfixed32_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sfixed32_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->sfixed32_value_, target);
  }

  // repeated sfixed64 sfixed64_value = 16 [packed = true];
  if (this->sfixed64_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sfixed64_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->sfixed64_value_, target);
  }

  // repeated sint32 sint32_value = 17 [packed = true];
  if (this->sint32_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sint32_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->sint32_value_, target);
  }

  // repeated sint64 sint64_value = 18 [packed = true];
  if (this->sint64_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      18,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sint64_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->sint64_value_, target);
  }

  // repeated .tensorflow.contrib.proto.PrimitiveValue message_value = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->message_value(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional double double_value_with_default = 20 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->double_value_with_default(), target);
  }

  // optional float float_value_with_default = 21 [default = 2];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->float_value_with_default(), target);
  }

  // optional int64 int64_value_with_default = 22 [default = 3];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->int64_value_with_default(), target);
  }

  // optional uint64 uint64_value_with_default = 23 [default = 4];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(23, this->uint64_value_with_default(), target);
  }

  // optional int32 int32_value_with_default = 24 [default = 5];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->int32_value_with_default(), target);
  }

  // optional fixed64 fixed64_value_with_default = 25 [default = 6];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(25, this->fixed64_value_with_default(), target);
  }

  // optional fixed32 fixed32_value_with_default = 26 [default = 7];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(26, this->fixed32_value_with_default(), target);
  }

  // optional bool bool_value_with_default = 27 [default = true];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->bool_value_with_default(), target);
  }

  // optional string string_value_with_default = 28 [default = "a"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value_with_default().data(), static_cast<int>(this->string_value_with_default().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.PackedTestValue.string_value_with_default");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->string_value_with_default(), target);
  }

  // optional bytes bytes_value_with_default = 29 [default = "a longer default string"];
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        29, this->bytes_value_with_default(), target);
  }

  // optional uint32 uint32_value_with_default = 30 [default = 9];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->uint32_value_with_default(), target);
  }

  // optional sfixed32 sfixed32_value_with_default = 31 [default = 10];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(31, this->sfixed32_value_with_default(), target);
  }

  // optional sfixed64 sfixed64_value_with_default = 32 [default = 11];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(32, this->sfixed64_value_with_default(), target);
  }

  // optional sint32 sint32_value_with_default = 33 [default = 12];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(33, this->sint32_value_with_default(), target);
  }

  // optional sint64 sint64_value_with_default = 34 [default = 13];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(34, this->sint64_value_with_default(), target);
  }

  // repeated .tensorflow.contrib.proto.Color enum_value = 35;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    35, this->enum_value_, target);

  // optional .tensorflow.contrib.proto.Color enum_value_with_default = 36 [default = GREEN];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      36, this->enum_value_with_default(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.PackedTestValue)
  return target;
}

size_t PackedTestValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.PackedTestValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double double_value = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->double_value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _double_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float float_value = 2 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->float_value_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _float_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 int64_value = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->int64_value_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int64_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 uint64_value = 4 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->uint64_value_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uint64_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 int32_value = 5 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->int32_value_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int32_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 fixed64_value = 6 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->fixed64_value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fixed64_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 fixed32_value = 7 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->fixed32_value_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fixed32_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool bool_value = 8 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->bool_value_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bool_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string string_value = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->string_value_size());
  for (int i = 0, n = this->string_value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->string_value(i));
  }

  // repeated bytes bytes_value = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bytes_value_size());
  for (int i = 0, n = this->bytes_value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->bytes_value(i));
  }

  // repeated uint32 uint32_value = 13 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uint32_value_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uint32_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 sfixed32_value = 15 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->sfixed32_value_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sfixed32_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 sfixed64_value = 16 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->sfixed64_value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sfixed64_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 sint32_value = 17 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->sint32_value_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sint32_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 sint64_value = 18 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->sint64_value_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sint64_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .tensorflow.contrib.proto.PrimitiveValue message_value = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->message_value_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->message_value(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.contrib.proto.Color enum_value = 35;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->enum_value_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->enum_value(static_cast<int>(i)));
    }
    total_size += (2UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string string_value_with_default = 28 [default = "a"];
    if (has_string_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value_with_default());
    }

    // optional bytes bytes_value_with_default = 29 [default = "a longer default string"];
    if (has_bytes_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_value_with_default());
    }

    // optional double double_value_with_default = 20 [default = 1];
    if (has_double_value_with_default()) {
      total_size += 2 + 8;
    }

    // optional int64 int64_value_with_default = 22 [default = 3];
    if (has_int64_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value_with_default());
    }

    // optional float float_value_with_default = 21 [default = 2];
    if (has_float_value_with_default()) {
      total_size += 2 + 4;
    }

    // optional int32 int32_value_with_default = 24 [default = 5];
    if (has_int32_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32_value_with_default());
    }

    // optional uint64 uint64_value_with_default = 23 [default = 4];
    if (has_uint64_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64_value_with_default());
    }

    // optional fixed64 fixed64_value_with_default = 25 [default = 6];
    if (has_fixed64_value_with_default()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional fixed32 fixed32_value_with_default = 26 [default = 7];
    if (has_fixed32_value_with_default()) {
      total_size += 2 + 4;
    }

    // optional bool bool_value_with_default = 27 [default = true];
    if (has_bool_value_with_default()) {
      total_size += 2 + 1;
    }

    // optional uint32 uint32_value_with_default = 30 [default = 9];
    if (has_uint32_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint32_value_with_default());
    }

    // optional sfixed32 sfixed32_value_with_default = 31 [default = 10];
    if (has_sfixed32_value_with_default()) {
      total_size += 2 + 4;
    }

    // optional sfixed64 sfixed64_value_with_default = 32 [default = 11];
    if (has_sfixed64_value_with_default()) {
      total_size += 2 + 8;
    }

    // optional sint64 sint64_value_with_default = 34 [default = 13];
    if (has_sint64_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sint64_value_with_default());
    }

    // optional sint32 sint32_value_with_default = 33 [default = 12];
    if (has_sint32_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sint32_value_with_default());
    }

    // optional .tensorflow.contrib.proto.Color enum_value_with_default = 36 [default = GREEN];
    if (has_enum_value_with_default()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_value_with_default());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackedTestValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.PackedTestValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PackedTestValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackedTestValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.PackedTestValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.PackedTestValue)
    MergeFrom(*source);
  }
}

void PackedTestValue::MergeFrom(const PackedTestValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.PackedTestValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  double_value_.MergeFrom(from.double_value_);
  float_value_.MergeFrom(from.float_value_);
  int64_value_.MergeFrom(from.int64_value_);
  uint64_value_.MergeFrom(from.uint64_value_);
  int32_value_.MergeFrom(from.int32_value_);
  fixed64_value_.MergeFrom(from.fixed64_value_);
  fixed32_value_.MergeFrom(from.fixed32_value_);
  bool_value_.MergeFrom(from.bool_value_);
  string_value_.MergeFrom(from.string_value_);
  bytes_value_.MergeFrom(from.bytes_value_);
  uint32_value_.MergeFrom(from.uint32_value_);
  sfixed32_value_.MergeFrom(from.sfixed32_value_);
  sfixed64_value_.MergeFrom(from.sfixed64_value_);
  sint32_value_.MergeFrom(from.sint32_value_);
  sint64_value_.MergeFrom(from.sint64_value_);
  message_value_.MergeFrom(from.message_value_);
  enum_value_.MergeFrom(from.enum_value_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string_value_with_default();
      string_value_with_default_.AssignWithDefault(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get(), from.string_value_with_default_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bytes_value_with_default();
      bytes_value_with_default_.AssignWithDefault(&::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get(), from.bytes_value_with_default_);
    }
    if (cached_has_bits & 0x00000004u) {
      double_value_with_default_ = from.double_value_with_default_;
    }
    if (cached_has_bits & 0x00000008u) {
      int64_value_with_default_ = from.int64_value_with_default_;
    }
    if (cached_has_bits & 0x00000010u) {
      float_value_with_default_ = from.float_value_with_default_;
    }
    if (cached_has_bits & 0x00000020u) {
      int32_value_with_default_ = from.int32_value_with_default_;
    }
    if (cached_has_bits & 0x00000040u) {
      uint64_value_with_default_ = from.uint64_value_with_default_;
    }
    if (cached_has_bits & 0x00000080u) {
      fixed64_value_with_default_ = from.fixed64_value_with_default_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      fixed32_value_with_default_ = from.fixed32_value_with_default_;
    }
    if (cached_has_bits & 0x00000200u) {
      bool_value_with_default_ = from.bool_value_with_default_;
    }
    if (cached_has_bits & 0x00000400u) {
      uint32_value_with_default_ = from.uint32_value_with_default_;
    }
    if (cached_has_bits & 0x00000800u) {
      sfixed32_value_with_default_ = from.sfixed32_value_with_default_;
    }
    if (cached_has_bits & 0x00001000u) {
      sfixed64_value_with_default_ = from.sfixed64_value_with_default_;
    }
    if (cached_has_bits & 0x00002000u) {
      sint64_value_with_default_ = from.sint64_value_with_default_;
    }
    if (cached_has_bits & 0x00004000u) {
      sint32_value_with_default_ = from.sint32_value_with_default_;
    }
    if (cached_has_bits & 0x00008000u) {
      enum_value_with_default_ = from.enum_value_with_default_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackedTestValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.PackedTestValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackedTestValue::CopyFrom(const PackedTestValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.PackedTestValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackedTestValue::IsInitialized() const {
  return true;
}

void PackedTestValue::Swap(PackedTestValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackedTestValue::InternalSwap(PackedTestValue* other) {
  using std::swap;
  double_value_.InternalSwap(&other->double_value_);
  float_value_.InternalSwap(&other->float_value_);
  int64_value_.InternalSwap(&other->int64_value_);
  uint64_value_.InternalSwap(&other->uint64_value_);
  int32_value_.InternalSwap(&other->int32_value_);
  fixed64_value_.InternalSwap(&other->fixed64_value_);
  fixed32_value_.InternalSwap(&other->fixed32_value_);
  bool_value_.InternalSwap(&other->bool_value_);
  string_value_.InternalSwap(CastToBase(&other->string_value_));
  bytes_value_.InternalSwap(CastToBase(&other->bytes_value_));
  uint32_value_.InternalSwap(&other->uint32_value_);
  sfixed32_value_.InternalSwap(&other->sfixed32_value_);
  sfixed64_value_.InternalSwap(&other->sfixed64_value_);
  sint32_value_.InternalSwap(&other->sint32_value_);
  sint64_value_.InternalSwap(&other->sint64_value_);
  CastToBase(&message_value_)->InternalSwap(CastToBase(&other->message_value_));
  enum_value_.InternalSwap(&other->enum_value_);
  string_value_with_default_.Swap(&other->string_value_with_default_, &::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_string_value_with_default_.get(),
    GetArenaNoVirtual());
  bytes_value_with_default_.Swap(&other->bytes_value_with_default_, &::tensorflow::contrib::proto::PackedTestValue::_i_give_permission_to_break_this_code_default_bytes_value_with_default_.get(),
    GetArenaNoVirtual());
  swap(double_value_with_default_, other->double_value_with_default_);
  swap(int64_value_with_default_, other->int64_value_with_default_);
  swap(float_value_with_default_, other->float_value_with_default_);
  swap(int32_value_with_default_, other->int32_value_with_default_);
  swap(uint64_value_with_default_, other->uint64_value_with_default_);
  swap(fixed64_value_with_default_, other->fixed64_value_with_default_);
  swap(fixed32_value_with_default_, other->fixed32_value_with_default_);
  swap(bool_value_with_default_, other->bool_value_with_default_);
  swap(uint32_value_with_default_, other->uint32_value_with_default_);
  swap(sfixed32_value_with_default_, other->sfixed32_value_with_default_);
  swap(sfixed64_value_with_default_, other->sfixed64_value_with_default_);
  swap(sint64_value_with_default_, other->sint64_value_with_default_);
  swap(sint32_value_with_default_, other->sint32_value_with_default_);
  swap(enum_value_with_default_, other->enum_value_with_default_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PackedTestValue::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrimitiveValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrimitiveValue::kDoubleValueFieldNumber;
const int PrimitiveValue::kFloatValueFieldNumber;
const int PrimitiveValue::kInt64ValueFieldNumber;
const int PrimitiveValue::kUint64ValueFieldNumber;
const int PrimitiveValue::kInt32ValueFieldNumber;
const int PrimitiveValue::kFixed64ValueFieldNumber;
const int PrimitiveValue::kFixed32ValueFieldNumber;
const int PrimitiveValue::kBoolValueFieldNumber;
const int PrimitiveValue::kStringValueFieldNumber;
const int PrimitiveValue::kBytesValueFieldNumber;
const int PrimitiveValue::kUint32ValueFieldNumber;
const int PrimitiveValue::kSfixed32ValueFieldNumber;
const int PrimitiveValue::kSfixed64ValueFieldNumber;
const int PrimitiveValue::kSint32ValueFieldNumber;
const int PrimitiveValue::kSint64ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrimitiveValue::PrimitiveValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_PrimitiveValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.PrimitiveValue)
}
PrimitiveValue::PrimitiveValue(const PrimitiveValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string_value()) {
    string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
  }
  bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes_value()) {
    bytes_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_value_);
  }
  ::memcpy(&double_value_, &from.double_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&sint64_value_) -
    reinterpret_cast<char*>(&double_value_)) + sizeof(sint64_value_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.PrimitiveValue)
}

void PrimitiveValue::SharedCtor() {
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&double_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sint64_value_) -
      reinterpret_cast<char*>(&double_value_)) + sizeof(sint64_value_));
}

PrimitiveValue::~PrimitiveValue() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.PrimitiveValue)
  SharedDtor();
}

void PrimitiveValue::SharedDtor() {
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrimitiveValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrimitiveValue::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrimitiveValue& PrimitiveValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_PrimitiveValue.base);
  return *internal_default_instance();
}


void PrimitiveValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.PrimitiveValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      string_value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bytes_value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&double_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fixed64_value_) -
        reinterpret_cast<char*>(&double_value_)) + sizeof(fixed64_value_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&fixed32_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sint64_value_) -
        reinterpret_cast<char*>(&fixed32_value_)) + sizeof(sint64_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrimitiveValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.PrimitiveValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double double_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_double_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float float_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_float_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 int64_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_int64_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uint64_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_uint64_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 int32_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_int32_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 fixed64_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_fixed64_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &fixed64_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 fixed32_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_fixed32_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &fixed32_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_bool_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tensorflow.contrib.proto.PrimitiveValue.string_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes_value = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uint32_value = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_uint32_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uint32_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed32 sfixed32_value = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {
          set_has_sfixed32_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &sfixed32_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 sfixed64_value = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {
          set_has_sfixed64_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &sfixed64_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 sint32_value = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_sint32_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sint32_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 sint64_value = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_sint64_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sint64_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.PrimitiveValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.PrimitiveValue)
  return false;
#undef DO_
}

void PrimitiveValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.PrimitiveValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double double_value = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->double_value(), output);
  }

  // optional float float_value = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->float_value(), output);
  }

  // optional int64 int64_value = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->int64_value(), output);
  }

  // optional uint64 uint64_value = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uint64_value(), output);
  }

  // optional int32 int32_value = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->int32_value(), output);
  }

  // optional fixed64 fixed64_value = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(6, this->fixed64_value(), output);
  }

  // optional fixed32 fixed32_value = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->fixed32_value(), output);
  }

  // optional bool bool_value = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->bool_value(), output);
  }

  // optional string string_value = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.PrimitiveValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->string_value(), output);
  }

  // optional bytes bytes_value = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->bytes_value(), output);
  }

  // optional uint32 uint32_value = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->uint32_value(), output);
  }

  // optional sfixed32 sfixed32_value = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(15, this->sfixed32_value(), output);
  }

  // optional sfixed64 sfixed64_value = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(16, this->sfixed64_value(), output);
  }

  // optional sint32 sint32_value = 17;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(17, this->sint32_value(), output);
  }

  // optional sint64 sint64_value = 18;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(18, this->sint64_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.PrimitiveValue)
}

::google::protobuf::uint8* PrimitiveValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.PrimitiveValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double double_value = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->double_value(), target);
  }

  // optional float float_value = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->float_value(), target);
  }

  // optional int64 int64_value = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->int64_value(), target);
  }

  // optional uint64 uint64_value = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uint64_value(), target);
  }

  // optional int32 int32_value = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->int32_value(), target);
  }

  // optional fixed64 fixed64_value = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(6, this->fixed64_value(), target);
  }

  // optional fixed32 fixed32_value = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->fixed32_value(), target);
  }

  // optional bool bool_value = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->bool_value(), target);
  }

  // optional string string_value = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.PrimitiveValue.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->string_value(), target);
  }

  // optional bytes bytes_value = 12;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->bytes_value(), target);
  }

  // optional uint32 uint32_value = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->uint32_value(), target);
  }

  // optional sfixed32 sfixed32_value = 15;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(15, this->sfixed32_value(), target);
  }

  // optional sfixed64 sfixed64_value = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(16, this->sfixed64_value(), target);
  }

  // optional sint32 sint32_value = 17;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(17, this->sint32_value(), target);
  }

  // optional sint64 sint64_value = 18;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(18, this->sint64_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.PrimitiveValue)
  return target;
}

size_t PrimitiveValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.PrimitiveValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string string_value = 9;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

    // optional bytes bytes_value = 12;
    if (has_bytes_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_value());
    }

    // optional double double_value = 1;
    if (has_double_value()) {
      total_size += 1 + 8;
    }

    // optional int64 int64_value = 3;
    if (has_int64_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
    }

    // optional float float_value = 2;
    if (has_float_value()) {
      total_size += 1 + 4;
    }

    // optional int32 int32_value = 5;
    if (has_int32_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32_value());
    }

    // optional uint64 uint64_value = 4;
    if (has_uint64_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64_value());
    }

    // optional fixed64 fixed64_value = 6;
    if (has_fixed64_value()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional fixed32 fixed32_value = 7;
    if (has_fixed32_value()) {
      total_size += 1 + 4;
    }

    // optional bool bool_value = 8;
    if (has_bool_value()) {
      total_size += 1 + 1;
    }

    // optional uint32 uint32_value = 13;
    if (has_uint32_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint32_value());
    }

    // optional sfixed32 sfixed32_value = 15;
    if (has_sfixed32_value()) {
      total_size += 1 + 4;
    }

    // optional sfixed64 sfixed64_value = 16;
    if (has_sfixed64_value()) {
      total_size += 2 + 8;
    }

    // optional sint32 sint32_value = 17;
    if (has_sint32_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sint32_value());
    }

    // optional sint64 sint64_value = 18;
    if (has_sint64_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sint64_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrimitiveValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.PrimitiveValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PrimitiveValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrimitiveValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.PrimitiveValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.PrimitiveValue)
    MergeFrom(*source);
  }
}

void PrimitiveValue::MergeFrom(const PrimitiveValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.PrimitiveValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string_value();
      string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bytes_value();
      bytes_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_value_);
    }
    if (cached_has_bits & 0x00000004u) {
      double_value_ = from.double_value_;
    }
    if (cached_has_bits & 0x00000008u) {
      int64_value_ = from.int64_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      float_value_ = from.float_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      int32_value_ = from.int32_value_;
    }
    if (cached_has_bits & 0x00000040u) {
      uint64_value_ = from.uint64_value_;
    }
    if (cached_has_bits & 0x00000080u) {
      fixed64_value_ = from.fixed64_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      fixed32_value_ = from.fixed32_value_;
    }
    if (cached_has_bits & 0x00000200u) {
      bool_value_ = from.bool_value_;
    }
    if (cached_has_bits & 0x00000400u) {
      uint32_value_ = from.uint32_value_;
    }
    if (cached_has_bits & 0x00000800u) {
      sfixed32_value_ = from.sfixed32_value_;
    }
    if (cached_has_bits & 0x00001000u) {
      sfixed64_value_ = from.sfixed64_value_;
    }
    if (cached_has_bits & 0x00002000u) {
      sint32_value_ = from.sint32_value_;
    }
    if (cached_has_bits & 0x00004000u) {
      sint64_value_ = from.sint64_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrimitiveValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.PrimitiveValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimitiveValue::CopyFrom(const PrimitiveValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.PrimitiveValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimitiveValue::IsInitialized() const {
  return true;
}

void PrimitiveValue::Swap(PrimitiveValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrimitiveValue::InternalSwap(PrimitiveValue* other) {
  using std::swap;
  string_value_.Swap(&other->string_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bytes_value_.Swap(&other->bytes_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(double_value_, other->double_value_);
  swap(int64_value_, other->int64_value_);
  swap(float_value_, other->float_value_);
  swap(int32_value_, other->int32_value_);
  swap(uint64_value_, other->uint64_value_);
  swap(fixed64_value_, other->fixed64_value_);
  swap(fixed32_value_, other->fixed32_value_);
  swap(bool_value_, other->bool_value_);
  swap(uint32_value_, other->uint32_value_);
  swap(sfixed32_value_, other->sfixed32_value_);
  swap(sfixed64_value_, other->sfixed64_value_);
  swap(sint32_value_, other->sint32_value_);
  swap(sint64_value_, other->sint64_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrimitiveValue::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExtraFields::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtraFields::kStringValueFieldNumber;
const int ExtraFields::kBoolValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtraFields::ExtraFields()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_ExtraFields.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.ExtraFields)
}
ExtraFields::ExtraFields(const ExtraFields& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string_value()) {
    string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
  }
  bool_value_ = from.bool_value_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.ExtraFields)
}

void ExtraFields::SharedCtor() {
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bool_value_ = false;
}

ExtraFields::~ExtraFields() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.ExtraFields)
  SharedDtor();
}

void ExtraFields::SharedDtor() {
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExtraFields::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExtraFields::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtraFields& ExtraFields::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_ExtraFields.base);
  return *internal_default_instance();
}


void ExtraFields::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.ExtraFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    string_value_.ClearNonDefaultToEmptyNoArena();
  }
  bool_value_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExtraFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.ExtraFields)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string string_value = 1776;
      case 1776: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 14210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tensorflow.contrib.proto.ExtraFields.string_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value = 1777;
      case 1777: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 14216 & 0xFF */)) {
          set_has_bool_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.ExtraFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.ExtraFields)
  return false;
#undef DO_
}

void ExtraFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.ExtraFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string string_value = 1776;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.ExtraFields.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1776, this->string_value(), output);
  }

  // optional bool bool_value = 1777;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1777, this->bool_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.ExtraFields)
}

::google::protobuf::uint8* ExtraFields::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.ExtraFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string string_value = 1776;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tensorflow.contrib.proto.ExtraFields.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1776, this->string_value(), target);
  }

  // optional bool bool_value = 1777;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1777, this->bool_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.ExtraFields)
  return target;
}

size_t ExtraFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.ExtraFields)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string string_value = 1776;
    if (has_string_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

    // optional bool bool_value = 1777;
    if (has_bool_value()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtraFields::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.ExtraFields)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtraFields* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtraFields>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.ExtraFields)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.ExtraFields)
    MergeFrom(*source);
  }
}

void ExtraFields::MergeFrom(const ExtraFields& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.ExtraFields)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string_value();
      string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
    }
    if (cached_has_bits & 0x00000002u) {
      bool_value_ = from.bool_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExtraFields::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.ExtraFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtraFields::CopyFrom(const ExtraFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.ExtraFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtraFields::IsInitialized() const {
  return true;
}

void ExtraFields::Swap(ExtraFields* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtraFields::InternalSwap(ExtraFields* other) {
  using std::swap;
  string_value_.Swap(&other->string_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bool_value_, other->bool_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExtraFields::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InnerMessageValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InnerMessageValue::kFloatValueFieldNumber;
const int InnerMessageValue::kBytesValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InnerMessageValue::InnerMessageValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_InnerMessageValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.InnerMessageValue)
}
InnerMessageValue::InnerMessageValue(const InnerMessageValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      bytes_values_(from.bytes_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  float_value_ = from.float_value_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.InnerMessageValue)
}

void InnerMessageValue::SharedCtor() {
  float_value_ = 0;
}

InnerMessageValue::~InnerMessageValue() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.InnerMessageValue)
  SharedDtor();
}

void InnerMessageValue::SharedDtor() {
}

void InnerMessageValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InnerMessageValue::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InnerMessageValue& InnerMessageValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_InnerMessageValue.base);
  return *internal_default_instance();
}


void InnerMessageValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.InnerMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bytes_values_.Clear();
  float_value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InnerMessageValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.InnerMessageValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float float_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_float_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes bytes_values = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_bytes_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.InnerMessageValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.InnerMessageValue)
  return false;
#undef DO_
}

void InnerMessageValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.InnerMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float float_value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->float_value(), output);
  }

  // repeated bytes bytes_values = 8;
  for (int i = 0, n = this->bytes_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->bytes_values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.InnerMessageValue)
}

::google::protobuf::uint8* InnerMessageValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.InnerMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float float_value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->float_value(), target);
  }

  // repeated bytes bytes_values = 8;
  for (int i = 0, n = this->bytes_values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->bytes_values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.InnerMessageValue)
  return target;
}

size_t InnerMessageValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.InnerMessageValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes bytes_values = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bytes_values_size());
  for (int i = 0, n = this->bytes_values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->bytes_values(i));
  }

  // optional float float_value = 2;
  if (has_float_value()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InnerMessageValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.InnerMessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  const InnerMessageValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InnerMessageValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.InnerMessageValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.InnerMessageValue)
    MergeFrom(*source);
  }
}

void InnerMessageValue::MergeFrom(const InnerMessageValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.InnerMessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bytes_values_.MergeFrom(from.bytes_values_);
  if (from.has_float_value()) {
    set_float_value(from.float_value());
  }
}

void InnerMessageValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.InnerMessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerMessageValue::CopyFrom(const InnerMessageValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.InnerMessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMessageValue::IsInitialized() const {
  return true;
}

void InnerMessageValue::Swap(InnerMessageValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InnerMessageValue::InternalSwap(InnerMessageValue* other) {
  using std::swap;
  bytes_values_.InternalSwap(CastToBase(&other->bytes_values_));
  swap(float_value_, other->float_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InnerMessageValue::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MiddleMessageValue::InitAsDefaultInstance() {
  ::tensorflow::contrib::proto::_MiddleMessageValue_default_instance_._instance.get_mutable()->message_value_ = const_cast< ::tensorflow::contrib::proto::InnerMessageValue*>(
      ::tensorflow::contrib::proto::InnerMessageValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiddleMessageValue::kInt32ValuesFieldNumber;
const int MiddleMessageValue::kMessageValueFieldNumber;
const int MiddleMessageValue::kUint32ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiddleMessageValue::MiddleMessageValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_MiddleMessageValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.MiddleMessageValue)
}
MiddleMessageValue::MiddleMessageValue(const MiddleMessageValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      int32_values_(from.int32_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message_value()) {
    message_value_ = new ::tensorflow::contrib::proto::InnerMessageValue(*from.message_value_);
  } else {
    message_value_ = NULL;
  }
  uint32_value_ = from.uint32_value_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.MiddleMessageValue)
}

void MiddleMessageValue::SharedCtor() {
  ::memset(&message_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uint32_value_) -
      reinterpret_cast<char*>(&message_value_)) + sizeof(uint32_value_));
}

MiddleMessageValue::~MiddleMessageValue() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.MiddleMessageValue)
  SharedDtor();
}

void MiddleMessageValue::SharedDtor() {
  if (this != internal_default_instance()) delete message_value_;
}

void MiddleMessageValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MiddleMessageValue::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiddleMessageValue& MiddleMessageValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_MiddleMessageValue.base);
  return *internal_default_instance();
}


void MiddleMessageValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.MiddleMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int32_values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(message_value_ != NULL);
    message_value_->Clear();
  }
  uint32_value_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MiddleMessageValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.MiddleMessageValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 int32_values = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_int32_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tensorflow.contrib.proto.InnerMessageValue message_value = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uint32_value = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_uint32_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uint32_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.MiddleMessageValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.MiddleMessageValue)
  return false;
#undef DO_
}

void MiddleMessageValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.MiddleMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 int32_values = 5;
  for (int i = 0, n = this->int32_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->int32_values(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .tensorflow.contrib.proto.InnerMessageValue message_value = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_message_value(), output);
  }

  // optional uint32 uint32_value = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->uint32_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.MiddleMessageValue)
}

::google::protobuf::uint8* MiddleMessageValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.MiddleMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 int32_values = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->int32_values_, target);

  cached_has_bits = _has_bits_[0];
  // optional .tensorflow.contrib.proto.InnerMessageValue message_value = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_message_value(), deterministic, target);
  }

  // optional uint32 uint32_value = 13;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->uint32_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.MiddleMessageValue)
  return target;
}

size_t MiddleMessageValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.MiddleMessageValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 int32_values = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->int32_values_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->int32_values_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .tensorflow.contrib.proto.InnerMessageValue message_value = 11;
    if (has_message_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_value_);
    }

    // optional uint32 uint32_value = 13;
    if (has_uint32_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint32_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MiddleMessageValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.MiddleMessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MiddleMessageValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiddleMessageValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.MiddleMessageValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.MiddleMessageValue)
    MergeFrom(*source);
  }
}

void MiddleMessageValue::MergeFrom(const MiddleMessageValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.MiddleMessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  int32_values_.MergeFrom(from.int32_values_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_message_value()->::tensorflow::contrib::proto::InnerMessageValue::MergeFrom(from.message_value());
    }
    if (cached_has_bits & 0x00000002u) {
      uint32_value_ = from.uint32_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MiddleMessageValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.MiddleMessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiddleMessageValue::CopyFrom(const MiddleMessageValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.MiddleMessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiddleMessageValue::IsInitialized() const {
  return true;
}

void MiddleMessageValue::Swap(MiddleMessageValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiddleMessageValue::InternalSwap(MiddleMessageValue* other) {
  using std::swap;
  int32_values_.InternalSwap(&other->int32_values_);
  swap(message_value_, other->message_value_);
  swap(uint32_value_, other->uint32_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MiddleMessageValue::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageValue::InitAsDefaultInstance() {
  ::tensorflow::contrib::proto::_MessageValue_default_instance_._instance.get_mutable()->message_value_ = const_cast< ::tensorflow::contrib::proto::MiddleMessageValue*>(
      ::tensorflow::contrib::proto::MiddleMessageValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageValue::kDoubleValueFieldNumber;
const int MessageValue::kMessageValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageValue::MessageValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_MessageValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.MessageValue)
}
MessageValue::MessageValue(const MessageValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message_value()) {
    message_value_ = new ::tensorflow::contrib::proto::MiddleMessageValue(*from.message_value_);
  } else {
    message_value_ = NULL;
  }
  double_value_ = from.double_value_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.MessageValue)
}

void MessageValue::SharedCtor() {
  ::memset(&message_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&double_value_) -
      reinterpret_cast<char*>(&message_value_)) + sizeof(double_value_));
}

MessageValue::~MessageValue() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.MessageValue)
  SharedDtor();
}

void MessageValue::SharedDtor() {
  if (this != internal_default_instance()) delete message_value_;
}

void MessageValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageValue::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageValue& MessageValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_MessageValue.base);
  return *internal_default_instance();
}


void MessageValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.MessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(message_value_ != NULL);
    message_value_->Clear();
  }
  double_value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.MessageValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double double_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_double_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tensorflow.contrib.proto.MiddleMessageValue message_value = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.MessageValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.MessageValue)
  return false;
#undef DO_
}

void MessageValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.MessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double double_value = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->double_value(), output);
  }

  // optional .tensorflow.contrib.proto.MiddleMessageValue message_value = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_message_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.MessageValue)
}

::google::protobuf::uint8* MessageValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.MessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double double_value = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->double_value(), target);
  }

  // optional .tensorflow.contrib.proto.MiddleMessageValue message_value = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_message_value(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.MessageValue)
  return target;
}

size_t MessageValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.MessageValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .tensorflow.contrib.proto.MiddleMessageValue message_value = 11;
    if (has_message_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_value_);
    }

    // optional double double_value = 1;
    if (has_double_value()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.MessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.MessageValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.MessageValue)
    MergeFrom(*source);
  }
}

void MessageValue::MergeFrom(const MessageValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.MessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_message_value()->::tensorflow::contrib::proto::MiddleMessageValue::MergeFrom(from.message_value());
    }
    if (cached_has_bits & 0x00000002u) {
      double_value_ = from.double_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.MessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageValue::CopyFrom(const MessageValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.MessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageValue::IsInitialized() const {
  return true;
}

void MessageValue::Swap(MessageValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageValue::InternalSwap(MessageValue* other) {
  using std::swap;
  swap(message_value_, other->message_value_);
  swap(double_value_, other->double_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageValue::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RepeatedMessageValue_NestedMessageValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatedMessageValue_NestedMessageValue::kFloatValueFieldNumber;
const int RepeatedMessageValue_NestedMessageValue::kBytesValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatedMessageValue_NestedMessageValue::RepeatedMessageValue_NestedMessageValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_RepeatedMessageValue_NestedMessageValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
}
RepeatedMessageValue_NestedMessageValue::RepeatedMessageValue_NestedMessageValue(const RepeatedMessageValue_NestedMessageValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      bytes_values_(from.bytes_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  float_value_ = from.float_value_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
}

void RepeatedMessageValue_NestedMessageValue::SharedCtor() {
  float_value_ = 0;
}

RepeatedMessageValue_NestedMessageValue::~RepeatedMessageValue_NestedMessageValue() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  SharedDtor();
}

void RepeatedMessageValue_NestedMessageValue::SharedDtor() {
}

void RepeatedMessageValue_NestedMessageValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RepeatedMessageValue_NestedMessageValue::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepeatedMessageValue_NestedMessageValue& RepeatedMessageValue_NestedMessageValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_RepeatedMessageValue_NestedMessageValue.base);
  return *internal_default_instance();
}


void RepeatedMessageValue_NestedMessageValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bytes_values_.Clear();
  float_value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RepeatedMessageValue_NestedMessageValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float float_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_float_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes bytes_values = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_bytes_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  return false;
#undef DO_
}

void RepeatedMessageValue_NestedMessageValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float float_value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->float_value(), output);
  }

  // repeated bytes bytes_values = 8;
  for (int i = 0, n = this->bytes_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->bytes_values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
}

::google::protobuf::uint8* RepeatedMessageValue_NestedMessageValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float float_value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->float_value(), target);
  }

  // repeated bytes bytes_values = 8;
  for (int i = 0, n = this->bytes_values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->bytes_values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  return target;
}

size_t RepeatedMessageValue_NestedMessageValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes bytes_values = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bytes_values_size());
  for (int i = 0, n = this->bytes_values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->bytes_values(i));
  }

  // optional float float_value = 2;
  if (has_float_value()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepeatedMessageValue_NestedMessageValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatedMessageValue_NestedMessageValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepeatedMessageValue_NestedMessageValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
    MergeFrom(*source);
  }
}

void RepeatedMessageValue_NestedMessageValue::MergeFrom(const RepeatedMessageValue_NestedMessageValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bytes_values_.MergeFrom(from.bytes_values_);
  if (from.has_float_value()) {
    set_float_value(from.float_value());
  }
}

void RepeatedMessageValue_NestedMessageValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatedMessageValue_NestedMessageValue::CopyFrom(const RepeatedMessageValue_NestedMessageValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedMessageValue_NestedMessageValue::IsInitialized() const {
  return true;
}

void RepeatedMessageValue_NestedMessageValue::Swap(RepeatedMessageValue_NestedMessageValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepeatedMessageValue_NestedMessageValue::InternalSwap(RepeatedMessageValue_NestedMessageValue* other) {
  using std::swap;
  bytes_values_.InternalSwap(CastToBase(&other->bytes_values_));
  swap(float_value_, other->float_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RepeatedMessageValue_NestedMessageValue::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RepeatedMessageValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatedMessageValue::kMessageValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatedMessageValue::RepeatedMessageValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_RepeatedMessageValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.contrib.proto.RepeatedMessageValue)
}
RepeatedMessageValue::RepeatedMessageValue(const RepeatedMessageValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      message_values_(from.message_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.contrib.proto.RepeatedMessageValue)
}

void RepeatedMessageValue::SharedCtor() {
}

RepeatedMessageValue::~RepeatedMessageValue() {
  // @@protoc_insertion_point(destructor:tensorflow.contrib.proto.RepeatedMessageValue)
  SharedDtor();
}

void RepeatedMessageValue::SharedDtor() {
}

void RepeatedMessageValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RepeatedMessageValue::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepeatedMessageValue& RepeatedMessageValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::scc_info_RepeatedMessageValue.base);
  return *internal_default_instance();
}


void RepeatedMessageValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.contrib.proto.RepeatedMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RepeatedMessageValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.contrib.proto.RepeatedMessageValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue message_values = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_message_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.contrib.proto.RepeatedMessageValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.contrib.proto.RepeatedMessageValue)
  return false;
#undef DO_
}

void RepeatedMessageValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.contrib.proto.RepeatedMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue message_values = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->message_values(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.contrib.proto.RepeatedMessageValue)
}

::google::protobuf::uint8* RepeatedMessageValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.contrib.proto.RepeatedMessageValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue message_values = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->message_values(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.contrib.proto.RepeatedMessageValue)
  return target;
}

size_t RepeatedMessageValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.contrib.proto.RepeatedMessageValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tensorflow.contrib.proto.RepeatedMessageValue.NestedMessageValue message_values = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->message_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->message_values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepeatedMessageValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.contrib.proto.RepeatedMessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatedMessageValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepeatedMessageValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.contrib.proto.RepeatedMessageValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.contrib.proto.RepeatedMessageValue)
    MergeFrom(*source);
  }
}

void RepeatedMessageValue::MergeFrom(const RepeatedMessageValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.contrib.proto.RepeatedMessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_values_.MergeFrom(from.message_values_);
}

void RepeatedMessageValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.contrib.proto.RepeatedMessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatedMessageValue::CopyFrom(const RepeatedMessageValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.contrib.proto.RepeatedMessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedMessageValue::IsInitialized() const {
  return true;
}

void RepeatedMessageValue::Swap(RepeatedMessageValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepeatedMessageValue::InternalSwap(RepeatedMessageValue* other) {
  using std::swap;
  CastToBase(&message_values_)->InternalSwap(CastToBase(&other->message_values_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RepeatedMessageValue::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkernel_5ftests_2fproto_2ftest_5fexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

::google::protobuf::internal::ExtensionIdentifier< ::tensorflow::contrib::proto::TestValue,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::tensorflow::contrib::proto::PrimitiveValue >, 11, false >
  ext_value(kExtValueFieldNumber, *::tensorflow::contrib::proto::PrimitiveValue::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace contrib
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::TestCase* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::TestCase >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::TestCase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::FieldSpec* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::FieldSpec >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::FieldSpec >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::TestValue* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::TestValue >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::TestValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::PackedTestValue* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::PackedTestValue >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::PackedTestValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::PrimitiveValue* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::PrimitiveValue >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::PrimitiveValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::ExtraFields* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::ExtraFields >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::ExtraFields >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::InnerMessageValue* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::InnerMessageValue >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::InnerMessageValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::MiddleMessageValue* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::MiddleMessageValue >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::MiddleMessageValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::MessageValue* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::MessageValue >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::MessageValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::RepeatedMessageValue_NestedMessageValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::contrib::proto::RepeatedMessageValue* Arena::CreateMaybeMessage< ::tensorflow::contrib::proto::RepeatedMessageValue >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::contrib::proto::RepeatedMessageValue >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
