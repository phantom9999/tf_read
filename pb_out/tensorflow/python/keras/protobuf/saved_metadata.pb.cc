// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/python/keras/protobuf/saved_metadata.proto

#include "tensorflow/python/keras/protobuf/saved_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SavedObject;
}  // namespace protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto
namespace protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fversions_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fversions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VersionDef;
}  // namespace protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fversions_2eproto
namespace third_party {
namespace tensorflow {
namespace python {
namespace keras {
namespace protobuf {
class SavedMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SavedMetadata>
      _instance;
} _SavedMetadata_default_instance_;
class SavedObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SavedObject>
      _instance;
} _SavedObject_default_instance_;
}  // namespace protobuf
}  // namespace keras
}  // namespace python
}  // namespace tensorflow
}  // namespace third_party
namespace protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto {
static void InitDefaultsSavedMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::third_party::tensorflow::python::keras::protobuf::_SavedMetadata_default_instance_;
    new (ptr) ::third_party::tensorflow::python::keras::protobuf::SavedMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::third_party::tensorflow::python::keras::protobuf::SavedMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SavedMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSavedMetadata}, {
      &protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::scc_info_SavedObject.base,}};

static void InitDefaultsSavedObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::third_party::tensorflow::python::keras::protobuf::_SavedObject_default_instance_;
    new (ptr) ::third_party::tensorflow::python::keras::protobuf::SavedObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::third_party::tensorflow::python::keras::protobuf::SavedObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SavedObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSavedObject}, {
      &protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fversions_2eproto::scc_info_VersionDef.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SavedMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SavedObject.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::python::keras::protobuf::SavedMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::python::keras::protobuf::SavedMetadata, nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::python::keras::protobuf::SavedObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::python::keras::protobuf::SavedObject, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::python::keras::protobuf::SavedObject, node_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::python::keras::protobuf::SavedObject, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::python::keras::protobuf::SavedObject, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::python::keras::protobuf::SavedObject, version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::third_party::tensorflow::python::keras::protobuf::SavedMetadata)},
  { 6, -1, sizeof(::third_party::tensorflow::python::keras::protobuf::SavedObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::third_party::tensorflow::python::keras::protobuf::_SavedMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::third_party::tensorflow::python::keras::protobuf::_SavedObject_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/python/keras/protobuf/saved_metadata.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5tensorflow/python/keras/protobuf/saved"
      "_metadata.proto\022,third_party.tensorflow."
      "python.keras.protobuf\032/tensorflow/python"
      "/keras/protobuf/versions.proto\"Y\n\rSavedM"
      "etadata\022H\n\005nodes\030\001 \003(\01329.third_party.ten"
      "sorflow.python.keras.protobuf.SavedObjec"
      "t\"\250\001\n\013SavedObject\022\017\n\007node_id\030\002 \001(\005\022\021\n\tno"
      "de_path\030\003 \001(\t\022\022\n\nidentifier\030\004 \001(\t\022\020\n\010met"
      "adata\030\005 \001(\t\022I\n\007version\030\006 \001(\01328.third_par"
      "ty.tensorflow.python.keras.protobuf.Vers"
      "ionDefJ\004\010\001\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 420);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/python/keras/protobuf/saved_metadata.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fversions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto
namespace third_party {
namespace tensorflow {
namespace python {
namespace keras {
namespace protobuf {

// ===================================================================

void SavedMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedMetadata::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedMetadata::SavedMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::scc_info_SavedMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
}
SavedMetadata::SavedMetadata(const SavedMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
}

void SavedMetadata::SharedCtor() {
}

SavedMetadata::~SavedMetadata() {
  // @@protoc_insertion_point(destructor:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  SharedDtor();
}

void SavedMetadata::SharedDtor() {
}

void SavedMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SavedMetadata::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SavedMetadata& SavedMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::scc_info_SavedMetadata.base);
  return *internal_default_instance();
}


void SavedMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _internal_metadata_.Clear();
}

bool SavedMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .third_party.tensorflow.python.keras.protobuf.SavedObject nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  return false;
#undef DO_
}

void SavedMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .third_party.tensorflow.python.keras.protobuf.SavedObject nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
}

::google::protobuf::uint8* SavedMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .third_party.tensorflow.python.keras.protobuf.SavedObject nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  return target;
}

size_t SavedMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .third_party.tensorflow.python.keras.protobuf.SavedObject nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
    MergeFrom(*source);
  }
}

void SavedMetadata::MergeFrom(const SavedMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void SavedMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedMetadata::CopyFrom(const SavedMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:third_party.tensorflow.python.keras.protobuf.SavedMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedMetadata::IsInitialized() const {
  return true;
}

void SavedMetadata::Swap(SavedMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SavedMetadata::InternalSwap(SavedMetadata* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SavedMetadata::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SavedObject::InitAsDefaultInstance() {
  ::third_party::tensorflow::python::keras::protobuf::_SavedObject_default_instance_._instance.get_mutable()->version_ = const_cast< ::third_party::tensorflow::python::keras::protobuf::VersionDef*>(
      ::third_party::tensorflow::python::keras::protobuf::VersionDef::internal_default_instance());
}
void SavedObject::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedObject::kNodeIdFieldNumber;
const int SavedObject::kNodePathFieldNumber;
const int SavedObject::kIdentifierFieldNumber;
const int SavedObject::kMetadataFieldNumber;
const int SavedObject::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedObject::SavedObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::scc_info_SavedObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:third_party.tensorflow.python.keras.protobuf.SavedObject)
}
SavedObject::SavedObject(const SavedObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_path().size() > 0) {
    node_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_path_);
  }
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identifier().size() > 0) {
    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metadata().size() > 0) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  if (from.has_version()) {
    version_ = new ::third_party::tensorflow::python::keras::protobuf::VersionDef(*from.version_);
  } else {
    version_ = NULL;
  }
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:third_party.tensorflow.python.keras.protobuf.SavedObject)
}

void SavedObject::SharedCtor() {
  node_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&version_)) + sizeof(node_id_));
}

SavedObject::~SavedObject() {
  // @@protoc_insertion_point(destructor:third_party.tensorflow.python.keras.protobuf.SavedObject)
  SharedDtor();
}

void SavedObject::SharedDtor() {
  node_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete version_;
}

void SavedObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SavedObject::descriptor() {
  ::protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SavedObject& SavedObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::scc_info_SavedObject.base);
  return *internal_default_instance();
}


void SavedObject::Clear() {
// @@protoc_insertion_point(message_clear_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  node_id_ = 0;
  _internal_metadata_.Clear();
}

bool SavedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 node_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_path().data(), static_cast<int>(this->node_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "third_party.tensorflow.python.keras.protobuf.SavedObject.node_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identifier = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identifier().data(), static_cast<int>(this->identifier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "third_party.tensorflow.python.keras.protobuf.SavedObject.identifier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string metadata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metadata().data(), static_cast<int>(this->metadata().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "third_party.tensorflow.python.keras.protobuf.SavedObject.metadata"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .third_party.tensorflow.python.keras.protobuf.VersionDef version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:third_party.tensorflow.python.keras.protobuf.SavedObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:third_party.tensorflow.python.keras.protobuf.SavedObject)
  return false;
#undef DO_
}

void SavedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->node_id(), output);
  }

  // string node_path = 3;
  if (this->node_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_path().data(), static_cast<int>(this->node_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "third_party.tensorflow.python.keras.protobuf.SavedObject.node_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->node_path(), output);
  }

  // string identifier = 4;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), static_cast<int>(this->identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "third_party.tensorflow.python.keras.protobuf.SavedObject.identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->identifier(), output);
  }

  // string metadata = 5;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "third_party.tensorflow.python.keras.protobuf.SavedObject.metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->metadata(), output);
  }

  // .third_party.tensorflow.python.keras.protobuf.VersionDef version = 6;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:third_party.tensorflow.python.keras.protobuf.SavedObject)
}

::google::protobuf::uint8* SavedObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->node_id(), target);
  }

  // string node_path = 3;
  if (this->node_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_path().data(), static_cast<int>(this->node_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "third_party.tensorflow.python.keras.protobuf.SavedObject.node_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->node_path(), target);
  }

  // string identifier = 4;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), static_cast<int>(this->identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "third_party.tensorflow.python.keras.protobuf.SavedObject.identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->identifier(), target);
  }

  // string metadata = 5;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "third_party.tensorflow.python.keras.protobuf.SavedObject.metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->metadata(), target);
  }

  // .third_party.tensorflow.python.keras.protobuf.VersionDef version = 6;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_version(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:third_party.tensorflow.python.keras.protobuf.SavedObject)
  return target;
}

size_t SavedObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string node_path = 3;
  if (this->node_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_path());
  }

  // string identifier = 4;
  if (this->identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifier());
  }

  // string metadata = 5;
  if (this->metadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metadata());
  }

  // .third_party.tensorflow.python.keras.protobuf.VersionDef version = 6;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // int32 node_id = 2;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:third_party.tensorflow.python.keras.protobuf.SavedObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:third_party.tensorflow.python.keras.protobuf.SavedObject)
    MergeFrom(*source);
  }
}

void SavedObject::MergeFrom(const SavedObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_path().size() > 0) {

    node_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_path_);
  }
  if (from.identifier().size() > 0) {

    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  if (from.metadata().size() > 0) {

    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  if (from.has_version()) {
    mutable_version()->::third_party::tensorflow::python::keras::protobuf::VersionDef::MergeFrom(from.version());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void SavedObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedObject::CopyFrom(const SavedObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:third_party.tensorflow.python.keras.protobuf.SavedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedObject::IsInitialized() const {
  return true;
}

void SavedObject::Swap(SavedObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SavedObject::InternalSwap(SavedObject* other) {
  using std::swap;
  node_path_.Swap(&other->node_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  identifier_.Swap(&other->identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SavedObject::GetMetadata() const {
  protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fpython_2fkeras_2fprotobuf_2fsaved_5fmetadata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace keras
}  // namespace python
}  // namespace tensorflow
}  // namespace third_party
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::third_party::tensorflow::python::keras::protobuf::SavedMetadata* Arena::CreateMaybeMessage< ::third_party::tensorflow::python::keras::protobuf::SavedMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::third_party::tensorflow::python::keras::protobuf::SavedMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::third_party::tensorflow::python::keras::protobuf::SavedObject* Arena::CreateMaybeMessage< ::third_party::tensorflow::python::keras::protobuf::SavedObject >(Arena* arena) {
  return Arena::CreateInternal< ::third_party::tensorflow::python::keras::protobuf::SavedObject >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
