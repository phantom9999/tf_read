// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/servables/tensorflow/thread_pool_factory_config.proto

#include "tensorflow_serving/servables/tensorflow/thread_pool_factory_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace tensorflow {
namespace serving {
class ThreadPoolFactoryConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThreadPoolFactoryConfig>
      _instance;
} _ThreadPoolFactoryConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto {
static void InitDefaultsThreadPoolFactoryConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ThreadPoolFactoryConfig_default_instance_;
    new (ptr) ::tensorflow::serving::ThreadPoolFactoryConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::ThreadPoolFactoryConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ThreadPoolFactoryConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsThreadPoolFactoryConfig}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ThreadPoolFactoryConfig.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ThreadPoolFactoryConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ThreadPoolFactoryConfig, thread_pool_factory_config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::serving::ThreadPoolFactoryConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_ThreadPoolFactoryConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow_serving/servables/tensorflow/thread_pool_factory_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nHtensorflow_serving/servables/tensorflo"
      "w/thread_pool_factory_config.proto\022\022tens"
      "orflow.serving\032\031google/protobuf/any.prot"
      "o\"S\n\027ThreadPoolFactoryConfig\0228\n\032thread_p"
      "ool_factory_config\030\001 \001(\0132\024.google.protob"
      "uf.AnyB\003\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 219);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/servables/tensorflow/thread_pool_factory_config.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto
namespace tensorflow {
namespace serving {

// ===================================================================

void ThreadPoolFactoryConfig::InitAsDefaultInstance() {
  ::tensorflow::serving::_ThreadPoolFactoryConfig_default_instance_._instance.get_mutable()->thread_pool_factory_config_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ThreadPoolFactoryConfig::unsafe_arena_set_allocated_thread_pool_factory_config(
    ::google::protobuf::Any* thread_pool_factory_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete thread_pool_factory_config_;
  }
  thread_pool_factory_config_ = thread_pool_factory_config;
  if (thread_pool_factory_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ThreadPoolFactoryConfig.thread_pool_factory_config)
}
void ThreadPoolFactoryConfig::clear_thread_pool_factory_config() {
  if (GetArenaNoVirtual() == NULL && thread_pool_factory_config_ != NULL) {
    delete thread_pool_factory_config_;
  }
  thread_pool_factory_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThreadPoolFactoryConfig::kThreadPoolFactoryConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThreadPoolFactoryConfig::ThreadPoolFactoryConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto::scc_info_ThreadPoolFactoryConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.ThreadPoolFactoryConfig)
}
ThreadPoolFactoryConfig::ThreadPoolFactoryConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto::scc_info_ThreadPoolFactoryConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ThreadPoolFactoryConfig)
}
ThreadPoolFactoryConfig::ThreadPoolFactoryConfig(const ThreadPoolFactoryConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_thread_pool_factory_config()) {
    thread_pool_factory_config_ = new ::google::protobuf::Any(*from.thread_pool_factory_config_);
  } else {
    thread_pool_factory_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ThreadPoolFactoryConfig)
}

void ThreadPoolFactoryConfig::SharedCtor() {
  thread_pool_factory_config_ = NULL;
}

ThreadPoolFactoryConfig::~ThreadPoolFactoryConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ThreadPoolFactoryConfig)
  SharedDtor();
}

void ThreadPoolFactoryConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete thread_pool_factory_config_;
}

void ThreadPoolFactoryConfig::ArenaDtor(void* object) {
  ThreadPoolFactoryConfig* _this = reinterpret_cast< ThreadPoolFactoryConfig* >(object);
  (void)_this;
}
void ThreadPoolFactoryConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ThreadPoolFactoryConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ThreadPoolFactoryConfig::descriptor() {
  ::protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThreadPoolFactoryConfig& ThreadPoolFactoryConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto::scc_info_ThreadPoolFactoryConfig.base);
  return *internal_default_instance();
}


void ThreadPoolFactoryConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ThreadPoolFactoryConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && thread_pool_factory_config_ != NULL) {
    delete thread_pool_factory_config_;
  }
  thread_pool_factory_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ThreadPoolFactoryConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.ThreadPoolFactoryConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any thread_pool_factory_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_thread_pool_factory_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.ThreadPoolFactoryConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.ThreadPoolFactoryConfig)
  return false;
#undef DO_
}

void ThreadPoolFactoryConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.ThreadPoolFactoryConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any thread_pool_factory_config = 1;
  if (this->has_thread_pool_factory_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_thread_pool_factory_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.ThreadPoolFactoryConfig)
}

::google::protobuf::uint8* ThreadPoolFactoryConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ThreadPoolFactoryConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any thread_pool_factory_config = 1;
  if (this->has_thread_pool_factory_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_thread_pool_factory_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ThreadPoolFactoryConfig)
  return target;
}

size_t ThreadPoolFactoryConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ThreadPoolFactoryConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any thread_pool_factory_config = 1;
  if (this->has_thread_pool_factory_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *thread_pool_factory_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ThreadPoolFactoryConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.ThreadPoolFactoryConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ThreadPoolFactoryConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThreadPoolFactoryConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.ThreadPoolFactoryConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.ThreadPoolFactoryConfig)
    MergeFrom(*source);
  }
}

void ThreadPoolFactoryConfig::MergeFrom(const ThreadPoolFactoryConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ThreadPoolFactoryConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_thread_pool_factory_config()) {
    mutable_thread_pool_factory_config()->::google::protobuf::Any::MergeFrom(from.thread_pool_factory_config());
  }
}

void ThreadPoolFactoryConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.ThreadPoolFactoryConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThreadPoolFactoryConfig::CopyFrom(const ThreadPoolFactoryConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ThreadPoolFactoryConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThreadPoolFactoryConfig::IsInitialized() const {
  return true;
}

void ThreadPoolFactoryConfig::Swap(ThreadPoolFactoryConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ThreadPoolFactoryConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ThreadPoolFactoryConfig::UnsafeArenaSwap(ThreadPoolFactoryConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ThreadPoolFactoryConfig::InternalSwap(ThreadPoolFactoryConfig* other) {
  using std::swap;
  swap(thread_pool_factory_config_, other->thread_pool_factory_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ThreadPoolFactoryConfig::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fservables_2ftensorflow_2fthread_5fpool_5ffactory_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::ThreadPoolFactoryConfig* Arena::CreateMaybeMessage< ::tensorflow::serving::ThreadPoolFactoryConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ThreadPoolFactoryConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
