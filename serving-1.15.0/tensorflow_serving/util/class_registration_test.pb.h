// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/util/class_registration_test.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto
#define PROTOBUF_INCLUDED_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto 

namespace protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto
namespace tensorflow {
namespace serving {
class Config1;
class Config1DefaultTypeInternal;
extern Config1DefaultTypeInternal _Config1_default_instance_;
class Config2;
class Config2DefaultTypeInternal;
extern Config2DefaultTypeInternal _Config2_default_instance_;
class MessageWithAny;
class MessageWithAnyDefaultTypeInternal;
extern MessageWithAnyDefaultTypeInternal _MessageWithAny_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::serving::Config1* Arena::CreateMaybeMessage<::tensorflow::serving::Config1>(Arena*);
template<> ::tensorflow::serving::Config2* Arena::CreateMaybeMessage<::tensorflow::serving::Config2>(Arena*);
template<> ::tensorflow::serving::MessageWithAny* Arena::CreateMaybeMessage<::tensorflow::serving::MessageWithAny>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace serving {

// ===================================================================

class Config1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.Config1) */ {
 public:
  Config1();
  virtual ~Config1();

  Config1(const Config1& from);

  inline Config1& operator=(const Config1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Config1(Config1&& from) noexcept
    : Config1() {
    *this = ::std::move(from);
  }

  inline Config1& operator=(Config1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Config1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Config1* internal_default_instance() {
    return reinterpret_cast<const Config1*>(
               &_Config1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Config1* other);
  friend void swap(Config1& a, Config1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Config1* New() const final {
    return CreateMaybeMessage<Config1>(NULL);
  }

  Config1* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Config1>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Config1& from);
  void MergeFrom(const Config1& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Config1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string string_field = 1;
  void clear_string_field();
  static const int kStringFieldFieldNumber = 1;
  const ::std::string& string_field() const;
  void set_string_field(const ::std::string& value);
  #if LANG_CXX11
  void set_string_field(::std::string&& value);
  #endif
  void set_string_field(const char* value);
  void set_string_field(const char* value, size_t size);
  ::std::string* mutable_string_field();
  ::std::string* release_string_field();
  void set_allocated_string_field(::std::string* string_field);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.Config1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr string_field_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Config2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.Config2) */ {
 public:
  Config2();
  virtual ~Config2();

  Config2(const Config2& from);

  inline Config2& operator=(const Config2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Config2(Config2&& from) noexcept
    : Config2() {
    *this = ::std::move(from);
  }

  inline Config2& operator=(Config2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Config2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Config2* internal_default_instance() {
    return reinterpret_cast<const Config2*>(
               &_Config2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Config2* other);
  friend void swap(Config2& a, Config2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Config2* New() const final {
    return CreateMaybeMessage<Config2>(NULL);
  }

  Config2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Config2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Config2& from);
  void MergeFrom(const Config2& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Config2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string string_field = 1;
  void clear_string_field();
  static const int kStringFieldFieldNumber = 1;
  const ::std::string& string_field() const;
  void set_string_field(const ::std::string& value);
  #if LANG_CXX11
  void set_string_field(::std::string&& value);
  #endif
  void set_string_field(const char* value);
  void set_string_field(const char* value, size_t size);
  ::std::string* mutable_string_field();
  ::std::string* release_string_field();
  void set_allocated_string_field(::std::string* string_field);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.Config2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr string_field_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageWithAny : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.MessageWithAny) */ {
 public:
  MessageWithAny();
  virtual ~MessageWithAny();

  MessageWithAny(const MessageWithAny& from);

  inline MessageWithAny& operator=(const MessageWithAny& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageWithAny(MessageWithAny&& from) noexcept
    : MessageWithAny() {
    *this = ::std::move(from);
  }

  inline MessageWithAny& operator=(MessageWithAny&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageWithAny& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageWithAny* internal_default_instance() {
    return reinterpret_cast<const MessageWithAny*>(
               &_MessageWithAny_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MessageWithAny* other);
  friend void swap(MessageWithAny& a, MessageWithAny& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageWithAny* New() const final {
    return CreateMaybeMessage<MessageWithAny>(NULL);
  }

  MessageWithAny* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageWithAny>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageWithAny& from);
  void MergeFrom(const MessageWithAny& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageWithAny* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Any any_field = 1;
  bool has_any_field() const;
  void clear_any_field();
  static const int kAnyFieldFieldNumber = 1;
  private:
  const ::google::protobuf::Any& _internal_any_field() const;
  public:
  const ::google::protobuf::Any& any_field() const;
  ::google::protobuf::Any* release_any_field();
  ::google::protobuf::Any* mutable_any_field();
  void set_allocated_any_field(::google::protobuf::Any* any_field);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.MessageWithAny)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* any_field_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Config1

// string string_field = 1;
inline void Config1::clear_string_field() {
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config1::string_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Config1.string_field)
  return string_field_.GetNoArena();
}
inline void Config1::set_string_field(const ::std::string& value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Config1.string_field)
}
#if LANG_CXX11
inline void Config1::set_string_field(::std::string&& value) {
  
  string_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.serving.Config1.string_field)
}
#endif
inline void Config1::set_string_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Config1.string_field)
}
inline void Config1::set_string_field(const char* value, size_t size) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Config1.string_field)
}
inline ::std::string* Config1::mutable_string_field() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Config1.string_field)
  return string_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config1::release_string_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Config1.string_field)
  
  return string_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config1::set_allocated_string_field(::std::string* string_field) {
  if (string_field != NULL) {
    
  } else {
    
  }
  string_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_field);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Config1.string_field)
}

// -------------------------------------------------------------------

// Config2

// string string_field = 1;
inline void Config2::clear_string_field() {
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config2::string_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Config2.string_field)
  return string_field_.GetNoArena();
}
inline void Config2::set_string_field(const ::std::string& value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Config2.string_field)
}
#if LANG_CXX11
inline void Config2::set_string_field(::std::string&& value) {
  
  string_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.serving.Config2.string_field)
}
#endif
inline void Config2::set_string_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Config2.string_field)
}
inline void Config2::set_string_field(const char* value, size_t size) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Config2.string_field)
}
inline ::std::string* Config2::mutable_string_field() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Config2.string_field)
  return string_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config2::release_string_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Config2.string_field)
  
  return string_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config2::set_allocated_string_field(::std::string* string_field) {
  if (string_field != NULL) {
    
  } else {
    
  }
  string_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_field);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Config2.string_field)
}

// -------------------------------------------------------------------

// MessageWithAny

// .google.protobuf.Any any_field = 1;
inline bool MessageWithAny::has_any_field() const {
  return this != internal_default_instance() && any_field_ != NULL;
}
inline const ::google::protobuf::Any& MessageWithAny::_internal_any_field() const {
  return *any_field_;
}
inline const ::google::protobuf::Any& MessageWithAny::any_field() const {
  const ::google::protobuf::Any* p = any_field_;
  // @@protoc_insertion_point(field_get:tensorflow.serving.MessageWithAny.any_field)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* MessageWithAny::release_any_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.MessageWithAny.any_field)
  
  ::google::protobuf::Any* temp = any_field_;
  any_field_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* MessageWithAny::mutable_any_field() {
  
  if (any_field_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    any_field_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.MessageWithAny.any_field)
  return any_field_;
}
inline void MessageWithAny::set_allocated_any_field(::google::protobuf::Any* any_field) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(any_field_);
  }
  if (any_field) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      any_field = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, any_field, submessage_arena);
    }
    
  } else {
    
  }
  any_field_ = any_field;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.MessageWithAny.any_field)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto
